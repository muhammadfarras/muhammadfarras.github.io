{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Catatan Perjalanan Developer","text":"<p>Bismillahirrahmanirrahim</p> <code>Legend</code> Icon Desc Finished On going Idle (idle) Stoped"},{"location":"#daftar-catatan","title":"Daftar Catatan","text":"<code>Programming Language</code> <ul> <li>Python Programming Language </li> </ul> <ul> <li>Java Programming Language </li> </ul> <code>Web Framework</code> <ul> <li>Spring Boot </li> </ul> <ul> <li>React JS </li> </ul> <code>About the Data</code> <ul> <li>MySql </li> </ul> <ul> <li>Microsoft SQL </li> </ul> <ul> <li>Postgres SQL </li> </ul> <ul> <li>Pandas, Data Wrangling </li> </ul> <ul> <li>Chroma </li> </ul> <ul> <li>LangChain </li> </ul> <ul> <li>Apache Airflow </li> </ul> <code>UNIX</code> <ul> <li>Linux </li> </ul> <code>Hack The Box</code> <ul> <li>Linux | Hack The Box </li> <li>Introduction to Networking </li> <li>Sql Injection </li> </ul> <code>Security</code> <ul> <li>Comptia Security +</li> </ul> <ul> <li>Python Etichal Hacking from Sratch </li> </ul> <code>Tools Hacking</code> <ul> <li>Gitfive </li> </ul> <code>IOT</code> <ul> <li>Arduino </li> </ul> <code>My Magister</code> <ul> <li>My Magister</li> </ul> <code>Accounting</code> <ul> <li>Persiapan Menjadi ASN </li> </ul> <code>Other</code> <ul> <li>Graphql </li> </ul> <ul> <li>System Analys </li> </ul>"},{"location":"template/","title":"Template","text":""},{"location":"template/#-","title":"------------------","text":"<p>sample</p> <p>Code</p> Example.java Output <p>Code</p> Example.javaExample.java Output Output <p>Code</p> Example 1Example 2 Output Output <p>Code</p> Example.javaExample.java Output Output <p>Code</p> com/farras/LearnGraphql/controllers/BookController"},{"location":"AWS/","title":"Index","text":""},{"location":"AWS/#problem-saat-mengakses-tomcat-server-menggunakan-dns-public-aws","title":"Problem saat mengakses tomcat server menggunakan dns public AWS","text":"<p>Kondisi nya ketika kita baru menginstall apache tomcat server secara bawaan kita menggunakan port 8080. Maka dari itu kita harus menambahkan inbound rule baru pada VPC.</p> <ol> <li>Kunjungin EC2 instance  dan pilih Security Groups pada bagian Network &amp; Security.</li> <li>Kita dapat membuat security group baru atau menambahkan rule dari security group yang telah di assign pada instance.</li> </ol>"},{"location":"Accounting/01.%20TWK/","title":"01. TWK","text":""},{"location":"Accounting/01.%20TWK/#latihan-twk-28","title":"Latihan TWK 28","text":"<p>Info</p> <p>Simbol bintang di dalam perisai yang terdapat dalam lambang garuda pancasial melambangkan sila ke ... Pancasila</p> <p>More Details</p> <p>Simbol bintang melambangkan sila pertama Pancasila, yaitu Ketuhanan Yang Maha Esa.</p> Jawaban <p>Pertama</p> <p>Info</p> <p>Sidang ke-tiga pelaksanaan PPKI (Panitia Persiapan Pelaksanaan Kemerdekaan Indonesia) dilaksanakan pada tanggal ?</p> <p>More Details</p> <ul> <li> <p>Sidang yang dilaksanakan pada Sabtu, 18 Agustus 1945 ini memiliki topik bahasan mengenai dasar negara dan pemimpin negara.</p> </li> <li> <p>Sementara pada sidang II PPKI yang dilaksanakan pada 19 Agustus 1945, fokus pembahasannya ialah untuk menyusun pemerintahan pusat dan daerah. Pada sidang ini, PPKI menghasilkan keputusan sesuai dengan yang tertera dalam hasil sidang PPKI kedua.</p> </li> <li> <p>Sidang ke III tanggal 22 Agustus 1945, merancang lembaga tinggi kelengkapan negera. Sidang ke-3 ini menghasilkan;</p> <ol> <li>Membentuk Kimite Nasional Indonesia Pusat (KNIP) yang berpusat di Jakarta.</li> <li>Menetapkan Partai Nasional Indonesia (PNI) sebagai satu-satunya partai politik di Indonesia.</li> <li>Membetuk Badan Keamanan Rakyat (BKR)</li> </ol> </li> </ul> Jawaban <p>22 Agustus 1945</p> <p>Info</p> <p>Bumi dan air serta kekayaan alam yang terkandung didalamnya dikuasi oleh negara dan dipergunakan sebesar-besarnya untuk kemakmuran rakyat.  Kalimat diatas merupakan isi UUD 1945 pasal ?</p> <p>More Details</p> <p>Isi UUD dasar yang kurleb terkait dengan partanyaan diatas</p> <ul> <li> <p>Pasal 32 ayat 2, Negara menghormat dan memeliahara bahasa daerah sebagai kekayaan budaya nasional.</p> </li> <li> <p>Pasal 33</p> <ul> <li>Ayat 1, Perekonomian disusun sebagai usaha bersama berdasar atas asas kekeluargaan.</li> <li>Ayat 2, Cabang cabang produksi yang penting bagi negera dan yang menguasai hidup orang banyak dikuasai negara.</li> <li>Ayat 3, Bumi dan air serta kekayaan alam yang terkandung didalamnya dikuasi oleh negara dan dipergunakan sebesar-besarnya untuk kemakmuran rakyat.</li> <li>Ayat 4, Perekonomian nasional diselenggarakan berdasarkan asas demokrasi ekonomi dengna prinsip kebersamaan, efesiensi berkeadilan, berkelanjutan, berwawasan lingkungan, kemandirian, serta menjaga keseimbangan kemajuan, dan kesatuan ekonomi nasional.</li> </ul> </li> </ul> Jawaban <p>33 Ayat 3</p> <p>Info</p> <p>Pasal 30 pada UUD 1945 mengatur hal-hal yang berkaitan dengan ?</p> <p>More Details</p> <p>UUD 1945 Pasal 30 Ayat 1 sampai dengan Ayat 5 mengatur tentang Pertahanan dan Keamanan Negara.</p> Jawaban <p>Pertahanan dan Keamanan Negara.</p> <p>Info</p> <p>Hak warga negera untuk melaksanakan perkawinan dan membentuk keluarga diatur dalam UUD 1945 Pasal ...</p> <p>More Details</p> <p>Ada beberapa pasal dari pilihan dari pertanyaan diatas, dibawah ini adalah penjelasan isi dari pasal pada pilihan ganda tersebut;</p> <ul> <li>Pasal 25, Syarat-syarat untuk menjadi dan untuk diberhentikan sebagai Hakim ditetapkan oleh Undang - undang.</li> <li>Pasal 26 Ayat 2, Penduduk ialah warga negara Indonesia dan Asing yang bertempat tinggal di Indonesia.</li> <li>Pasal 27 Ayat 2, Tiap - tiap warga negara berhak atas perkerjaan dan penghidupan yang layak bagi kemanusiaan.</li> <li>Pasal 28B Ayat 1, Setiap orang berhak membentuk keluarga dan melanjutkan keturunan melalui perkawinan yang sah.</li> <li>Pasal 29 Ayat 1, Negara berdasarkan ketuhanan yang maha ESA.</li> </ul> Jawaban <p>Pasal 28B Ayat 1</p> <p>Info</p> <p>Isi dari Pasal 32 Ayat 2 Undang - undang Dasar 1945 adalah ...</p> <p>More Details</p> <ul> <li>Pasal 32 ayat 2, Negara menghormat dan memeliahara bahasa daerah sebagai kekayaan budaya nasional.</li> </ul> Jawaban <p>Negara menghormat dan memeliahara bahasa daerah sebagai kekayaan budaya nasional.</p> <p>Info</p> <p>BPUPKI sendiri beranggotakan 69 orang, yang terdiri dari: 62 orang anggota aktif adalah tokoh utama pergerakan nasional Indonesia dari semua daerah dan aliran, serta 7 orang anggota istimewa adalah perwakilan pemerintah pendudukan militer Jepang. Peran 7 orang istimewa Jepang ini adalah ...</p> <p>More Details</p> <p>BPUPKI sendiri beranggotakan 69 orang, yang terdiri dari: 62 orang anggota aktif adalah tokoh utama pergerakan nasional Indonesia dari semua daerah dan aliran, serta 7 orang anggota istimewa adalah perwakilan pemerintah pendudukan militer Jepang, tetapi wakil dari bangsa Jepang ini tidak mempunyai hak suara (keanggotaan mereka adalah pasif, yang artinya mereka hanya hadir dalam sidang BPUPKI sebagai pengamat saja).</p> Jawaban <p>Sebagai pengamat</p> <p>Info</p> <p>Garis besar batang tubuh/pasal-pasal UUD 1945 dapat diklasifikasikan menjadi 3 bagian, yaitu ?</p> Jawaban <p>Hal bentuk negara, Lambang Negara, dan Warga Negara</p> <p>Info</p> <p>Parta Persiapan Kemerdekaan Indonesia diketuai oleh ?</p> <p>More Details</p> <ul> <li>Tujuan : PPKI adalah panitia yang bertugas untuk mempersiapkan kemerdekaan Indonesia.</li> <li>Ketua : Ir.Soekarno</li> <li>Pemberi Izin : Izin pembentukan badan ini diberikan oleh Hisaichi Terauchi, seorang marsekal Jepang yang berada di Saigon.</li> <li>Riwayat : Sebelumnya sudah dibentuk BPUPKI, kemudian dibubarkan oleh Jepang dan dibentuk PPKI pada tanggal 7 Agustus 1945 yang diketuai oleh Ir. Soekarno. </li> </ul> Jawaban <p>Ir. Soekarno</p> <p>Info</p> <p>Penulisan tanda baca dalam kalimat - kalimat berikut ini benar, kecuali ...</p> <p>Jawaban saya salah dengan memilih Kalau mempunyai cukup uang, ia ingin membeli kamus.</p> <p>More Details</p> <p>Untuk memisahkan kalimat setara yang satu dari kalimat setara selanjutnya yang didahului oleh kata seperti melainkan atau tetapi digunakan tanda baca koma.</p> Jawaban <p>Ia bukan ingin membeli kamus melainkan ingin membeli buku cerita. seharusnya  Ia bukan ingin membeli kamus, melainkan ingin membeli buku cerita.</p> <p>Info</p> <p>Penggunaan imbuhan yang tepat terdapat pada kalimat ...</p> <p>More Details</p> <p>Dibawah ini adalah pilihan jawaban dari pertanyaan diatas;</p> <p>a. Para petembak telah bersiaga di balik bukit. B. Siapa penabur benih udang di tambak itu? C. Kedua peninju saling pukul dengan sengit. D. Siapa petendang adikku?  E. Kakaknya seorang pentari ternama. </p> <p>Penabur adalah orang yang menabur.</p> Jawaban <p>Siapa penabur benih udang di tambak itu?</p> <p>Info</p> <p>Pancasila sebagai paradigma artinya...</p> Jawaban <p>Pancasila sebagai paradigma artinya nilai - nilai dasar pancasila secara normatif menjadi dasar, kerangka acuan, dan tolok ukur.</p> <p>Info</p> <p>Dalam pembangunan ekonomi maka sy stem dan pembangunan ekonomi berpijak pada nilai moral daripada pancasila, hal itu maksud dari ...</p> Jawaban <p>Dalam pembangunan ekonomi maka sy stem dan pembangunan ekonomi berpijak pada nilai moral daripada pancasila, hal itu maksud dari ...      </p> <p>Info</p> <p>Dewan Pertimbangan Agung (DPA) (Bab IV) dihapus dari UUD 1945 pada amandemen ...</p> <p>More Details</p> <p></p> Jawaban <p>ke - IV</p> <p>Info</p> <p>Jika presiden dan wakil presiden mangkat, berhenti, diberhentikan, atau tidak dapat melakukan kewajibannya dalam masa jabatannya secara bersamaan, pelaksanaan tugas Kepresidenan sementara akan dilakukan oleh ?</p> <p>More Details</p> <p>Jika Presiden dan Wakil Presiden mangkat, berhenti, diberhentikan, atau tidak dapat melakukan kewajibannya dalam masa jabatannya secara bersamaan, pelaksanaan tugas Kepresidenan adalah Menteri Luar Negeri, Menteri Dalam Negeri dan Menteri Pertahanan secara bersama-sama. Selambat-lambatnya tiga puluh hari setelah itu, Majelis Permusyawaratan Rakyat menyelenggarakan sidang untuk memilih Presiden dan Wakil Presiden dari dua pasangan calon Presiden dan wakil Presiden yang diusulkan oleh partai politik atau gabungan partai politik yang pasangan calon Presiden dan Wakil Presidennya meraih suara terbanyak pertama dan kedua dalam pemilihan umum sebelumnya, sampai berakhir masa jabatannya.</p> Jawaban <p>Menteri Luar Negeri, Menteri Dalam Negeri dan Menteri Pertahanan</p>"},{"location":"Accounting/01.%20TWK/#latihan-twk-27","title":"Latihan TWK 27","text":"<p>Info</p> <p>Sidang pertama BPUPKI diadakan di gedung Chuo Sangi In di Jalan Pejambon 6 Jakarta yang kini dikenal dengan sebutan ...</p> <p>More Details</p> <p>Gedung Chuo Sangi In di Jalan Pejambon 6 Jakarta kini sekarang dikenal sebagai Gedung Pancasila}. Pada zaman Belanda, gedung tersebut dikenal sebagai Volksraad (Perwajikan Rakyat). Jawaban <p>Gedung Pancasila</p> <p>Info</p> <p>Anggota PPKI berjumlah ?</p> <p>More Details</p> <p>Anggota PPKI berjumlah 21 orang. Sebagai upaya mencerminkan perwakilan seluruh daerah dari berbagai entnis di hindia belanda, maka anggotanya terdiri dari; </p> <ul> <li>12 orang jawa</li> <li>3 orang asal Sumatera</li> <li>2 orang asal Sulawesi</li> <li>1 orang asal kalimantan</li> <li>1 orang sunda kecil</li> <li>1 orang maluku</li> <li>1 orang etnis tionghoa</li> </ul> Jawaban <p>21 Orang</p> <p>Info</p> <p>Berikut ini yang merupakan gagasan mengenail rumusan lima dasar negera menurut soekarno adalah; </p> <p>More Details</p> <p>Dasar negera dirumuskan pada sidang pertama BPUPKI dengan mendengarkan gagasan rumusan negera dari tiga tokoh, diantaranya;</p> <ol> <li>Moh. Yamin : Peri kebangsaan, peri ketuhanan, peri ketuhanan, Per kerakyatan dan, Kesejahteraan rakyat.</li> <li>Soepomo : Persatuan, Kekeluargaan, Mufakat dan Demokrasi, Musyawarah, dan Keadilan sosial.</li> <li>Soekarno : Kebangsaan Indonesia, Internasionalisme dan Peri kemanusiaan, Kesejahteraan Sosial, Mufakat atau Demokrasi dan Ketuhanan yang Maha Esa</li> </ol> Jawaban <p>Kebangsaan Indonesia, Internasionalisme dan Peri Kemanusiaan, Kesejahteraan Sosial, Mufakat atau Demokrasi, dan Ketuhanan yang Maha Esa.</p> <p>Info</p> <p>Undang-undang yang bersifat khusus mengesampingkan undang undang yang bersifat umum. Pertanyaan tersebut merupakan asas ?</p> <p>More Details</p> <p>Azas Legalitas, Suatu perbuatan tidak dapat dipidana kecuali berdasarkan perundang undang pidana yang telah ada.</p> <p>Azas Non Retro Aktif, Tiada suatu perbuatan yang dapat dipidana kecuali kekuatan aturan pindan perundang-undangan yang telah ada sebelum perbuatan dilakukan.</p> <p>Lex Spesialis Derogat Lex Generalis, {==Undang-undang yang bersifat khusus mengesampingkan undang undang yang bersifat umum</p> <p>Lex Posteriori Derogat Legi Priori, Undang-undang yang lama dinyatakan tidak berlaku apabila ada undang-undang baru yang mengatur hal yang sama.</p> <p>Lex Superoior Derogat Legi Inferior, Hukum yang lebih tinggi mengesampingkan hukum atau aturan yang lebih rendah dibawahnya.</p> Jawaban <p>Undang-undang yang bersifat khusus mengesampingkan undang undang yang bersifat umum</p> <p>Info</p> <p>Asas Lus Sanguinis menetapkan kewarganegaraan seseorang berdasarkan ?</p> <p>More Details</p> <ul> <li>Ius Sanguinis, menetapkan berdasarkan keturunan</li> <li>Ius Soli, menetapkan keturunan berdasarkan negara kelahirannya.</li> </ul> Jawaban <p>Berdasarkan keturunan</p> <p>Info</p> <p>Diberlakukannya kembali Undang Undag Dasar 1945 menggantikan Undang Udang Dasar Sementara 1950 merupakan salah satu Dekret Presiden tanggal ?</p> <p>More Details</p> <p>Penyebab diberlakukannya kembali UUD 1945 mengganti UUDS 1950 kare kondisi politik pada sidang Konstituante 1959 yang banyak terjadi saling tarik ulur kepentingan parta politik sehingga gagal menghasilkan UUD baru. </p> Jawaban <p>05 Juli 1959</p> <p>Info</p> <p>Isi sila pertama pada piagam jakarta yang diganti adalah </p> <p>More Details</p> <p>Pada tanggal 18 Agustus 1945, dilakukanlah sidang PPKI pertama. Sidang ini sekaligus melakukan pengesahan UUD 1945 dimana istilah 'Mukaddimah' diubah menjadi 'pembukaan'. Kemudian, sila pertama yang berisi kewajiban menjalankan Syariat Islam bagi pemeluknya, diganti menjadi Ketuhanan Yang Maha Esa. </p> <p>Alasan dilakukan perubahan ini adalah karena hal itu merupakan usulan dari masyarakat di Indonesia Timur agar menghilangkan 7 kata dalam Piagam Jakarta yaitu \"\u2026dengan kewajiban menjalankan syariat Islam bagi pemeluk-pemeluknya \u2026\" Mereka menganggap bahwa kalimat pada bagian tersebut tidak mengikat mereka, dan hanya menyangkut rakyat yang memeluk agama Islam. Dengan tercantumnya ketetapan seperti itu di dalam suatu dasar yang menjadi pokok UUD 1945, berarti mengadakan diskriminasi terhadap golongan minoritas. Jika diskriminasi itu ditetapkan juga, mereka lebih suka berdiri di luar Republik Indonesia.</p> Jawaban <p>Ketuhanan yang maha Esa dan kewajiban menjalankan syariat Islam bagi para pemeluknya</p> <p>Info</p> <p>Anggota Badan Pemeriksaan Keuangan dipilih oleh Dewan Perwakilan Rakyat dengan memperhatikan pertimbangan :: dan diresmikan oleh ::</p> Jawaban <p>Pepmerhatikan pertimbangan DPD dan di sahkan oleh Presiden</p> <p>Info</p> <p>Hasil pemeriksaan keuangan negara diserahkan kepada</p> <p>More Details</p> <pre><code>Perihal hasil pemeriksaan keuangan diatur pada UUD pasal 23E ayat 2 : \"_Hasil pemeriksaan keuangan diserahkan kepada **Dewak Perwakilan Rakyat**, **Dewan Perwakilan Daerah**, dan **Dewan Perwakilan Rakyat Daerah**, sesuai dengan kewenangannya._\"\n</code></pre> Jawaban <p>DPR, DPD, dan DPRD</p> <p>Info</p> <p>Dibawah ini yang tidak langsung dipilih oleh rakyat adalah ?</p> <p>More Details</p> <pre><code>* Dipilih : **Dewan Perwakilan Rakyat**\n* Mempertimbangkan : **Dewan Perwakilan Daerah**\n* Diresmikan : **Presiden**\n</code></pre> Jawaban <p>Badan Pemeriksaan Daerah</p> <p>Info</p> <p>Urutan yang mendapatkan suara terbanyak pada pemilu tahun 1955</p> <p>More Details</p> <p>Pada pemilu 1955, hanya 28 kontestan (tiga diantaranya perseorangan) yang berhasil memperoleh kursi. Empat partai besar secara berturut-turut memenangkan kursi: Partai Nasional Indonesia (57 kursi/22,3%), Masyumi (57 kursi/20,9%), Nahdlatul Ulama (45 kursi/18,4%), dan Partai Komunis Indonesia (39 kursi/15,4%).</p> Jawaban <p>PNI, Masyumi, Nahdatul Ulama, dan PKI</p> <p>Info</p> <p>Tipe desentralisasi yang bertujuan memberikan kesempatan kepada daerah untuk menggali secara maksimal potensi sumber dana daerah adalah</p> <p>More Details</p> <pre><code>Jenis desentralisasi\n\n1. Desentralisasi Politik, memberikan wewenang atau melimpahkan segala keputusan terkait daerah yang dinaunginya dalam memberikan keputusan publik.\n\n2. Desentralisasi Administrasi, ...\n\n3. Desentralisasi Fiskal, memberikan kesempatan kepada daerah untuk menggali secara maksimal potensi sumber dana daerah\n</code></pre> Jawaban <p>Desentralisasi Fiskal</p> <p>Info</p> <p>Hak Dewan Perwakilan Rakyat dalam melakukan penyidikan terhadap kebijakan-kebijakan yang dilaksanakan oleh pemerintah disebut ?</p> <p>More Details</p> <p>DPR memiliki tiga hak istimewa <sup>1</sup></p> <ol> <li>Hak Interpelasi, sebuah hak yang dimiliki oleh anggota DPR dalam meminta penjelasan terhadap kebijakan yang yang memiliki dampak penting dan setrategis serta meluas terhadap kehidupan masyarakat, bangsa dan negara.</li> <li>Hak Angket, hak DPR yang membuat mereka dapat melakukan penyidikan terhadap pelaksanaan pemerintahan negara.</li> <li>Hak Menyatakan Pendapat, hak anggota DPR untuk menyatakan pendapat terhadap kebijakan yang berlaku, kejadian luarbiasa yang terjadi didalam dan diluar negeri, atau tindak lanjut dari interpelasai atau angkat, serta dugaan pelanggaran hukum yang dilakukan oleh pemerintah.</li> </ol> <p>Didalam UUD 1945 Bab VII(DPR) pada pasal 21 dikatakan; \"Anggota DPR berhak mengajuakan usul rancangan undang-undang.\"</p> Jawaban <p>Hak Angket</p> <p>Info</p> <p>Strategi pembangunan Indonesia diarahkan untuk membangun Indonesia disegala bidang terutama dalam hal</p> <p>More Details</p> <p>Strategi Pembangunan Indonesia diarahakan untuk membangun Indonesia di segala bidang terutama dalam pemenuhan hak dasar rakyat sebagai landasan penciptaan pembangunan yang kokoh.</p> Jawaban <p>Pemenuhan hak dasar rakyat.</p> <p>Info</p> <p>Hak anggota DPR untuk mengajukan usul rancangan Undang Undang diatur dalam UUD 1945 pada pasal ? </p> <p>More Details  <sup>2</sup></p> <ul> <li> <p>Pasal 13 </p> <ul> <li>Ayat 1, Presiden mengakat duta atau konsul</li> <li>Ayat 2, Dalam hal mengangkat duta, presiden memperhatikan pertimbangan Dewan Perwajikan Rakyat</li> <li>Ayat 2, Presiden menerima penempatan duta negara lain dengan memperhatikan pertimbangan Dewan Perwakilan Rakyat</li> </ul> </li> <li> <p>Pasal 23B, Macam dan hal mata uang ditetapkan dengan undang-undang</p> </li> <li>Pasal 21, Anggota DPR berhak mengajuakan usul rancangan undang-undang</li> <li>Pasal 29<ul> <li>Ayat 1, Negara berdasarkan atas Ketuhanan Yang Maha Esa</li> <li>Ayat 2, Negara menjamin kemerdekaan tiap-tiap penduduk untuk memeluk agamanya masing-masing untuk beribadat menurut agama dan kepercayaanya itu</li> </ul> </li> <li> <p>Pasal 24 mengatur tentang kekuasaan kehakiman</p> </li> </ul> Jawaban <p>Pasal 21</p>"},{"location":"Accounting/01.%20TWK/#latihan-twk-26","title":"Latihan TWK 26","text":"<p>Info</p> <p>Pengarang itu menyerahkan naskah karangan kepada kepala redaksi penerbit Citra. Bentuk pasif dari kalimat tersebut adalah...</p> Jawaban <p>Naskah karangan diserahkan pengarang kepada kepala redaksi penerbit Citra.</p> <p>Info</p> <p>Bab XI UUD 1945 menjelaskan tentang</p> <p>More Details</p> <p>Sumbernya di UUD 1945</p> Rangkuman Bab dan Pembahasaanya Bab Pembahasan I Bentuk dan Kedaulatan II Majelis Permusyawaratan Rakyat III Kekuasaan Pemerintah IV Dewan Pertimbangan Agung, Dihapus V Kementrian Agama VI Pemerintahan Daerah VII Dewan Perwakilan Rakyat VIIA Dewan Perwakilan Daerah VIIB Pemilihan UMUM VIII Hal Keuangan VIIIA Badan Pemeriksaan Keuangan IX Kekuasaan Kehakiman IXA Wilayah Negara X Warga Negara Dan Penduduk XA Hak Asasi Manusia XI Agama XII Pertahanan Negara dan Keamanan Negara XIII Pendidikan dan Kebudayaan XIV Perekonimian Nasiona dan Kesejahteraan Sosial XV Bendera, Bahasa, dan Lambang Negara serta Lagu Kebangsaan XVI Perubahan Undang Undang Dasar Jawaban <p>Agamaamandemen</p> <p>Info</p> <p>UUD 1945 diamandemen pertama kali tanggal ?</p> <p>More Details</p> <p>UUD 1945 sudah empat kali diamandemen</p> <ul> <li>Amandement pertama, 19 Oktober 1999</li> <li>Amandemen kedua, 18 Agustus 2000</li> <li>Amandemen ketiga, 09 November 2021</li> <li>Amandement keempat, 10 Agustus 2002</li> </ul> Jawaban <p>Terjadi pada tanggal 19 Oktober 1999</p> <p>Info</p> <p>Suka memberi pertolongan kepada orang lain agar dapat berdiri sendiri merupakan pengamalan sila ke ... Pancasila.</p> <p>More Details</p> <p>butir pengamalan dari sila ke-5 Pancasila yang tertuang dalam Ketetapan MPR No.I/MPR/2003 sebagai berikut.</p> <ol> <li>Mengembangkan perbuatan yang luhur, yang mencerminkan sikap dan suasana kekeluargaan dan kegotong-royongan.</li> <li>Mengembangkan sikap adil terhadap sesama. Menjaga keseimbangan antara hak dan kewajiban.</li> <li>Menghormati hak orang lain.</li> <li>Suka memberi pertolongan kepada orang lain agar dapat berdiri sendiri.</li> <li>Tidak menggunakan hak milik untuk usaha-usaha yang bersifat pemerasan terhadap orang lain.</li> <li>Tidak menggunakan hak milik untuk hal-hal yang bersifat pemborosan dan gaya hidup mewah.</li> <li>Tidak menggunakan hak milik untuk bertentangan dengan atau merugikan kepentingan umum.</li> <li>Suka bekerja keras.</li> <li>Suka menghargai hasil karya orang lain yang bermanfaat bagi kemajuan dan kesejahteraan bersama.</li> <li>Suka melakukan kegiatan dalam rangka mewujudkan kemajuan yang merata dan berkeadilan sosial.</li> </ol> Jawaban <p>Sila ke 5</p> <p>Info</p> <p>Tiada suatu perubuatan yang dapat dipidana kecuali atas kekuatan aturan pidana dalam peraturan perundang-undangan yang telah ada sebelum perbuatan dilakukan. Pernyatan tersebut dimaksudkan </p> Jawaban <p>Azas Non Retroaktif</p> <p>Info</p> <p>PPKI dibentuk pada tanggal ?</p> <p>More Details</p> <p>Pada tanggal 07 Agustus 1945 Jepang membubarkan BPUPKI dan membentuk PPKI. Dalam bahasa Jepan disebut dengan dokuritsu junbi cosakai.</p> Jawaban <p>07 Agustis 1945</p> <p>Info</p> <p>BPUPKI mengadakan sidang pertamanya di gedung Choun Shangi di jalan Pejambon 6 Jakarta yang sekarang dikenal dengan Gedung Pancasila. Pada zama belana gedung tersebut disebut dengan volksraad, yang artinya ? </p> Jawaban <p>Gedung perwakilan Rakyat</p> <p>Info</p> <p>Karl Max merupakan salah satu tokoh yang mengemukakan teori terbentuknya suatu negara, yaitu ?</p> <p>More Details     Karl Max berpendapat negara terbentun karena Kekuasaan</p> Jawaban <p>Teorin Kekuasaan</p> <p>Info</p> <p>Dataran tinggi yang ada dipulau Kalimantan Barat adalah dataran tinggi ?</p> <p>More Details     | Daerah | Dataran Tinggi |     | :----| :----- |     |Sulawesi Tenggara|Bingkoku|     |Kalimantan Barat|Atlas|     |Sulaewsi Selatan|Wajo|     |Jawa Tengah|Dieng|</p> Jawaban <p>Muller</p> <p>Info</p> <p>Binatang komodo hanya hidup di pulau Komodo, yang terletak di provinsi ?</p> Jawaban <p>Nusa Tenggara Timur</p> <p>Info</p> <p>ITU adalah sebuah organisasi dibawah Perserikatan Bangsa Bangsa yang mengurusi masalah ?</p> Jawaban <p>Telekomunikasi</p> <p>Info</p> <p>Siapa perwakilan Indonesia untuk ASEAN</p> <p>More Details</p> <p>resources: Wikipedia, ASEAN</p> <ul> <li> : Bangkok</li> <li> : 08 Agustus 1967</li> <li> : (MISTP) Malaysia, Indonesia, Singapore, Thailand dan Philippines</li> <li> : Adam Malik , Tun Abdul Razak , S. Rajaratnam  , Thanat Khoman , dan Narciso R Ramos </li> </ul> Jawaban <p>Adam Malik</p> <p>Info</p> <p>Diantara kalimat dibawah ini, manakah kalimat yang tidak menggunakan frase idiomatik ?</p> <p>More Details</p> <p>resources : Gramedia</p> <p>Frase Idiomatik, adalah sebuah frase yang berisikan ungkapan atau pribahasa yang berarti tidak sebenarnya.</p> Jawaban <p>Kepalah sekolah itu sedang bertemu guru didepan sekolah.</p> <p>Info</p> <p>Pajak negara, diatur dalam Undang Undang Dasar 1946 pasal ?</p> <p>More Details</p> <p>Resources</p> <p>Pada UUD 1945 bab VIII mengatur tentang keuangan negara. Dimana pasal - pasal pada bab tersebut adalah sebagai berikut;</p> <ul> <li>Pasal 23 : Pendapatan dan Belanja Negara</li> <li>Pasal 23A : Mengatur tentang pajak dan pungutan lain yang memakasa oleh negara</li> <li>Pasal 23B : Mengatur tentang Harga dan Mata Uang</li> <li>Pasal 23C : Mengatur tentang Keuangan Negara</li> <li>Pasal 23D : Mengatur tentang Bank Sentral</li> </ul> Jawaban <p>Pasal 23 A</p> <p>Info</p> <p>More Details</p> Jawaban <ol> <li> <p>3 Hak Istimewa DPR \u21a9</p> </li> <li> <p>3 Hak Istimewa DPR \u21a9</p> </li> </ol>"},{"location":"Accounting/Akuntansi%20Sektor%20Publik/","title":"Index","text":"<p>Bismillah</p>"},{"location":"Accounting/Akuntansi%20Sektor%20Publik/#pendahuluan","title":"Pendahuluan","text":"<p>Tuntutan yang besar terhadap akuntabilitas publik berimplikasi kepada kewajiban manajemen publik memberikan informasi ke publik yang transparansi. Kebutuhan informasi berutujuan untuk perencanaan dan pengendalian dalam manajemen. Salah satunya adalah informasi akuntansi berupa laporan keuangan yang tidak sebatas informasi finansial namun juga informasi non finansial. Tujuan informasi keuangan organisasi pemerintah adalah </p> <ol> <li>Untuk menentukan dan memprediksi aliran kas, neraca saldo dan kebutuhan sumber daya finansial jangka pendek unit pemerintah.</li> <li>Untuk menentukan dan memprediksi kondisi suatu unit pemerintah dan perubahan-perubahan yang terjadi didalamnya.</li> <li>Untuk menentukan monitoring kerja, kesesuaiannya dengan perundang-undangan, kontrak yang telah disepakati, dan ketentuan lain yang disyaratkan.</li> <li>Untuk meberikan informasi guna perencanaan dan penganggaran, serta untuk meprediksi pengaruh akuisisi dan alokasi sumber daya terhadap pencapaian tujuan operasional</li> <li>Informasi yang digunakan untuk mengevaluasi kinerja manajerial dan organisasional.</li> </ol>"},{"location":"Accounting/Akuntansi%20Sektor%20Publik/#pengertian-karakterisitik-fungsi-dan-tujuan-laporan-keuangan","title":"Pengertian, Karakterisitik, Fungsi dan Tujuan Laporan Keuangan","text":""},{"location":"Accounting/Akuntansi%20Sektor%20Publik/#pengerttian","title":"Pengerttian","text":"<p>Akuntansi sektor publik digunakan untuk transparansi kepada publik untuk dapat memenuhi hak-hak publik dan sektor publik.</p> <p>Akuntabilitas publik adalah kewajiban yang diberikan kepada orang yang diberikan tanggung jawab untuk mempertanggubgjawabkan, melaporkan dan mengungkapkan segala aktivitas dan kegiatan yang telah dilaksanakan, yang sudah menjadi tanggung jawab kepada pihak yang sudah memberikan amanah.</p> <p>Akuntansi sektor publik merupakan suatu proses pengumpulan, pengklasifikasian <sup>1</sup>, analisis, serta pembuatan laporan pengelolaan keuangan lembaga publik. Serta laporan pengelolaan keuangan tersebut dapat digunakan kepada pihak yang memberikan amanah guna informasi dalam pengambilan keputusan.</p>"},{"location":"Accounting/Akuntansi%20Sektor%20Publik/#karakteristik-akuntansi-sektor-publik","title":"Karakteristik Akuntansi Sektor Publik","text":"<p>Akuntansi sektor publik biasanya digunakan oleh lembaga pemerintah daerah dan pusat dimana karakteristik akuntansi sektor publik ini berfokus pada dua hal yaitu: a. Fokus pada sifat lembaga dimana fokus pada sifat akuntansi ini adalah khusus organisasi non profit yang tidak menghasilkan laba seperti lembaga pemerintah. b. Fokus pada tujuan lembaga dimana fokus untuk sektor publik hanya menyediakan informasi pelayanan pada publik. Pelayanan pada publik ini dilakukan bertujuan untuk meningkatkan kesejahteraan dari masyarakat.</p>"},{"location":"Accounting/Akuntansi%20Sektor%20Publik/#fungsi-dan-tujuan-laporan-keuangan-publik","title":"Fungsi dan Tujuan Laporan Keuangan Publik","text":"Kepatuhan dan Pengelolaan <p>Dengan membuat laporan keuangan berarti sudah memberikan jaminan kepada pihak pengguna laporan dan otorisasi penguasa bahwa laporan keuangan sudah dilakukan dengan baik, sesuai dengan ketentuan dan peraturan yang sudah ditetapkan.</p> Akuntabilitas dan pelaporan <sup>2</sup> <p>Laporan keuangan digunakan untuk meninjau , memonitor dan mengevaluasi kinerja manajemen, serta memberikan dasar untuk mencermati trend antar waktu ke waktu, mengatahui capaian atas tujuan yang ditetapkan dan juga dapat digunakan untuk membadingkan  kinerja organisasi lain yang sejenis.</p> Perencanaan dan Informasi Otorisasi <p>Laporan keuangan berfungsi untuk memberikan dasar perencanaan kebijakan dan aktivitas dimasa yang akan datang serta juga akan dapat memberikan informasi pendukung mengenai otirisai penggunaan data.</p> Kelangsungan Organisasi <p>Laporan keuangan yang diberikan berguna unuk membantu pembaca dalam mementukan apakah sebuah lembaga atau sebuah organisasi pemerintah dapat meneruskan perlayanan berupa barang atau jasa.</p> <ol> <li> <p>Dalam proses pengklasifikasian dan analisis laporan keuangan pemerintah memliki standard akuntansi yang berbeda-beda mengikuti dengan standar akuntansi yang dianut oleh lembaga.\u00a0\u21a9</p> </li> <li> <p>retrospektif adalah sebuah proses evaluasi, penijauan, dan analisa terhadap kejadian dimasa lampau, atau data variabel yang sudah ada.\u00a0\u21a9</p> </li> </ol>"},{"location":"Accounting/Akuntansi%20Sektor%20Publik/peraturan/01.%20PP%2071%20TAHUN%202010%20TENTANG%20STANDAR%20AKUNTANSI%20PEMERINTAHAN/","title":"01. PP 71 TAHUN 2010 TENTANG STANDAR AKUNTANSI PEMERINTAHAN","text":"<p>Sumber : PP Nomor 71 Tahun 2010_satu file</p> <p>Status : Berlaku</p> Rangkuman <p>Rangkuman Pasal</p> <ul> <li>Pasal V, Tentang rancangan perubahan Pernyataan Akuntansi Pemerintah</li> <li>Pasal VI, Sistem Akuntansi Pemerintah dan penerapan pada pusat dan daerah serta penysunannya </li> </ul> <ol> <li>Standard akuntansi pemerintah Berbasis Akrual</li> <li>Rancangan perubah PSAP disampaikan oleh Komite Standar Akuntansi Pemerintah kepada Menteri Keuangan</li> <li>PSAP (Peraturan Standar Akuntansi Keuangan) dapat berubah dengan Perturan Menteri Keuangan setelah mendapatkan pertimbangan dari Badan Pemeriksa Keuangan. </li> <li>Sistem akuntansi pemerintah pusat diatur oleh Peraturan Menteri Keuangan sedangkan Sistem Akuntansi Pemerintah Daerah diatur oleh Peraturan Menteri Dalam Negri. Hal ini juga termasuk aturan peneripan Sistem Akuntansi Berbasis Akrual.</li> </ol> Keterkaitan Undang-undang dan peraturan <p>Undang-Undang Nomor 17 Tahun 2003 tentang Keuangan Negara dan Undang-Undang Nomor 1 Tahun 2004 tentang Perbendaharaan Negara yang bertugas menyusun SAP</p>"},{"location":"Accounting/Akuntansi%20Sektor%20Publik/peraturan/01.%20PP%2071%20TAHUN%202010%20TENTANG%20STANDAR%20AKUNTANSI%20PEMERINTAHAN/#bab-1","title":"BAB 1","text":""},{"location":"Accounting/Akuntansi%20Sektor%20Publik/peraturan/01.%20PP%2071%20TAHUN%202010%20TENTANG%20STANDAR%20AKUNTANSI%20PEMERINTAHAN/#pasal-1","title":"Pasal 1","text":"<p>Dalam Peraturan Pemerintah ini yang dimaksud dengan:</p> <ol> <li>Pemerintah adalah pemerintah pusat dan pemerintah daerah.</li> <li>Akuntansi adalah proses identifikasi, pencatatan, pengukuran, pengklasifikasian, pengikhtisaran transaksi dan kejadian keuangan, penyajian laporan, serta penginterpretasian atas hasilnya.</li> <li>Standar Akuntansi Pemerintah yang selanjutnya disingkat menjadi SAP, prinsip-prinsip akuntansi yang diterapkan dalam menyusun dan menyajikan laporan keuangan pemerintah.</li> <li>Pernyataan Standard AKuntansi Pemerintah yang selanjutnya disingkat PSAP, adalah SAP yang diberikan judul, nomor dan tanggal efektif.</li> <li>Kerangka Konseptual Akuntansi Pemerintah adalah konsep dasar penyusunan dan pengembangan Standard Akuntasi Pemerintah, dan merupakan acuan dasar dari Komite Standar Akuntansi Pemerintah, penyusunan laporan keuangan, pemeriksaan, dan penggunaan laporan keuangan dalam mencari pemecahan atas suatu masalah yang belum diatur dalam Pernyataan Standar Akuntansi Pemerintah.</li> <li>Komite Standar Akuntansi Pemerintah, yang selanjutnya disingkat KSAP, adalah komite sebagaimana dimaksud dalam Undang-Undang Nomor 17 Tahun 2003 tentang Keuangan Negara dan Undang-Undang Nomor 1Tahun 2004 tentang Perbendaharaan Negara yang bertugas menyusun SAP</li> <li>Sistem Akuntansi Pemerintahan adalah rangkaian sistematik dari prosedur, penyelenggara, peralatan, dan elemen lain untuk mewujudkan fungsi akuntansi sejak analisis transaksi sampai dengan pelaporan keuangan di lingkungan organisasi pemerintah.</li> </ol>"},{"location":"Accounting/Akuntansi%20Sektor%20Publik/peraturan/01.%20PP%2071%20TAHUN%202010%20TENTANG%20STANDAR%20AKUNTANSI%20PEMERINTAHAN/#bab-ii-penerapan-standard-akuntansi-pemerintah","title":"BAB II PENERAPAN STANDARD AKUNTANSI PEMERINTAH","text":""},{"location":"Accounting/Akuntansi%20Sektor%20Publik/peraturan/01.%20PP%2071%20TAHUN%202010%20TENTANG%20STANDAR%20AKUNTANSI%20PEMERINTAHAN/#pasal-iv","title":"Pasal IV","text":"<ol> <li>Pemerintah menerapkan SAP Berbasis Akrual</li> <li>SAP Berbasis Akrual sebagaimana yang dimaksud pada ayat 1 dinyatakan dalam bentuk PSAP.</li> <li>SAP Berbasis Akrual sebagaimana yang dimaksud pada ayat 1 dilengkapi dengan Kerangka Konseptual Akuntansi Pemerintah</li> <li>PSAP sebagaimana dimaksud pada ayat (2) dan Kerangka Konseptual Akuntansi Pemerintahan sebagaimana dimaksud pada ayat (3) sebagaimana tercantum dalam Lampiran I yang tidak terpisahkan dari Peraturan Pemerintah ini.</li> </ol>"},{"location":"Accounting/Akuntansi%20Sektor%20Publik/peraturan/01.%20PP%2071%20TAHUN%202010%20TENTANG%20STANDAR%20AKUNTANSI%20PEMERINTAHAN/#pasal-v","title":"Pasal V","text":"<ol> <li>Dalam hal diperlukan perubahan PSAP sebagaimana dimaksud pada Pasa 4 ayat (2), perubahan tersebut diatur dengan Peraturan Mentri Keuangan setelah mendapatkan pertimbangan dari Badan Pemeriksa Keuangan.</li> <li>Rancangan perubahan PSAP sebagaimana yang dimaksud pada ayat (1) disusun oleh KSAP sesuai dengan mekanisme yang berlaku dalam penyusunan SAP.</li> <li>Rancangan perubah PSAP sebagaimana dimaksud pada ayat (2), disampaikan oleh KSAP kepada Menteri Keuangan.</li> <li>Menteri Keungan menyampaikan usulan rancangan perubahan PSAP sebagaimana yang dimaksud oleh ayat (3) ke Badan Pemeriksa Keuangan untuk mendapatkan pertimbanga.</li> </ol>"},{"location":"Accounting/Akuntansi%20Sektor%20Publik/peraturan/01.%20PP%2071%20TAHUN%202010%20TENTANG%20STANDAR%20AKUNTANSI%20PEMERINTAHAN/#pasal-vi","title":"Pasal VI","text":"<ol> <li>Pemerintah menyusun Sistem Akuntansi Pemerintah yang mengacu pada SAP.</li> <li>Sistem Akuntansi Pemerintah Pusat diatur dengan Peraturan Menteri Keuangan yang mengacu pada pedoman umum Sistem Akuntansi Pemerintah.</li> <li>Sistem Akuntansi Pemerintah Daerah diatur dengan peraturan gubernur/bupati/walikota yang mengacu pada pedoman umum sistem Akuntansi Pemerintah.</li> <li>Pedoman Umum Sistem Akuntansi Pemerintah yang dimaksud pada ayat (2) dan ayat (3) diatur dengan Peraturan Menteri Keuangan setelah berkoordinasi dengan Menteri Dalam Negeri.</li> </ol>"},{"location":"Accounting/Akuntansi%20Sektor%20Publik/peraturan/01.%20PP%2071%20TAHUN%202010%20TENTANG%20STANDAR%20AKUNTANSI%20PEMERINTAHAN/#pasal-vii","title":"Pasal VII","text":"<ol> <li>Penerapan akuntansi Berbasis Akrual sebagaimana yang dimaksud dalam Pasal 4 Ayat (1) dapat dilaksanakan secara bertahap dari penerapan SAP berbasis kas menjadi SAP berbasis Akrual.</li> <li>Ketentuan lebih lanjut mengenai penerapan SAP Berbasis Akrual secara bertahap sebagaimana yang dimaksud pada Ayat(1) pada pemerintah pusat diatur dengan Peraturan Menteri Keuangan.</li> <li>Ketentuan lebih lanjut mengenai penerapan SAP Berbasis Akrual secara bertahap sebagaimana yang dimaksud pada Ayat(1) pada pemerintah daerah diatur dengan Peraturan Menteri Dalam Negeri.</li> </ol>"},{"location":"Accounting/Akuntansi%20Sektor%20Publik/peraturan/01.%20PP%2071%20TAHUN%202010%20TENTANG%20STANDAR%20AKUNTANSI%20PEMERINTAHAN/#pasal-viii","title":"Pasal VIII","text":"<ol> <li>SAP Berbasis Kas Menuju Akrual sebagaimana dimaksud Pasal 7 dinyatakan dalam bentuk PSAP.</li> <li>SAP Berbasis Kas Menuju Akrual sebagaimana dimaksud pada Ayat (1) dilengkap dengan Kerangkan Konseptual Akuntansi Pemerintah.</li> <li>PSAP sebagaimana yang dimaksud pada Ayat (1) dan Kerangkan Konseptual Akuntansi Pemerintah yang dimaksud pada Ayat (2) adalah sebagaimana tercantum dalam Lampiran II yang tidak terpisahkan dari Peraturan Pemerintah ini.</li> </ol>"},{"location":"Accounting/Akuntansi%20Sektor%20Publik/peraturan/01.%20PP%2071%20TAHUN%202010%20TENTANG%20STANDAR%20AKUNTANSI%20PEMERINTAHAN/#bab-iii-ketentuan-penutup","title":"BAB III Ketentuan Penutup","text":""},{"location":"Accounting/Akuntansi%20Sektor%20Publik/peraturan/01.%20PP%2071%20TAHUN%202010%20TENTANG%20STANDAR%20AKUNTANSI%20PEMERINTAHAN/#pasal-ix","title":"Pasal IX","text":"<p>Pada saat Peraturan Pemerintah ini mulai berlaku:</p> <ol> <li> <p>Peraturan Pemerintah Nomor 24 Tahun 2005 tentang Standar Akuntansi Pemerintahan (Lembaran Negara Republik Indonesia Tahun 2005 Nomor 49, Tambahan Lembaran Negara Republik Indonesia Nomor 4503) dicabut dan dinyatakan tidak berlaku; dan </p> </li> <li> <p>Peraturan perundang-undangan yang mengatur mengenai penyelenggaraan akuntansi pemerintahan sepanjang belum diubah dan tidak bertentangan dengan Peraturan Pemerintah ini, dinyatakan tetap berlaku.</p> </li> </ol>"},{"location":"Accounting/Akuntansi%20Sektor%20Publik/peraturan/01.%20PP%2071%20TAHUN%202010%20TENTANG%20STANDAR%20AKUNTANSI%20PEMERINTAHAN/#pasal-x","title":"Pasal X","text":"<p>Peraturan Pemerintah ini mulai berlaku pada tanggal diundangkan.</p>"},{"location":"Accounting/Akuntansi%20Sektor%20Publik/peraturan/02.%20Kerangka%20Konseptual%20Akuntansi%20Pemerintah/","title":"Kerangka Konseptual Akuntansi Pemerintah","text":""},{"location":"Accounting/PMK/01.%20PMK-188-2017/","title":"Rangkuman PMK Nomor 188 Tahun 2017 Tentang Tatacara Penyaluran Dana SP2D Melalui Sistem Perbendaharaan dan Anggaran Negara","text":"<p>Catatan dibawah ini dalam bentuk rangkuman sehingga setiap kalimat tidak sama persis dengan sumber resmi PMK</p> <p>Sumber : PMK Nomor 188 Tahun 2017 Tentang Tatacara Penyaluran Dana SP2D Melalui Sistem Perbendaharaan dan Anggaran Negara</p> <p>Status : Berlaku</p> Rangkuman <p>Not Provided yet</p> Keterkaitan Undang-undang dan peraturan <p>Undang-Undang Nomor 17 Tahun 2003 tentang Keuangan Negara dan Undang-Undang Nomor 1 Tahun 2004 tentang Perbendaharaan Negara yang bertugas menyusun SAP</p>"},{"location":"Accounting/PMK/01.%20PMK-188-2017/#bab-1","title":"BAB 1","text":""},{"location":"Accounting/PMK/01.%20PMK-188-2017/#pasal-1-apa-itu-span","title":"Pasal 1 (Apa itu SPAN)","text":"<p>Sistem Perbendaharaan &amp; Anggaran Negara adalah sistem yang meng-integrasikan proses \"Pengelolaan Anggaran\". Pada sistem tersebut setidaknya terdapat fitur yang mengimplementasi proses.</p> <ol> <li>Penyusunan Anggaran</li> <li>Manajemen Dokumen Anggaran</li> <li>Manajemen Supllier</li> <li>Manajemen komitmen pengadaan barang &amp; jasa</li> <li>Manajemen penerimaan</li> <li>Manajemen pengeluaran/pembiayaan</li> <li>Manajemen kas</li> <li>Akuntansi dan Pelaporan Keuangan</li> </ol>"},{"location":"Accounting/PMK/01.%20PMK-188-2017/#pasal-3-bank-operasional","title":"Pasal 3 (Bank Operasional)","text":"<p>Bank yang ditunjuk oleh Kementerian Keuangan selaku Bendahara Umum Negara atau pejabat yang diberikan kuasa untuk menjadi Mitra Direktorat Jendra Perbendaharaan atau Kantor Pelayanan Perbendaharaan Negara</p>"},{"location":"Accounting/PMK/01.%20PMK-188-2017/#pasal-4-bank-penyalur-gaji","title":"Pasal 4 (Bank Penyalur Gaji)","text":"<p>Disingkat BPG, bank yang ditunjuk untuk menyalurkan dana Anggaran Pendapatan dan Belanja Negara untuk pengeluaran Gaji</p>"},{"location":"Accounting/PMK/01.%20PMK-188-2017/#pasal-6-kuasa-bendahara-umum-negara","title":"Pasal 6 (Kuasa Bendahara Umum Negara)","text":"<p>Direktorat Jendral Perbendaharaan Negara adalah Kuasa BUN</p>"},{"location":"Accounting/PMK/01.%20PMK-188-2017/#pasal-7-kppn","title":"Pasal 7 (KPPN)","text":"<p>Kantor Pelayanan Perbendaharan Negara yang disingkat menjadi KPPN adalan instansi vertikal dibawah dan bertanggungjawab langsung kepada kepala kantor wilayah Direktorat Jendral Perbendaharaan.</p> <p>Rekenin-rekening</p>"},{"location":"Accounting/PMK/01.%20PMK-188-2017/#pasal-12-rekening-pengeluaran-kuasan-bun-pusat-span","title":"Pasal 12 (Rekening Pengeluaran Kuasan BUN Pusat SPAN)","text":"<p>Selanjutnya disingkat menjadi RPKBUNP SPAN, adalah rekening yang dibuka oleh Kuasa BUN Pusat untuk menampung dana yang digunakan untuk menyalurkan dana SP2D Non gaji bulanan yang ditetapkan oleh KPPN</p>"},{"location":"Accounting/PMK/01.%20PMK-188-2017/#pasal-13-rekening-pengeluaran-kuasan-bun-pusat-gajib","title":"Pasal 13 (Rekening Pengeluaran Kuasan BUN Pusat Gajib)","text":"<p>Rekening yang dibuka oleh kuasa BUN Pusat atau pejabat yang diberi kuasa pada Bank Operasional atau Bank Penyalur Gaji untuk menyimpan dana yang akan digunakan untuk menyalurkan SP2D gaji bulanan yang diterbitkan oleh KPPN</p>"},{"location":"Accounting/PMK/01.%20PMK-188-2017/#pasal-14-rekening-retur-bank-operasinal-span","title":"Pasal 14 (Rekening Retur Bank Operasinal SPAN)","text":"<p>Selanjutnya disingkat menjadi RRSPAN, adalah rekening yang digunakan untuk menampung dana SP2D Non Gaji bulanan yang diretur oleh Bank Penerima dan telah diterima oleh Bank Operasional</p>"},{"location":"Accounting/PMK/01.%20PMK-188-2017/#pasal-15-rekening-retur-bank-penyalur-gaji","title":"Pasal 15 (Rekening Retur Bank Penyalur Gaji)","text":"<p>Selanjutnya disingkat menjadi RR Gaji, adalah rekening yang digunakan untuk menampung dana SP2D Gaji yang diretur oleh Bank Penerima dan telah diterima oleh Bank Operesaional atau Bank Penyalur Gaji.</p> <p>Dokumen dokumen</p>"},{"location":"Accounting/PMK/01.%20PMK-188-2017/#pasal-16-spm","title":"Pasal 16 (SPM)","text":"<p>Surat Perintah Membayar, adalah surat yang diterbitkan oleh Pengguna Anggaran atau Kuasan Penggunakan Anggaran untuk mencairkan dana yang bersumber dari DIPA/ dokumen lain yang disamakan.</p>"},{"location":"Accounting/PMK/01.%20PMK-188-2017/#pasal-17-sp2d","title":"Pasal 17 (SP2D)","text":"<p>Dokumen yang diterbitkan oleh KPPN selaku kuasan BUN untuk pelaksanaan pengluaran atas beban APBN berdasarkan SPM</p>"},{"location":"Accounting/PMK/01.%20PMK-188-2017/#pasal-18-sp2d-r","title":"Pasal 18 (SP2D R)","text":"<p>Surat Perintah Pencairan Dana Retur, surat yang diterbitkan oleh KPPN selaku kuasa BUN untuk pelaksanaan pembayaran dana SP2D Retur atas beban rekening atau rekening kas umum negara.</p> <p>Istilah2</p>"},{"location":"Accounting/PMK/01.%20PMK-188-2017/#pasal-19-paygroup","title":"Pasal 19 (PayGroup)","text":"<p>Kelompok berbayar adalah kodefikasi tipe-tipe rekening sebgai rekening sumber yang digunakan untuk melakukan proses pembayaran atas tagihan yang sesuai dengan kriteria tertentu dalam SPM.</p>"},{"location":"Accounting/PMK/01.%20PMK-188-2017/#pasal-20-dropping","title":"Pasal 20 (Dropping)","text":"<p>Pengisian saldo rekening yang dilkaukan secara berkala atau waktu tertentu sesuai kebutuhan dana.</p>"},{"location":"Accounting/SKB/01.%20Pertama/","title":"Tryout Seleksi Kemampuan Bidang","text":"<ol> <li> <p>Apa itu activity ratio ?</p> <p>jawaban</p> <p>Activity ratio mengukur efesiensi sebuah organisasi dalam menggunakan dan mengaatur sumber daya yang dimiliki untuk mendapatkan hasil yang maksimum. Beberapa tipe dari activity ratio menggambarkan bagaimana kemampuan sebuah organisasi mengubah beberapa akun pada neraca seperti modal atau aset kedalam aset lancar. source</p> </li> <li> <p>Setiap orang yang melakukan percobaan untuk melakukan tindak pidana menyalahgunakan atau menggunakan tanpa hak NPWP atau pengukuhan PKP akan dikenakan sanksi pidana berupa pidana penjara ....</p> <p>jawaban</p> <p>Paling singkat 6 bulan dan paling lama 2 tahun, terdapat pada UU No 28 Tahun 2007 Ketentuan Umum dan Tata Cara Perpajakan, pada Pasal 39 ayat (3)</p> </li> <li> <p>Aktivitas investasi meliputi </p> <p>jawaban</p> <p>Aktivitas investasi meliputi modal kerja, harta keuangan, harta tetap, dan harta tidak berwujud.</p> </li> <li> <p>Alasan pemerintah melakukan larangan impor untuk produk-produk tertentu ...</p> <p>jawaban</p> <p>Alasan utama pemerintah melakukan kebijakan pelarangan impor adalah untuk mencegah masuknya barang dari luar negeri atau dengan kata lain untuk melindungi industri di dalam yang pada akhirnya bertujuan untuk menjaga kestabilan perekonomian nasional.</p> </li> <li> <p>Alat yang digunakan untuk mencatat transaksi-transaksi keuangan bersangkutan dengan, harta/aset, modal/ekuitas, kewajiban, pendapatan dan beban perusahaan adalah ?</p> <p>jawaban</p> <p>Akun atau rekening adalah alat yang digunakan untuk mencatat transaksi-transaksi keuangan bersangkutan dengan harta/aset, kewajiban, ekuitas/modal, pendapatan, dan beban perusahaan. Akun ini digunakan untuk menampung seluruh transaksi yang akan memengaruhi kondisi keuangan perusahaan.</p> </li> <li> <p>Anggaran merupakan alat perencanaan yang harus memperhatikan hubungan antara anggaran yang satu dengan yang lain. Aspek lain yang penting dalam perencanaan adalah ?</p> <p>jawaban</p> <p>Sumber. Ada 4 fungsi dari anggaran, diantaranya ;</p> <ol> <li>Pengendalian, anggaran berfungsi sebagai instrumen yang digunakan untuk mengendalikan pemborosan-pemborosan pengeluaran. Dengan anggaran, setiap entitas menyaajikan secara detail rencana tentang semua pemasukan dan pengeluaran yang nantinya akan dipertanggungjawabkan kepada yang memberikan tanggung jawab.</li> <li>Alat koordinasi dan Komunikasi</li> <li>Penilaian, anggaran adalah wujud komitmen dari bagian eksekutif selaku pengguna anggaran kepada yang memberikan anggaran. Kinerja pihak eksekutif diukur berdasarkan pencapaian target anggaran dan efesiensi pelaksanaan anggaran.</li> <li>Motivasi, anggaran sektor publik mendorong eksekutif untuk berkerja secara ekonomis, efektif dan efisien dalam mencapai target organisasi yang telah ditetapkan.</li> </ol> <p>Sehingga aspek yang penting dalam penganggaran adalah penggunaan dana yang seefisien mungking.</p> </li> <li> <p>Apa saja yang termasuk dari metode penyusutan ?</p> <p>jawaban</p> <p>sumber</p> <ol> <li>Metode Rata-Rata<ol> <li>Metode Garis Lurus (Straight Line Method) Contoh</li> <li>Metode unit aktivitas (Unit of Activity Method) Contoh</li> </ol> </li> <li>Metode menurun<ol> <li>Metode jumlah angka tahun (Sum of The Year Digit) Contoh</li> <li>Metode saldo menurun (Declining Balance) Contoh</li> <li>Metode saldo menurun ganda (Double Declining Balance)Contoh</li> </ol> </li> </ol> </li> <li> <p>Apa yang dimaksud dengan DIPA (Daftar Isian Pelaksanaan Anggaran) menurut pasal 1 PMK nomor 190 tahun 2012 ?</p> <p>Jawban</p> <ul> <li>PMK Nomor 190 tahun 2012 Tata Cara Pembayaran Dalam Rangka Pelaksanaan Anggaran Pendapatan Dan Belanja Negara Tidak Berlaku</li> <li>PMK Nomor 210 tahun 2022 Tata Cara Pembayaran Dalam Rangka Pelaksanaan Anggaran Pendapatan Dan Belanja Negara Tidak Berlaku</li> <li>PMK Nomor 62 tahun 2023 Perencanaan Anggaran, Pelaksanaan Anggaran, serta Akuntansi dan Pelaporan Keuangan Berlaku</li> </ul> <p>Warning</p> <ul> <li>PMK Nomor 190 tahun 2012 dicabut dengan PMK Nomor 210 tahun 2022</li> <li>PMK Nomor 210 tahun 2022 dicabut dengan PMK Nomor 62 tahun 2023</li> </ul> <p>Pembahasan tentang DIPA pada PMK nomor 62 tahun 2023 berubah lokasi, yang sebelumnya berada pada pasal 1 Ayat (2) di PMK no 190 tahun 2012 dan PMK no 210 tahun 2022 menjadi Pasal 1 Ayat (74) pada PMK nomor 62 tahun 2023 tentang Perancanaan Anggaran, Pelaksanaan Anggaran, serta Akuntansi dan Pelaporan Keuangan.</p> <p>Sebagaimana yang dimaksud pada PMK nomor 190 tahun 2012 pasal 1 ayat (2), DIPA adalah Dokumen Pelaksanaan Anggaran yang digunakan sebagai acuan dalam Penggunaan Anggaran dalam melaksanakan kegiatan Pemerintahan sebagai pelaksanaan APBN</p> </li> <li> <p>Apa yang dimaksud dengan perbendaharaan negara berdasarkan UU Nomor 1 tahun 2004 tentang Pebendaharaan Negara </p> <p>jawaban</p> <ul> <li>Undang Undang Nomor 1 tahun 2004 tentang Perbendaharaan Negara</li> </ul> <p>Berdasarkann Undang Undang Nomor 1 tahun 2004 tentang Perbendaharaan Negara pada pasal 1 Ayat (1), bahwa Perbendaharaan Negara adalah Pengelolaan dan Pertanggungjawaban keuangan negara, termasuk kekayaan, investasi yang dipisahkan, yang ditetapkan dalam APBN dan APBD</p> </li> <li> <p>Apabilan dalam jangka waktu yang telah ditentukan dalam UU perpajakan yang berlaku ternyata telah lewat dari dan Dirjen Pajak tidak memberikan keputusan maka pemohon keberatan Wajib Pajak dianggap ...</p> <p>jawaban</p> <p>Dikabulkan, sebagimana yang telah tercantum pada pasal 17 Nomor 5 Peraturan Menteri Keuangan tentang Perubahan Atas Peraturan Menteri Keuangan Nomor 9/PMK.03/2013 Tentang Tata cara Pengajuan dan Penyelesaian Keberatan mengatakan bahwa </p> <p>Apabila jangka waktu sebagaimana dimaksud pada ayat (1) atau ayat (4a) telah terlampaui dan Direktur Jenderal Pajak tidak memberi keputusan atas keberatan, keberatan yang diajukan oleh Wajib Pajak dianggap dikabulkan dan Direktur Jenderal Pajak menerbitkan Surat Keputusan Keberatan sesuai dengan pengajuan keberatan Wajib Pajak dalam jangka waktu paling lama 1 (satu) bulan sejak jangka waktu 12 (dua belas) bulan tersebut berakhir.</p> </li> <li> <p>Apabilan RAPBN yang disusun oleh Presiden Republik Indondesia tidak disetujui oleh DPR maka,</p> <p>Jawaban</p> <p>Menggunakan APBN tahun Sebelumnya, terncantum pada UUD 1945 Bab VIII Tentang Keuangan, pasal 23 ayat 1</p> </li> <li> <p>Aspek-aspek lingkungan yang penting untuk dipahami oleh manajer keuangan...</p> <p>jawaban</p> <p>Lingkungan Keuangan Aspek lingkungan yang penting dipahami para manajer keuangan adalah sektor keuangan di bidang perekonomian, yang terdiri dari pasar keuangan (financial markets), lembaga keuangan (financial institutions) dan instrumen keuangan (financial instruments).</p> </li> <li> <p>Pada Peraturan Pemerintah No 45 tahun 2013, BAB II menjelaskan tentang ...</p> <p>jawaban</p> <p>Pada PP No 45 Tahun 2013 berisikan sebagai berikut yang dikelompokan kedalam BAB; </p> <ol> <li>BAB 1 menejelaskan ketentuan Umum, </li> <li>BAB 2 menjelaskan tentang Pejabat Perbendaharaan Negara</li> <li>BAB 3, Daftar Isian Pelaksanaan Anggaran.</li> <li>BAB 4, Pelaksanaan Anggaran Pendapatan.</li> <li>Pelaksanaan Anggaran Belanja</li> </ol> <p>Warning</p> <ul> <li>PP Nomor 45 tahun 2013 mengubah sebagian pasal dengan PP Nomor 50 tahun 2018</li> </ul> <ul> <li>PP NOMOR 45 TAHUN 2013 TENTANG TATACARA PELAKSANAAN ANGGARAN PENDAPATAN DAN BELANJA NEGARA</li> <li>PP NOMOR 50 TAHUN 2018 PERUBAHAN ATAS PERATURAN PEMERINTAH NOMOR 45 TAHUN 2013 TENTANG TATACARA PELAKSANAAN ANGGARAN PENDAPATAN DAN BELANJA NEGARA</li> </ul> </li> <li> <p>BAB II dalam UU No 15 tahun 2004 tentang pemeriksaan keuangan terkait ....</p> <p>jawaban</p> <p>Ruang Lingkup Pemeriksaan</p> <p>Sebagaimana yang tercantum dalam Undang Undang Nomor 15 Tahun 2004 tentang Pemeriksaan Keuangan Pasal 2 menerangkan tentang Ruang Lingkup Pemeriksaan. Dibawah adalah catatan ringkas tentang apa saja yang ada didalam Bab 2</p> <ol> <li>Pemeriksaan meliputi pemeriksaan keuangan negara &amp; pemeriksaan atas tanggung jawab keuangan negara.</li> <li>Badan Pemeriksaan Keuangan yang melakukan pemeriksaan keuangan negara dan pemeriksaan tanggung jawab keuangan negara.</li> <li>Pemeriksaan dilaksanakan oleh Akuntan Publik dan melapor kepada BPK</li> <li>Pemeriksaan terdiri atas, Pemeriksaan Laporan Keuangan, Pemeriksaan Kinerja, dan Pemeriksaan dengan tunjuan tertentu<ul> <li>Pemeriksaan laporan keuangan yang diperiksaa adalaha laporan keuangan</li> <li>Pemeriksaan Kineerja adalah pemeriksaan atas pengelolaan yang terdiri atas aspek pemeriksaan Efektifitas, Efisiensi, dan Ekonomi</li> <li>Pemeriksaan dengan Tujuan Tertanteu, diluar dari yg diatas.</li> </ul> </li> </ol> </li> <li> <p>Bab VII dalam PMK no 190 Tahun 2012 membahas terkait ...</p> <p>Jawaban</p> <p>Tatacara Pembayaran Dalam Rangka Pelaksanaan Anggaran Pendapatan Dan Belanja Negara</p> <ul> <li>PMK Nomor 190 tahun 2012 Tata Cara Pembayaran Dalam Rangka Pelaksanaan Anggaran Pendapatan Dan Belanja Negara Tidak Berlaku</li> <li>PMK Nomor 210 tahun 2022 Tata Cara Pembayaran Dalam Rangka Pelaksanaan Anggaran Pendapatan Dan Belanja Negara Tidak Berlaku</li> <li>PMK Nomor 62 tahun 2023 Perencanaan Anggaran, Pelaksanaan Anggaran, serta Akuntansi dan Pelaporan Keuangan Berlaku</li> </ul> </li> <li> <p>Undang Undang Nomor 1 Tahun 2004 tentang perbendaharaan Negara pada BAB X (10) membahas tentang....</p> <p>Jawaban</p> <p>Pada BAB XI membahas tentang Pengendalian Intern Pemerintah</p> <ul> <li>Undang Undang Nomor 1 tahun 2004 tentang Perbendaharaan Negara</li> </ul> </li> <li> <p>Bab X dalam Peraturan Pemerintah Nomor 45 tahun 2013 Tentang Tatacara pelaksanaan APBN memuat rincian tentang</p> <p>Jawaban</p> <p>Berisikan tentang Sistem Informasi Keuangan Negara</p> <p>Sistem informasi dimaksud pada Bab X dan pasal tersebut setidaknya mencangup</p> <ol> <li>Nama</li> <li>Nomor Pokok Wajib Pajak</li> <li>Rekening Bank</li> <li> <p>Alamat</p> </li> <li> <p>Peraturan Pemerintah Nomor 45 tahun 2013 tentang Tatacara Pelaksanaan Anggarang Pendapatan dan Belanja Negara</p> </li> </ol> </li> <li> <p>Badan hukum yang dapat memiliki harta kekayaan/menandatangani perjanjian, melakukan utang piutang, dan hak serta kewajiban seperti orang pribadi disebut ...</p> <p>Jawaban</p> <p>Perusahaan Persekutuan</p> </li> <li> <p>Badan Pengawasan Keuangan dan Pembangunan bertanggung jawab kepada ...</p> <p>Jawaban</p> <p>Presiden. Lihat catatan lengkapnya disini</p> </li> <li> <p>Bank Indonesia dengan otoritas moneter yang dimilikinya berusaha menjaga stabilitas nilai rupiah, terutama yang menyangkut daya beli masyarakat. Jika harga-harga kebutuhan mengalami kenaikan terus-menerus, maka pemerintah dapat menempuh kebijakan moneter dengan cara....</p> <p>Jawaban</p> <p>Tujuan utama kebijakan moneter yang dilaksanakan oleh Bank Indonesia adalah untuk mencapai stabilitas nilai Rupiah, memelihara stabilitas sistem pembayaran, serta turut menjaga stabilitas sistem keuangan guna mendukung pertumbuhan ekonomi yang berkelanjutan sebagaimana tercantum dalam pada pasal 7 UU No.23 Tahun 1999 tentang Bank Indonesia sebagaimana telah beberapa kali diubah terakhir dengan UU No. 4 Tahun 2023 tentang Pengembangan dan Penguatan Sektor Keuangan. Dimana yang dimaksud dengan \"stabilitas nilai Rupiah\" adalah kestabilan harga barang dan jasa serta nilai tukar Rupiah.</p> <p>Terkait jawaban, kebijkana moneter yang dapat diambil oleh Bank Indonesia adalah dengan cara mengendalikan uang beredar atau suku bunga. UU Nomor 23 tahun 1999 tentang Bank Indonesia pada Bab 1 Pasal 1 nomor 10</p> </li> <li> <p>Bank Indonesia wajib menyampaikan laporan keuangan tahunan kepada ... untuk dilakukan pemeriksaan</p> <p>Jawaban</p> <p>Badan Pemeriksaan Keuangan lihat ke Catatan Bank Indonesia</p> </li> <li> <p>Bank Syarah wajib mengumumkan neraca laporan keuanga kepada publik dalam waktu dan bentuk yang telah ditetapkan oleh ...</p> <p>Jawaban</p> <p>Bank Indonesia</p> </li> <li> <p>Bank yang ditunjuk oleh kementrian keuangan selaku Bendahara Umum Negara atau pejabat yang berkuasa untuk melakukan pemindahbukuan sejumlah uang dari Kas Negara ke rekening sebagaimana yang tercantum dalam Surat Perintah Pencairan Dana ...</p> <p>Jawaban</p> <p>Adalah Bank Operasional. Sebagaimana yang tercantum dalam Peratruan Mentrik Keuangan, 188/PMK.5/2017 tentang Tatacara Penyaluran Dana Surat Perintah Pencairan Dana Melalui Sistem Perbendaharaan dan Anggaran Negara{target:\"blank\"}. pada Bab 1 ketentuan umum pasal 1 pada nomor 3 menyebutkan . Bank Operasional adalah Bank Umum yang ditunjuk oleh Menteri Keuangan selaku Bendahara Umum Negara atau Pejabat yang diberi kuasa untuk menjadi mitra Direktorat Perbendaharaan Negara atau Kantor Pelayanan Perbendaharaan Negara ._</p> </li> </ol> <p>Terakhir di nomor 38, kita lanjut ke test apbn terkahir saja</p>"},{"location":"Accounting/SKB/02.%20Kedua/","title":"Try Out SKB Keuangan APBN #1","text":"<ol> <li> <p>Menurut Undang-Undang Nomor 20 Tahun 2023 tentang Aparatur Sipil Negara, pemberhentian ASN dapat dilakukan dalam beberapa kondisi, salah satunya adalah terkait pelanggaran kode etik atau disiplin ASN. Bagaimana mekanisme pemberhentian ASN atas pelanggaran kode etik atau disiplin ASN yang diatur dalam UU ini ?</p> <p>jawaban</p> <p>Kita dapat melihat pada UU Nomor 20 Tahun 2023 ini tidak dijelaskan secara tertulis terkait mekanisme pemberhentian ASN karena pelanggaran kode etik atau disiplin ASN. Namun pada Pasal 62 Ayat 3 Huruf C pada Bab yang membahas Organisasi dalam lingkup \"Organisasi Profesi ASN\", salah satu fungsi organsiasi profesi adalah pemberikan rekomendasi kepada Majelis Kode Etik Instansi Pemerintah terhadap pelanggaran kode etik profesi dan kode prilaku profesi.</p> <p>Dan pada pasal 73 \"Pada saat Undang-Undang ini mulai berlaku, ketentuan peraturan perundang-undangan mengenai kode etik dan penyelesaian pelanggaran kode etik bagi jabatan fungsional tertentu tetap berlaku sepanjang tidak bertentangan dengan Undang-Undang ini\".</p> <p>Maka secara tersirat pemeberhentian ASN harus mengikuti prosedur yaitu dengan cara pemeriksaan dan putusan dari majelis kode etik</p> </li> <li> <p>Pasal 55 Undang-Undang Nomor 20 Tahun 2023 tentang ASN mengatur tentang Batas Usia bagi pejabat fungsional di bidang keuangan negara. Berdasarkan ketentuan tersebut, jabatan pranata keuangan pada jenjang Ahli Madya memiliki batas pensiun..</p> <p>Jawaban</p> <p>Untuk jabatan Ahli Madya adalah 60 Tahun. Untuk lengkapnya dapat melihat ke catatan</p> </li> <li> <p>Menurut UU No. 17 Tahun 2003, Menteri Keuangan bertanggung jawab dalam pelaksanaan kebijakan fiskal. Dalam menjalankan fungsi ini, apa tindakan yang dapat dilakukan oleh Menteri Keuangan untuk mengurangi dampak negatif dari inflasi yang tinggi?</p> <p>Jawaban</p> <p>Ketika kondisi negara sedang mengalami inflasi yang tinggi pemerintah dapat menggunakan kebijakan fiskal yang konstruktif. Yaitu dapat dengan cara menurunkan permintaan secara masif oleh negara dengan cara menurunkan belanja negara. Salah satu kebijakan fiska konstruktif adalah dengan cara menaikan beban pajak, namun cara ini sangat tidak efesien dan akan mendapat penolakan yang luas. Untuk catatan lebih lanjut mengenai kebijak fiskal dapat dilihat di catatan</p> </li> <li> <p>Dalam UU Nomor 17 Tahun 2003 tentang Keuangan Negara, ada ketentuan mengenai batas pinjaman negara. Mengapa batasan pinjaman ini penting untuk diterapkan dalam pengelolaan keuangan negara ...</p> <p>Jawaban</p> <p>Untuk mengurangi ketergantungan terhadap negara lain</p> <p>Terdapat pada penjelasan pada pasal 12 dan pasal 17 saat membahanas APBN dan APBD. Pada ayat ke 3 pada pasal tersebut mengatalan \"Dalam hal anggaran diperkirakan defisit, ditetapkan sumber-sumber pembiayaan untuk menutupi defisit tersebut dalam Undang-Undang tentang APBN\" Lalu pada bagian penjelasan pada pasal tersebut dijelaskan</p> <p>\"Defisit anggaran dibatasi maksimal 3% dari Produk Domestik Bruto. Jumlah pinjaman dibatasi maksimal 60% dari Produk Domestik Bruto\"</p> <p>If you want to learn about Gross Domestic Product will be on catatan ASAP</p> </li> <li> <p>Apa yang menjadi dasar penyusunan RAPBN menurut UU Nomor 17 Tahun 2003 ...</p> <p>Jawaban</p> <p>Kebijakan Umum Anggaran</p> <p>Pada dasar hukum tersebut tidak dijelaskan secara implisit KUA. Namun dari pasal 12 ayat yang membahas tentang APBN menyebutkan bahwa <code>RAPBN disusun berdasarkan rencana kerja pemerintah dalam rangka mewujudkan tercapainya tujuan bernegara</code>.</p> </li> <li> <p>Dalam UU No.17 Tahun 2003 tetang Perbendaharaan Negara, bagaimana prinsip pengelolaan keuangan negara yang harus diterapkan pemerintah ...</p> <p>Jawaban</p> <p>Pada pasal 3 dijelaskan, \"Keuangan negara dikelola dengan <code>tertib</code>, <code>taata pada peraturan undang-undang</code>, <code>efesiensi</code>, <code>ekonomis</code>, <code>transparansi</code> dan <code>dapat dipertanggung jawabakan</code>(akuntanbilitas)`\"</p> </li> <li> <p>Dalam hal apa suatu kementrian atau lembaga dapat memperoleh alokasi dana tambahan diluar APBN yang telah ditetapkan menurut UU No 1 Tahun 2004.</p> <p>Jawaban</p> <p>Pada <code>Bab VII</code> pada Pelaksanaan APBN dan APBD pasal 27 ayat 4 menyebutkan , \"Dalam keadaan darurat, pemerintah dapat melakukan pengeluaran yang belum tersedia anggarannya, yang selanjutnya diusulkan dalam rancangan perubahan APBN dan/atau disampaikan pada Laporan Realisasi Anggaran.</p> </li> <li> <p>Apa konsekuensi hukum bagi pejabat yang lalai dalam mengelola keuangan negara berdasarkan ketentuan UU No 1 tahun 2004...</p> <p>Jawaban</p> <p>Berdasarkan UU No 1 Tahun 2004 tentang Perbendaharaan Negara, pada bab XI tentang Penyelesaian Kerguian Negara/Daerah pada pasal 59 ayat 2 kurang lebih berbunyi \"Bendahara atau pegawai negeri bukan bendahara karena perbuatannya yang melanggar hukum dan/atau lalai terhadap kewajiban yang secara langsung merugikan keuanga negara, wajib mengganti rugi\"</p> </li> <li> <p>UU Nomor 1 Tahun 2004 menetapkan bahwa penerimaan negara harus disetor ke rekening Kas Umum Negara, apa tujuannya ?</p> <p>Jawaban</p> <p>Memudahkan pelacakan penerimaan dan pengeluaran negara.</p> <p>Pada Bab III Pelaksanaan Pendapatan dan Belanja Negara / Daerah pada pasal 12 ayat 2 mengatakan Semua penerimaan dan pengaluaran negara dilakukan melalui rekening Kas Umum Negara. Lihat detail Pasal 7 UU No 1 tahun 2004 Perbendaharaan negara</p> </li> <li> <p>Siapakah </p> </li> </ol>"},{"location":"Accounting/SKB/99.%20Rangkuman%20Dasar%20Hukum/","title":"99. Rangkuman Dasar Hukum","text":""},{"location":"Accounting/SKB/99.%20Rangkuman%20Dasar%20Hukum/#kumpulan-dasar-hukum","title":"Kumpulan dasar hukum","text":"<p>Hierarki dari tingkat tertinggi lalu kebawah dasar hukum yang berlaku di Indonesia adalah sebagai berikut</p> <ol> <li>Undang Undang Dasar</li> <li>Ketetapan MPR</li> <li>Undang Undang atau Peraturan Pemerintah Pengganti Undang Undang</li> <li>Peraturan Pemerintah</li> <li>Peraturan Presiden</li> <li>Peraturan Daerah Provinsi</li> <li>Peraturan Daerah Kabupaten</li> </ol> Jenis Peraturan Judul Peraturan Nomor Peraturan Status Undang Undang Bank Indonesia UU Nomor 23 Tahun 1999 Tentang Bank Indonesia Berlaku Undang Undang Keuangan Negara UU Nomor 17 Tahun 2003 Tentang Keuangan Negara Berlaku Undang Undang Perbendaharaan Negara UU Nomor 1 Tahun 2004 tentang Perbendaharaan Negara Berlaku Undang Undang Pemeriksaan Pengelolaan dan Tanggung Jawab Keuangan Negara UU Nomor 15 Tahun 2004  Berlaku Undang Undang Aparatur Sipil Negara UU Nomor 20 Tahun 2023 tentang Aparatur Sipil Negara Berlaku Peraturan Pemerintah Tatacara Pelaksanaan Anggaran Pendapatan dan Belanja Negara PP NOMOR 45 TAHUN 2013 TENTANG TATACARA PELAKSANAAN ANGGARAN PENDAPATAN DAN BELANJA NEGARA Berlaku Peraturan Pemerintah Perubahan atas PP Nomor 45 Tahun 2013 Tetang Tatacara Pelaksanaan Anggaran Pendapatan dan Belanja Negara PP NOMOR 50 TAHUN 2018 PERUBAHAN ATAS PERATURAN PEMERINTAH NOMOR 45 TAHUN 2013 TENTANG TATACARA PELAKSANAAN ANGGARAN PENDAPATAN DAN BELANJA NEGARA Berlaku Peraturan Pemerintah Standar Akuntansi Pemerintah UU Nomor 71 Tahun 2010 Tetangn Standar Akuntansi Pemerintah Berlaku Peraturan menteri Keuangan Perencanaan Anggaran, Pelaksanaan Anggaran, Akuntansi dan Pelaporan Keuangan Peraturan menteri Keuagnan Nomor 62 tahun 2023 Tetang Perencanaan Anggaran, Pelaksanaan Anggaran, Akuntansi dan Pelaporan Keuangan Berlaku Peraturan menteri Keuangan 188/PMK.5/2017 Tatacara Penyaluran Dana Surat Perindah Pencairan Dana Melalui Sistem Perbendaharaan dan Anggaran Negara 188/PMK.5/2017 Tatacara Penyaluran Dana Surat Perindah Pencairan Dana Melalui Sistem Perbendaharaan dan Anggaran Negara Berlaku Dirubah sebagian dengan 158/PMK.05/2022 Peraturan menteri Keuangan 158/PMK.5/2022 Perubahan ke dua atas PMK 188/PMK.05/2022 tentang tacara Penyaluran Dana Surat Perindah Pencairan Dana Melalui Sistem Perbendaharaan dan Anggaran Negara Perubahan ke 2 atas PMK 188/PMK.5/2017 Tatacara Penyaluran Dana Surat Perindah Pencairan Dana Melalui Sistem Perbendaharaan dan Anggaran Negara Berlaku"},{"location":"Accounting/SKB/99.%20Rangkuman%20Dasar%20Hukum/#catantan-penting","title":"Catantan Penting","text":""},{"location":"Accounting/SKB/99.%20Rangkuman%20Dasar%20Hukum/#civitas-perbendaharaan-negara","title":"Civitas Perbendaharaan Negara","text":"Pengguna Anggara (PA) <p>Pejabat pemegang kewenangan penggunaan anggaran kementerian / lembaga negara.</p> <p>PP Nomor 45 Tahun 2013 Tetang Tatacara Pelaksanaan Anggaran Pendapatan dan Belanja Negara, Bab 1, Pasal 1 ayat 17 Kuasa Pengguna Anggaran (KPA) <p>Pejabat yang memperoleh kuasa dari Pengguna Anggaran untuk melaksanakan sebagian kewenagnan dan taggnung jawab penggunaan anggara pada kementerian / lembaga negara yang bersangkutan,</p> <p>PP Nomor 45 tahun 2013 Tetang Tatacara Pelaksanaan Anggaran Pendapatan dan Belanja Negara, Bab 1, Pasal 1, nomor 18 Pejabat Pembuat Komitmen(PPK) <p>Pejabat yang diberikan kewenangan oleh Pengguna Anggaran / Kuasa Pengguna Anggaran untuk mengambil keputusan atau melakukan tindakan yang dapat mengakibatkan pengluaran anggaran belanja negara</p> <p>PP Nomor 45 tahun 2013 Tetang Tatacara Pelaksanaan Anggaran Pendapatan dan Belanja Negara, Bab 1, Pasal 1, nomor 23 Pejabat Penandatanganan Surat Perintah Membayar (PPSPM) <p>Pejabat yang selanjutnya disinkat menjadi PPSPM, adalah pejaba yang diberikan kewenagan oleh Pengguna Anggaran / Kuasa Pengguna Anggaran untuk melakukan pengujian atas permintaan pembayaran dan menerbikan perintah membayar</p>"},{"location":"Accounting/SKB/99.%20Rangkuman%20Dasar%20Hukum/#dasar-susuna-dipa","title":"Dasar susuna DIPA","text":"<p>DIPA disusun menggunakan anggaran berbasis kinerja</p>"},{"location":"Accounting/SKB/99.%20Rangkuman%20Dasar%20Hukum/#isian-dipa","title":"Isian DIPA","text":"<p>Setidaknya Daftar Isian Penggunaan Angaran  mencakup</p> <ol> <li>Sasaran yang hendak dicapai</li> <li>Pagu anggaran yang dialokasikan</li> <li>Fungsi, program, kegiatanm dan keluaran yang diharapkan</li> <li>Jenis belanja</li> <li>Lokasi</li> <li>Rencana penarikan dana</li> <li>Rencana penerimaan dana</li> </ol>"},{"location":"Accounting/SKB/99.%20Rangkuman%20Dasar%20Hukum/#standar-kompentensi-kpa-ppk-dan-ppspm","title":"Standar kompentensi KPA, PPK, dan PPSPM","text":"<p>Melihat perubahan PP Nomor 50 tahun 2018 Tentang Perubahan Atas PP Nomor 45 Tahun 2013 Tetang Tatacara Pelaksanaan Anggaran Pendapatan dan Belanja Negara pada pasal 16 A ditamabahkan bawah ; Menteri keuangan melakukan pembinaan dan pengembangan kompetensi KPA, PPK dan PPSPM. </p>"},{"location":"Accounting/SKB/99.%20Rangkuman%20Dasar%20Hukum/#bagian-anggaran","title":"Bagian anggaran","text":"<p>Bagian anggaran adalah kelompok anggaran menurut nomenklatur kementerian, lembaga negara dan Bendahara Umum Negara (Kementerian Keuangan) dalam menjalankan fungsi belanja pemerintah pusat, transfer daerah , dan pembiayaan.</p> <p>Sumber : Peraturan menteri Keuagnan Nomor 62 tahun 2023 Tetang Perencanaan Anggaran, Pelaksanaan Anggaran, Akuntansi dan Pelaporan Keuagnan Bab 1 Ketentuan Umum, Pasal 1 nomor 6</p>"},{"location":"Accounting/SKB/99.%20Rangkuman%20Dasar%20Hukum/#badan-pengawasan-keuangan-dan-pembangunan","title":"Badan Pengawasan Keuangan dan Pembangunan","text":"<ul> <li>Aparat pengawasan intern yang bertanggungjawab langsung kepada presiden.</li> <li>Memiliki fungsi untuk membantu pemerintah dalam menyelenggarakan urusan pemerintah dibidang pengawasan keuangan negara/daerah dan pembangunan nasional.</li> </ul> <p>Danger</p> <p>Awas, kebalik dengan Badan Pemeriksa Keuangan yang disingkat BPK. Badan tersebut bertanggung jawab langsung kepada DPR</p> <p>Peraturan Presiden Tentang Badan Pengawasan Keuangan dan Pembangunan</p>"},{"location":"Accounting/SKB/99.%20Rangkuman%20Dasar%20Hukum/#bank-indonesia","title":"Bank Indonesia","text":"<p>Terkait dengan pelaporan, ada beberap pasal dalam UU Nomor 23 Tahun 1999 Tentang Bank Indonesia</p> <ol> <li>Bank Indonesia wajib menyampaikan laporan perkembangan pelaksanaan tugas dan wewenangnya kepada Dewan Perwakilan Rakyat setiap 3 bulan. (Bab X \"Akuntabilitas dan Anggaran\" pasal 58 Nomor 3)</li> <li>Badan Pemeriksan Keuagnan dapat melaksanakan pemeriksaan khusus terhadap Bank Indonesia atas permintaan Dewan Perwakilan Rakyat apabila diperlukan (Bab X \"Akuntabilitas dan Anggaran\" pasal 59)</li> <li>Selambat-lambatnya 30 hari setelah tahun anggaran berakhir, Bank Indonesia telah menyelesaikan penyusunan laporan keuangan tahunan Bank Indonesia (Bab X \"Akuntabilitas dan Anggaran\" pasal 61 ayat 1)</li> <li>7 Haru setelahnya, bank Indonesia harus melaporkan laporan keuangan tahunan kepada Badan Pemeriksaan Keuangan (Bab X \"Akuntabilitas dan Anggaran\" pasal 61 ayat 2)</li> <li>Selambat-lambatnya 90 hari BPK wajib menyampaikan hasil laporan pemeriksaan (Bab X \"Akuntabilitas dan Anggaran\" pasal 61 ayat 3)</li> </ol>"},{"location":"Accounting/SKB/99.%20Rangkuman%20Dasar%20Hukum/#pertanggung-jawaban-pelaksanaan-apbn-apbd","title":"Pertanggung Jawaban Pelaksanaan APBN &amp; APBD","text":"<p>Hal yang mengatur tentang pertanggungjawaban APBN dan APBD tercantum pada UU nomor 17 tahun 2003 tentang Keuangan Negara pada BAB VII pada pasal 30 dan 31, serta pasal 32 yang menjelaskan tentang Bentuk dan Isi Laporan</p>"},{"location":"Accounting/SKB/99.%20Rangkuman%20Dasar%20Hukum/#pasal-30-menjelaskan-tentang-peratnggung-jawaban-apbn-dan-31-tentang-pertanggungjawaban-apbd","title":"Pasal 30 menjelaskan tentang peratnggung jawaban APBN dan 31 tentang pertanggungjawaban APBD","text":"<ol> <li> <p>Presiden menyamapaikan Rancangan Undang Undang tentang pertanggung jawaban pelaksanaan APBN kepada DPR yang berisikan laporan keuangan yang telah diperiksa oleh BPK selambat-lambatnya 6 bulan setelah tahun anggaran berakhir.</p> </li> <li> <p>Gubernur/walikota menyamapaikan Rancangan Undang Undang tentang pertanggung jawaban pelaksanaan APBD kepada DPRD yang berisikan laporan keuangan yang telah diperiksa oleh BPK selambat-lambatnya 6 bulan setelah tahun anggaran berakhir.</p> </li> </ol> <p>Laporan yang diberikan diantaranya harus memuat;</p> <ol> <li>Laporan Realisasi APBN / APBD</li> <li>Neraca</li> <li>Laporan Arus Kas</li> <li>Catatan Atas Laporan Keuangan</li> <li>Lampiran laporan keuangan perusahaan negara dan badan lainnya</li> </ol>"},{"location":"Accounting/SKB/99.%20Rangkuman%20Dasar%20Hukum/#bentuk-laporan-keuangan","title":"Bentuk laporan keuangan","text":"<p>Menurut pasal 32 UU Nomor 17 Tahun 2003 tentang Keuangan Negara, menyebutkan bentuk dan isi laporan APBN dan APBD disajikan sesuai dengan Standard Akuntansi Pemerintah</p>"},{"location":"Accounting/SKB/99.%20Rangkuman%20Dasar%20Hukum/#standard-akuntansi-pemerintah","title":"Standard Akuntansi Pemerintah","text":"<p>Standar akuntasi pemerintah yang selanjutnya disebut dengan PSAP diatur dengan Peraturan Pemerintah Nomor 71 Tahun 2010 tentang Standar Akuntasi Pemerintah</p> <ul> <li>SAP Standar Akuntansi Pemerintah</li> <li>PSAP, Pernyataan Standar Akuntansi Pemerintah adalah SAP yang diberikan judul, nomor, dan tanggal</li> <li> <p>IPSAP adalah Interpretasi PSAP adalah penjelasan lebih lanjut tentang PSAP</p> Standar Akuntansi Pemerintah Berbasis Akrual SAP menuju Akrual Mengakui pendapatan, beban, aset, hutang, dan ekuitas Mengakui pendapata, beban, pembiayaan berbasis kas, dan serta mengakui aset, hutang dan ekuitas SAP akrual </li> <li> <p>KSAP adalah Komite Standar Akuntansi Pemerintah, adalah komite negara yang bertugas menyusun SAP</p> </li> <li>IPSAP atau Buletin Teknis yang menjelaskan lebih lanjut tentang PSAP disusun oleh KSAP</li> <li>Dalam membentuk dan membuat IPSAP, rancangan IPSAP disampaikan ke BPK 14 hari sebelum IPSAP diterbitkan</li> <li>Standar Akuntansi Berbasis Akrual yang digunakan di Indonesia</li> <li>PSAP dapat dirubah. Perubahan PSAP diatur oleh Peraturan Mentri Keuagnan setelah mendapatkan pertimbangan dari Badan Pemeriksa Keuangan. Rancangan perubahan tersebut diusulkan oleh KSAP kepada Menteri Keuangan. Lalu selanjutnya Menteri Keuangan menyampaikan usulan tersebut ke Badan Pemeriksa Keuangan.</li> </ul>"},{"location":"Accounting/SKB/99.%20Rangkuman%20Dasar%20Hukum/#sistem-akuntansi-pemerintah","title":"Sistem Akuntansi Pemerintah","text":"<ul> <li>Sistem Akuntansi Pemerintah Pusat diatur oleh peraturan Menteri Keuangan dengan mempertimbangakan pedoman sistem akuntasi pemerintah</li> <li>Sistem Akuntansi Pemerintah Daerah diatur oleh peraturan Gubernur, Walikota atau Bupati  dengan mempertimbangakan pedoman sistem akuntasi pemerintah</li> <li>Pedoman umum standar akuntasi pemerintah diatur oleh Menteri Keuangan setelah koordinasi dengan Menteri Dalam Negeri</li> </ul>"},{"location":"Accounting/SKB/99.%20Rangkuman%20Dasar%20Hukum/#kebijakan-fiskal","title":"Kebijakan fiskal","text":"<p>Catatan</p> <p>Sumber :</p> <ul> <li> <p>https://www.pajak.com/ekonomi/perbedaan-kebijakan-fiskal-ekspansif-dan-kontraktif/#:~:text=Kebijakan%20fiskal%20kontraktif%20diterapkan%20saat,siklus%20ekonomi%20di%20suatu%20negara.</p> </li> <li> <p>https://www.djkn.kemenkeu.go.id/artikel/baca/12611/Pengelolaan-Aset-dan-Kebijakan-Fiskal.html</p> </li> </ul> <p>Kebijakan Fiskal adalah langkah-langkah pemerintah untuk mengelola <code>pengeluaran anggaran</code> dan <code>perpajakan</code> atau penggunaan instrumen fiskal untuk mempengaruhi bekerjanya sistem ekonomi agar memaksimalkan kesejahteraan ekonomi.</p> <p>Instrumen Fiskal terdiri dari <code>perpajakan</code> &amp; <code>pengeluaran pemerintah</code>.</p>"},{"location":"Accounting/SKB/99.%20Rangkuman%20Dasar%20Hukum/#fungsi-kebijakan-fiskal","title":"Fungsi Kebijakan fiskal","text":"<p>Memaksimalkan kesejahteraan ekonomi, adalah tujuan utama dari kebijakan fiskal sesuai yang tertera pada catatan diatas. Secara spesifik tujuan jebihakan fiskal untuk menjaga stabilitas ekonomi, menjaga nilai tukar rupiah yang juga berdampak pada stabilitas harga kebutuhan barang dan jasa. Untuk mencapai hal tersebut ada beberapa jenis kebijakan fiskal yang dapat dilakukan pemerintah sesuai dengan kondisi yang sedang terjadi pada perekonomina;</p>"},{"location":"Accounting/SKB/99.%20Rangkuman%20Dasar%20Hukum/#jenis-kebijakan-fiskal","title":"Jenis Kebijakan Fiskal","text":"<p>Secara garis besar kebihakan fiskal terbagi menjadi 2, kebijakan fiskla <code>ekspansif</code> dan <code>kontraktif</code></p> Kondisi Kebijakan yang diambil Detail Penurunan daya beli masyarakat, pengangguran, dan pelemahan ekonomi <code>Kebijakan Fiskal Ekspansif</code> Meningkatkan belanja negara, mengurai beban pajak Inflasi <code>Kebijakan Fiskal Kontraktif</code> Menurunkan belanja negara, meningkatkan beban pajak"},{"location":"Accounting/Undang-Undang/01.%20UU%20Nomor%2020%20Tahun%202023/","title":"Undang Undang Nomor 20 Tahun 2023 Tetang Aparatur Sipil Negara","text":"<p>Catatan dibawah ini dalam bentuk rangkuman sehingga setiap kalimat tidak sama persis dengan sumber resmi UU</p>"},{"location":"Accounting/Undang-Undang/01.%20UU%20Nomor%2020%20Tahun%202023/#pasal-3-ayat-1","title":"Pasal 3 Ayat 1","text":"<p>ASN (Aparatur Sipil Negara) memegang teguh pada Ideologi Pancasila, Undang-Undang Dasar 1945, Setia kepada Negara Republik Indoenesia dan kepada pemerintahan yang sah</p>"},{"location":"Accounting/Undang-Undang/01.%20UU%20Nomor%2020%20Tahun%202023/#pasal-3-ayat-2-implementasi-nilai-dasar-asn","title":"Pasal 3 Ayat 2 (Implementasi Nilai Dasar ASN)","text":"<p>Ada 7 nilai dasar yang harus dimiliki oleh ASN, kita dapat singkat menjadi B A K H L A K (Ber AKHLAK) 1. Berorientasi pada Pelayanan 2. Akuntabel, bertanggung jawab atas amanah yang diberikan 3. Kompeten, selalu ingin belajar dan mengembangkan diri 4. Harmonis, peduli dan menghargai perbedaan 5. Loyal, mengutamakan kepentingan negara dan berdedikasi tinggi 6. Adaptif, terus berinivasi dan antusias terhadap perubahan 7. Kolaboratif, membangung kerjasama yang sinergis</p>"},{"location":"Accounting/Undang-Undang/01.%20UU%20Nomor%2020%20Tahun%202023/#pasal-8-kedudukan-asn","title":"Pasal 8 (Kedudukan ASN)","text":"<p>ASN berkedudukan sebagai Unsur Aparatur Negara</p>"},{"location":"Accounting/Undang-Undang/01.%20UU%20Nomor%2020%20Tahun%202023/#pasal-9-ayat-1-2-gambaran-besar-prilaku-asn","title":"Pasal 9 Ayat 1 &amp; 2 (Gambaran besar prilaku ASN)","text":"<p>ASN menjalankan kebijakan yang diatur oleh pimpinan instansi pemerintah dan bebas dari pengaruh dan intervensi partai politik atau semua golongan</p>"},{"location":"Accounting/Undang-Undang/01.%20UU%20Nomor%2020%20Tahun%202023/#pasal-10-fungsi-asn","title":"Pasal 10 (Fungsi ASN)","text":"<ul> <li>Pelaksana Kebijakan Pemerintah</li> <li>Pelayan Publik</li> <li>Perekat dan Pemersatu Bangsa</li> </ul>"},{"location":"Accounting/Undang-Undang/01.%20UU%20Nomor%2020%20Tahun%202023/#pasal-11-tugas-asn","title":"Pasal 11 (Tugas ASN)","text":"<ul> <li>Melaksanakan kebijakan Pemerintah</li> <li>Memberikan pelayanan publik</li> <li>Mepererat kesatuan dan persatuan NKRI</li> </ul>"},{"location":"Accounting/Undang-Undang/01.%20UU%20Nomor%2020%20Tahun%202023/#pasal-12-peran","title":"Pasal 12 (Peran)","text":"<p>ASN berperan sebagain perencana, pelaksana dan pengawas tugas umum negara dan pembangunan nasional melalui pelaksanaan kebijakan dan pelayanan publik yang terbebas dari interfensi partai polotik dan bersih dari Korupsi, Kolusi dam Nepotisme.</p>"},{"location":"Accounting/Undang-Undang/01.%20UU%20Nomor%2020%20Tahun%202023/#pasal-13-jabatan-asn-pasal-14-unsur-jabatan-manajerial-pasal-16-syarat-jabatan-manajerial","title":"Pasal 13 (Jabatan ASN), Pasal 14 (Unsur Jabatan Manajerial), Pasal 16 (Syarat jabatan manajerial)","text":"<p>P.13 Jabatan ASN terdiri dari Manajerial dan Non Manajerial</p> <p>Manajerial</p> <p>Pada P.14</p> <ul> <li>Jabatan Tinggi Utama</li> <li>Jabatan Tinggi Madya</li> <li>Jabatan Tinggi Pratama</li> <li>Jabatan Administrator</li> <li>Jabatan Pengawas</li> </ul> <p>P16, jabatan diatas wajib memenuhi kompentensi dan prasyaratan jabatan.</p>"},{"location":"Accounting/Undang-Undang/01.%20UU%20Nomor%2020%20Tahun%202023/#pasal-18-unser-jabatan-non-manajerial","title":"Pasal 18 (Unser Jabatan Non Manajerial)","text":"<ol> <li>Jabatan Fungsional, bertanggung jawab memberikan pelayanan dan melaksanakan pekerjaan sesuai dengan keahlian khusus.</li> <li>Jabatan Pelaksanan, bertanggung jawab memberikan pelayanan dan melaksanakan pekerjaan yang sifatnya rutin dan sederhana.</li> </ol>"},{"location":"Accounting/Undang-Undang/01.%20UU%20Nomor%2020%20Tahun%202023/#pasal-55-masa-pensiun-asn","title":"Pasal 55 (Masa Pensiun ASN)","text":"Jabatan Sub Jabatan Masa pensiun Manajerial <code>Jabatan Tinggi Utama</code>, <code>Jabatan Tinggi Madya</code>, <code>Jabatan Tinggi Pratama</code> 60 Tahun Manajerial <code>Jabatan Administrator</code>, <code>Jabatan Pengawas</code> 58 Tahun Non Manajerial Jabatan Fungsional Sesuai dengan ketentuan peraturan perundang-undangan bagi jabatan fungsional Non Manajerial Pelaksana 58 Tahun"},{"location":"Accounting/Undang-Undang/02.%20UU%20Nomor%201%20Tahun%202004%28Perbendaharaan%20Negara%29%20copy/","title":"Undang Undang Nomor 01 Tahun 2004 Tetang Perbendaharaan Negara","text":"<p>Catatan dibawah ini dalam bentuk rangkuman sehingga setiap kalimat tidak sama persis dengan sumber resmi UU</p>"},{"location":"Accounting/Undang-Undang/02.%20UU%20Nomor%201%20Tahun%202004%28Perbendaharaan%20Negara%29%20copy/#bab-ii-pejabatan-perbendaharaan-negara","title":"Bab II Pejabatan Perbendaharaan Negara","text":"<p>Pasal 7</p>"},{"location":"Accounting/Undang-Undang/02.%20UU%20Nomor%201%20Tahun%202004%28Perbendaharaan%20Negara%29%20copy/#pasal-7","title":"Pasal 7","text":"<ol> <li> <p>Menteri keuangan adalah bendaharan umum negara</p> </li> <li> <p>Menteri keuangan selaku bendaharan umum negara berwenangn untuk</p> <p>a. `Menetapkan`` kebijakan dan pedoman pelaksanaan anggaran</p> <p>b. <code>Mengesahkan</code> dokumen pelaksanaan anggaran</p> <p>c. Melakukan <code>pengedalian</code> pelaksanaan anggaran</p> <p>d. Menetapkan sistem penerimaan dan pengeluaran negara</p> <p>e. Menunjuk bank atau lembaga lainnya dalam rangka pelaksanaan peneriman dan pengeluaran negara</p> <p>f. <code>Mengusahakan</code> dan <code>mengatur</code> dana yang diperlukan dalam pelaksanaan angarran</p> <p>g. <code>Menyimpan</code> uang negara</p> <p>h. <code>Menempatkan</code> uang negara, <code>mengelola</code> dan menatausahakan <code>investasi</code></p> <p>i. Melakukan pembayaran atas permintaan pejabat pengguna anggaran atas pembebakan rekening Kas Umum Negara</p> <p>j. Melakukan <code>Pinjaman</code> dan memberikan jaminan atas nama pemerintah</p> <p>k. <code>Memberikan Pinjaman</code> atas nama pemerintah</p> <p>l. Melakukan pengelolaan <code>piutang</code> dan <code>utang</code> negara</p> <p>m. <code>Mengajuan rancangan peraturan pemerintah tentang standar akuntansi pemerintah</code></p> <p>n. <code>Penagihan</code> piutang negara</p> <p>o. <code>Menetapkan Sistem Akuntansi dan Pelaporan Keuangan Negara</code></p> <p>p. <code>Menyajikan informasi keuangan negara</code></p> <p>q. Menetapkan kebijkan dan pedoman pengalolaan serta penghapusan barang milik negara</p> <p>r. Menentukan nilai mata uang asing terhadap rupiah dalam rangka pembayaran pajak</p> <p>s. <code>Menunjuk pejabat Kuasan Bendaharan Umum Negara</code> --&gt; Direktorat perbendaharaan</p> </li> </ol>"},{"location":"Accounting/Undang-Undang/02.%20UU%20Nomor%201%20Tahun%202004%28Perbendaharaan%20Negara%29%20copy/#bab-vii-pelaksanaan-apbn-apbd","title":"BAB VII Pelaksanaan APBN &amp; APBD","text":"<p>Farras catatan lainnya adalah lihat pasal 26 dan 27 semaunya yang ada di BAB 7</p>"},{"location":"Accounting/Undang-Undang/02.%20UU%20Nomor%201%20Tahun%202004%28Perbendaharaan%20Negara%29%20copy/#bab-xi-penyelesaian-kerugian-negaradaerah","title":"Bab XI (Penyelesaian Kerugian Negara/Daerah)","text":"<p>Pasal 59</p>"},{"location":"Accounting/Undang-Undang/02.%20UU%20Nomor%201%20Tahun%202004%28Perbendaharaan%20Negara%29%20copy/#pasal-59","title":"Pasal 59","text":"<ol> <li> <p>Setiap kerugian negara/daerah yang disebabkan melanggar hukum atau kelalaian seseorang harus segera diselesaikan sesuai dengan peraturan perundang-undangan yang berlaku. </p> </li> <li> <p>Bendahara atau pegawai negeri bukan bendahara, atau pejabat lain yang karena perbuatannya melanggar hukum atau melalaikan kewajiban yang dibebankan kepadanya secara langsung merugikan keuangan negara, Wajib mengganti rugi.</p> </li> </ol>"},{"location":"Accounting/Undang-Undang/03.%20UU%20Nomor%2015%20Tahun%202004%28Pemeriksaan%20Pengelolaan%20dan%20Tanggung%20Jawab%20Keuangan%20Negara%29/","title":"Undang Undang Nomor 15 Tahun 2004(Pemeriksaan Pengelolaan dan Tanggung Jawab Keuangan Negara).md","text":"<p>Catatan dibawah ini dalam bentuk rangkuman sehingga setiap kalimat tidak sama persis dengan sumber resmi UU</p>"},{"location":"Accounting/Undang-Undang/03.%20UU%20Nomor%2015%20Tahun%202004%28Pemeriksaan%20Pengelolaan%20dan%20Tanggung%20Jawab%20Keuangan%20Negara%29/#bab-1-ketentuan-umum","title":"Bab 1 (Ketentuan Umum)","text":"<p>Pasal 1</p>"},{"location":"Accounting/Undang-Undang/03.%20UU%20Nomor%2015%20Tahun%202004%28Pemeriksaan%20Pengelolaan%20dan%20Tanggung%20Jawab%20Keuangan%20Negara%29/#pasal-1","title":"Pasal 1","text":"<ol> <li> <p>Lorem ipsum</p> </li> <li> <p>Badan Pemeriksan Keuangan, yang selanjutnya disebut BPK, adalah Badan pemeriksa keuangan sebagaiman dimaksud dalam Undang Undang Dasar Negara Republik Indonesia Tahun 1945.</p> </li> </ol>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/","title":"Peraturan Menteri Keuangan Nomor 62 Tahun 2023 (Pelaksanaan Anggaran, Perencanaan Anggaran, Akuntansi dan Pelaporan Keuangan/","text":"<p>Catatan dibawah ini dalam bentuk rangkuman sehingga setiap kalimat tidak sama persis dengan sumber resmi UU</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#bab-1-ketentuan-umum","title":"Bab 1 Ketentuan Umum","text":""},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#pasal-1","title":"Pasal 1","text":"<p>Pasal 1</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no1-rencana-kerja-anggaran","title":"No.1 (Rencana Kerja Anggaran)","text":"<p>Rencana Kerja Anggaran RKA, dokumen <code>R</code>encana <code>K</code>euangan <code>A</code>nggaran tahunan yang berisi;</p> <ol> <li>Rencana Kerja dan Anggaran Kementrian dan Lembaga (RKA K/L)</li> <li>Rencana Kerja dan Anggaran Otoritas  Ibu Kota Nusantara (RKA IKN)</li> <li>Rencana Kerja dan Anggaran Bendahara Umum Negara (BUN)</li> </ol>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no2-rencana-kerja-anggaran-kementerian-dan-lembaga-kl","title":"No.2 (Rencana Kerja Anggaran Kementerian dan Lembaga K/L)","text":"<p>Dokumen <code>rencana keuangan</code> dari <code>Kementrian atau Lembaga Negara</code> tahunan yang memuat;</p> <ol> <li>Rencanan kegiatan</li> <li>Anggaran</li> <li>Terget kinerja (Capaian Kinerja)</li> </ol> <p>Dari masing masing <code>kementrian atau lembaga</code> yang disusun menurut bagian anggaran masing-masing kementrian.</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no3-rencana-kerja-anggaran-bun","title":"No.3 (Rencana Kerja Anggaran BUN)","text":"<p>Dokumen <code>rencana keuangan</code> dari <code>Bendahara Umum Negara</code> tahunan yang memuat;</p> <ol> <li>Rencanan kegiatan</li> <li>Anggaran</li> <li>Terget kinerja (Capaian Kinerja)</li> </ol> <p>Dari <code>pembantu pengguna anggaran</code> yang disusun menurut bagian anggaran masing-masing kementrian.</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no5-standard-biaya","title":"No.5 (Standard Biaya)","text":"<p><code>Satuan biaya</code> yang ditetapkan oleh <code>menteri keuangan</code> selaku pengelola fiskal (Chief Financial Officer) untuk <code>acuan perhitungan kebutuhan anggaran</code> dalam <code>penyusunan RKA dan pelaksanaan anggaran</code>.</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no6-bagian-anggaran","title":"No.6 (Bagian Anggaran)","text":"<p>Kelompok anggaran menurut nomenkelator kementrian atau lembaga dan bendahara umum negara dalam menjalankan fungsi belanja pemerintah pusat, transfer ke daerah dan pembiayaan</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no7-bagian-anggaran-kementriallembaga","title":"No.7 (Bagian Anggaran Kementrial/Lembaga)","text":"<p>Bagian Anggaran untuk menampung belanja pemerintah pusat yang mana pagu anggarannya (nominal anggarannya) dialokasikan pada Kementrial/Lembaga negara</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no8-bagian-anggaran-bendahara-umum-negara","title":"No.8 (Bagian Anggaran Bendahara Umum Negara)","text":"<p>Bagian anggaran yang tidak dikelompokan pada Bagian Anggaran Kementrian/Lembaga</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-15-18-jenis-belanja","title":"No. 15-18 (Jenis Belanja)","text":"<ol> <li>Belanja Pegawai, seperti kompensasi pegawai baik dalam bentuk uang atau barang.</li> <li>Belanja Barang dan Jasa, pengeluaran untuk menampung pembelian barang dan jasa yang habis dipakai untuk memproduksi barang dan jasa.</li> <li>Belanja Modal, pengeluaran anggaran dalam rangka menambahan aset tetap yang masa manfaatnya lebih dari periode akuntansi (12 tahun) serta melebihi batas minimum <code>kapitalisas aset tetap</code> atau aset lainnya sesuai yang ditetapkan pemerintah.</li> <li>Belanja Bantuan Sosial, pengeluaran berupa uang, atau barang dari pemerintah kepada masyarakat miskin guan menghindari risiki sosial, meningkatkan kemampuan ekonomi dan atau kesejahteraan masyarakat.</li> </ol>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-38-pinjaman-luar-negeri","title":"No. 38 (Pinjaman Luar Negeri)","text":"<p>Disingkat PLN, Setiap pembiayaan melalui utang yang diperoleh pemerintah melalui pemberian pinjaman luar negeri yang terikat dalam perjanjian utang tidak dalam bentuk surat berharga dan wajib untuk dibayar</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no39-pinjaman-dalam-negeri","title":"No.39 (Pinjaman Dalam Negeri)","text":"<p>setiap pinjaman pemerintah dari dalam negri yang terikat dan wajib untuk dibayar dalam waktu tertentu </p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-42-penerimaan-negara-bukan-pajaka-pnbp","title":"No. 42 (Penerimaan Negara Bukan Pajaka , PNBP)","text":"<p>Setiap pungutan yang dibayarkan dari orang pribadi atau badan yang memperoleh manfaat langsung atau tidak langsung atas pelayanan, pemanfaatan sumber daya aset dan hak yang diperoleh negara yang dianggap sebagai pemasukan pemerintah pusat diluar dari mekanisme pendapatan pajak dan hibah</p> <p>Keyword</p> <p><code>Pungutan</code>, <code>pemerintah</code>, <code>badang atau orang pribadi</code>, <code>pelayanana, atau aset pemerintah</code>, <code>diluar dari pajak dan hibah</code></p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-44-kantor-pelayanan-perbendaharaan-negara","title":"No. 44 (Kantor Pelayanan Perbendaharaan Negara)","text":"<p>Instansi vertikal Direktorat Jendral Perbendaharaan yang berada dibawah dan bertanggung jawab pada kepala kantor wilayah direktorat jendral perbendaharaan.</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-48-transfer-ke-daerah-tkd","title":"No. 48 (Transfer ke Daerah , TKD)","text":"<p>Dana yang bersumber dari APBN dan merupakan bagian anggaran Belanja Negara yang dialokasikan dan disalurkan ke Daerah untuk dikelola dalam rangka penyelengaraan pemerintahaan yang menjadi wewenang daerah.</p> <p>Keyword</p> <p><code>Dari APNB unuk daerah</code>, <code>bagian belanja negara</code>, <code>untuk penyelenggaraan Pemerintah daerah</code>, <code>kewenangan daerah</code></p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no49-dana-alokasi-khusus-dak","title":"No.49 (Dana Alokasi Khusus, DAK)","text":"<p>DAK adalah bagian dari TKD yang digunakan untuk pendanaan program, kegiatan dan menjalankan kebijakan tertentu yang menjadi prioritas ansional dan membatu operasional pelayanan publik yang penggunaanya ditentukan oleh pemerintah.</p> <p>keyword hafalan</p> <p><code>bagian TKD</code>, <code>program, kegiatan dan kebijikana prioritas nasional</code>, <code>dapat juga membantu operasional</code>, <code>ditentukan oleh pemerintah</code></p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-68-rencana-strategis-kementrianlembaga-renstra-kl","title":"No. 68 (Rencana Strategis Kementrian/Lembaga, RENSTRA K/L)","text":"<p>Renstra K/L, adalah dokumen perencanaan Kementrian/Lembaga 5 tahun mendatang.</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-70-pagu-anggaran-kementrial-dan-lembaga","title":"No. 70 (Pagu Anggaran Kementrial dan Lembaga)","text":"<p>Batas tertinggi anggaran yang dialokasikan kepada kementrian atau lembaga dalam penyusunan RKA K/L</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-74-daftar-isian-pelaksanaan-anggaran-dipa","title":"No. 74 (Daftar Isian Pelaksanaan Anggaran, DIPA)","text":"<p>Dokumen pelaksanaan anggaran yang digunakan sebagai acuan pelaksanaan anggaran dalam melaksanakan kegiatan pemerintahan sebagai pelaksanaan APBN</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-91-revisi-anggaran","title":"No. 91 (Revisi Anggaran)","text":"<p>Perubahan RKA berupa penyesuaian rincian anggaran termasuk revisi DIPA yang telah disahkan pada tahun anggaran.</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-104-swasekola","title":"No. 104 (Swasekola)","text":"<p>Cara memeperolah barang/jasa yang dikerjakan sendiri oleh kementrian/lembaga/perangkat daerah, organisasi kemasyarakatan, atau kelompok masyarakat.</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-106-pejabat-pembuat-komitmen-ppk","title":"No. 106 (Pejabat Pembuat Komitmen, PPK)","text":"<p>Pejabat yang menjalankan kewenangan dari PA/KPA untuk mengambil keputusan dan atau tindakan yang menyebabkan pengluaran atas beban APBN</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-107-pejabat-penandatanganan-surat-perintah-membayar-ppspm","title":"No. 107 (Pejabat Penandatanganan Surat Perintah Membayar, PPSPM)","text":"<p>Pejabat yang diberikan kewenangan oleh PA/KPA untuk melakukan pengujian atas permintaan pembayaran dan menerbitkan surat perintah membayar.</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-109-bendahara-pengeluaran","title":"No. 109 (Bendahara Pengeluaran)","text":"<p>Orang yang ditunjuk untuk <code>menerima</code>, <code>menyimpan</code>, <code>membayar</code>, dan <code>mempertanggungjawabakan</code> uang yang digunakan untuk keperluan belanja negara dalam rangka menjalankan APBN dalam kantor satker atau kementrian/lembaga.</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-110-surat-perintah-membayar-langsung-spm-ls","title":"No. 110 (Surat Perintah Membayar Langsung, SPM-LS)","text":"<p>Dokumen yang diterbitkan oleh PPSPM untuk mencairkan dana yang bersumber dari <code>DIPA</code> dalam rangka membayar tagihan kepada pihak ketiga atau kepada Bendhara Pengeluaran</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-111-surat-perintah-pembayaran-spp","title":"No. 111 (Surat Perintah Pembayaran, SPP)","text":"<p>Surat yang diterbitkan oleh Pejabat Pembuat Komitmen, yang berisikan permintaan pembayaran tagihan kepada negara.</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no114-spm","title":"No.114 (SPM)","text":"<p>Dokumen yang diterbitkan oleh PPSPM untuk mencairkan dana yang bersumber dari DIPA</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no115-surat-perintah-pencairan-dana-sp2d","title":"No.115 (Surat Perintah Pencairan Dana, SP2D)","text":"<p>Surat perintah yang dikeluarkan oleh Kantor Pelayanan Perbendaharaan Negara selaku kuasa Bendahara Umum Negara (Menteri Keuangan) untuk mencairkan dana berdasarkan SPM</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-120-pembayaran-langsung","title":"No. 120 (Pembayaran Langsung)","text":"<p>Pembayaran yang dilakukan langsung kepada bendahara pengeluaran atau pihak lainnya berdasarkan surat keputusan, perjanjian kerja, surat tugas melalui penerbitan SPM-LS.</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-122-uang-persediaan-up","title":"No. 122 (Uang Persediaan, UP)","text":"<p>Uang muka kerja yang diberikan kepada bendahara pengeluaran untuk mebiayai kegiata operasional sehari-hari satuan kerja atau pengeluaran yang menurut sifat dan tujuannya tidak dapat melalui mekanisme SPM-LS</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-123-surat-perintah-membayar-uang-persediaan-spm-up","title":"No. 123 (Surat Perintah Membayar Uang Persediaan, SPM-UP)","text":"<p>Dokumen yang diterbitkan Pejabat Penandatanganan Surat Perintah Membayar (PPSMP) untuk mencairkan Uang Persediaan</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-124-tambahan-uang-persediaan-tup","title":"No. 124 (Tambahan Uang Persediaan, TUP)","text":"<p>Uang muka yang diberikan kepada Bendahara Pengeluaran untuk kegiatan yang mendesak dalam satubulan yang melebihin UP yang telah ditetapkan.</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-125-surat-perintah-pembayaran-langsung-spp-ls","title":"No. 125 (Surat Perintah Pembayaran Langsung, SPP-LS)","text":""},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#pasal-2","title":"Pasal 2","text":"<p>Pasal 2</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-2-wajib-yang-ada-pada-rka","title":"No. 2 (Wajib yang ada pada RKA)","text":"<p>Rencana Kerja Anggaran disusun dengen <code>sistemastis</code> dan dirinci menurut <code>kalsifikasi anggaran</code></p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no3-instrumen-penyusunan-rka","title":"No.3 (Instrumen penyusunan RKA)","text":"<p>Penyusunan RKA menggunakan Instruemnt</p> <ol> <li>Idikator Kinerja</li> <li>Standar Biaya</li> <li>Evaluasi kerja</li> </ol>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#pasal-3","title":"Pasal 3","text":"<p>Pasal 2</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-1-ayat-klaisifikasi-anggaran","title":"No. 1 Ayat (Klaisifikasi Anggaran)","text":"<p>Klasifikasi anggaran dibagi menjadi;</p> <ol> <li>Jenis Organisasi</li> <li>Jenis Fungsi</li> <li>Jenis Belanja</li> </ol>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-2-klasifikasi-lain-rka-bun","title":"No. 2 (klasifikasi Lain RKA-BUN)","text":"<p>Selain klasifikasi 3 diatas, penyusunan RKA-BUN dapat menggunakan klafisikasi Pembiayaan</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no3-deteial-klasifikasi-pembiayaan","title":"No.3 (Deteial Klasifikasi Pembiayaan)","text":"<ol> <li>Pembiayaan Utang</li> <li>Pembiayaan Investasi</li> <li>Pemberian Pinjaman</li> <li>Kewajiban Pemnjaminan</li> <li>Pembiayaan lainnya.</li> </ol>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#pasal-4","title":"Pasal 4","text":"<p>Pasal 4</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no1-masing2-menyusun-rka","title":"No.1 (Masing2 menyusun RKA)","text":"<p>Kementrian selaku PA dan Menteri Kuangan selaku PA-BUN menyusun RKA atas BA yang dikuasainya.</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#pasal-7","title":"Pasal 7","text":"<p>Pasal 7</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-1-3-struktur-rka","title":"No. 1 - 3 (Struktur, RKA)","text":"<ul> <li>Rincian Anggaran<ul> <li>Program</li> <li>Kegiatan</li> <li>Capaian Output</li> <li>Sumber Pendanaan</li> </ul> </li> <li>Informasi Kinerja<ul> <li>Hasil</li> <li>Keluaran</li> <li>Indikator Kinerja</li> </ul> </li> </ul>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#pasal-11","title":"Pasal 11","text":"<p>Pasal 11</p>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#no-1-jenis-belanja","title":"No. 1 (Jenis Belanja)","text":"<ul> <li> <p>Jenis belanja kementrian / Lembaga</p> <ol> <li>Belanja Modal</li> <li>Belanja Barang dan Jasa</li> <li>Belanja Pegawai</li> <li>Belanja Bantuan Sosial</li> </ol> </li> <li> <p>Jenis belanja BUN</p> <ol> <li>Belanja pegawai</li> <li>Belanja barang &amp; jasa</li> <li>Belanja pembayaran kewajiban hutang</li> <li>Belanja hibah</li> <li>Belanja bantuan sosial</li> <li>Belanja subsidi</li> <li>Belanja transfer ke daerah</li> <li>Belanja lain-lain</li> </ol> </li> </ul>"},{"location":"Accounting/Undang-Undang/04.%20PMK%20Nomor%2062Tahun%202023%28Perencanaan%20Anggaran%20%2C%20Pelaksanaan%20Anggaran%2C%20serta%20Akuntansi%20dan%20Pelaporan%20Anggaran%29/#pasal-14","title":"Pasal 14","text":"<p>Pasal 1</p>"},{"location":"All%20Bout%20Data/Index/","title":"Preface All About Data","text":"<p>Pada sub catatan ini berisikan dengan hal yang berhubungan dengan data seperti.</p> <ol> <li>Pengloahan data</li> <li>Statistika</li> <li>Manipulasi Data</li> <li>Data visualisasi</li> <li>Data prediksi</li> <li>Machine Learning</li> </ol>"},{"location":"All%20Bout%20Data/Apache%20Airflow/","title":"Learning Langchain","text":"<p> Masih dalam proses belajar, catatan ini masih dapat berkembang</p> <p>Warning</p> <p>Catatan ini sifatnya pribadi untuk umum, artinya siapa saja bisa baca. Namun saya tidak bertanggung jawab secara  penuh jika anda menggunakan apa yang ada pada catatan ini dan menjadi masalah</p>"},{"location":"All%20Bout%20Data/Apache%20Airflow/#background","title":"Background","text":"<p>Saat awal catatan ini ditulis saya bekerja sebagai seorang delopment disalah satu perusahaan bilangan Jakarta. Dimana client utama dan satu-satunya dari perusahaan ini adalah Bank. Notabenya bank, kami selaku client dituntut untuk dapat bekerja dibawah tekanan yang tinggi. Jujur, setelah beberapa saya bekerja, seperti penyakit yang timbul setelah waktu yg lama karena kebiasan buruk seperti gula, diabets, jantung dll. Karena tekanan yang terus menerus akhirnya mental saya jatuh, saya harus ke psikiater dan harus meminum obat penenang. Namun hal itu tidak menghindari diri saya dari ketenangan yang hakiki, dan lambat launpun lambung saya akhirnya terkena (sakit).</p> <p>Saya ber ikhitiar, dengan mempelajari salah satu tools yang digunakan dalam bidang data scient, AI enginer dan lain-lain, saya dapat bekerja sebagai IT diluar lingkungan per-bank-kan. Karena background saya Akuntansi, jarang dilikir karena ijazah tdak liniear, maka saya harus menjual diri saya dengan ilmu yang saya miliki. Semoga apa yang saya usahakan tercapai. Aamiin.</p>"},{"location":"All%20Bout%20Data/Apache%20Airflow/#sumber-penulisan","title":"Sumber penulisan","text":"<ul> <li>https://www.youtube.com/watch?v=K9AnJ9_ZAXE&amp;t=1815s</li> </ul>"},{"location":"All%20Bout%20Data/Apache%20Airflow/01.pasang_nyalakan/","title":"Catatan tentang Apache Airflow","text":"<p>Bogor, 19 Oktober 2025 (Anxiety attack, at DD10 no 5. Bismillah.......)</p>"},{"location":"All%20Bout%20Data/Apache%20Airflow/01.pasang_nyalakan/#install-airflow-pada-docker","title":"Install Airflow pada docker","text":"<p>Download file <code>yml</code> untuk menjalankan <code>docker compose</code></p> <p>Prompt</p> <pre><code>curl -LfO https://airflow.apache.org/docs/apache-airflow/3.1.0/docker-compose.yaml\n</code></pre> <p>Setelah file docker-compose.yml terdownload, kita perlu membuat 4 folder;</p> <ol> <li>config</li> <li>dags</li> <li>logs</li> <li>plugins</li> </ol> <p>Code</p> <pre><code>\u251c\u2500\u2500\u2500config\n\u251c\u2500\u2500\u2500dags\n\u251c\u2500\u2500\u2500logst\n\u2514\u2500\u2500\u2500plugins\n</code></pre> <p>Selanjutnya buat foder <code>.env</code> lalu buatlah variable AIRFLOW_UID dengan value integer, saya pribadi mengisi dengan nilai berikut'</p> <p>.env</p> <pre><code>AIRFLOW_UID=50000\n</code></pre>"},{"location":"All%20Bout%20Data/Apache%20Airflow/01.pasang_nyalakan/#inisiasi-database","title":"Inisiasi Database","text":"<p>prompt</p> <pre><code>docker compose up airflow-init\n</code></pre> <p>Tepat setelah menginisiasi database, pada folder config akan muncul konfigurasi file <code>airflow.cfg</code>, dimana kita dapat mengatur konfigurasi pada file tersebut sebelum menjalankan airflow.</p> <p>Juga tepat setelah kita menjalankan inisiasi database, secara otomatis docker compose membuat volumes untuk;</p> <ol> <li>Database postgres</li> <li>Redis (Notes : karena pada docker-compose.yml saya menggunakan redis)</li> </ol> <p>prompt check volume docker</p> <pre><code>docker volume ls\n\nDRIVER    VOLUME NAME\nlocal     4f8ce2fd5d60e24c4ed13b10fddb1d4dfbc15c6a8dc646f1aca19174191e0a4b\nlocal     learnapacheairflow_postgres-db-volume\n</code></pre>"},{"location":"All%20Bout%20Data/Apache%20Airflow/01.pasang_nyalakan/#running-airflow","title":"Running Airflow","text":"<p>Mari nyalakan airflow, setelah download docker-compose.yml, membuat 4 folder yg dibutuhakn, mengatur konfigurasi yang dibutuhkan, maka selanjutnya kita nyalakan airflow. Untuk itu kita dapat menggunakan perintah berikut;</p> <p>Prompt run the airflow</p> <pre><code>docker compose up\n</code></pre> <p>Perintah diatas akan menyalakan beberapa container berikut;</p> <p>Container running airflow</p> <pre><code>CONTAINER ID   IMAGE                  COMMAND                  CREATED       STATUS                   PORTS                                         NAMES\n45562cd5af81   apache/airflow:3.1.0   \"/usr/bin/dumb-init \u2026\"   3 hours ago   Up 3 hours (healthy)     8080/tcp                                      learnapacheairflow-airflow-worker-1\n4e3674440092   apache/airflow:3.1.0   \"/usr/bin/dumb-init \u2026\"   3 hours ago   Up 3 hours (healthy)     8080/tcp                                      learnapacheairflow-airflow-dag-processor-1\n6a6d09c3c16a   apache/airflow:3.1.0   \"/usr/bin/dumb-init \u2026\"   3 hours ago   Up 3 hours (healthy)     8080/tcp                                      learnapacheairflow-airflow-triggerer-1\nfcac278383db   apache/airflow:3.1.0   \"/usr/bin/dumb-init \u2026\"   3 hours ago   Up 3 hours (healthy)     8080/tcp                                      learnapacheairflow-airflow-scheduler-1\nada7224b88b9   apache/airflow:3.1.0   \"/usr/bin/dumb-init \u2026\"   3 hours ago   Up 3 hours (healthy)     0.0.0.0:8080-&gt;8080/tcp, [::]:8080-&gt;8080/tcp   learnapacheairflow-airflow-apiserver-1\n0c6f5a93501b   apache/airflow:3.1.0   \"/bin/bash -c 'if [[\u2026\"   3 hours ago   Exited (0) 3 hours ago                                                 learnapacheairflow-airflow-init-1\n9326130967ab   redis:7.2-bookworm     \"docker-entrypoint.s\u2026\"   3 hours ago   Up 3 hours (healthy)     6379/tcp                                      learnapacheairflow-redis-1\n808f64bcf3be   postgres:16            \"docker-entrypoint.s\u2026\"   3 hours ago   Up 3 hours (healthy)     5432/tcp                                      learnapacheairflow-postgres-1\n</code></pre> <p>Setelah semua container jalan, buka web browser dan menuju ke alamat <code>http://localhost:8080</code>. Maka akan muncul layar login seperti ini.</p> <p>Image layar login airflow</p> <p></p> <p>Username dan password default adalah <code>airflow</code> dan <code>airflow</code>. Taraaa, akan muncul dashboard airflow</p> <p>layar depan airflow</p> <p></p>"},{"location":"All%20Bout%20Data/Apache%20Airflow/01.pasang_nyalakan/#whats-next","title":"Whats next ?","text":"<p>Selanjutnya catatan berisi siklus hidup airflow dan arsitektur, namun, namun, saya longkap dulu karena satu dan lain hal.karena mau langsung ngoprek aja  Got to the next cahpter Aaa.....</p>"},{"location":"All%20Bout%20Data/Chroma/","title":"Chroma","text":"<p>Chroma adalah aplikasi sumber terbuka (open source) untuk melakukan pencarian dan pengambilan (retrieval) database untuk Artificial Intelegent Application.</p> <p>Info</p> <p>Embeddings, Full-text search, Document Storage, vector search, metadata filterring and multimodal</p> <p>Menggunakan Chroma kita mendapatkan paket lengkap seperti penyematan, pencarian text lengkap, penyimpanan dokumen, pencarian vektor, penyaringan metadata dan serta multi-modal.</p> <p>Embeddings adalah operasi untuk membentuk ulang berbagai macam data seperti text, foto, dan data jenis lainnya kedalam bentuk numerical vector reprensentation. Hasil dari embeddings berbentuk list of number dan jika semakin besar data maka semakin banyak pula demensi-nya. Tujuanya adalah membuat data tersebut cocok pada berbagai macal tolls AI dan algoritma.</p> <p>Sumber pemebelajaran dan dokumentasi resmi <code>Chrome</code> dapat diakses di https://www.trychroma.com/</p> <p>Source code hands-on ada pada https://github.com/muhammadfarras/Learn-Chroma</p> <p>Status</p> <p></p> <p>Ketika kita meminta data ke chrome collecntion kita hanya ingin mendapatkan bagian dari document yang relevan dengan pertanyaanya, Maka dari itu, saat memberikan data kepada chroma kita perlu memecahnya menjadi pecahan-pecahan yang relevan (tidak digabung), hal ini biasanya disebut dengan <code>chunking</code>.</p> <p>Pertama kali yang perlu kita lakukan ada <code>import</code> depedencies yang diperlukan</p> <p>code</p> <pre><code>    import chromadb\n    import os # To read path of the data train\n    import uuid # To generate random id, itended to consumed collection as a id\n</code></pre> <p>Pada catatan kali ini saya menggunakan data dummy yang berisikan peraturan-peraturan yang dipecah dengan baris baru. Dari data tersebut kita akan membuatnya kedalam bentuk tipe data <code>list()</code>.</p> <p>code</p> peraturan.txt<pre><code>Peraturan ini diperuntukan Muhammad Faris Ma'ruf, Nu'man Noah Ma'ruf, dan Rumaisha Hilyah Maruf. Ketiga orang tersebut wajib patuh dan tunduk terhadap Peraturan yang dituangankan pada pernyataan ini.\n\nSetiap hari Senin sampai dengan Jum'at Muhammad Faris Ma'ruf berkewajiban untuk bangung pagi sebelum adzan subuh untuk melaksaksanakan shalat subuh berjamaah dimasjid sekaligus mempersiapkan diri untuk sekolah.\n\nSetiap hari Senin sampai dengan Jum'at Nu'man Noah Ma'ruf berkewajiban untuk bangung pagi sebelum adzan subuh untuk melaksaksanakan shalat subuh berjamaah dimasjid sekaligus mempersiapkan diri untuk sekolah.\n\nSetiap hari, Rumaisha Hilyah Maruf harus membantu bunda Tania mempersiapkan sarapn pagi untuk Abi Faras, Abang Faris (Muhammad Faris Ma'ruf), dan Nu'man Noah Ma'ruf.\n</code></pre> <pre><code>    path_peraturan = os.path.abspath(\"data/peraturan_rumah.txt\")\n\n    with open (path_peraturan, mode=\"r\", encoding=\"utf-8\") as f:\n        kebijakan = f.read().splitlines()\n</code></pre>"},{"location":"All%20Bout%20Data/Chroma/#membuat-client-chroma","title":"Membuat Client Chroma","text":"<p>Untuk memulai menggunakan vectorize database Chroma, kita wajib membuat sebuah <code>client</code>. Client chroma adalah titik awal untuk kita dapat berintersaksi dengan Chrome. Dibalikanya client chrome berfungsi untuk menyimpan user/pengguna serta database-nya dan proxy calls untuk mengakses API dari chrome. Selain chrome client menjadi sistem kesatuan (memori jangka pendek yang disimpan di ram, lokal) akan tetapi juga dapat berlaku sebagai server yang menyediakan API sehingga beberapa client dapat mengakses sumberdaya yang sama.</p> <p>Untuk membuat client ada beberapa cara;</p> <ol> <li>Ephermal Client</li> <li>Persistant Client</li> <li>Http Client atau AsyncHttpCLient</li> <li>Cloud Client</li> </ol>"},{"location":"All%20Bout%20Data/Chroma/#the-different-between-client-and-ephermal-client","title":"The different between CLient and Ephermal Client","text":"<p>Saat membuat client kita menggunakan method <code>Client</code> tanpa memberikan parameter apapun, sehingga kita menggunakan penyimpanan data sementara, tidak di simpan kedalam disk. Ada method lain seperti yang telah dipaparkan diatas, yaitu <code>Ephermal CLient</code> yang mana methode ini secara gamblang menyebnutkan \"Creates an in-memory instance of Chroma.\" artinya tidak menyimpan kedalam disk permanent. Lalu apa yg membedakan, menggunakan Client kita dapat men-setup disk persistant tanpa harus menggunakan method lainnya <code>Persistant Client</code>. Akan tetapi jika kita melihat pada constructor atau fungsi dari EphermalClient kita dapat melihat bahwa (baris 14-16 snippet code dibawah) property <code>is_persistant</code> dibuat statis dengan nilai <code>false</code>.</p> <p>Code</p> EphemeralClient<pre><code>def EphemeralClient(\n    settings: Optional[Settings] = None,\n    tenant: str = DEFAULT_TENANT,\n    database: str = DEFAULT_DATABASE,\n) -&gt; ClientAPI:\n    \"\"\"\n    Creates an in-memory instance of Chroma. This is useful for testing and\n    development, but not recommended for production use.\n\n    Args:\n        tenant: The tenant to use for this client. Defaults to the default tenant.\n        database: The database to use for this client. Defaults to the default database.\n    \"\"\"\n    if settings is None:\n        settings = Settings()\n    settings.is_persistent = False\n\n    # Make sure paramaters are the correct types -- users can pass anything.\n    tenant = str(tenant)\n    database = str(database)\n\n    return ClientCreator(settings=settings, tenant=tenant, database=database)\n</code></pre>"},{"location":"All%20Bout%20Data/Chroma/#membuat-collection","title":"Membuat Collection","text":"<p><code>Collection</code> sangat berguna dan berfungsi untuk penyimpanan dan query. Untuk membuat sebuah collection kita dapat menggunakan beberapa 2 method yang tersedia</p> <ol> <li><code>create_collection</code></li> <li><code>get_or_create_collection</code></li> </ol> <p>Sudah jelas dari nama method (Tidak perlu dijelaskan perbedaan keduanya). </p> <p>Code</p> <pre><code>@abstractmethod\ndef create_collection(\n    self,\n    name: str,\n    configuration: Optional[CreateCollectionConfiguration] = None,\n    metadata: Optional[CollectionMetadata] = None,\n    embedding_function: Optional[\n        EmbeddingFunction[Embeddable]\n    ] = ef.DefaultEmbeddingFunction(),  # type: ignore\n    data_loader: Optional[DataLoader[Loadable]] = None,\n    get_or_create: bool = False,\n) -&gt; Collection:\n    \"\"\"Create a new collection with the given name and metadata.\n    Args:\n        name: The name of the collection to create.\n        metadata: Optional metadata to associate with the collection.\n        embedding_function: Optional function to use to embed documents.\n                            Uses the default embedding function if not provided.\n        get_or_create: If True, return the existing collection if it exists.\n        data_loader: Optional function to use to load records (documents, images, etc.)\n\n    Returns:\n        Collection: The newly created collection.\n\n    Raises:\n        ValueError: If the collection already exists and get_or_create is False.\n        ValueError: If the collection name is invalid.\n\n    Examples:\n        ```python\n        client.create_collection(\"my_collection\")\n        # collection(name=\"my_collection\", metadata={})\n\n        client.create_collection(\"my_collection\", metadata={\"foo\": \"bar\"})\n        # collection(name=\"my_collection\", metadata={\"foo\": \"bar\"})\n        ```\n    \"\"\"\n    pass\n</code></pre> <p>Method ini membutuhkan parameter wajib berupa nama, karena nama collection ini digunakan pada URL (jika chorma berjalan sebagai server) maka dari itu penamaan nama collection ini harus mengikuti standard berikut;</p> <ol> <li>Banyak karakter 3 - 512</li> <li>Nama harus diawali dan diakhir dengan karakter kecil atau angka dan didalamnya dapat mengandung <code>.</code>, <code>-</code>, atau <code>_</code>, tapi tidak dapat diakhir dengan karakter tersebut.</li> <li>Jika menggunakan <code>.</code> dilarang menggunakan <code>.</code> secara berurutan, seperti <code>..</code>.</li> <li>Nama collection tidak boleh sama dengan IP Address yang valid pada network.</li> </ol> <p>Pada kali ini kita menggunakan <code>peraturan_rumah</code> sebagai nama dari collection.</p> <p>Code</p> <pre><code># Membuat sebuah collection\ncollection = client.create_collection(\"peraturan_rumah\")\n</code></pre> <p>Pelari lebih lanjut terkait collection dimari yah!!!</p>"},{"location":"All%20Bout%20Data/Chroma/#menambah-data-pada-collection","title":"Menambah data pada Collection","text":"<p>Kita telah membuat collection untuk menampung data dan tempat untuk bertanya. Sebelum kita bertanya (query) kita perlu memasukan data ke collection. Untuk memasukan data kita dapat menggunakan method <code>add()</code>. </p> <p>Method ini memerlu dua parameter wajib, <code>ids</code> yang berisikan beberapa id unik sebanyak documents ( data dalam istilah di chorma adalah dokumen, selanjutnya kita sebut dengan documents) dan <code>documents</code> yang berisikan kalimat, berita atau semacamnya dalam betuk <code>list</code>.</p> <p>Selain itu, kita juga dapat memberikan sebuah <code>meta_data</code> pada documents dan ids, fungsinya untuk memberikan data tambahan dan dapat berguna jika kita sedang melakukan debugging.</p> <p>Code</p> <pre><code># To generate ID per chuking data\nidGenerate = [f\"id{a}\" for a in range (1, len(kebijakan)+1)]\n\ncollection.add(\n    ids=idGenerate,\n    documents=kebijakan,\n    metadatas=[{\"kebijakan\":a} for a in range(len(kebijakan))]\n)\n</code></pre> <p>Chroma akan menyisipkan (embbding) dokumen tersebut kedalam collection menggunakan <code>embeddings function</code>. Kita belum melakukan setup fungsi penyisipan, karena kita tidak definisikan maka kali ini chroma akan menggunakan DefaultEmbeding function untuk kita. Yaitu menggunakan model <code>all-MiniLM-L6-v2</code>.</p> <p>Pada catatn ini kita tidak banyak menyentuh banyak konfigurasi, hanya sebatas pengenalan terhadap <code>Chroma</code>.</p> <ul> <li>You can read more abou adding collections dimari</li> <li>You can read more abou updateing collections dimari</li> <li>You can read more abou deleting collections dimari</li> </ul>"},{"location":"All%20Bout%20Data/Chroma/#lest-do-the-query","title":"Lest do the query","text":"<p>Kita dapat menggunakan method <code>query</code> untuk melakukan pencarian documents. Dibelakang layar, Chroma memanfaatkan <code>fungsi embedding</code> dari collection untuk meng-embed pertanyaan dan menggunakan nilai keluaran tersebut untuk mencari kemiripan vektor dengan documents pada collection tersebut. Kita dapat memberikan pertanyaan lebih dari 1 query dalam bentuk tipe data <code>list</code>.</p> <p>Code</p> <pre><code>pertanyaan=[\n        \"Siapa yang tidak sekolah ?\",\n        \"Apa tugas hilyah ?\"\n    ]\n\nquery_response = collection.query(\n    query_texts=pertanyaan,\n    n_results=2\n)\n</code></pre> <p>Selain pencarian berdasarkan text, kita juga dapat menggunakan pencarian berdasarkan embeddings (query_embeddings) secara langsung tanpa menggunakan embedding function dari collecion. Akan tetapi, jika saat memasukan documents kedalam collection menggunakan embddings secara langsung, saat pencarian kita wajib menggunakan query by embdding alih-alih query by search.</p> <p>Code</p> <pre><code># This is sample, tidak ada di contoh latihan\ncollection.query(\n    query_embeddings=[[11.1, 12.1, 13.1],[1.1, 2.3, 3.2], ...]\n)\n</code></pre> <p>Secara bawaan, chroma akan mengambalikan 10 hasil dari setiap query. Namun kita juga dapat mengatur banyak nilai keluaran menggunakan parameter <code>n_results</code>. Untuk catatan pada bagian ini cukup konfigurasi standar agar lebih dapat dipahami secara bertahap.</p> <p>Code</p> <pre><code>for number,a in enumerate(query_response[\"documents\"]): # type: ignore\n    pp(f\"Pertanyaan ({number}) : {pertanyaan[number]}\")\n    pp(a)\n</code></pre> result<pre><code>[\"Setiap hari Senin sampai dengan Jum'at Muhammad Faris Ma'ruf berkewajiban \"\n'untuk bangung pagi sebelum adzan subuh untuk melaksaksanakan shalat subuh '\n'berjamaah dimasjid sekaligus mempersiapkan diri untuk sekolah.',\n\"Setiap hari Senin sampai dengan Jum'at Nu'man Noah Ma'ruf berkewajiban untuk \"\n'bangung pagi sebelum adzan subuh untuk melaksaksanakan shalat subuh '\n'berjamaah dimasjid sekaligus mempersiapkan diri untuk sekolah.']\n'Pertanyaan (1) : Apa tugas hilyah'\n['Setiap hari, Rumaisha Hilyah Maruf harus membantu bunda Tania mempersiapkan '\n\"sarapn pagi untuk Abi Faras, Abang Faris (Muhammad Faris Ma'ruf), dan Nu'man \"\n\"Noah Ma'ruf.\",\n\"Peraturan ini diperuntukan Muhammad Faris Ma'ruf, Nu'man Noah Ma'ruf, dan \"\n'Rumaisha Hilyah Maruf. Ketiga orang tersebut wajib patuh dan tunduk terhadap '\n'Peraturan yang dituangankan pada pernyataan ini.']\n</code></pre>"},{"location":"All%20Bout%20Data/Chroma/client_server_mode/","title":"Client Side and Filtering in collection","text":"<p>Kali ini kita akan mencoba untuk mengakses chromadb melalui http network menggunakan <code>HttpClient</code>. Selain itu kita juga akan mencoba menggunakan filtering pada documents atau pada metadata.</p> <p>Sumber pemebelajaran dan dokumentasi resmi <code>Chrome</code> dapat diakses di https://www.trychroma.com/</p> <p>Source code hands-on ada pada https://github.com/muhammadfarras/Learn-Chroma</p>"},{"location":"All%20Bout%20Data/Chroma/client_server_mode/#run-chroma-in-server-mode","title":"Run Chroma in server Mode","text":"<p>Untuk menajalankan chroma sebagai server, kita dapat menggunakan syntax <code>chroma --run --path {path dari persistance db}</code> pada terminal atau CMD.</p> <p>Info</p> <p>Gunakan <code>chroma --help</code> untuk melihat daftar parameter yang tersedia dan manfaatnya.</p> <p>Code</p> <pre><code>chroma run --port 9000 --path data_vector/persistance1\n\n\n                (((((((((    (((((####\n            ((((((((((((((((((((((#########\n        ((((((((((((((((((((((((###########\n        ((((((((((((((((((((((((((############\n        (((((((((((((((((((((((((((#############\n        (((((((((((((((((((((((((((#############\n        (((((((((((((((((((((((((##############\n        ((((((((((((((((((((((((##############\n        (((((((((((((((((((((#############\n            ((((((((((((((((##############\n                (((((((((    #########\n\nSaving data to: data_vector/persistance1\nConnect to Chroma at: http://localhost:9000\nGetting started guide: https://docs.trychroma.com/docs/overview/getting-started\n\nOpenTelemetry is not enabled because it is missing from the config.\nListening on localhost:9000\n</code></pre>"},{"location":"All%20Bout%20Data/Chroma/client_server_mode/#accsess-chroma-on-another-server","title":"Accsess Chroma on another server","text":"<p>Untuk terkoneksi ke chroma sever kita dapat menggunakan method <code>HttpClient</code>. Method ini membutuhkan 2 parameter wajib, path untuk menunjukan lokasi fisik vector database dan port port chroma server berjalan. Selain kedua port tersebut ada satu lagi parameter yaitu host, namun jika parameter kosong nilai bawaan adalah localhost.</p> <p>Code</p> <pre><code># Persistance client\npersistance_client = chromadb.HttpClient(host='localhost', port=9000)\n\n# Mengambil collection yang seudah ada\ncollection = persistance_client.get_collection(\n    'Peraturan_ketiga',\n    embedding_function=ef_googleAI\n)\n\n## Mneampilkan objek collection\npp(collection.get_model().metadata)\nprint(f\"\\r\\nQuery pertama\",end=\"\\r\\n\")\n\n## {'creator': \"Muhammad Farras Ma'ruf\", 'at_place': 'Kebunsu Bogor'}\n</code></pre>"},{"location":"All%20Bout%20Data/Chroma/client_server_mode/#query-menggunakan-filter-pada-metadata","title":"Query menggunakan filter pada metadata","text":"<p>Saat meng-query sebuah collection kita juga dapat menggunakan filtering pada <code>documents</code> ataupun pada <code>metadata</code>. Ada beberapa operator yang dapat digunakan diantaranya;</p>          Operator               Fungsi               Contoh Penggunaan      <code>$eq</code> Equal, untuk mencari kalimat yang sama persis <pre><code>{\"field_metadata\" : {\"$eq\" : \"String yang dicari\"}}\n</code></pre> <code>             $or         </code>          Or, logika atau <pre><code>{\n    \"or\": [\n        {\n            \"pengarang\": {\n                \"$eq\": \"Muhammad Farras\"\n            }\n        },\n        {\n            \"pengarang\": {\n                \"$eq\": \"Farras Muhammad\"\n            }\n        }\n    ]\n}\n</code></pre> <p>Chroma akan mengembalikan document yang memiliki meta data <code>pengarang</code> dengan nilai Muhammad Farras atau Farras Muhammad</p> <code>$and</code> Logak dan <pre><code>{\n    \"and\": [\n        {\n            \"pengarang\": {\n                \"$eq\": \"Muhammad Farras\"\n            }\n        },\n        {\n            \"pengarang\": {\n                \"$eq\": \"Tania Dwi\"\n            }\n        }\n    ]\n}\n</code></pre> <p>     Chroma akan mengembalikan document yang memiliki meta data <code>pengarang</code> Muhammad Farras dan Tania Dwi. </p> <code>$in</code> atau <code>$nin</code> Operator inklusi, atau mengadung salah satu dari kalimat atau tidak mengadung salah satu dari nilai <pre><code>\"pengarang\": {\n    \"$in\": [\"Muhammad Farras\",\"Farras Muhammad\"]\n}\n</code></pre>  Chroma akan mengembalikan document yang nilai dari metadata <code>pengarang</code> mengadung nilai dari list yang diberikan.  <pre><code>\"pengarang\": {\n    \"$nin\": [\"Muhammad Farras\",\"Farras Muhammad\"]\n}\n</code></pre>  Chroma akan mengembalikan document yang nilai dari metadata <code>pengarang</code> tidak mengadung nilai dari list yang diberikan."},{"location":"All%20Bout%20Data/Chroma/persistance_chroma/","title":"Persistance Chroma","text":"<p>Pada catatan kali ini kita akan menggunakan beberapa fitur yang disediakan oleh chroma. Mirip seperti pada catatan sebelumnya, kita hanya akan sedikit memodifikasi fungsi bawaan, parameter tambahan dan lain lain guna mengetahui output hasil embeddings dan hasil pencarian, query. Salah satunya kita akan menggunakan <code>GoogleAIEmbedding function</code>.</p> <p>Untuk itu, kita perlu menyediakan API_KEY yang didapatkan dari https://aistudio.google.com/prompts/new_chat sehingga kita dapat menggunakan <code>Gemini 2.5 Flash-Lite</code>. Sebelumnya, kita menggunakan <code>DefaultEmbendding function</code> denga model <code>ll-MiniLM-L6-v2</code>. Ji </p> <p>Sumber pemebelajaran dan dokumentasi resmi <code>Chrome</code> dapat diakses di https://www.trychroma.com/</p> <p>Source code hands-on ada pada https://github.com/muhammadfarras/Learn-Chroma</p>"},{"location":"All%20Bout%20Data/Chroma/persistance_chroma/#import-library","title":"Import library","text":"<p>Code</p> <pre><code>import chromadb\nimport os\nfrom dotenv import dotenv_values as env\nfrom chromadb.utils import embedding_functions\nimport pandas as pd\nfrom pprint import pp\n\n# Load env\nmy_env = env(os.path.abspath(\".env\"))\napi = my_env.get(\"API_OPENAI\")\n</code></pre> <p>Seperti contoh sebelumnya kita membutuhkan beberapa library terutama chromadb. Sedikit berbeda dengan catatan sebelumnya, saya juga meng-import dotenv untuk menyimpan API Google Gemini.</p>"},{"location":"All%20Bout%20Data/Chroma/persistance_chroma/#embedding-function","title":"Embedding function","text":"<p>Code</p> <pre><code># Membuat embeddings function\nef_googleAI = embedding_functions.GoogleGenerativeAiEmbeddingFunction(\n    api_key=api\n)\n\n# Persistance client\npersistance_client = chromadb.PersistentClient('data_vector/persistance1')\n\n# Membuat sebuah collection\ncollection = persistance_client.get_or_create_collection(\n    'Peraturan_kedua',\n    embedding_function= ef_googleAI,\n    metadata= {\n        \"creator\":\"Muhammad Farras Ma'ruf\",\n        \"at_place\" : \"Kebunsu Bogor\"\n    }\n)\n</code></pre> <p>Selain <code>Default Embedding function</code> dan <code>GoogleAIEmbedding Function</code>, chorma juga dapat terintegrasi dengan beberapa embedding function, diantaranya; saat catatan ini dibuat berikut adalah daftar embedding function yang dapat integrasi dengan Chroma</p> Embedding function Python Typescript OpenAI \u2713 \u2713 Google Generative AI \u2713 \u2713 Cohere \u2713 \u2713 Hugging Face \u2713 - Instructor \u2713 - Hugging Face Embedding Server \u2713 \u2713 Jina AI \u2713 \u2713 Cloudflare Workers AI \u2713 \u2713 Together AI \u2713 \u2713 Mistral \u2713 \u2713"},{"location":"All%20Bout%20Data/Chroma/persistance_chroma/#data-yang-awet-persistance-database","title":"Data yang awet, persistance Database","text":"<p>Code</p> <pre><code># Persistance client\npersistance_client = chromadb.PersistentClient('data_vector/persistance1')\n\n# Membuat sebuah collection\ncollection = persistance_client.get_or_create_collection(\n    'Peraturan_kedua',\n    embedding_function= ef_googleAI,\n    metadata= {\n        \"creator\":\"Muhammad Farras Ma'ruf\",\n        \"at_place\" : \"Kebunsu Bogor\"\n    }\n)\n</code></pre>"},{"location":"All%20Bout%20Data/Chroma/persistance_chroma/#collection","title":"Collection","text":"<p>Ada hal yang perlu diketauhi ketika memberikan document pada collection. Chroma menyediakan dua fungsi, yaitu <code>add</code> dan <code>upsert</code>, yang mana keduanya digunakan untuk mengkonversi documents menggunakan embedding function dari collection dan meyimpan-nya kedalam memory. Kasus ini, embeddings value akan disimpan kedalam memory fisik (Persistance). Pada catatan mengenai collection, kita membutuhkan salah satunya parameter <code>ids</code> yang berisikan daftar id unik untuk setiap document. Perlakuan dalam meyimpan data fungsi <code>add</code> dan <code>upsert</code> terletak pada apakah eksistensi <code>id</code> pada collection.</p> <p>Pada fungsi <code>add</code> jika id sudah terdaftar, maka akan penyimpanan diabaikan, sedangkan pada <code>upsert</code> jika id sudah terdaftar chorma akan melakukan operasi update pada id tersebut.</p> <p>Kita akan menggunakan fungsi <code>upsert</code> agar data selalu diupdate seandainya id yang digunakan sama. Karena pasti dalam memahami, dan pembelajaran pada catata ini kita akan menjalankan kode ini berulang-ulang kali.</p> <p>Code</p> <pre><code># memuat berita dari resource tipe json\ndf = pd.read_json(os.path.abspath(\"data/berita.json\"))\nprint(df.columns) # tampilkan nama kolom\n\n\n# Memberikan data pada persistance get \n# Ini hanya jalan sekali saja (karena docoument yang kita berikan selalu sama, maka saya gunnakan upsert)\ncollection.upsert(\n    ids= [f\"id_berita_ke_{a}\" for a in range (len(df))],\n    documents= df.isi.to_list(),\n    metadatas= [{\"judul\":df.judul[a], \"tanggal\":df.tanggal[a], \"lokasi\":df.lokasi[a],\"kategori\":df.kategori[a],\"sumber\":df.sumber[a]} \n                for a in range(len(df))] # type: ignore\n)\n\n# Giving question\npertanyaan = [\"Tradisi lomba perahu 'Pacu Jalur' dari Kabupaten Kuantan\",\n        \"Berita tentang narkoba ?\"]\n\n# Query the collection\nresponse = collection.query(\n    query_texts=pertanyaan,\n    n_results=1,\n    include=[\"metadatas\",\"documents\",\"distances\"]\n)\n</code></pre>"},{"location":"All%20Bout%20Data/Data%20Mining/Statistical%20Analysis%20and%20Data%20Mining/","title":"Index","text":""},{"location":"All%20Bout%20Data/Data%20Mining/Statistical%20Analysis%20and%20Data%20Mining/#handbooks-of-statstical-analysis-and-data-mining-application-edisi-ke-2","title":"Handbooks of Statstical Analysis and Data Mining Application (Edisi ke 2)","text":""},{"location":"All%20Bout%20Data/Data%20Mining/Statistical%20Analysis%20and%20Data%20Mining/01.%20Background/","title":"Background for Data Mining Process","text":""},{"location":"All%20Bout%20Data/Data%20Wrangling/01.%20Index/","title":"Preface Data wrangling","text":"<p>Bismillah</p> <p>Sumber catatan ini berasal dari buku yang berjudulPython for Data Analysis, Data wrangling with pandas, NumPy &amp; Jupyter</p> <p></p> <p>Kode yang berhubungan dengan catatan ini terdapat di github  learn data wrangling</p>"},{"location":"All%20Bout%20Data/Data%20Wrangling/03.%20Built-in%20Data%20Structure/","title":"Data Structure and Squances","text":"<p>Info</p> <p>Untuk catatan lebih lengkap entang kumpulan data terdapat di comprehension and gengerators</p> <p>Tuple adalah kumpulan data yang tidak dapat berubah (immutable).</p> <p>List adalah kumpulan data yang dapat berubah (mutable).</p> <p>Kita dapat menggabungkan dua list menjadi satu, ada dua cara, yaitu menggunakan fungsi extend atau menggunakan operator addition +. Tapi, setelah saya coba, ternyata menggunakan fungsi extend jauh lebih lambat</p> <p>code</p> <pre><code># the_diff_extend_and_plus_sign.py\nfrom time import time\n\n\nlist_1 = [1,2,3,4,5]\nlist_2 = [[a for a in range (1,100)] for a in range (1,1000000)]\n\n\nnow = time()\ngabungan = []\n\nfor chunk in list_2:\n    #print(chunk)\n    list_1+chunk\n\n# print(list_2)\nprint(\"Estimasi : {:.4f} \".format(time() - now))\nnow2 = time()\n\nfor chunk in list_2:\n    list_1.extend(chunk)\n\nprint(\"Estimasi Extend : {:.4f}\".format(time() - now2))\n\n# Estimasi : 0.4380 \n# Estimasi Extend : 2.7018\n</code></pre> <p>Standar library <code>itertool</code> memiliki kumpulan generator untuk algoritma data yang umum. Misalkan, fungsi <code>grouby</code> yang mengambil pengulangan dan sebuah fungsi, mengelompokan element yang berurutan dalam sebuah nilai urut.</p> <p>code</p> <pre><code># itertools.py\nimport itertools\n\ndef first_letter (name):\n    # print (name[0])\n    return name[0]\n\nnames = [\"Tania\",\"Farras\",\"Faris\",\"Noah\"]\n\nfor letter , name_grouped in itertools.groupby(names, first_letter):\n    print (letter, list(name_grouped))\n\n# T ['Tania']\n# F ['Farras', 'Faris']\n# N ['Noah']\n</code></pre> <p>untuk membuka file untuk dibaca atau di tulis, gunakan funsi bawaan dengan menuliskan alamat relatif ataupun absolut, dan opsional file encoding.</p> coderead_file_1.txt <p>code</p> <pre><code># read_file.py\nfilename=\"read_file_1.txt\"\nf = open(filename, encoding=\"utf-8\")\n\nfor a in f:\n    print (a)\n\nf.close()\n</code></pre> <pre><code>Makna tauhid secara bahasa arab merupakan bentuk masdar dari fi\u2019il wahhada-yuwahhidu (dengan huruf ha di tasydid), yang artinya menjadikan sesuatu satu saja.\nSyaikh Muhammad bin Shalih Al Utsaimin berkata: \u201cMakna tauhid ini tidak tepat kecuali diikuti dengan penafian. Yaitu menafikan segala sesuatu selain sesuatu yang kita jadikan satu saja, kemudian baru menetapkannya\u201d (Syarh Tsalatsatil Ushul, 39).\nSecara istilah syar\u2019i, makna tauhid adalah menjadikan Allah sebagai satu-satunya sesembahan yang benar dengan segala kekhususannya (Syarh Tsalatsatil Ushul, 39).\nDari makna tauhid ini sesungguhnya dapat dipahami bahwa banyak hal yang dijadikan sesembahan oleh manusia, bisa jadi berupa Malaikat, para Nabi, orang-orang shalih atau bahkan makhluk Allah yang lain, namun seorang yang bertauhid hanya menjadikan Allah sebagai satu-satunya sesembahan saja.\n</code></pre> <p>Kode diatas, kita membuat opsi econding dengan utf-8 karena opsi itu adalah praktik yang terbaik, karena nilai bawaanya yaitu Unicode encoding digunakan untuk membaca file berbeda pada setiap platform.  Secara bawaan, file yang dibukan statusnya read-only. Serta sangat direkomendasi untuk menutup file setelah selesai digunakan.</p> <p>Cara yang simple, gunakan with statement, sehingga python akan menutup file segera setelah selesai diproses</p> <p>code</p> <pre><code># read_file_2.py\nfilename = \"read_file_1.txt\"\n\nwith open(filename, encoding=\"utf-8\") as f:\n\u00a0 \u00a0 line = [x.rstrip() for x in f]\n\nprint(line)\n</code></pre> <p>Python file mode</p> <p></p>"},{"location":"All%20Bout%20Data/Data%20Wrangling/04.%20Numpy%20Ndarray/","title":"Numpy Ndarray","text":"<p>Info</p> <p>Kode yang ada pada catatan ini terdapat pada file <code>jupyter-notes/Ch4-Numpy Basic 4.1 NdArrays.ipynb</code></p> <p>Numpy, adalah singkatan dari Numerical Python</p> <p>Ini adalah beberap hal yang akan kita temukan didalam Numpy: \u2022 <code>ndarray</code>, effecient multidementional array yang menyediakan operasi aritmatika pada array (yang cepat).</p> <p>\u2022 Penggunaan fungsi matematika yang cepat pada seluruh element didalam array tanpa perlu menulis perulangan.</p> <p>\u2022 Alat untuk membaca dan menulis data array kedalam disk dan berkerja pada memory-mapped files.</p> <p>\u2022 Aljabar Linier, pengacak angka, dan kemampuan untuk perubahan bentuk</p> <p>\u2022 C API untuk menhubungkan Numpy dengan pustak-pustaka yang ditulis oleh C, C++ atau FORTRAN</p> <p>Numpy menyediakan dokumentasi C API yang bagus dan komprehensif, sehingga memudahkan untuk mengirim data ke pustaka luar yang ditulis dengan low-level language, dan pustaka luar untuk mengembalikan data ke python, sebagai Numpy Arrays. Fitur ini, membuat python menjadi pilihan untuk membungkus basis kode yang ditulis C, C++ dan FORTRAN dan memberikan mereka layar muka yang dinamis dan dapat diakses. </p> <p>Numpy tidak menyediakan modeling atau fungsi saintifik, namun, pemahaman yang mendalam tentang Numpy arrays dan array-oriented computing akan membantu anda dalam menggunakan alat-alat berupa array computing semantics, seperti pandas.</p> <p>Salah satu alasa mengapa Numpy sangat penting untuk perhitungan numerik karena Numpy dibuat dengan tujuan mengefesiensi data array yang sangat besar. Ada beberapa alasan lainnya;</p> <p>\u2022 Numpy menyimpan data didalam contigous block of memory. Pustaka Numpy ditulis dengan bahasa sehingga dapat beroperasi dalam sebuah memori tanpa pengecekan tipe atau semisalnya.</p> <p>\u2022 Numpy array menggunakan memori yang lebih sedikit dibandingkan dengan data berurut bawaan dari pthon</p> <p>\u2022 Operasi Numpy melakukan operasi yang kompleks pada seluruh element didalam array tanpa harus menggunakan perulangan didalam python.</p> <p>\u2022 Numpy lebih cepat dibandingkan dengan Kode python karena Numpy, C-based algorithms.</p> <p>Mari kita coba gambarkan perbedaan performa Numpy dengan bawaan python:</p> <pre><code>import numpy as np\nmy_arr = np.arange(1_000_000)\nmy_list = list(range(1_000_000))\n\n%timeit my_arr * 2\n# 2.23 ms \u00b1 153 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1,000 loops each)\n\n\n%timeit [a * 2 for a in my_list]\n# 80 ms \u00b1 4.15 ms per loop (mean \u00b1 std. dev. of 7 runs, 10 loops each)\n</code></pre> <p>NumPy-based algorithms secara umum lebih cepat 10 atau 100 bahkan lebih cepat dibandingkan dengan pure python dan menggunakan memori yang jauh lebih sedikit.</p>"},{"location":"All%20Bout%20Data/Data%20Wrangling/04.%20Numpy%20Ndarray/#creating-ndarray","title":"Creating Ndarray","text":"<p>Cara yang paling mudah membuat array dalam numpy menggunakan <code>array</code> function. Fungsi ini menerima data berurut seperi object (termasuk array) dan menghasilkan Numpy Array yang berisikan data yang diterima oleh fungsi.</p> <pre><code># membuat list dan tuple\npy_list = [1,2,3,4,5]\npy_tuple = (1.0,0,3.1,2.9,5)\n\ntype(py_list), type(py_tuple)\n'''\n(list, tuple)\n'''\n\n# membuat numpy array dengan parameter list dan tuple\ndata1 = np.array(py_list)\ndata2 = np.array(py_tuple)\ntype(data1), type(data2)\n'''\n(numpy.ndarray, numpy.ndarray)\n'''\n</code></pre> <p>vData berderet yang bersarang akan dirubah menjadi multi-dimensional array</p> <pre><code># list bersarang\npy_nested_list = [[1,2,4,5],[8,0,1,4]]\ndata3 = np.array(py_nested_list)\ndata3\n\n'''\narray([[1, 2, 4, 5],\n       [8, 0, 1, 4]])\n'''\n</code></pre> <p>Data3 menjadi multidimensional array, kita dapat melihat menggunakna fungsi ndim (banyak dimensi) dan shape (bentuk dimensi array)</p> <pre><code># melihat dimensi dan bentuk dimensi array\nprint(data3.ndim)\nprint(data3.shape)\n'''\n2\n(2, 4)\n'''\n</code></pre> <p>Jika tidak spesifikasi tipe data dari sebuah array, numpy.array akan menetapkan tipe data yang paling tepat.</p> <pre><code># check tipe data\ndata1.dtype, data2.dtype\n'''\n(dtype('int32'), dtype('float64'))\n'''\n</code></pre> <p>Ada beberap fungsi lain untuk membuat sebuah array. Diantaranya, <code>np.zeros</code>, <code>np.ones</code>, fungsi tersebut membuat array dengan nilai 0 atau 1 dengan parameter yang diberikan berupa panjang array atau bentuk, shape. Sedangkan <code>np.empty</code> membuat sebuah array tanpa menginisialisasi nilai tertentu. Untuk membuat array berdimensi tidak tunggal gunakan tupel, misalkan (2,2).</p> <pre><code>data4 = np.ones(5)\ndata4\n'''\narray([1., 1., 1., 1., 1.])\n'''\n\ndata5 = np.zeros((3,3))\ndata5\n'''\narray([[0., 0., 0.],\n       [0., 0., 0.],\n       [0., 0., 0.]])\n'''\n\ndata6 = np.empty((4,4,2))\ndata6\n'''\narray([[[1.15915394e-311, 1.06224114e-321],\n        [0.00000000e+000, 0.00000000e+000],\n        [1.15860970e-311, 5.02034658e+175],\n        [3.92676484e-061, 3.62878562e+179]],\n\n       [[2.80366263e-032, 7.72153905e-043],\n        [6.44362165e-067, 5.82631780e-144],\n        [3.59751658e+252, 1.46901661e+179],\n        [8.37404147e+242, 2.59027926e-144]],\n\n       [[3.80985069e+180, 1.14428494e+243],\n        [2.59027907e-144, 7.79952704e-143],\n        [4.71378235e-062, 9.60465736e-071],\n        [1.43665979e-071, 2.03789056e+160]],\n\n       [[2.59027865e-144, 2.59903818e-144],\n        [5.58166869e-091, 1.69421373e-052],\n        [8.61834943e-043, 1.11475752e+261],\n        [1.16318408e-028, 2.97707521e+296]]])\n'''\n</code></pre> <p><code>np.arange</code> mirip dengan fungsi bawaan python range</p> <pre><code>np.arange(10)\n'''\narray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n'''\n</code></pre>"},{"location":"All%20Bout%20Data/Data%20Wrangling/04.%20Numpy%20Ndarray/#daftar-method-untuk-membuat-array","title":"Daftar method untuk membuat array","text":""},{"location":"All%20Bout%20Data/Data%20Wrangling/04.%20Numpy%20Ndarray/#data-types-for-ndarrays","title":"Data types for ndarrays","text":"<p>Data type atau dtype adalah objek spesial yang berisikan informasi (metadata, data tentang data) yang ndarray butuhkan untuk menginterpret secuil memori sebaga tipe data tertentu.</p> <pre><code>arr1 = np.array([1,2,3], dtype=np.int32)\narr2 = np.array([4,5,6], dtype=np.float32)\narr1.dtype , arr2.dtype\n'''\n(dtype('int32'), dtype('float32'))\n'''\n</code></pre> <p>Tipe data adalah sebuah sumber flexsibelitas numpy untuk berinteraksi dengan data yang berasal dari sistem lain. Kebanyakan kasus, tipe data ini menyediakan pemetaan langsung kedalam disk atau memory representation yang mana membuat numpy dapat membaca atua menulis binary streams of data ke disk atau untuk terhubung ke code yang ditulis denga bahasa tingkat rendah seperti C atau FORTRA.</p> <p>Pemahaman tentang tipe data ini sangat dibutuhkan jika diperlukan pengkontrolan tentang bagiamana data disimpan didalam memori atau disk, terutama data data yang besar.</p>"},{"location":"All%20Bout%20Data/Data%20Wrangling/04.%20Numpy%20Ndarray/#numpy-data-type","title":"Numpy Data type","text":"<p>Anda dapat mengganti tipe data dari numpy array secara terpisah menggunakan fungsi <code>ndarray.astype</code></p> <pre><code># crate numpy array dengan tipe float64\narr = np.array([1, 2, 3, 4, 5])\narr.dtype\n'''\ndtype('float64')\n'''\n\n# convert tipe data arr menjadi int32\nint_arr = arr.astype(np.int32)\nint_arr.dtype\n'''\ndtype('int32')\n'''\n</code></pre> <p>Jika anda mengganti tipe data float, floating-point kedalam tipe integer, maka nilai desimal dari array tersebut akan terpotong</p> <pre><code># Create float_arry\nfloat_arr = np.array((27.12, 11.6, 5.7, 13.10))\nfloat_arr.dtype, float_arr\n'''\n(dtype('float64'), array([27.12, 11.6 ,  5.7 , 13.1 ]))\n'''\n\n# Conver tipe data ke int32\nint_arr = float_arr.astype(np.int32)\nint_arr.dtype, int_arr\n'''\n(dtype('int32'), array([27, 11,  5, 13]))\n'''\n</code></pre> <p>Jika anda memliki array dalam bentuk string, anda dapat mengkonversi nya kedalam bentuk numerik.</p> <pre><code># Create array\nstr_arr = np.array ((\"2.7\",\"0.6\",\"0.6\",\"10.0\"), dtype=np.string_)\nstr_arr.dtype\n'''\ndtype('S4')\n'''\n\n# Conver tipe data string to float32\nfloat_arr = str_arr.astype(np.float32)\nfloat_arr\n'''\narray([ 2.7,  0.6,  0.6, 10. ], dtype=float32)\n'''\n</code></pre>"},{"location":"All%20Bout%20Data/Data%20Wrangling/04.%20Numpy%20Ndarray/#aritmetic-with-numpy-arrays","title":"Aritmetic with Numpy Arrays","text":"<p>Arrays pada numpy dapat melakukan kumpulan operasi yang sangat cepat pada data tanpa harus membuat perulangan. Hal itu disebut dengan vectorization. Apapun operasi aritmatik yang digunakan pada array yang memliki ukuran dan bentuk yang sama akan dikenakan kesemua element pada array-array tersebut.</p> <pre><code># Create numpys array\narr1 = np.array(((1,2,3),(4,5,6)))\narr2 = np.array(((1,2,3),(4,5,6)))\n\narr1 * arr2, arr1-arr2\n'''\n(array([[ 1,  4,  9],\n        [16, 25, 36]]),\n array([[0, 0, 0],\n        [0, 0, 0]]))\n'''\n</code></pre> <pre><code># operasi aritmatika terhadpa scalar dan vector array (2nd array)\n1/arr1\n'''\narray([[1.        , 0.5       , 0.33333333],\n       [0.25      , 0.2       , 0.16666667]])\n'''\n</code></pre> <p>Membandingkan logic antara dua array yang sama ukurannya akan menghasilkan array berelemen tipe boolean yang ukurannya sama persis.</p> <pre><code># membadingkan dua arry berukuran sama\narr3 = np.array ([[1,4],[6,8]])\narr4 = np.array ([[9,8],[3,1]])\narr3 &gt; arr4\n'''\narray([[False, False],\n       [ True,  True]])\n'''\n</code></pre> <p>Notes</p> <p>Evaluasi operasi pada array yang memliki ukuran dan bentuk yang berbeda disebut dengan broadcasting, sedangkan untuk operasi pada array yang memiliki ukuran dan bentuk yang sama disebut dengan vectorization.</p>"},{"location":"All%20Bout%20Data/Data%20Wrangling/04.%20Numpy%20Ndarray/#basic-indexing-and-slicing","title":"Basic Indexing and Slicing","text":"<pre><code>arr = np.arange(start=1, stop=16)\narr\n'''\narray([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15])\n'''\n\narr[5]\n'''\n6\n'''\n\narr[5:8]\n'''\narray([6, 7, 8])\n'''\n</code></pre> <p>Berbedaan pertama dari Python's built-in lists adalah array slices melihat dari array aslinya. Artinya data tidak di salin, dan modifikasi yang terjadi pada view akan mempengaruhi array aslinya.</p> <pre><code># array slices adalah views atau tampilan pada original file\narr[5:8] = 12\narr\n'''\narray([ 1,  2,  3,  4,  5, 12, 12, 12,  9, 10, 11, 12, 13, 14, 15])\n'''\n</code></pre> <p>Dapat kitalihat diatas, array[5:8] yang diinisialisasi dengan nilai 12 merefleksi array asilnya. Mari kota coba telaah lagi prilaku array slice ini. Saya akan membuat variable dengan nama <code>bag_array</code> yang mengambil array pada posisi 5 - 9. Lalu saya merubah elemen pertama darai <code>bag_array</code> menjadi 99. Behavior dari numpy array akan menggati elemen original array pada posisi ke 5 dengan nilai 99.</p> <pre><code># contoh lain\nbag_arr = arr[5:8]\nbag_arr[1] = 99\narr\n'''\narray([ 1,  2,  3,  4,  5, 12, 99, 12,  9, 10, 11, 12, 13, 14, 15])\n'''\n</code></pre> <p>Untuk mengambil semua elemet dari array dapat menggunakan operator collon didalam square bracket <code>[:]</code></p> <pre><code># Mengganti semua element pada array\narr[:] = 99\narr\n'''\narray([99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99])\n'''\n</code></pre> <p>Numpy mendesign prilaku (view pada original array) dengan tujuan dapat dilakukan dengan performa yang tinggi pada array yang sangat besar, anda bisa bayangkan performa dan masalah memori jika Numpy selalu menyalin data dari sebuah array.</p> <p>Namun, jika anda ingin menyalin element dari array dari padanya hanya merujuk (view), anda dapat menggunakan fungsi <code>ndarray.copy()</code>, misalkan <code>arr[5:8].copy()</code></p>"},{"location":"All%20Bout%20Data/Data%20Wrangling/04.%20Numpy%20Ndarray/#slicing-higher-dimetional-array","title":"Slicing higher dimetional array","text":"<pre><code># array slices hihger dimentional array\narr2d = np.array([[8,9,0],[2,7,2],[1,5,3]])\narr2d, arr2d.ndim\n\n'''\n(array([[8, 9, 0],\n        [2, 7, 2],\n        [1, 5, 3]]),\n 2)\n'''\n</code></pre> <p>variabel arr2d adalah array yang memilki dua dimensi. Misalkan kita ingin mengambil subset 2 elemen terkahir dari setiap set pada dimensi pertama, (9,0) (7,2) dan (5,3)</p> <pre><code>arr2d[:,1:]\n'''\narray([[9, 0],\n       [7, 2],\n       [5, 3]])\n'''\n</code></pre>"},{"location":"All%20Bout%20Data/Data%20Wrangling/04.%20Numpy%20Ndarray/#boolean-indexing","title":"Boolean Indexing","text":"<p>Mari kita get our hand dirty untuk mengetahu indexing menggunakan boolean. Kita akan membuat satu buah array yang berisikan daftar nama dan satu buah dua demensi array dengan elemen tahun lahir dan bula lahir.</p> <pre><code>name = np.array([\"Farid\",\"Yayah\",\"Farras\",\"Tania\",\"Faris\",\"Noah\"])\nbirth_year = np.array([[1964,10],[1966,12],[1995,12],[1998,6],[2020,6],[2021,10]])\n</code></pre> <p>Jika kita menggunakan condition operator seperti == maka, condition tersebut akane merefleksi kesemua elemen pada array tersebut.</p> <pre><code>name == \"Farras\"\n'''\narray([False, False,  True, False, False, False])\n'''\n</code></pre> <p>Array yang berisikan tipe boolean dapat digunakan untuk menampikan array pada parameternya dengan syarat jumlah element-nya sama. Nilai yang akan terambil hanya elemen yang bernilai true</p> <pre><code>birth_year[name == \"Farras\"]\narray([[1995,   12]])\n'''\narray([[1995,   12]])\n'''\n</code></pre> <p>Misalkan anda disuruh untuk menampilkan nama bagi mereka yang memliki bulan kelahiran 12 atau 6. Anda dapat menggunakan <code>|</code> (or) atau <code>&amp;</code> (and). Sedangkan tidak bisa menggunakan or, ||, and, &amp;&amp; pada numpy condition.</p> <pre><code># Tampilkan nama yang bulan lahirnya 12 atau 6\nname[(birth_year[:,1] == 12) | (birth_year[:,1] == 6)]\n'''\narray(['Yayah', 'Farras', 'Tania', 'Faris'], dtype='&lt;U6')\n'''\n</code></pre> <p>Anda juga dapat menggunakan operator <code>!=</code> atau negate <code>~</code>. Operator tersebut dapat berguna, misalkan anda disuruh untuk menampilkan nama selain Farras.</p> <pre><code>name[name != \"Farras\"]\n'''\narray(['Farid', 'Yayah', 'Tania', 'Faris', 'Noah'], dtype='&lt;U6')\n'''\n\n# Equal tp\nname[~(name==\"Farras\")]\n'''\narray(['Farid', 'Yayah', 'Tania', 'Faris', 'Noah'], dtype='&lt;U6')\n'''\n</code></pre> <p>Yang penting diingat, mengambil data dari array menggunakan Boolean indexing serta mengisi  hasil tersebut kedalam variabel, maka numpy akan membuat data salinan, walaupun hasil dari array sama dengan array aslinya.</p> <pre><code># Membuat variabel baru untuk menampung cucu-cucu dari farid dan yayah, yang umurnya kurang dari 5 tahun\nkasta = name[2022 - birth_year[:,0] &lt; 5]\nkasta\n'''\narray(['Faris', 'Noah'], dtype='&lt;U6')\n'''\n\n# menggati elemnt variable kasta menjadi cucu\nkasta[:] = \"cucu\"\n\n# Menampilkan variabel kasta dan array original\nkasta, name\n'''\n(array(['cucu', 'cucu'], dtype='&lt;U6'),\n array(['Farid', 'Yayah', 'Farras', 'Tania', 'Faris', 'Noah'], dtype='&lt;U6'))\n '''\n</code></pre> <p>Dari code diatas, elemen dari array asli tetap, tidak berubah. Coba kita test slicing dengan tidak menggunakan boolean</p> <pre><code># Meng-view nama faris dan noah\nkasta_view = name[-2:]\nkasta_view[:] = \"Cucu\"\nkasta_view, name\n'''\n(array(['Cucu', 'Cucu'], dtype='&lt;U6'),\n array(['Farid', 'Yayah', 'Farras', 'Tania', 'Cucu', 'Cucu'], dtype='&lt;U6'))\n '''\n</code></pre> <p>Yup, merubah elemen dari variable kasta_view akan mempengaruhi elemen dari array aslinya.</p>"},{"location":"All%20Bout%20Data/Data%20Wrangling/04.%20Numpy%20Ndarray/#fancy-indexing","title":"Fancy Indexing","text":"<p>Fancy indexing adalah sebuah pola yang diadopsi oleh Numpy untuk meng-index menggunakan array berisikan angka.</p> <pre><code># Array contoh\narr = np.zeros((8,4))\nfor a in range(8):\n    arr[a] = a\narr\n'''\narray([[0., 0., 0., 0.],\n       [1., 1., 1., 1.],\n       [2., 2., 2., 2.],\n       [3., 3., 3., 3.],\n       [4., 4., 4., 4.],\n       [5., 5., 5., 5.],\n       [6., 6., 6., 6.],\n       [7., 7., 7., 7.]])\n'''\n</code></pre> <p>Untuk memilih subset dari baris-baris dalam urutan tertentu, anda1 dapat dengan mudah menggunakan list atau ndarray berisikan integer untuk mensepesifikasi urutan yang diinginkan.</p> <pre><code># Example-1\narr[[0,4,2,3]]\n'''\narray([[0., 0., 0., 0.],\n       [4., 4., 4., 4.],\n       [2., 2., 2., 2.],\n       [3., 3., 3., 3.]])\n'''\n\n# Example-1\narr[[-1,-8,-4,-2]]\n'''\narray([[7., 7., 7., 7.],\n       [0., 0., 0., 0.],\n       [4., 4., 4., 4.],\n       [6., 6., 6., 6.]])\n'''\n</code></pre> <p>Menggunakan multipple index arrays</p> <pre><code># Array contoh\narr = np.arange(32).reshape((8,4))\narr\n'''\narray([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11],\n       [12, 13, 14, 15],\n       [16, 17, 18, 19],\n       [20, 21, 22, 23],\n       [24, 25, 26, 27],\n       [28, 29, 30, 31]])\n'''\n</code></pre> <pre><code>arr[[1,0,5,4],[3,3,3,3]]\n'''\narray([ 7,  3, 23, 19])\n'''\n</code></pre> <p>Code diatas mengambil (1, 3), (0, 3), (5, 3), and (4, 3) were selected. Code diatas adalah shurcut dengan kode dibawah ini.</p> <pre><code># prove\nnp.array([arr[1,3],arr[0,3],arr[5,3], arr[4,3]])\n'''\narray([ 7,  3, 23, 19])\n'''\n</code></pre> <p>The behavior of fancy indexing in this case is a bit different from what some users might have expected (myself included), which is the rectangular region formed by selecting a subset of the matrix\u2019s rows and columns. Here is one way to get that: </p> <pre><code>arr[[1,0,5,4]][:,[0, 3, 1, 2]]\n'''\narray([[ 4,  7,  5,  6],\n       [ 0,  3,  1,  2],\n       [20, 23, 21, 22],\n       [16, 19, 17, 18]])\n'''\n</code></pre> <p>Perlu diingat bahwa fancy indexing adalah view, tidak seperti slicing, copy. Jika anda memasukan nilai dengan fancy index, nilai index tersebut akan termodifikasi </p> <pre><code># Faincy indexing is view\narr[[1,0,5,4],[0,1,2,3]] = 0\narr\n'''\narray([[ 0,  0,  2,  3],\n       [ 0,  5,  6,  7],\n       [ 8,  9, 10, 11],\n       [12, 13, 14, 15],\n       [16, 17, 18,  0],\n       [20, 21,  0, 23],\n       [24, 25, 26, 27],\n       [28, 29, 30, 31]])\n'''\n</code></pre>"},{"location":"All%20Bout%20Data/Data%20Wrangling/04.%20Numpy%20Ndarray/#transposing-arrays-and-swapping-axes","title":"Transposing Arrays and Swapping Axes","text":"<p>Transpose adalah bentuk spesial dari merubah bentuk sebuah index dan menampilkan tanpa menyalin data-nya. Gunakan fungsi T untuk mentranspose sebuah array index.</p> <pre><code>arr = np.arange(15).reshape(3,5)\narr\n'''\narray([[ 0,  1,  2,  3,  4],\n       [ 5,  6,  7,  8,  9],\n       [10, 11, 12, 13, 14]])\n'''\n\narr.T\n'''\narray([[ 0,  5, 10],\n       [ 1,  6, 11],\n       [ 2,  7, 12],\n       [ 3,  8, 13],\n       [ 4,  9, 14]])\n'''\n</code></pre> <p>Saat melakukan perhitungan matrix, anda akan sering men-tranpose sebuah matrix, misalkan perkalian matrix, dot matrix.</p> <pre><code>arr = np.array([[0, 1, 0], [1, 2, -2], [6, 3, 2], [-1, 0, -1], [1, 0, 1\n]])\narr.shape, arr.T.shape\n'''\n((5, 3), (3, 5))\n'''\n</code></pre> <p>Error karena inner dimention tidak sama dengan outer dimention</p> <pre><code>try:\n    arr @ arr\nexcept Exception as E :\n    print (E)\n'''\nmatmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc\nsignature (n?,k),(k,m?)-&gt;(n?,m?) (size 5 is different from 3)\n'''\n</code></pre> <pre><code>arr.T @ arr\n'''\narray([[39, 20, 12],\n       [20, 14,  2],\n       [12,  2, 10]])\n'''\n</code></pre>"},{"location":"All%20Bout%20Data/Data%20Wrangling/04.%20Numpy%20Ndarray/#swapping-axes","title":"Swapping Axes","text":"<p>Fungsi ini berguna untuk menukar index dari array. Fungsi ini membutuhkan dua buah parameter, axis pertama dan exis kedua yang ditukar.</p> <pre><code>x = np.array([[[1,2,-1,-2],[3,4,-3,-4]],[[5,6,-5,-6],[7,8,-7,-8]]])\n'''\n[[[ 1  2 -1 -2]\n  [ 3  4 -3 -4]]\n\n [[ 5  6 -5 -6]\n  [ 7  8 -7 -8]]]\n'''\n</code></pre> <p>array diatas memliki bentuk (2,2,4), memliki 3 dimensi, Misalkan, coba ambil angka -7 dari array diayas. Maka index yang dapat digunakan</p> <pre><code># mengambil coba amil angka  -7\nx[1,1,2]\n'''\n-7\n'''\n</code></pre> <p>Sekarang kita swap axis pertama dengan axis ke-dua.</p> <pre><code>x.swapaxes(0,2)\n'''\narray([[[ 1,  5],\n        [ 3,  7]],\n\n       [[ 2,  6],\n        [ 4,  8]],\n\n       [[-1, -5],\n        [-3, -7]],\n\n       [[-2, -6],\n        [-4, -8]]])\n'''\n</code></pre> <p>Mudahnya coba ambil lagi element dengan nilai -7</p> <pre><code>x.swapaxes(0,2)[2,1,1]\n'''\n-7\n'''\n</code></pre> <p>[1,1,2] \u2192 [2,1,1] index pertama ditukar dengan index kedua, More clear explenation about swapping axe is here https://stackoverflow.com/a/49550933/11021522</p>"},{"location":"All%20Bout%20Data/Data%20Wrangling/04.2%20pseudorandom%20number%20generation/","title":"Pseudorandom Number Generation","text":"<p>Modul <code>numpy.random</code> melengkapi modul random bawaan dari python dengan fungsi untuk menghasilkan sebuah array secara efesien dari berbagai jenis distribusi probabilitas. Contoh, anda dapat membuat 4 x 4 array yang berisikan sampe dari distribusi normal menggunakan <code>numpy.random.standard_normal</code></p> <pre><code># Create 4 x 4 random numpy array\nsamples = np.random.standard_normal((4,4))\nsamples\n'''\narray([[-1.8473918 ,  0.20827432,  1.03385197, -0.22193113],\n       [-0.08305714,  0.59257033, -1.20084053,  0.27694895],\n       [-0.22315066, -1.0487875 , -1.65879409,  0.89752777],\n       [ 0.63761711, -0.23913807,  1.53302134, -0.04749161]])\n'''\n</code></pre> <p>Modul random bawaan dari python, hanya mengambil satu buah nilai, sehingga untuk membuat sebuah array, anda harus menulis perulangan.</p> <pre><code>from random import normalvariate\n\nnormalvariate(0,1)\n'''\n0.3024286568264026\n'''\n</code></pre> <p>Berbeda dengan <code>np.random</code> yang tidak perlu membuat perulangan menggunakan python. Dengan demkian, penggunaan <code>np.random</code> akan lebih efesiensi waktu proses dibandingkan menggunakan bawaan dari python. </p> <pre><code>from random import normalvariate\n%timeit samples = [normalvariate for _ in range(1_000_000)]\n'''\n82 ms \u00b1 9.47 ms per loop (mean \u00b1 std. dev. of 7 runs, 10 loops each)\n'''\n</code></pre> <pre><code>%timeit np.random.standard_normal(1_000_000)\n'''\n29.1 ms \u00b1 274 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 10 loops each)\n'''\n</code></pre> <p>Namun, elemen pada array tidak semurninya acak (lebih ke, pseudorandom) namun dihasilkan oleh random number generator yang dapat dikonfigurasi, itulah yang menentukan nilai apa yang akan dibuat. Fungsi seperti <code>np.random.standard_normal</code> menggunakan nilai bawaan random number generator, namun kita dapat mengatur konfigurasi tersebut secara terpisah. </p> <pre><code>random_seed = np.random.default_rng(seed=42)\nsample = random_seed.standard_normal((4,4))\nsample\nrandom_seed = np.random.default_rng(seed=42)sample = random_seed.standard_normal((4,4))sample\n'''\narray([[ 0.30471708, -1.03998411,  0.7504512 ,  0.94056472],\n       [-1.95103519, -1.30217951,  0.1278404 , -0.31624259],\n       [-0.01680116, -0.85304393,  0.87939797,  0.77779194],\n       [ 0.0660307 ,  1.12724121,  0.46750934, -0.85929246]])\n'''\n</code></pre> <p>Argumen dengan nama seed adalah yang menentukan penentuan awal dari generator dan menetapkan perubahan dari setiap objek random number generator digunakan untuk menghasilkan data. Objek <code>random_seed</code> diatas terisolasi dari kode yang lain yang menggunakan modul, <code>numpy.random</code>. Artinya inisialisasi tersebut tidak membuat perubahan global.</p> <p>Dibawah ini adalah daftar methode Numpy Random Number Generator  </p>"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/","title":"Learning Langchain","text":"<p> Masih dalam proses belajar, catatan ini masih dapat berkembang</p> <p>Warning</p> <p>Catatan ini sifatnya pribadi untuk umum, artinya siapa saja bisa baca. Namun saya tidak bertanggung jawab secara  penuh jika anda menggunakan apa yang ada pada catatan ini dan menjadi masalah</p>"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/#background","title":"Background","text":"<p>Cita-cita saya sangat banyak, saya ingin menjadi orang yang ahli dalam bidang security dan data scientis, termasuk AI didalamnya. Ada yang bilang jangan jadi All Jack, lebih baik One As. Betul tidak salah, namun mengapa tidak All AS. Allah maha melihat hambanya yang berusaha.</p> <p>Hadist</p> <p>Dari Abu Hurairah radhiallahu \u2018anhu, Rasulullah Shallallahu Alaihi Wassalam bersabda</p> <p>\u0627\u0644\u0652\u0645\u064f\u0624\u0652\u0645\u0650\u0646\u064f \u0627\u0644\u0652\u0642\u064e\u0648\u0650\u0649\u0651\u064f \u062e\u064e\u064a\u0652\u0631\u064c \u0648\u064e\u0623\u064e\u062d\u064e\u0628\u0651\u064f \u0625\u0650\u0644\u064e\u0649 \u0627\u0644\u0644\u0651\u064e\u0647\u0650 \u0645\u0650\u0646\u064e \u0627\u0644\u0652\u0645\u064f\u0624\u0652\u0645\u0650\u0646\u0650 \u0627\u0644\u0636\u0651\u064e\u0639\u0650\u064a\u0641\u0650 \u0648\u064e\u0641\u0650\u0649 \u0643\u064f\u0644\u0651\u064d \u062e\u064e\u064a\u0652\u0631\u064c \u0627\u062d\u0652\u0631\u0650\u0635\u0652 \u0639\u064e\u0644\u064e\u0649 \u0645\u064e\u0627 \u064a\u064e\u0646\u0652\u0641\u064e\u0639\u064f\u0643\u064e \u0648\u064e\u0627\u0633\u0652\u062a\u064e\u0639\u0650\u0646\u0652 \u0628\u0650\u0627\u0644\u0644\u0651\u064e\u0647\u0650 \u0648\u064e\u0644\u0627\u064e \u062a\u064e\u0639\u0652\u062c\u0650\u0632\u0652 \u0648\u064e\u0625\u0650\u0646\u0652 \u0623\u064e\u0635\u064e\u0627\u0628\u064e\u0643\u064e \u0634\u064e\u064a\u0652\u0621\u064c \u0641\u064e\u0644\u0627\u064e \u062a\u064e\u0642\u064f\u0644\u0652 \u0644\u064e\u0648\u0652 \u0623\u064e\u0646\u0651\u0650\u0649 \u0641\u064e\u0639\u064e\u0644\u0652\u062a\u064f \u0643\u064e\u0627\u0646\u064e \u0643\u064e\u0630\u064e\u0627 \u0648\u064e\u0643\u064e\u0630\u064e\u0627. \u0648\u064e\u0644\u064e\u0643\u0650\u0646\u0652 \u0642\u064f\u0644\u0652 \u0642\u064e\u062f\u064e\u0631\u064f \u0627\u0644\u0644\u0651\u064e\u0647\u0650 \u0648\u064e\u0645\u064e\u0627 \u0634\u064e\u0627\u0621\u064e \u0641\u064e\u0639\u064e\u0644\u064e \u0641\u064e\u0625\u0650\u0646\u0651\u064e \u0644\u064e\u0648\u0652 \u062a\u064e\u0641\u0652\u062a\u064e\u062d\u064f \u0639\u064e\u0645\u064e\u0644\u064e \u0627\u0644\u0634\u0651\u064e\u064a\u0652\u0637\u064e\u0627\u0646\u0650</p> <p>\u201cMukmin yang kuat lebih baik dan lebih dicintai oleh Allah daripada mukmin yang lemah. Namun, keduanya tetap memiliki kebaikan. Bersemangatlah atas hal-hal yang bermanfaat bagimu. Minta tolonglah pada Allah, jangan engkau lemah. Jika engkau tertimpa suatu musibah, maka janganlah engkau katakan: \u2018Seandainya aku lakukan demikian dan demikian.\u2019 Akan tetapi hendaklah kau katakan: \u2018Ini sudah jadi takdir Allah. Setiap apa yang telah Dia kehendaki pasti terjadi.\u2019 Karena perkataan law (seandainya) dapat membuka pintu setan.<sup>1</sup>\u201d</p>"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/#books","title":"Books","text":"<p>Sumber buku berjudul Learning Langchain Building AI and LLM Aplications with LangChain and LangGraph ** yang ditulis oleh Mayo Oshin dan Nuno Campos serta dipublish oleh O'reilly.</p>"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/#why-this-books","title":"Why this books ?","text":"<p>Oke, pertama, saya sangat suka dengan kebanyakan struktur serta bahasa dari buku yang diterbitkan Packt (Walaupun terkadang tidak semuanya), sehingga mudah untuk dipahami dan tidak lompat sana dan lompat sini dari setiap chapter, terususun secara rapih. Dan pada buku ini penulis menjelaskan secara detail dibalik bahasa python dengan bahasa yang mudah dimengerti.</p> <ol> <li> <p>HR. Muslim no. 2664.\u00a0\u21a9</p> </li> </ol>"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/01.LLM%20Fundamentals/","title":"Dasar ilmu LLM","text":"<p>LLM atau Large Language Model adalah algoritma yang terlatih untuk membaca atau menerima nilai masukan lalu memprediksi dan menghasilkan nilai keluaran dalam bentuk jawaban atas pertanyaan, dimana jawaban tersebut mirip dengan jawaban yang dikeluarkan oleh manusia.</p> <p>Large, kata tersebut merujuk pada besarnya sebuah model dalam bentuk data pelatihan dan parameter yang digunakan saat proses belajar (pembuatan) model. Sebagai contoh, OpenAI's GPT-3 model beris 175 miliyar parameter yang dilatih lebih dari 45 terrabytes data teks.</p> <p>Language Model, sedangkan untuk LM, adalah sebuah algoritma komputer yang dilatih untuk menerima nilai masukan dalam bentuk text (bahasa manusia, umumnya menggunakan bahasa Inggris) dan menghasilkan serta memberikan jawaban dalam bentuk text.</p> <p>Karena pada umumnya Model dilatih dengan data text yang menggunakan bahasa Inggris, sehingga input yang menggunakan bahasa Inggris menghasilkan jawaban yang lebih baik. Akan tetapi, perbedaan performa terhadap bahasa lain bahkan pada model yang dilatih dengan dominan menggunakan text bahasa Inggris tidak terlalu jauh. Peneliti menemukan bahwa LLM dapat merubah pengatahuan semantiknya kedalam bahasa lain.</p> <p>Mari kita coba berikan input kedalam LLM.</p> <p>Example</p> <pre><code>&gt;&gt;&gt; The capital of Indonesia is _______\n...Jakarta.\n</code></pre> <p>LLM (saya menggunakan <code>llama3.2</code>) menjawab pertanyaan sederhana dengan benar. Dibelakang layar, LLM mengestimasi probabilitas dari urutan kata atau kalimat yang sebelumnya diberikan pada saat pelatihan model.</p> <p>Secara teknis, LLM memprediksi <code>token</code>, bukan kata ataupun kalimat. <code>Token</code> merepresentasikan nilai atomik dari kata, sub suku kata, atau bahkan kalimat tergantung dengan pendekatan tokenisasi yang digunakan. Sebagai contoh, kata istiklal memiliki token id sebagai berikut;</p> <p>Berbicara tentang tokenisasi lihat lab yg berjudul Encode dari text kedalam token menggunakan tokenisasi LLama3.2 v Tiktoken</p> <ol> <li><code>I</code> token id 40</li> <li><code>st</code> token id 267</li> <li><code>ik</code> token id 1609</li> <li><code>lal</code> token id 122591</li> </ol> <p>Didalam tubuh LLM terdapat \"transformer neural network architectur\", adalah sebuah arsiktetur yang dapat membuat sebuah model  menangani kumpulan data, baris=baris kode, dan membuat prediksi kata selanjutnya yang paling sesuai. Transformer di desain untuk memahami konteks dari setiap kata pada sebuah kalimat dengan mepertimbangkan hubungan antar setiap kata. Sehingga model dapat membangun pehaman yang komprehensif dari setiap kalimat, kata, paragraf dan sejenisnya. </p> <p>Notes</p> <p>Saya pernah belajar membuat model menggunakan tensor flow, dimana model tersebut dibuat menggunakan Neural Network untuk memprediksi nilai dari sebuah fungsi matematika sederhana. Google Collab</p> <pre><code># set random seed\ntf.random.set_seed(42)\n\n#1. create model using the Sequential API\nmodel = tf.keras.Sequential(\n    [tf.keras.layers.Dense(1, input_shape=[1])]\n    [tf.keras.layers.Dense(1, input_shape=[1])]\n    # Karena kita ingin buat model dengan input satu angka dan output satu angka\n)\n\n#2. compile the model\nmodel.compile(\n    loss=tf.keras.losses.mae, # mae is short of mean absolute error\n    optimizer = tf.keras.optimizers.SGD(), # Stochastic gradient descent\n    metrics=[\"mae\"])\n\n# print (X,y)\n\n#3. fit the model\nmodel.fit(X,y, epochs=5)\n</code></pre> <p>Dibawah ini adalah representasi neural network dari kode diatas</p> <p></p>"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/02.LLM%20Fundamentals%20with%20Langchain/","title":"Dasar LLM dengan LangChain","text":"<p>Coretan pada catatan ini</p> <p>Coratan pada catatan ini dapat dilihat pada lab disini</p> <p>Tantangan dalam membuat aplikasi LLM adalah bagaimana membangun struktur perintah untuk diberikan kesebuah model dan memproses prediksi dari model sehingga mendapatkan hasil yang akurat.</p> <p>Proses Sederhana Aplikasi LLM</p> <p></p> <p>InsyaAllah pada bagian catatan ini saya akan mencatat bagaimana Langchain membangun pengelompokan pemetaan terhadap LLM sehingga menjadi aplikasi LLM yang berguna.</p> <p>Jadi apa itu Langchain ? adalah sebuah framework untuk membangun aplikasi LLM. Langchain adalah lapisan orkrestasi dimana mempermudah pengambangan aplikasi LLM dengan menawarkan standarisasi, penggunaan komponen berulang, dan penghubung tugas seperti \"pemuatan data\", \"pengatturan perintah\" dan \"parsing hasil keluaran\".</p> <p>Bacaan lain Neural Network</p> <p>Saya juga pernah membuat belajar dan hasil coretan saya tentang Langchain dapat dilihat di repositori berikut, muhammadfarras/Learn-Langchain</p>"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/02.LLM%20Fundamentals%20with%20Langchain/#menggunakan-llm-pada-langchain","title":"Menggunakan LLM pada Langchain","text":"<p>Informasi</p> <p>Pada catatan disini saya menggunakan Ollama sebagai penyedia LLM. Sedangkan LLM yang saya gunakan adalah buatan Meta, Llama3.2. Kita bisa menggunakan provider lain atau model lain selama memliki tipe TextGeneration.</p> <p>Untuk menggunakan Ollama dengan Langchain lebih lanjut untuk setup dapat dilihat disini https://python.langchain.com/docs/integrations/llms/ollama/</p> <p>Sebagai pengingat, LLM adalah yang menyetir dibelakang kebanyakan Generative AI Application. Langchain menyediakan 2 interface sederhana agar kita dapat terhubung dengan API yang disediakan oleh provider LLM.</p> <ol> <li>ChatModels</li> <li>LLMs</li> </ol> <p>Secara sederhana interface dari LLM menerima perintah dalam bentuk text dan mengirim nilai masukan tersebut ke penyedia model, lalu mengembalikan prediksi dari model sebagai nilai keluaran.</p> <p>Code</p> <pre><code>from langchain_ollama.llms import OllamaLLM\n\nmodel = OllamaLLM(model=\"llama3.2:latest\")\nreturn_value = model.invoke(\"Assalamualaikum\")\nprint(return_value)\n# Wa alaykums salam. How can I assist you today?\n</code></pre>"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/02.LLM%20Fundamentals%20with%20Langchain/#chat-models","title":"Chat Models","text":"<p>Alternatif lainnya, kita dapat menggunakan ChatModels, interface tersebut membuat kita dapat berinteraksi umpan balik secara terus menerus seperti kita sedang mengobrol. Untuk menggunakannya kita harus memahami apa itu roles.</p> <p>Apa itu role</p> <p>Tentang role dapat dibaca di sini</p> <p>Code class dan sample chat model</p> <p>Untuk class <code>ChatModelsSimplifier</code> dapat diakses di ChatModelsSimplifier.py</p> <pre><code>from ChatModelsSimplifier import MyLLMChatModel\n\nmy_simple_model = MyLLMChatModel(\"llama3.2:latest\")\nmy_simple_model.chat_models(\"Halo nama saya muhammad farras ma'ruf\")\n\"\"\"\nAssalamu'alaikum warahmatullahi wabarakatuh, Muhammad Farras Ma'ruf.\n\nSaya senang bertemu dengan Anda. Apakah Anda membutuhkan bantuan atau informasi tentang topik tertentu? Atau mungkin Anda ingin berbicara tentang hobi atau minat Anda?\n\nSaya di sini untuk membantu dan mendengarkan apa yang Anda inginkan.\n\"\"\"\n\nmy_simple_model.chat_models(\"Siapa nama saya ?\")\n\"\"\"\nSaya ingat! Nama Anda adalah Muhammad Farras Ma'ruf.\n\"\"\"\n</code></pre> <p>Menggunakan ChatModel, dan kita memberikan riwayat percapakan kepada model membuat model mengetahui percakapan sebelumnya.</p>"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/02.LLM%20Fundamentals%20with%20Langchain/#menyetel-format-keluaran-llm","title":"Menyetel format keluaran LLM","text":"<p>Terkadang plain text sangat berguna, akan tetapi ada masa dimana kita membutuhkan LLM menghasilan nilai keluaran yang lebih terstruktur, seperti JSON, XML, CSV atau dalam bentuk bahasa pemprograman seperti python atau java.</p>"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/02.LLM%20Fundamentals%20with%20Langchain/#json-format","title":"JSON Format","text":"<p>Kita dapat menggunakan library Pydantic yang disediakan oleh langcahin. Caranya adalah kita membuat sebuah class turunan dari <code>BaseModel</code> lalu mendifinisikan parameter class tersebut. Pada parameter tersebut nantinya akan diisi oleh LLM sesuai dengan deskripsi atau perintah yang kita berikan. Untuk mensetup pydantic class tersebut kita dapat menggunakan method <code>with_output_structured</code></p> <p>Code class dan sample chat model</p> <p>Untuk class <code>StructuredOutputClass</code> dapat diakses di StructuredOutputClass.py</p> <pre><code>from langchain_ollama import ChatOllama\nfrom StructuredOutputClass import JawabanTerstruktur\nimport json\n\nmodel = ChatOllama(model='llama3.2:latest' , temperature=0.3).with_structured_output(JawabanTerstruktur)\njawaban = model.invoke(\"Which animal has a longest neck\")\nprint(json.dumps(jawaban.__dict__, indent=5))\n\"\"\"\n{\n    \"answer\": \"Giraffe\",\n    \"justification\": \"The giraffe is known for its distinctive long neck, which can grow up to 6 feet (1.8 meters) in length.\"\n}\n\"\"\"\n</code></pre>"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/Other%20Resources/1_roles/","title":"Roles","text":"<p>Sumber bacaan ini dapat dilihat pada https://python.langchain.com/docs/concepts/messages/#role</p> <p>Roles (oeran) digunakan untuk membedakan tipe-tipe dari pesan saat konversasi menggunakan ChatModel. Selain itu, menggunakan role, dapat membantu Model untuk mengetahui bagaimana harus menanggapi kumpulan pesan yang diberikan. ChatModels yang diberikan ke model berisikan daftar pesan minimal yang terdiri dari ChatUser dan ChatModel</p>"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/Other%20Resources/1_roles/#daftar-roles","title":"Daftar Roles","text":"Role Deskripsi <code>system</code> Digunakan untuk memberikan instruksi ke model bagaimana harus berprilaku. <code>user</code> Representasi dari user yang memberikan perintah ke model <code>asistant</code> Mewakili respon dari model, bisadalam bentuk text atau dalam bentuk permintaan mengakses sebuah tools <code>tool</code> Pesan yang digunakan untuk memberikan nilai keluaran dari tools kepada model setelah mendapatkan data dari luar atau proses setelah pengambilan data selesai. Hanya dapat digunakan untuk chat model yang mendukung tool calling"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/lab/00_corat_coret/","title":"00 corat coret","text":"In\u00a0[4]: Copied! <pre>from transformers import AutoTokenizer\n</pre> from transformers import AutoTokenizer In\u00a0[9]: Copied! <pre>tokenizer = AutoTokenizer.from_pretrained(\"meta-llama/Llama-3.2-3B\")\ntokenizer.encode(\"Istiklal\")\n</pre> tokenizer = AutoTokenizer.from_pretrained(\"meta-llama/Llama-3.2-3B\") tokenizer.encode(\"Istiklal\") Out[9]: <pre>[128000, 40, 267, 1609, 122591]</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/lab/1_preface_tokenizer/","title":"Encode dari text kedalam token menggunakan tokenisasi LLama3.2 v Tiktoken","text":"In\u00a0[1]: Copied! <pre>from transformers import AutoTokenizer\n</pre> from transformers import AutoTokenizer In\u00a0[2]: Copied! <pre>tonkenizer = AutoTokenizer.from_pretrained(\"meta-llama/Llama-3.2-3B\")\n</pre> tonkenizer = AutoTokenizer.from_pretrained(\"meta-llama/Llama-3.2-3B\") In\u00a0[3]: Copied! <pre>text = \"\"\"The new policy will require all employees to attend a mandatory meeting on Friday at 2 PM. The team is expected to arrive early\nand be prepared to discuss the upcoming project deadline. Meanwhile, the marketing department has been instructed to create a new\nsocial media campaign by the end of the week. The sales team will also receive additional training on product features and\nbenefits. The CEO has announced plans to visit the office next month to meet with employees and discuss company growth.\n\nIn related news, the IT department is upgrading the server system to improve network security. This upgrade is expected to\nenhance data storage capacity and reduce downtime for critical applications. Additionally, the HR department will be hosting a\nteam-building event next Saturday at 10 AM, where employees can participate in fun activities and bond with colleagues outside of\nwork.\n\nThe company's commitment to sustainability has also been highlighted, with plans to implement energy-efficient lighting and\nreduce waste in all facilities. The new policy is designed to promote employee well-being, productivity, and company success.\"\"\"\nresult_encode_llama = tonkenizer.encode(text)\nprint(result_encode_llama)\n</pre> text = \"\"\"The new policy will require all employees to attend a mandatory meeting on Friday at 2 PM. The team is expected to arrive early and be prepared to discuss the upcoming project deadline. Meanwhile, the marketing department has been instructed to create a new social media campaign by the end of the week. The sales team will also receive additional training on product features and benefits. The CEO has announced plans to visit the office next month to meet with employees and discuss company growth.  In related news, the IT department is upgrading the server system to improve network security. This upgrade is expected to enhance data storage capacity and reduce downtime for critical applications. Additionally, the HR department will be hosting a team-building event next Saturday at 10 AM, where employees can participate in fun activities and bond with colleagues outside of work.  The company's commitment to sustainability has also been highlighted, with plans to implement energy-efficient lighting and reduce waste in all facilities. The new policy is designed to promote employee well-being, productivity, and company success.\"\"\" result_encode_llama = tonkenizer.encode(text) print(result_encode_llama) <pre>[128000, 791, 502, 4947, 690, 1397, 682, 8420, 311, 9604, 264, 23911, 6574, 389, 6740, 520, 220, 17, 5975, 13, 578, 2128, 374, 3685, 311, 17782, 4216, 198, 438, 387, 10235, 311, 4358, 279, 14827, 2447, 22143, 13, 26982, 11, 279, 8661, 9476, 706, 1027, 42075, 311, 1893, 264, 502, 198, 23191, 3772, 4901, 555, 279, 842, 315, 279, 2046, 13, 578, 6763, 2128, 690, 1101, 5371, 5217, 4967, 389, 2027, 4519, 323, 198, 68244, 1220, 13, 578, 12432, 706, 7376, 6787, 311, 4034, 279, 5274, 1828, 2305, 311, 3449, 449, 8420, 323, 4358, 2883, 6650, 382, 644, 5552, 3754, 11, 279, 8871, 9476, 374, 47035, 279, 3622, 1887, 311, 7417, 4009, 4868, 13, 1115, 14234, 374, 3685, 311, 198, 40967, 685, 828, 5942, 8824, 323, 8108, 75954, 369, 9200, 8522, 13, 23212, 11, 279, 23096, 9476, 690, 387, 20256, 264, 198, 9376, 52499, 1567, 1828, 7884, 520, 220, 605, 6912, 11, 1405, 8420, 649, 16136, 304, 2523, 7640, 323, 11049, 449, 18105, 4994, 315, 198, 1816, 382, 791, 2883, 596, 15507, 311, 41329, 706, 1101, 1027, 27463, 11, 449, 6787, 311, 4305, 4907, 73916, 18186, 323, 198, 27369, 12571, 304, 682, 13077, 13, 578, 502, 4947, 374, 6319, 311, 12192, 9548, 1664, 33851, 11, 26206, 11, 323, 2883, 2450, 13]\n</pre> In\u00a0[4]: Copied! <pre>import tiktoken\n</pre> import tiktoken In\u00a0[5]: Copied! <pre>encoding = tiktoken.get_encoding('cl100k_base')\nresult_encode_tiktoken = encoding.encode(text)\nprint(result_encode_tiktoken)\n</pre> encoding = tiktoken.get_encoding('cl100k_base') result_encode_tiktoken = encoding.encode(text) print(result_encode_tiktoken) <pre>[791, 502, 4947, 690, 1397, 682, 8420, 311, 9604, 264, 23911, 6574, 389, 6740, 520, 220, 17, 5975, 13, 578, 2128, 374, 3685, 311, 17782, 4216, 198, 438, 387, 10235, 311, 4358, 279, 14827, 2447, 22143, 13, 26982, 11, 279, 8661, 9476, 706, 1027, 42075, 311, 1893, 264, 502, 198, 23191, 3772, 4901, 555, 279, 842, 315, 279, 2046, 13, 578, 6763, 2128, 690, 1101, 5371, 5217, 4967, 389, 2027, 4519, 323, 198, 68244, 1220, 13, 578, 12432, 706, 7376, 6787, 311, 4034, 279, 5274, 1828, 2305, 311, 3449, 449, 8420, 323, 4358, 2883, 6650, 382, 644, 5552, 3754, 11, 279, 8871, 9476, 374, 47035, 279, 3622, 1887, 311, 7417, 4009, 4868, 13, 1115, 14234, 374, 3685, 311, 198, 40967, 685, 828, 5942, 8824, 323, 8108, 75954, 369, 9200, 8522, 13, 23212, 11, 279, 23096, 9476, 690, 387, 20256, 264, 198, 9376, 52499, 1567, 1828, 7884, 520, 220, 605, 6912, 11, 1405, 8420, 649, 16136, 304, 2523, 7640, 323, 11049, 449, 18105, 4994, 315, 198, 1816, 382, 791, 2883, 596, 15507, 311, 41329, 706, 1101, 1027, 27463, 11, 449, 6787, 311, 4305, 4907, 73916, 18186, 323, 198, 27369, 12571, 304, 682, 13077, 13, 578, 502, 4947, 374, 6319, 311, 12192, 9548, 1664, 33851, 11, 26206, 11, 323, 2883, 2450, 13]\n</pre> In\u00a0[6]: Copied! <pre>result_encode_tiktoken == result_encode_llama[1:]\n</pre> result_encode_tiktoken == result_encode_llama[1:] Out[6]: <pre>True</pre> <p>Saat saya mencari informasi terkait tokenisasi, saya menemukan Augustas Macijauskas, some random people out there  yang memperhatikan hal yang sama, tokenisasi yang digunakan Llam3 dan GPT-4. Percobaan yang beliau lakukan membandingkan tokenisasi langsung dari modelnya, dan memeriksa kesamaan vocabulary dari setiap mode kesimpulannya yang dia dapat adalah ^3;</p> <ol> <li>Tokenisasi HuggingFace GPT-4 mirip dengan <code>tiktoken</code> (Benar, OpenAI secara terbuka menyampaikan tokenizer yang digunakan)</li> <li>Llam3 dan GPT-4 memiliki vocabulary yang mirip, dikatakan 100256 token pertama sejenis.</li> </ol> <p>Kesimpulan yang bersangkutan tepat adanya, karena ketika disandingkan hasil tokenisasi tiktoken menggunakan encode <code>cl100k_base</code> dan tokenisasi dari pretrained model hasilnya sama persis (setidaknya menggunakan sample teks yang saya gunakan).</p> <ol> <li>https://augustasmacijauskas.github.io/personal-website/notes/llama-3-vs-gpt-4-tokenizer/llama-3-vs-gpt-4-tokenizer.html</li> </ol> In\u00a0[7]: Copied! <pre>text = \"\u8bf7\u4f60\u57fa\u4e8e\u4ee5\u4e0b\u300c\u8bc4\u4f30\u6807\u51c6\u300d\"\nresult_tiktoken_encoding_two = encoding.encode(text)\nresult_llama_encoding_tokenizer_two = tonkenizer.encode(text)\nprint(result_tiktoken_encoding_two)\nprint(result_llama_encoding_tokenizer_two[1:])\n</pre> text = \"\u8bf7\u4f60\u57fa\u4e8e\u4ee5\u4e0b\u300c\u8bc4\u4f30\u6807\u51c6\u300d\" result_tiktoken_encoding_two = encoding.encode(text) result_llama_encoding_tokenizer_two = tonkenizer.encode(text) print(result_tiktoken_encoding_two) print(result_llama_encoding_tokenizer_two[1:]) <pre>[15225, 57668, 75146, 35304, 88852, 13177, 64479, 17885, 108, 31944, 12870, 228, 10646]\n[15225, 57668, 125510, 88852, 13177, 64479, 112494, 110778, 10646]\n</pre> <p>Saya juga menemukan diskusi yang serupa. Pada diskusi tersebut sang author menanyakan, mengapa hasil tokenisasi antara tiktoken dengan seri Llma3 berbeda. Sang author menyandingkan hasil encoding pada kalimat berikut (\u8bf7\u4f60\u57fa\u4e8e\u4ee5\u4e0b\u300c\u8bc4\u4f30\u6807\u51c6\u300d). Pertanyaan tersebut terjawab, dan jawab tersebut menjadi penerangan bagi saya yang saat ini sedang belajar mengenai tokenisasi. Dibelakang layar, tokenisasi pada model Llama3 menggunakan tokenizer yang berbeda. Walaupun, ketika saya mencoba menyandingkan hasil tokenisasi dari text inggris sepanjan 1138 karakter didapatkan hasil tokenisasi yang sama.^4</p> <p>Sekarang yang menjadi pertanyaan adalah, tokenizer apa yang digunakan oleh Meta dalam mengembangkan Llama 3 series khususnya ? beberapa sumber mengatakan menggunakan SentencePiece, namun sejauh ini saya belum berhasil menggunakannya.</p> <p>Wait, tepat sebelum saya ingin menutup laptop, saya kembali membaca dokumen model resmi dari Llama3, entah mengapa saya terlewat pada saat pencarian awal. Untuk tokensiasi, Llama3 menggunakan model Byte Per-Encoding pada tiktoken dengan dengan sentuhan yang berbeda. Dimana Llama3 alih-alih memecah satu kata menjadi beberapa token, tokenisasi tersebut akan menghitungnya menjadi satu token jika kata tersebut ada didalam vocabulary dari Llama. Mari kita coba</p> <ol> <li>https://github.com/huggingface/transformers/issues/34403</li> </ol> In\u00a0[8]: Copied! <pre>text_final = \"Istiklal\"\ntiktoken_result_final = encoding.encode(text_final)\nllama_tokenizer_result_final = tonkenizer.encode(text_final)\nprint(tiktoken_result_final)\nprint(llama_tokenizer_result_final[1:])\n\nprint()\nprint(\"Tiktoken\")\nfor a in tiktoken_result_final:\n    print(f\"token {a} : Decode {encoding.decode([a])}\")\nprint()\nfor a in llama_tokenizer_result_final[1:]:\n    print(f\"token {a} : Decode {tonkenizer.decode([a])}\")\nprint()\n</pre> text_final = \"Istiklal\" tiktoken_result_final = encoding.encode(text_final) llama_tokenizer_result_final = tonkenizer.encode(text_final) print(tiktoken_result_final) print(llama_tokenizer_result_final[1:])  print() print(\"Tiktoken\") for a in tiktoken_result_final:     print(f\"token {a} : Decode {encoding.decode([a])}\") print() for a in llama_tokenizer_result_final[1:]:     print(f\"token {a} : Decode {tonkenizer.decode([a])}\") print() <pre>[40, 267, 1609, 75, 278]\n[40, 267, 1609, 122591]\n\nTiktoken\ntoken 40 : Decode I\ntoken 267 : Decode st\ntoken 1609 : Decode ik\ntoken 75 : Decode l\ntoken 278 : Decode al\n\ntoken 40 : Decode I\ntoken 267 : Decode st\ntoken 1609 : Decode ik\ntoken 122591 : Decode lal\n\n</pre>"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/lab/1_preface_tokenizer/#encode-dari-text-kedalam-token-menggunakan-tokenisasi-llama32-v-tiktoken","title":"Encode dari text kedalam token menggunakan tokenisasi LLama3.2 v Tiktoken\u00b6","text":"<p>More resource :</p> <ul> <li>https://en.wikipedia.org/wiki/Byte-pair_encoding</li> <li>https://github.com/openai/tiktoken</li> <li>https://github.com/google/sentencepiece/blob/master/python/README.md</li> <li>https://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb</li> <li>https://github.com/huggingface/transformers/issues/31187</li> <li>https://huggingface.co/docs/transformers/en/model_doc/llama3</li> </ul> <p>Hasil tokenisasi model Llama-3.2 sama persis dengan hasil tokenisasi <code>GPT-3.5</code> dan <code>GPT-4</code> (playground)</p> <p>Kita akan menyandingkan antara hasil tokenizer transfomer dan library tiktoken dari OpenAI library, berikut adalah daftar Encoding Name</p>"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/lab/1_preface_tokenizer/#tokenizer-menggunakan-transformer-autotokenizerm","title":"Tokenizer menggunakan transformer AutoTokenizerm\u00b6","text":""},{"location":"All%20Bout%20Data/LangChainAndLangGraph/lab/1_preface_tokenizer/#tokenizer-menggunakan-tiktoken","title":"Tokenizer menggunakan Tiktoken\u00b6","text":""},{"location":"All%20Bout%20Data/LangChainAndLangGraph/lab/1_preface_tokenizer/#apakah-llama-32-menggunakan-bpe-tokeniser-tiktoken","title":"Apakah llama 3.2 menggunakan BPE tokeniser tiktoken ?\u00b6","text":"<p>Tidak dijelaskan secara terang (berdasarkan yg saya cari dari internet) yang mengatakan Llama3.2 menggunakan tiktoken dengan encoding name <code>cl100k_base</code> yang sama juga digunakan oleh model GPT-3.5 dan GPT-4 ^1</p> <p>Informasi yang saya baca dari mengatakan \"LLaMA and similar Meta models use SentencePiece with Byte-Pair Encoding (BPE).\" ^2</p> <p>Footer</p> <ol> <li>https://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb</li> <li>https://www.linkedin.com/pulse/transforming-ai-workflows-llama-32-simplified-text-chunking-karan-hwbqc/</li> </ol>"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/lab/1_preface_tokenizer/#trying-another-language","title":"Trying another language\u00b6","text":""},{"location":"All%20Bout%20Data/LangChainAndLangGraph/lab/2_LLM_with_langchain/","title":"Lab for Ilmu dasar LLM dengan Langchain","text":"In\u00a0[5]: Copied! <pre>import json\n</pre> import json In\u00a0[6]: Copied! <pre>from langchain_ollama.llms import OllamaLLM\nollamaModel = \"llama3.2:latest\"\nmodel = OllamaLLM(model=ollamaModel)\n</pre> from langchain_ollama.llms import OllamaLLM ollamaModel = \"llama3.2:latest\" model = OllamaLLM(model=ollamaModel) In\u00a0[7]: Copied! <pre>return_value = model.invoke(\"Assalamualaikum\")\nprint(return_value)\n</pre> return_value = model.invoke(\"Assalamualaikum\") print(return_value) <pre>Wa alaykums salam. How can I assist you today?\n</pre> In\u00a0[8]: Copied! <pre>from langchain_core.messages import HumanMessage, AIMessage\nfrom langchain_ollama.chat_models import ChatOllama\n\nchat_model = ChatOllama(model=ollamaModel)\n</pre> from langchain_core.messages import HumanMessage, AIMessage from langchain_ollama.chat_models import ChatOllama  chat_model = ChatOllama(model=ollamaModel) In\u00a0[9]: Copied! <pre>human_message = HumanMessage(\"Nama saya farras\")\n\nreturn_value_chage_model = chat_model.invoke([human_message])\nprint(type(return_value_chage_model))\nprint(json.dumps(return_value_chage_model.model_dump(), indent=4))\n</pre> human_message = HumanMessage(\"Nama saya farras\")  return_value_chage_model = chat_model.invoke([human_message]) print(type(return_value_chage_model)) print(json.dumps(return_value_chage_model.model_dump(), indent=4)) <pre>&lt;class 'langchain_core.messages.ai.AIMessage'&gt;\n{\n    \"content\": \"Halo Farras! Senang bertemu denganmu. Bagaimana hari ini?\",\n    \"additional_kwargs\": {},\n    \"response_metadata\": {\n        \"model\": \"llama3.2:latest\",\n        \"created_at\": \"2025-10-13T14:52:18.3048132Z\",\n        \"done\": true,\n        \"done_reason\": \"stop\",\n        \"total_duration\": 575399700,\n        \"load_duration\": 270851100,\n        \"prompt_eval_count\": 30,\n        \"prompt_eval_duration\": 35991400,\n        \"eval_count\": 19,\n        \"eval_duration\": 230276900,\n        \"model_name\": \"llama3.2:latest\"\n    },\n    \"type\": \"ai\",\n    \"name\": null,\n    \"id\": \"run--e6d1b0df-7b89-4721-a51a-353a45bacfd3-0\",\n    \"example\": false,\n    \"tool_calls\": [],\n    \"invalid_tool_calls\": [],\n    \"usage_metadata\": {\n        \"input_tokens\": 30,\n        \"output_tokens\": 19,\n        \"total_tokens\": 49\n    }\n}\n</pre> In\u00a0[10]: Copied! <pre>from ChatModelsSimplifier import MyLLMChatModel\n\nmy_simple_model = MyLLMChatModel(\"llama3.2:latest\")\n</pre> from ChatModelsSimplifier import MyLLMChatModel  my_simple_model = MyLLMChatModel(\"llama3.2:latest\") In\u00a0[11]: Copied! <pre>my_simple_model.chat_models(\"Halo nama saya muhammad farras ma'ruf\")\n</pre> my_simple_model.chat_models(\"Halo nama saya muhammad farras ma'ruf\") <pre>Selamat datang Muhammad Farras Ma'ruf XXX\n</pre> In\u00a0[12]: Copied! <pre>my_simple_model.chat_models(\"Saya punya tiga anak, 2 laki-laku, dan satu perempuan\")\n</pre> my_simple_model.chat_models(\"Saya punya tiga anak, 2 laki-laku, dan satu perempuan\") <pre>Terima kasih atas informasinya, Muhammad Farras Ma'ruf XXX\n</pre> In\u00a0[13]: Copied! <pre>my_simple_model.chat_models(\"Siapa nama saya ?\")\n</pre> my_simple_model.chat_models(\"Siapa nama saya ?\") <pre>Nama Anda adalah Muhammad Farras Ma'ruf XXX\n</pre> In\u00a0[14]: Copied! <pre>print(my_simple_model.list_of_chats)\n</pre> print(my_simple_model.list_of_chats) <pre>[SystemMessage(content='You are assitant named NoSys, you always answert the question with sufix three XXX.', additional_kwargs={}, response_metadata={}), HumanMessage(content=\"Halo nama saya muhammad farras ma'ruf\", additional_kwargs={}, response_metadata={}), AIMessage(content=\"Selamat datang Muhammad Farras Ma'ruf XXX\", additional_kwargs={}, response_metadata={'model': 'llama3.2:latest', 'created_at': '2025-10-13T14:52:19.1976237Z', 'done': True, 'done_reason': 'stop', 'total_duration': 490199400, 'load_duration': 238550500, 'prompt_eval_count': 58, 'prompt_eval_duration': 21505000, 'eval_count': 13, 'eval_duration': 207168400, 'model_name': 'llama3.2:latest'}, id='run--caa341c6-ae8f-4bcf-89d0-fdf501b1cf46-0', usage_metadata={'input_tokens': 58, 'output_tokens': 13, 'total_tokens': 71}), HumanMessage(content='Saya punya tiga anak, 2 laki-laku, dan satu perempuan', additional_kwargs={}, response_metadata={}), AIMessage(content=\"Terima kasih atas informasinya, Muhammad Farras Ma'ruf XXX\", additional_kwargs={}, response_metadata={'model': 'llama3.2:latest', 'created_at': '2025-10-13T14:52:19.9664717Z', 'done': True, 'done_reason': 'stop', 'total_duration': 760525300, 'load_duration': 410881300, 'prompt_eval_count': 99, 'prompt_eval_duration': 27383700, 'eval_count': 17, 'eval_duration': 277198600, 'model_name': 'llama3.2:latest'}, id='run--9655ac52-329b-4c99-919c-979544610714-0', usage_metadata={'input_tokens': 99, 'output_tokens': 17, 'total_tokens': 116}), HumanMessage(content='Siapa nama saya ?', additional_kwargs={}, response_metadata={}), AIMessage(content=\"Nama Anda adalah Muhammad Farras Ma'ruf XXX\", additional_kwargs={}, response_metadata={'model': 'llama3.2:latest', 'created_at': '2025-10-13T14:52:20.4393638Z', 'done': True, 'done_reason': 'stop', 'total_duration': 466768400, 'load_duration': 223380100, 'prompt_eval_count': 130, 'prompt_eval_duration': 33110500, 'eval_count': 12, 'eval_duration': 183154500, 'model_name': 'llama3.2:latest'}, id='run--c1551cac-c285-4e99-ab2d-7e94ff8600d0-0', usage_metadata={'input_tokens': 130, 'output_tokens': 12, 'total_tokens': 142})]\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/lab/2_LLM_with_langchain/#konversasi-menggunakan-chat-model","title":"Konversasi menggunakan chat model\u00b6","text":""},{"location":"All%20Bout%20Data/LangChainAndLangGraph/lab/2_LLM_with_langchain/#build-simple-class-to-using-chat-models","title":"Build simple class to using chat models\u00b6","text":""},{"location":"All%20Bout%20Data/LangChainAndLangGraph/lab/2_LLM_with_langchain/#membuat-mml-yang-dapat-digunakan-kembalim","title":"Membuat MML yang dapat digunakan kembalim\u00b6","text":""},{"location":"All%20Bout%20Data/LangChainAndLangGraph/lab/3_LLM_structured_output/","title":"3 LLM structured output","text":"In\u00a0[5]: Copied! <pre>from langchain_ollama import ChatOllama\nfrom StructuredOutputClass import JawabanTerstruktur\nimport json\n</pre> from langchain_ollama import ChatOllama from StructuredOutputClass import JawabanTerstruktur import json In\u00a0[6]: Copied! <pre>model = ChatOllama(model='llama3.2:latest' , temperature=0.3).with_structured_output(JawabanTerstruktur)\n</pre> model = ChatOllama(model='llama3.2:latest' , temperature=0.3).with_structured_output(JawabanTerstruktur) In\u00a0[7]: Copied! <pre>jawaban = model.invoke(\"Which animal has a longest neck\")\nprint(json.dumps(jawaban.__dict__, indent=5))\n</pre> jawaban = model.invoke(\"Which animal has a longest neck\") print(json.dumps(jawaban.__dict__, indent=5)) <pre>{\n     \"answer\": \"Giraffe\",\n     \"justification\": \"The giraffe is known for its exceptionally long neck, which can grow up to 6 feet (1.8 meters) in length and account for about half of the animal's total height.\"\n}\n</pre>"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/lab/4_runable_interfaces/","title":"4 runable interfaces","text":"In\u00a0[2]: Copied! <pre>from langchain_ollama import ChatOllama\nfrom StructuredOutputClass import JawabanTerstruktur\n</pre> from langchain_ollama import ChatOllama from StructuredOutputClass import JawabanTerstruktur In\u00a0[3]: Copied! <pre>model = ChatOllama(model='llama3.2:latest', temperature=0).with_structured_output(JawabanTerstruktur)\n</pre> model = ChatOllama(model='llama3.2:latest', temperature=0).with_structured_output(JawabanTerstruktur) In\u00a0[5]: Copied! <pre>model.invoke('What animal has the most poison venom ?')\n</pre> model.invoke('What animal has the most poison venom ?') Out[5]: <pre>JawabanTerstruktur(answer='Box Jellyfish', justification='The box jellyfish (Chironex fleckeri) is considered to have the most potent venom of any animal. Its venom, known as chironectin, can kill a human being in under 5 minutes if left untreated. The venom contains a compound called tetrodotoxin, which is also found in pufferfish and some other marine animals. It is highly toxic and can cause cardiac arrest, respiratory failure, and even death.')</pre> In\u00a0[6]: Copied! <pre>question = ['What animal has the most posion venom ?', 'What snake has the most poisonous venom ?']\nmodel.batch(question)\n</pre> question = ['What animal has the most posion venom ?', 'What snake has the most poisonous venom ?'] model.batch(question) Out[6]: <pre>[JawabanTerstruktur(answer='Box Jellyfish', justification='The box jellyfish (Chironex fleckeri) is considered to have the most potent venom of any animal. Its venom, known as chironectin, can kill a human being in under 5 minutes if left untreated. The venom contains a compound called tetrodotoxin, which is also found in pufferfish and blue-ringed octopuses, but at much higher concentrations.'),\n JawabanTerstruktur(answer='Inland Taipan', justification='The Inland Taipan (Oxyuranus microlepidotus) is considered to have the most toxic venom of any land snake, with a mortality rate of 100% if left untreated. Its venom contains a potent neurotoxin that can kill a human being within 45 minutes if not treated promptly.')]</pre> In\u00a0[17]: Copied! <pre>model_text = ChatOllama(model='llama3.2:latest', temperature=0)\nquestion_list = ['Hello']\nfor data in model_text.stream(question_list):\n    print (data.content, flush=True)\n</pre> model_text = ChatOllama(model='llama3.2:latest', temperature=0) question_list = ['Hello'] for data in model_text.stream(question_list):     print (data.content, flush=True) <pre>How\n can\n I\n assist\n you\n today\n?\n\n</pre>"},{"location":"All%20Bout%20Data/LangChainAndLangGraph/lab/4_runable_interfaces/#invoke","title":"Invoke\u00b6","text":""},{"location":"All%20Bout%20Data/LangChainAndLangGraph/lab/4_runable_interfaces/#batch","title":"Batch\u00b6","text":""},{"location":"All%20Bout%20Data/LangChainAndLangGraph/lab/4_runable_interfaces/#stream","title":"Stream\u00b6","text":""},{"location":"All%20Bout%20Data/Math%20For%20Data%20Science/","title":"Essential Math for Data Science","text":"In\u00a0[25]: Copied! <pre>## Fungsi pada python\ndef f (x):\n    return (2*x) + 1\n</pre> ## Fungsi pada python def f (x):     return (2*x) + 1 In\u00a0[28]: Copied! <pre>## Variable independent\ndataIndependent = np.arange(10)\ndataDependent = f(dataIndependent)\n\ndataIndependent, dataDependent\n</pre> ## Variable independent dataIndependent = np.arange(10) dataDependent = f(dataIndependent)  dataIndependent, dataDependent Out[28]: <pre>(array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]),\n array([ 1,  3,  5,  7,  9, 11, 13, 15, 17, 19]))</pre> In\u00a0[38]: Copied! <pre>dataFrameData = {\"Independent\":dataIndependent, \"Dependent\":dataDependent}\npd.DataFrame(dataFrameData)\n</pre> dataFrameData = {\"Independent\":dataIndependent, \"Dependent\":dataDependent} pd.DataFrame(dataFrameData) Out[38]: Independent Dependent 0 0 1 1 1 3 2 2 5 3 3 7 4 4 9 5 5 11 6 6 13 7 7 15 8 8 17 9 9 19 <p>Selanjutnya kita akan memplot data diatas menggunakan <code>Matplotlib</code> untuk melihat plot dari Linear function f(x) = 2x +1</p> In\u00a0[52]: Copied! <pre>from sympy import *\n\nx = symbols('x')\nf = 2*x + 1\nplot (f)\n</pre> from sympy import *  x = symbols('x') f = 2*x + 1 plot (f) Out[52]: <pre>&lt;sympy.plotting.backends.matplotlibbackend.matplotlib.MatplotlibBackend at 0x2924fa1c800&gt;</pre> <p>Curvilinear Functions adalah sebuah fungsi yang ketika di plot akan membuat sebuah cekungan.</p> In\u00a0[64]: Copied! <pre>x = symbols('x')\nf = x**2 + 4*x - 4\nplot (f)\n</pre> x = symbols('x') f = x**2 + 4*x - 4 plot (f) Out[64]: <pre>&lt;sympy.plotting.backends.matplotlibbackend.matplotlib.MatplotlibBackend at 0x29259e0c6b0&gt;</pre> In\u00a0[67]: Copied! <pre>## Menyimplekan kaudrat\nx = symbols('x')\nexpr = x**2 / x**5\nprint(expr) # x**(-3)\n</pre> ## Menyimplekan kaudrat x = symbols('x') expr = x**2 / x**5 print(expr) # x**(-3) <pre>x**(-3)\n</pre> In\u00a0[78]: Copied! <pre>value  = log(8,2)\nprint(value)\n</pre> value  = log(8,2) print(value) <pre>3\n</pre> <p>Jika kita tidak memberikan argument angka dasar, pada contoh diatas adalah angka 2 pada fungsi <code>log(8,2)</code>. Maka secara otomatis menggunakan nilai bawaan, yaitu 10.</p> <p>Namun pada data science, nilai dasar bawaan untuk log adalah Euler's number e.</p> <p>Sama seperti kuadrat (exponent), Logarithms juga dapat dikalikan, dibagi, ditambah dan dikurangi. Dibawah ini adalah table cara melakukan operasi matematika pada exponent dan logarithms</p> <p></p> In\u00a0[90]: Copied! <pre>## Multiplocation Logarithm property\nprint(log(4,2)+log(4,2))\nprint(log((4*4),2))\n</pre> ## Multiplocation Logarithm property print(log(4,2)+log(4,2)) print(log((4*4),2)) <pre>4\n4\n</pre>"},{"location":"All%20Bout%20Data/Math%20For%20Data%20Science/#essential-math-for-data-sceince","title":"Essential Math For Data Sceince\u00b6","text":"<p>Take Control of Your Data with Fundamental Linear Algebra, Probability, and Statistics</p> <p>Karya Thomas Nield</p>"},{"location":"All%20Bout%20Data/Math%20For%20Data%20Science/#function","title":"Function\u00b6","text":"<p>Fungsi adalah sebuah ekspresi yang mendifinisikan hubungan antara dua atau lebih variable. Fungsi membutuhkan independent variable atau domain variable dan menghasilkan dependent variable atau features.</p> <p>Dibawah ini adalah contoh dari sebuah function</p> <p>f(x) = 2x + 1</p>"},{"location":"All%20Bout%20Data/Math%20For%20Data%20Science/#exponent-kuadrat","title":"Exponent (Kuadrat)\u00b6","text":"<p>Perkalian bilangan sendiri</p> <p></p> <p>Jika kita lihat, kita dapat menyederhanakan kuadrat</p> <p></p>"},{"location":"All%20Bout%20Data/Math%20For%20Data%20Science/#logarithms","title":"Logarithms\u00b6","text":"<p>Adalah sebuah fungsi matematika untuk menentukan kuadrat dan nilai dasar dari sebuah nilai.</p> <p></p>"},{"location":"All%20Bout%20Data/Math%20For%20Data%20Science/#eulers-number-and-natural-logarithms","title":"Euler\u2019s Number and Natural Logarithms\u00b6","text":""},{"location":"DBMS/Catatan%20MSSQL/additional-note/","title":"Preface MSSQL","text":""},{"location":"DBMS/Catatan%20MSSQL/additional-note/#how-to-install-mssql-and-transact-sql","title":"How to install MSSQL and Transact SQL","text":"<p>Follow this steps, from official documentation</p>"},{"location":"DBMS/Catatan%20MSSQL/additional-note/#how-to-restore-bak-files","title":"How to restore <code>.bak</code> files","text":"<p>Follow this step, from official documentation</p> <p>karena saya menggunakan docker, maka pastikan bak filenya di copy kedalam container yang sedang berjalan. Gunakan perintah <code>docker cp</code>.</p> <p>Pastikan file backup ditaru di repository  <pre><code>/var/opt/mssql/data/backup_filename.bak\n</code></pre></p> <p>Selanjutnya masuk kedalam mysql menggunakan sqlcmd <pre><code>/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P &lt;password-here&gt;\n</code></pre></p> <p>Pasti akan ada error yang menyatakan baha mdf dan ldf tidak ditemukan.Anda haris mengemovenya mengikuti logicalnamenya masing2</p> <pre><code>RESTORE DATABASE ADMSCRAPSCALE_UAT\nFROM DISK = '/var/opt/mssql/backup/ADMSCRAPSCALE_LIVE_20220209.bak'\nWITH MOVE 'ADMSCRAPSCALE_UAT' TO '/var/opt/mssql/data/ADMSCRAPSCALE_UAT.mdf',\nMOVE 'ADMSCRAPSCALE_UAT_log' TO '/var/opt/mssql/data/ADMSCRAPSCALE_UAT_log.ldf'\nGO\n</code></pre> <p>Untuk melihat logicalname gunakan query dibawha ini</p> <pre><code>RESTORE FILELISTONLY\nFROM DISK = '/var/opt/mssql/backup/ADMSCRAPSCALE_LIVE_20220209.bak'\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/","title":"Preface MySql","text":"<p> Masih dalam proses belajar, catatan ini masih dapat berkembang</p> <p>Warning</p> <p>Catatan ini sifatnya pribadi untuk umum, artinya siapa saja bisa baca. Namun saya tidak bertanggung jawab secara  penuh jika anda menggunakan apa yang ada pada catatan ini dan menjadi masalah</p>"},{"location":"DBMS/Catatan%20MySql/#background","title":"Background","text":"<p>Empat bulan setelah saya bekerja disalah satu PT didaerah jakarta dan saat itu adalah waktunya penilaian saya yang nantinya menentukan apakah dijadikan pegawai tetap atau tidak. Hasil tersebu cukup memuaskan, dan Alhamdulillah saya lulus dan menjadi pegawai tetap. Pada form tersebut saya mendapatkan masukan dari atasan (<code>team leader</code>) untuk mendalami lagi tentang database, DDL (Data Definition Language) dan DML (Data Manipulation Langeuage).</p> <p>Sejatinya, nasihat adalah bahan bakar untuk kita terus lebih baik. Maka dari itu memang tidak salah untuk kita coba mempelajari lebih dalam tentang database. Kali ini yang tertuang pada lembaran digital ini adalah salah satu database yang terkenal, yaitu MySql</p>  \u0639\u0646 \u0623\u0646\u0633 \u2013 \u0631\u0636\u064a \u0627\u0644\u0644\u0647 \u0639\u0646\u0647 \u2013 \u060c \u0639\u0646 \u0627\u0644\u0646\u064e\u0651\u0628\u064a\u0651 \u2013 \u0635\u0644\u0649 \u0627\u0644\u0644\u0647 \u0639\u0644\u064a\u0647 \u0648\u0633\u0644\u0645 \u2013 \u060c \u0642\u064e\u0627\u0644\u064e : ( \u0644\u0627 \u064a\u064f\u0624\u0645\u0650\u0646\u064f \u0623\u062d\u064e\u062f\u064f\u0643\u064f\u0645\u0652 \u062d\u064e\u062a\u064e\u0651\u0649 \u064a\u064f\u062d\u0650\u0628\u064e\u0651 \u0644\u0623\u064e\u062e\u0650\u064a\u0647\u0650 \u0645\u064e\u0627 \u064a\u064f\u062d\u0628\u064f\u0651 \u0644\u0650\u0646\u064e\u0641\u0652\u0633\u0650\u0647\u0650 ) \u0645\u064f\u062a\u064e\u0651\u0641\u064e\u0642\u064c \u0639\u064e\u0644\u064e\u064a\u0647\u0650 .  <p>Dari Anas radhiyallahu \u2018anhu, ia berkata, \u201cTidaklah sempurna iman seseorang di antara kalian sampai ia mencintai saudaranya sebagaimana ia mencintai dirinya sendiri.\u201d  (Muttafaqun \u2018alaih. HR. Bukhari no. 13 dan Muslim no. 45)<sup>1</sup></p>"},{"location":"DBMS/Catatan%20MySql/#books","title":"Books","text":"<p>Sumber buku berjudul Learn SQL Database Programming yang ditulis oleh Josephine Bush dan dipublish oleh Packt Publishing.</p> <p>Buku ini memliki 14 Chapter dan dibagi menjadi 5 sesi berikut;</p> <ol> <li>Database Fundamental</li> <li>Basic SQl Querying</li> <li>Advanced SQL Querying</li> <li>Presenting Your Finding</li> <li>SQL Best Practice</li> </ol>"},{"location":"DBMS/Catatan%20MySql/#why-this-books","title":"Why this books ?","text":"<p>Oke, pertama, saya sangat suka dengan kebanyakan struktur serta bahasa dari buku yang diterbitkan Packt (Walaupun terkadang tidak semuanya), sehingga mudah untuk dipahami dan tidak lompat sana dan lompat sini dari setiap chapter, terususun secara rapih.</p> <p>Termasuk dari buku ini, penjelasan dari penulis sangat detail ke tekhnis dengan bahasa yang mudah serta dilengkapi dengan contoh dan output dari setiap query yang dipampang pada buku ini. Selait itu, buku ini juga menyediakan resouce berupa query-query yang ada pada buku ini serta disediakan juga data untuk berlatih.</p>"},{"location":"DBMS/Catatan%20MySql/#mana-resource-nya","title":"Mana resource nya ?","text":"<p>Oke, kunjungi github ini</p> <ol> <li> <p>https://rumaysho.com/3648-nasehat-adalah-cinta.html\u00a0\u21a9</p> </li> </ol>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/","title":"Rangkuman Muka","text":"<p>Note</p> <p>Catatan ini sering terbalik dalam penulisan sebuah istilah, nama fungsi dan lain-lain dalam Bahasa Indonesia dan english</p> Bahasa English Basis Data Database Tabel Table Kolom Column Baris Row or Records"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#melihat-status-mysql","title":"Melihat Status MySql","text":"<pre><code>systemctl status mysql.service\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#cara-menjalankan-service-mysql","title":"Cara menjalankan service MySql","text":"<pre><code>sudo systemctl start mysql.service\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#membuat-user-baru-pada-mysql","title":"Membuat User Baru pada MYSQL","text":"<pre><code>use mysql;\nCREATE USER 'username'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL ON *.* TO 'username'@'localhost';\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#create-backup-menggunakan-mysqldump","title":"Create backup menggunakan mysqldump","text":"<pre><code>mysqldump -u my_username -p database_name &gt; output_file_path\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#import-hasil-backup-ke-database","title":"Import hasil backup ke database","text":"<pre><code>mysql -u farras -p database_name &gt; back_name.sql\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#menampilkan-index-dari-sebuah-tabel","title":"Menampilkan index dari sebuah tabel","text":"<pre><code>SHOW INDEX FROM table_name\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#informasi-dari-sebuah-kolom","title":"Informasi dari sebuah kolom","text":"<pre><code>SHOW COLUMNS FROM table_name1\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#menampilkan-nilai-dari-vairable","title":"Menampilkan nilai dari vairable","text":"<pre><code>SHOW VARIABLES LIKE '[variabel_name]'\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#menampilkan-constraint-yang-digunakan-pada-sebuah-table","title":"Menampilkan Constraint yang digunakan pada sebuah table","text":"<pre><code>SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS\nWHERE TABLE_NAME='nama table';\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#menambah-constrain-pada-tabel-yang-eksis","title":"Menambah Constrain pada Tabel yang eksis","text":"<pre><code>ALTER TABLE table_names\n ADD CHECK (columns_names&gt;=18);\n -- Use your logic\n\n -- Equal to, using costumne constraint name --\n ALTER TABLE table_names\n ADD CONSTRAINT 'constrain_name' CHECK (columns_name &gt; 0)\n -- Use your logic --\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#menampilkan-query-yang-mendefiniskan-sebuah-table","title":"Menampilkan query yang mendefiniskan sebuah table","text":"<pre><code>SHOW CREATE TABLE table_name\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#update-struktur-dan-konidis-dari-tabel","title":"Update struktur dan konidis dari tabel","text":"<pre><code>ALTER TABLE table_name\nADD CONSTRAINT PK_Person PRIMARY KEY (ID,LastName);\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#menampilkan-baris-menggunakan-like-dan-wildcard","title":"Menampilkan baris menggunakan LIKE dan wildcard","text":"<pre><code>SELECT playerID, G_all, G_batting, G_defense \nFROM lahmansbaseballdb.appearances \nWHERE playerID LIKE \"%a%\"\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#menambah-index-pada-table-yang-sudah-ada","title":"Menambah INDEX pada table yang sudah ada","text":"<pre><code>ALTER TABLE `database_name`.`table_name`\nADD INDEX `index_name` (`columns_name` ASC, `columns_name` ASC, `columns_name`\nASC, `columns_name` ASC) VISIBLE;\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#menghapus-index-pada-sebuah-table","title":"Menghapus INDEX pada sebuah table","text":"<pre><code>ALTER TABLE `database_name`.`tables_names`\nDROP INDEX `index_name`;\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#menggabungkan-baris-baris-kedalam-satu-kolom-yang-di-concat","title":"Menggabungkan baris-baris kedalam satu kolom yang di concat","text":"<pre><code>SELECT \n  name,   -- Microsoft\n  other,  -- GGG\n  other2, -- 1\n  GROUP_CONCAT(id) AS ids\nFROM tbl\nGROUP BY name, other, other2\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#menggabungkan-union-all-atau-unio-tabel-yang-sama-gunakan-disetiap-select-statement","title":"Menggabungkan UNION ALL atau UNIO tabel yang sama gunakan () disetiap select statement","text":"<pre><code>/*\nEnter your query here.\n*/\n(SELECT CITY, LENGTH(CITY) AS LN\nFROM STATION\nORDER BY LN ASC, CITY ASC\nLIMIT 1)\nUNION ALL\n(SELECT CITY, LENGTH(CITY) AS LN2\nFROM STATION\nORDER BY LN2 DESC, CITY ASC\nLIMIT 1)\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#regex-where-rlike-statement","title":"Regex WHERE RLIKE statement","text":"<p>Query ini menampilkan nama CITY yang diawail dengan huruf a,i,u,e atua o <pre><code>SELECT CITY\nFROM STATION\nWHERE CITY RLIKE '^[a,i,u,e,o]'\n</code></pre></p>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#summing-statement","title":"Summing statement","text":"<p>Tampilkan jumlah populasi dari tabel city hanya pada district Californial</p> <pre><code>select sum(population)\nfrom city\nwhere district = 'California'\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#average-statement","title":"Average statement","text":"<p>Tampilkan rata-rata populasi dari tabel city hanya pada district Californial <pre><code>select avg(population)\nfrom city\nwhere district = 'California'\n</code></pre></p>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#when-case-statement-and-nested-when-case","title":"When case statement and nested when case","text":"<pre><code>SELECT \nCASE\n    WHEN A + B &gt; C THEN\n        CASE\n            WHEN A = B AND B = C THEN \"Equilateral\"\n            WHEN A = B OR B = C OR A = C THEN \"Isosceles\"\n            WHEN A != B AND B != C THEN \"Scalene\"\n        END\n    ELSE \"Not A Triangle\"\nEND\nFROM TRIANGLES\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#describe-table-struktur","title":"Describe Table Struktur","text":"<pre><code>describe appearances;\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#alter-table-untuk-mengatur-default-value","title":"Alter table untuk mengatur default value","text":"<pre><code>ALTER TABLE table_name\n ALTER column_name SET DEFAULT 'Sandnes'; \n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#drop-default-value","title":"Drop default value","text":"<pre><code>ALTER TABLE Persons\n ALTER City DROP DEFAULT; \n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#membuat-tabel-baru-dan-diisi-data-dari-tabel-yang-sudah-ada","title":"Membuat tabel baru dan diisi data dari tabel yang sudah ada","text":"<pre><code>CREATE\u00a0TABLE\u00a0newtable\nSELECT\u00a0*\u00a0FROM\u00a0existingtable;\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#membuat-table-dengan-struktur-tabel-mengikuti-tabel-yang-sudah-ada","title":"Membuat table dengan struktur tabel mengikuti tabel yang sudah ada","text":"<pre><code>CREATE\u00a0TABLE\u00a0newtable\nSELECT\u00a0*\u00a0FROM\u00a0existingtable;\nWHERE 1 = 0\n--- Condition is always false\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Rangkuman%20Muka/#memasukan-data-dari-tabel-yang-eksis-ke-table-yang-eksis","title":"Memasukan data dari tabel yang eksis ke table yang eksis","text":"<pre><code>INSERT\u00a0INTO\u00a0existingtable\nSELECT\u00a0*\u00a0FROM\u00a0anotherexistingtable\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/01.%20Understanding%20RDBMS/","title":"Understanding RDBMS","text":""},{"location":"DBMS/Catatan%20MySql/01.%20Understanding%20RDBMS/#element-of-sql","title":"Element of SQL","text":""},{"location":"DBMS/Catatan%20MySql/01.%20Understanding%20RDBMS/#understanding-database","title":"Understanding Database","text":"<p>Database (basis data) adalah sekumpulan data. Kita menyimpan basis data dalam bentuk Relational Database Management System (RDBMS). RDBMS adalah basis utama untuk database system terkini seperti MySQL, SQL Server, Oracle, PostgreSQL dan lain-lain.</p>"},{"location":"DBMS/Catatan%20MySql/01.%20Understanding%20RDBMS/#table","title":"Table","text":"<p>Table adalah kumpulan dari data yang terikat yang disimpan dalam bentuk kolom-kolom dan baris-baris. Contoh gambar dibawah ini adalah gambaran dari tabel yang mengandung data tentang penampilan para pemain bintang pada olahraga baseball</p> <p></p> <p>Nilai NULL pada table adalah sebuah nilai yang kosong atau blank. Nilai tersebut tidak merepresentasikan sebuah string dari sebuah spasi kosong. </p>"},{"location":"DBMS/Catatan%20MySql/01.%20Understanding%20RDBMS/#fields","title":"Fields","text":"<p>Fields adalah sebuah persimpangan atau titik temu dari baris dan kolom. Field ini bisa berbentuk dari berbagai mancam tipe data, termasuk <code>yearID</code>, <code>teamID</code> atau <code>playerID</code> field.</p> <p></p>"},{"location":"DBMS/Catatan%20MySql/01.%20Understanding%20RDBMS/#record-or-rows","title":"Record or Rows","text":"<p>Row mengandung nilai pada sebuah data horizontal. <pre><code>+-----------+--------+--------+------+----------+------+------+------+------+---------+\n| playerID  | yearID | teamID | lgID | inseason | G    | W    | L    | rank | plyrMgr |\n+-----------+--------+--------+------+----------+------+------+------+------+---------+\n| wrighha01 |   1871 | BS1    | NA   |        1 |   31 |   20 |   10 |    3 | Y       |\n+-----------+--------+--------+------+----------+------+------+------+------+---------+\n</code></pre></p>"},{"location":"DBMS/Catatan%20MySql/01.%20Understanding%20RDBMS/#memahami-data-integrity","title":"Memahami Data Integrity","text":"<p>Data integrity membentuk konsistensi dan keakuratan dari data. Data Integirity biasanya disusun saat proses mendisain prosedur dan petunjuk. Dalam RDBMS, Penggunaan keys membentuk data integrity. Key tersebut ditetapkan dan memaksa nilai pada sebuah tabel untuk menyesuaikan terhadap standar yang telah dispesifikasi. Standard ini membatasi beberapa jenis nilai yang dapat disimpan didalam database.</p>"},{"location":"DBMS/Catatan%20MySql/01.%20Understanding%20RDBMS/#tipe-data-integrity","title":"Tipe Data Integrity","text":"<p>Ada tige tipe Data Integrity</p> Entity Integrity Referential Integrity Domain Integrity Unique Constraint Foreign Key Check Constraint Not Null Constraint Default Constraint Primari Key"},{"location":"DBMS/Catatan%20MySql/01.%20Understanding%20RDBMS/#entity-integrity","title":"Entity Integrity","text":"<p>Untuk memastikan setiap baris dari sbeuah tabel unik secara identitas, anda harus menggunakan entity integirty (EI). EI dicapai dengan menggunakan beberapa types of keys atau constraints, termasuk <code>unique</code>, <code>not null</code> dan <code>primary key</code> constraints</p>"},{"location":"DBMS/Catatan%20MySql/01.%20Understanding%20RDBMS/#unique-constraint","title":"Unique Constraint","text":"<p>Untuk memastikan semua nilai pada sebuah colom atau beberapa kolom berbeda pada setiap barisnya, anda dapa menggunakan Unique Constraint. Tipe key ini dapat diaplikasikan keberbagai maca tipe data, dan dapat digunakan untuk menghindari terjadinya duplikasi data. Unique Constraint ini juga dapat diaplikasikan lebih dari satu kolom. dan, unique constraint dapat menerima nilai null.</p> <p>Pada gambar tabel dibawah, kolom parkkey dipaksa untuk unique (Constraint Unique), sehingga nilai pada setiap barisnya tidak boleh sama. Namun untuk kolom parkname, city, state, dan country tidak, sehingga diperbolehkan nilai barisnya ada yang sama.</p> <p></p> <p>Nah, ini fitur yang baru saya tahu, hehehe. Jika anda membuat sebuah unique constraint pada sebuah kombinasi kolom dalam sebuah tabel (kombinasi kolom, gabungan n kolom yang dianggap menjadi satu kolom), pengapalikasian tersebut akan memaksa table untuk memliki nilai yang unik pada kombinasi kolom tersebut. Jika tidak, maka baris tidak akan dapat di - inserted or updated.</p> <p></p> <p>Contoh table diatas adalah kolom gabungan yang dipaksa untuk unik. gabungan nilai dari kolom palyerID, yearID, dan teamID harus unik setiap nilainya.</p>"},{"location":"DBMS/Catatan%20MySql/01.%20Understanding%20RDBMS/#not-null-constraint","title":"Not Null Constraint","text":"<p>Untuk memastikan semua nilai pada sebuah kolom tidak null, anda dapat menggunakan Not Null Constraint. Tipe key ini dapat diterapkan pada tipe data apapun dan digunakan untuk menghindari data yang tidak ada (wajib ada). Jika anda membuat not null constraint pada sebuah kolom, penerapan tersebut akan memaksa tabel untuk memiliki sebuah nilai pada kolom tertentu, jika nilainya null, maka row tersebut tidak dapat di- inserted or updated.</p> <p>Lihat tabel dibawah ini, untuk kolom birthYear dipaksa untuk tidak memliki nilai null (not null) sedangkan deathYear tidak, karena belum tentu semua orang memliki nilai tahun kematiannya.</p> <p></p>"},{"location":"DBMS/Catatan%20MySql/01.%20Understanding%20RDBMS/#primary-key","title":"Primary Key","text":"<p>Primary key digunakan untuk memastikan semua data pada sebuah kolom unik dan tidak mengandung null. PK dapat dikatakan gabungan dari Not Null Contraint dan Unique Constraints. Namun anda hanya dapat menggunakan satu PK pada satu table. Anda juga dapat membuat PK pada beberapa kolom gabungan. Pengimplementasian PK pada kolom gabungan disebut dengan composite key.</p> <p>Pada tabel dibawah ini, playerID dipaksa menjadi Primary Key, maka dari itu kolom tersebut harus unik dan tidak dapat menerima  null.</p> <p></p> <p>Sedangkan pada tabel dibawah ini, gabungan kolom dari playerID, yearID, dan teamID dibuat menjadi composite key, maka dari itu, nilai gabungan dari kolom-kolom tersebut tidak boleh bernilai null dan harus unik</p> <p></p>"},{"location":"DBMS/Catatan%20MySql/01.%20Understanding%20RDBMS/#referential-integrity","title":"Referential Integrity","text":"<p>Referential integrity merujuk pada konsistensi dan keakuratan antara tabel - tabel yang saling terhubung. Dengan mengimplementasi primary key pada parent table dan foreign key pada child table, maka anda akan mendapatkan refrential integrity. Foreign Key pada child table akan membuat penghubung antara satu atau lebih kolom pada child tabel dan primary key pada parent table atau dengan kata lain, jika foreign key tersedia, maka foregin tersebut harus valid, dan primary key harus tersedia pada parent table.</p> <p>Jika anda tidak memasang referential integrity, anda akan berakhir dengan orphaned records, data atau beberapa data pada baris yang tidak memliki pasangan pada parent table. Contohnya, katakan anda menghapus data seorang player dari tabel dibawah ini (parent table).</p> <p></p> <p>Namun anda tidak menghapus data (child table) pada tabel dibawah ini, maka records pada tabel tersebut akan menjadi orphaned records</p> <p></p> <p>Jika foreign key diimplementasikan pada kolom salary, maka data player tidak dapat dihapus dari parent table tanpa harus menghapus baris salary pada table salary. Dengan adanya foreign key, kita juga dapat menghindari orang untuk menambahkan baris pada child table yang tidak memiliki data yang terhubung pada data di parent table yang menyebabkan data pada baris tersebut menjadi orphaned records.</p> <p>Dalam membuat foreign key, foreign key harus memiliki refrensi pada sebuah kolom primary key tabel lain. Foreign key dapat di implemen pada tipe data apapun dan dapat menerima duplicate dan null values secara bawaan. Foreign key constraint dapat berupa tiga tipe hubungan antar tabel.</p> <ol> <li> <p>One-to-One: Tipe terjadi ketika hanya ada satu tabel hanya berhubungan dengan satu baris pada tabel yang lainnya. Sebuah contoh, tabel empolyess dan computers, stiap empolyee hanya memliki satu computer</p> </li> <li> <p>One-to-Many: Tipe ini terjadi ketika satu tabel tidak memiliki hubungan dengan satu atau lebih baris pada tabel yang lainnya. Sebagai contoh, adults tabel mungkin memiliki hubungan dengan satu atau lebih baris pada child tabel.</p> </li> <li> <p>Many-to-Many: Tipe hubungan ini terjadi ketika banyak baris pada sebuah tabel berhubungan dengan banyak baris dari tabel yang lainnya. Sebagai contoh, costumers table dengan products table, dimana costurmers dapat membeli banyak products dan product tertentu dapat dibeli oleh lebih dari satu costumers.</p> </li> </ol> <p>Pada contoh dibawah ini, primary key ada pada tabel pertama di kolom playerID. Tabel kedua terdapat foreign key yang memliki refrensi pada kolom playerID di tabel pertama. Dalam contoh ini, terdapat hubungan one-to-many antara tabel pertama dan kedua karena ada pemain pada tabel pertama yang tidak memliki, atau memliki satu atau banyak data (baris) pada tabel ke dua yang saling berhubungan.</p> <p> Jika anda memliki foreign key pada playerID di tabel kedua, makan anda tidak dapat menghapus nilai playerID pada table pertama sebelum anda men-delete playerID tersebut pada tabel kedua. Pengaturan ini disebut dengan referential integrity yang berguna untuk memastikan tidak ada data yang yatim pada tabel anak (child table).</p> <p>Referential Actions</p> <p>Ketika melakukan operasi <code>UPDATE</code> atau <code>DELETE</code> pada parent table yang memliki hubungan dengan kolom pada childlre table hasil operasi tersebut bergantung pada referential action. Aksi tersebut diantaranya</p> <ul> <li>CASCADE</li> <li>SET NULL</li> <li>RESTRICT</li> <li>NO ACTION</li> <li>SET DEFAULT</li> </ul> <p>Source</p>"},{"location":"DBMS/Catatan%20MySql/01.%20Understanding%20RDBMS/#domain-integrity","title":"Domain Integrity","text":"<p>Untuk memastikan semua data mengikuti aturan yang terlah terdefinisi seperti format nilai, aturan besaran nilai maka gunakan check constraint dan atau default constraint, secara garis besarnya menggunakna domain integrity.</p>"},{"location":"DBMS/Catatan%20MySql/01.%20Understanding%20RDBMS/#check-constraint","title":"Check Constraint","text":"<p>Check Constraint digunakan untuk memastikan semua nilai pada sebuah kolom berada dalam rentang nilai tertentu. Tipe key ini dapat diimplementasikan pada tipe data apapun dan digunakan untuk memastikan nilai tersebut valid atau tidak. Tipe constraint ini menggunakan aturan kondisi yang didefinisikan oleh pengguna dan mengevaluasi nilai tersebut yang menghasilan benar atau salah. Anda dapat mendefinisikan check constraint (membuat aturan) pada satu kolom atau kombinasi dari kolom pada sebuah tabel.</p> <p>Warning</p> <p>Penting untuk diingat, karena null tidak dianggap sebagai false, maka nilai tersebut akan tetap dapat di inserted atau di updated kedalam sebuah field dengan check constraint. Hal itu karena null akan dikenali sebagai unknown (bukan false atau true), nilai tersebut akan dilewati oleh check constraint. Jika anda ingin sebuah kolom tidak boleh bernilai null maka gunakan Not Null Constarint juga pada kolom tersebut.</p> <p>Contoh dibawah ini adalah tabel dimana check constraint akan melakukan evaluasi dimana kolom inducted hanya dapat di isi dengan nilai Y atau N. Jika nilai diluar dari dua pilihan tersebut maka baris tidak akan di updated atau di inserted. </p> <p>Sedangkan tabel dibawah ini adalah contoh dimana check constraint dapat diimplementasi pada kombinasi kolom, kasus dibawha ini anda ingin tahun kelahiran tidak boleh lebih besar dari pada angka kematian, maka dari itu, anda dapat menyetel check constraint yang mana hanya menerima add atau update jika birthYear &lt;= deathYear. </p>"},{"location":"DBMS/Catatan%20MySql/01.%20Understanding%20RDBMS/#default-constraints","title":"Default Constraints","text":"<p>Tipe ini digunakan untuk memastikan semua baris pada sebuah kolom memliki nilai. Tipe key ini dapat digunakan untuk semua tipe data. Default Constraint akan mengisi dengan nilai bawaan pada sebuah field. Constraint ini dapat menghindari sebuah filed terisi dengan nilai null jika nilai tersebut tidak didefinisikan oleh pengguna. 1Table Default Constraint</p> <p>Contoh diatas, table ab memilki default value 0 yang disetel menggunakan default constraint. Karena tidak semua pemain memliki nilai ab dari setiap pertandingan.</p>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/","title":"Data Types on MySql","text":"<p>Tipe-tipe data dari MySql, string, numeric</p> <ul> <li>String termasuk didalamnya, charm varchart, binary, dan varbinary, blob, enum, set dan text.</li> <li>Numeric termasuk didalamnya, bit, int, float, double dan decimal.</li> <li>Date and Time termasuk didalamnya, date, time, datetime, timestamp, dan year.</li> </ul>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#string-data-type-in-mysql","title":"String Data Type in MySql","text":"Click untuk melihat rangkuman Data Type Description Storage Used CHAR[(size)] Fixed-length string with size from 0-255 allowed; default of 1 if size not specified Size in bytes VARCHAR(size) Variable-length string with size from 0-65535 allowed Length of string + 1 byte if less than 255 bytes + 2 bytes if greater than 255 bytes BINARY[(size)] Binary fixed-length string with size from 0-255 allowed; default of 1 if size not specified Size in bytes VARBINARY(size) Binary variable-length string with size from 0-65535 allowed Size in bytes + 1 byte if less than 255 bytes + 2 bytes if greater than 255 bytes BLOB(size) Binary large objects with up to 65,535 bytes Size in bytes + 2 bytes TINYBLOB Binary large objects up to 255 in size Size in bytes + 1 bytes MEDIUMBLOB Binary large objects up to 16,177,215 in size Size in bytes + 3 bytes LONGBLOB Binary large object up to 4,294,967,295 in size Size in bytes + 4 bytes TEXT(size) Character strings with up to 65,535 bytes Size of string + 2 bytes TINYTEXT Character strings up to 255 in size Size of string + 1 bytes MEDIUMTEXT Character strings up to 16,177,215 in size Size of string + 3 bytes LONGTEXT Character strings up to 4,294,967,295 in size Size of string + 4 bytes ENUM(val1, val2,val3,..) String object that allows one value from a chosen list. The chosen list can be up to 65,535 values. 1 or 2 bytes depending on the number of enumerated values SET(val1, val2,val3,..) String object that allows zero or more values from a chosen list. The chosen list can be up to 64 values. 1,2,3,4, or 8 bytes depending on number of set members"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#char","title":"CHAR","text":"<p>Char adalah fixed-length string, yang mana dapat diise dengan tulisan, angka dan karakter spesial. Type ini disebut blank-padded dan mengandung deretang blank ( ) pada field-nya. Field tersebut dapat menampung antara 1~255, dan bawaanya (jika tidak ada spesifikasi nilai seperti CHAR(10) adalah 1. Besaran angka yang ada pada kurung kurawal menunjukan panjang maksimal dari char yang dispesifikasikan oleh pengguna saat membuat data field. Ruang yang dibutuhkan untuk CHAR adalah \\(^{*}n\\) , dimana \\(n &lt;= size &lt;= 255\\), dimana \\(n\\) adalah byte yang dibutuhkan untuk menampung karakter tertinggi.</p>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#varchar","title":"VARCHAR","text":"<p>Varchar adalah variable-length string, yang mana dapat menampung tulisan, angka dan karakter spesial. Field ini dapat menampung antara 0 - 65536 karakter.</p> <p>Info</p> <p>Dalam tahap memutuskan yang mana akan digunakan, antara CHAR &amp; VARCHAR, CHAR adalah pilihan yang baik untuk menyimpan strings yang panjang nilai-nilainya sama, atau mendekati sama. Karena CHAR membutuhkan penyimpanan yang lebih sedikit dan lebih cepat saat melakukan query dibandingkan dengan VARCHAR. VARCHAR baik digunakan dalam kondisi nilai-nilai pada field nantinya berisikan panjang yang sangat signifikan, bisa panjang sekali atau sangat pendek, seperti nama depan atau nama belakang (Contoh. udi &amp; Khrisnamukti)</p> Example Text CHAR(5) Field Size VARCHAR(5) FieldSize <code>''</code> <code>'  '</code> 5 bytes <code>''</code> 1 byte <code>'as'</code> <code>'as   '</code> 5 bytes <code>'as'</code> 3 bytes <code>'asdf'</code> <code>'asdf   '</code> 5 bytes <code>'asdf'</code> 5 bytes <code>'asdfghj'</code> <code>'asdfg'</code> 5 bytes <code>'asdfg'</code> 7 bytes"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#binnary","title":"BINNARY","text":"<p>Binnary seperti Char, namun yang disimpan adalah byte string, bukan karakter. Field ini dapat diisi menyimpan dengan rentang 0-255, dan ukuran bawaannya adalah 1. Contohnya, karakter \u2018b\u2019 didalama binnary kolom menjadi \u2018b\\0\u2019 ketika dimasukan kedalam BINNARY field.</p>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#varbinnary","title":"VARBINNARY","text":"<p>VARBINNARY sama seperi VARCHAR, namun yang disimpan adalah byte data. Field ini dapat menyimpan  dengan rentang 0-65535</p>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#blob","title":"BLOB","text":"<p>Blob singkatan dari binary large objects, memperlakukan nilai-nilai seperti binary strings. Blob dapat menampung sebuah variable yang berisikan sejumlah data. Ada empat tipe BLOB, TINYBLOB, BLOBL, MEDIUMBLOB, &amp; LONGBLOB. Yang membedakan tipe tersebut hanyalah jumlah data yang mereka bisa tampung.</p> <p>Warning</p> <p>Usahakan untuk tidak menggunakan BLOB karena akan membuat bengkak database dan akan membuat performa query menjadi buruk. Solusinya, simpan data kedalam disk atau file, lalu pada database yang disimpan hanya alamat kedalam disk atau file tersebut.</p>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#text","title":"TEXT","text":"<p>Nilai dari TEXT disimpan pada text field dan diperlakukan seperti karakter dari pada binary strings. TEXT dapat menampung sebuah variabel yang berisikan sejumlah data. Ada empat tipe, TINYTEXT, TEXT, MEDIUMTEXT, &amp; LONGTEXT. Yang membedakannya hanya jumlah data yang dapat ditampung.</p>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#enum","title":"ENUM","text":"<p>Enum singkatan dari enumerated list. <code>ENUM(val1,val2,val3,...)</code>, anda dapat memasukan beberapa nilai yang dipisah dengan koma sebagai sebuah pilihan nantinya. Ketika meng-insert value kedalam tipe data ini, jika nilai yang dimasukan tidak tersedia dengan nilai yang dispesifikan diawal pada saat membuat field ini, maka nilai tersebut tidak akan di-insert atau di-update. Anda dapat memliki hingga 65,535 bytes didalam ENUM list.  Contoh dibawah ini adalah table tipe data ENUM list.</p> <p></p>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#set","title":"SET","text":"<p>Sama seperti enum, namun dalam set, anda dapat memlilih lebih dari satu buah nilai yang tersedia. Mudahnya berikut adalah tabel yang berisikan nilai dengan tipe data SET</p> <p></p>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#numeric-data-type-in-mysql","title":"Numeric Data Type in MySQL","text":"<p>Numeric data type dapat menampung <code>integers</code>, termasuk angka positif dan negatif. Juga dapat menampung <code>fixed-point</code> dan <code>floating-point</code> yang mana di simpan dalam bentuk pecahan.</p> Click untuk melihat rangkuman tipe data numeric Data Type Description Storage Used INT(size) tores wholse numbers. Ranges from -2147483648 to 147483647 for signed and 0 to 4294967295 for unsigned. 4 Bytes INYINT(size) Stores whole numbers. Ranges from -128 to 127 for signed and 0 to 255 for unsigned. 1 Bytes SMALLINT(size) Stores whole numbers. Ranges from -32768 to 32767 for signed and 0 to 65535 for unsigned 2 Bytes MEDIUMINT(size) Stores whole numbers. Ranges from -8388608 to 8388607 for signed and 0 to 16777215 for unsigned. 3 Bytes BIGINT(size) Stores whole numbers. Ranges from -9223372036854775808 to 9223372036854775807 for signed or 0 to 8446744073709551615 for unsigned 8 Bytes FLOAT(size, d) Floating-point number. Where size is the digits in total, and d is the digits after the decimal place. The size ranges from 0 to 23. FLOAT(8,4) would display as 1234.5678 4 Bytes DOUBLE(size, d) Floating point number. Where size is the digits in total, and d is the digits after the decimal place. The size ranges from 24 to 53. FLOAT(24,3) would display as 123456789012345678901.123 8 Bytes DECIMAL(size,d) Exact fixed-point number. Maximum size is 65, and maximum d is 30. The default size is (10,0). Variable BIT[(size)] The range is 1 to 64. The default size is 1. (size 7+)/8  Bytes <p>Tipe data numeric didalam MySQL diantaranya;</p>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#int","title":"INT","text":"<p>Dapat menampung -2147483648 hingga 2147483647. Tipe data ini hanya dapat menampung angka bulat. Jika ada nilai dalam bentuk pecahan yang dimasukan kedalam field dengan tipe data int maka akan dibulatkan keatas ataupun kebawah tergantung nilai pecahan. Jika anda mencoba menampung nilai yang melebihi batas daya tampung tipe data int maka nilai tersebut tidak akan disimpan, dan anda akan mendapatkan pesan error.</p> <p>Contoh : Pembulatan nilai pecahan pada field dengan tipe data int</p> Value to Insert INT value 12.34 12 12.76 13 <p>Nilai - nilai dari int dapat di signed atau unsigned. Unsigned hanya dapat menyimpan angka positif dan signed dapat meyimpan angka positif dan negatif. Namun diingat, S==igned dan Unsigned tidak merubah daya tampungnya==, akan tetapi hanya merubah rentang ke posisi positifnya pada unsigned. Tabel dibawah ini menggambarkan daya tampung berdasarkan signed dan unsigned values dari tipe-tipe seperti int (beda ukuran penampungan)</p> Types Signed Range Usigned Range TINYINT -128 to 127 0 to 255 SMALLINT -32768 to 32767 0 to 65535 MEDIUMINT -8388608 to 8388607 0 to 16777215 INT -2147483648 to 2147483647 0 to 4294967295 BIGINT -9223372036854775808 to 9223372036854775807 0 to 18446744073709551615 <p>Dalam memilih tipe data int, sangat penting untuk memlih ukuran yang sekecil mungkin agar mengurangi pemakaian ruang peyimpanan, smaller is better when we talk about eats storage space.</p>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#float","title":"FLOAT","text":"<p>Floating-point number, maksudnya adalah tidak ada nomor yang tetap dari digit-digit sebelum dan sesudah desimal, sehingga angka desimal dapat mengambang (berganti-ganti). Untuk menggunakan tipe data ini, gunakan FLOAT(size,p), dimana <code>size</code> adalah digit angka keseluruhan (termasuk desimal), dan <code>p</code> adalah digit angka desimal. Ukuran maksimum dari size adalah 24. Jika besaran nilai yang anda miliki diatas dari 24, gunakan Double. Keakuratan Float mendekati 7 angka desimal.</p> <p>Sebagai contoh, jika anda ingin menyimpan nilai 1234.5678, anda harus membuat data type FLOAT(8,4). Float sangat berguna untuk hal seperi kalkulasi ilmiah dimana tambahan nilai dsimal sangat membantu. </p>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#double","title":"DOUBLE","text":"<p>Floating-point-number. Syntax untuk menggunakannya DOUBLE(size,d) dimana <code>size</code> adalah digit angka keseluruhan (termasuk desimal), dan <code>p</code> adalah digit angka desimal.</p> <p>Tipe data double memiliki keakuratan hingga 14 digit desimal. Untuk meyimpan angka seperti 1234567890123456789012345.1234567, anda harus membuat DOUBLE(33,7).</p> <p>Danger</p> <p>Jangan gunakan tipe Float dan Doubel untuk data keuangan karena kedua tipe tersebut tidak seakurat DECIMAL.</p>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#bit","title":"BIT","text":"<p>Meyimpan nilai biner (binary). Syntax-nya BIT(size), dimana size adalah angka dalam bit yang dapat ditampung. Rentang nilai dari size yang dapat diberikan adalah antara 1 - 64. Jika size tidak diisi, nilai bawaannya adalah 1. Secara umum, BIT menyimpang 0 dan 1 nilai boolean, dimana 0 adalah false, dan 1 adalah true.</p>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#date-and-time-data-types-in-mysql","title":"Date and time data types in MySQL","text":"Click untuk melihat rangkuman tipe data Date and Time Data Type Description Storage Used DATE Stores dates in the format 'YYYY-MM-DD' Ranges from '1000-01-01' to '9999-12-31' 3 bytes TIME Stores time in format: <code>hh:mm:ss</code> Ranges from '-838:59:59' to '838:59:59' 3 bytes DATETIME Stores date and time combination in format YYYY-MM-DD <code>hh:mm:ss</code> Ranges from '1000-01-01 00:00:00' to '9999-12-31 23:59:59' 8 bytes TIMESTAMP Stores time in number of seconds since '1970-01-01 00:00:00' UTC Ranges from '1970-01-01 00:00:01' UTC to '2038-01-09 03:14:07' UTC 4 bytes YEAR Stores year in four-digit format Ranges from 1901 to 2155, and includes 0000 1 bytes"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#date","title":"Date","text":"<p>Tipe data ini dapat meyimpan tanggal dalam format <code>YYYY-MM-DD</code>. Rentangnya antaran 1000-01-01 hingga 9999-12-31. Sebagai contoh, December 15, 1995, akan disimpan dalam bentuk 1995-12-15.</p>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#time","title":"TIME","text":"<p>Tipe data ini dapat meyimpan waktu dalam format <code>hh:mm:ss</code>, dengan rentang dari -838:59:59 hingga 838:59:59</p>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#datetime","title":"DATETIME","text":"<p>Tipe data ini adalah kombinasi dari DATE dan TIME, disimpan dalam bentuk <code>YYYY-MM-DD hh:mm:ss</code>. Memiliki rentang 1000-01-01 00:00:00 hingga 9999-12-31 23:59:59. Sebagai contoh, tanggal \u2192 January 19, 2003, at 3:30 p.m akan disimpang dalam bentuk 2003-01-19 15:30:00</p>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#timestamp","title":"TIMESTAMP","text":"<p>Tipe data ini dapat meyimpan nilai yang terdiri dari tangga dan time. Tipe ini memliki rentang, 1970-01-01 00:00:00 UTC hingga 2038-01-19 03:14:07 UTC (Coordinate Universal Time; formerly Greenwich Mean Time). Nilai ini disimpan dalam bentuk detik.</p> <p>Perbedaan TIMESTAMP dan DATETIME</p> <p>Perbedaan yang siginifikan diantranya keduanya adalah, nilai TIMESTAMP disimpan dalam bentuk UTC dan ketika di query akan dikonversi ke current timezone. Disisilain, nilai DATETIME disimpan sudah dalam bentuk current time zone</p>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#year","title":"YEAR","text":"<p>Tipe data ini dapat meyimpan tahun dalam bentuk 4 digit. Rentangnya dari 1901 higga 2155 dan 0000.</p>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#other-data-type-in-mysql","title":"Other Data Type in MySQL","text":""},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#json","title":"JSON","text":"<p>Tipe data ini dapat menyimpan JSON (JavaScript Object Notation), dibawah ini adalah contoh syntax dari JSON. <pre><code>{\n    \"Author\":\"Josephine Bush\", \n    \"book\": \"Learn SQL Programming\"\n}\n</code></pre> MySql menyediakan validasi secara otomatis, sehingga ketika anda meyimpan JSON kedalam field denga type JSON, MySql akan memastikan format JSON tersebut benar atau tidak. Sebaliknya, jika anda menyimpannya (misalkan) VARCHAR, maka tidak ada jaminan data yang tersimpan tersebut sudah benar bentuk format JSON-nya. Lebih lanjut baca catatan tambahan json data type</p>"},{"location":"DBMS/Catatan%20MySql/02.%20Understanding%20The%20Data%20Type/#choosing-the-right-data-type","title":"Choosing the right data type","text":"<p>Sangat penting untuk dipahami bagaimana efek penggunaan penyimpanan (storage usage) terhadap database. Kebanyakan database disimpan didalam sebuah disk (Dalam beberapa kasus tertentu dapat juga disimpan didalam memory). Sewaktu database mengambil data fetching data, database tersebut harus membaca kedalam disk dan mengembalikan hasilnya ke pengguna. Disinilah dimana I/O (Input/Output) berkerja.</p> <p>Disk I/O secara terus menerus membaca dan menulis disk, dan tingkat tersebutlah yang mempengaruhi kecepatan data ditransfer dari disk kedalam memory. Semakin banyak data yang diambil semakin lama data diterima, ditambah jika banyak pengguna yang mengambil data secara bersamaan, maka akan semakin lama lagi proses yang dibutuhkan. Inilah mengapa pemilihan tipe data sangat vital.</p> <p>Ini beberapa alasan pentingnya memilih tipe data yang tepat, diantaranya;</p> <ul> <li> <p>Jika anda memliki tipe data yang besar melebihi data yang nantinya akan disimpan, hal tersebut membuat boros tempat peyimpanan. Semakin kecil ruang penyimpanan yang digunakan, semakin banya data yang anda miliki di memory (RAM), ini akan meningkatkan performa databse.</p> </li> <li> <p>Jika anda memlih tipe data yang lebih kecil dibandingkan data yang nanti akan disimpan, ini akan menyebabkan data yang anda simpan akan di trucated  ketika di insert, atau akan menyebabkan error ketika proses insert tersebut.</p> </li> </ul> <p>Contoh pemilihan data type yang tepat</p> <ul> <li> <p>Sebuah pernyataan yang (misalkan) kodenegara yang terdiri dari dua huruf, ID or MY. Lebih baik menggunakna CHAR dari pada VARCHAR, karena nilai-nilai tersebut memiliki panjang karakter yang sama. CHAR(2)</p> </li> <li> <p>Pernyataan seperti nama daerah, Jakarta, Bandung, Sulawesi barat dsb. Lebih baik menggunakan VARCHAR (dengan spesifikasi maksimal karakter) karena variasi panjang karakter dari data yang akan disimpan. VARCHAR(30).</p> </li> <li> <p>Sebuah kalimat atau paragrap lebih baik dimasukan kedalam field tipe TEXT dan pada tabel yang terpisah (sendiri) untuk mengoptimalkan performa tabel. TEXT</p> </li> <li> <p>Meyimpan files, atau image, dibanyak kondisi gunakan filesystem. Jangan menyimpan files atau image kedalam database. BLOB</p> </li> <li> <p>Enumerated dan set values, sebisa mungkin hindari tipe data ini karena jika anda memutuskan ingin menambahkan sebuah nilai kedalam ENUM dan SET, MySql harus membuat ulang table, dan ditambah dengan kondisi anda memliki jumlah baris yang sangat banyak, akan menyebabkan penggunaan waktu yang berlebihan. Selain itu, developers dapat membuat logika tertentu pada sisi aplikasi untuk menangani hal tersebut dibandingkan dengan MySql table yang dapat lakukan. ENUM or SET</p> </li> <li> <p>Untuk menyimpan 0 dan 1, seperti jikan nilai true or false. BIT</p> </li> </ul>"},{"location":"DBMS/Catatan%20MySql/03.%20Creating%20and%20Designing%20Database/","title":"Creating and Designing Database","text":""},{"location":"DBMS/Catatan%20MySql/03.%20Creating%20and%20Designing%20Database/#how-to-craete-database","title":"How To Craete Database","text":""},{"location":"DBMS/Catatan%20MySql/03.%20Creating%20and%20Designing%20Database/#creates-schema","title":"Creates Schema","text":"<pre><code>CREATE SCHEMA `schema_name`;\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/03.%20Creating%20and%20Designing%20Database/#understanding-table-relationship","title":"Understanding Table Relationship","text":"<p>Relational databases terdiri dari tabel-tabel yang saling berelasi satu dengan yang lainnya. Saat anda meng-query lebih dari satu tabel, anda dapat mengandakan relasi tersebut untuk meng-join tabel secara bersamaan. Ada tiga tipe relasi tabel: <code>one-to-one</code>, <code>one-to-many</code> dan <code>many-to-many</code>.</p>"},{"location":"DBMS/Catatan%20MySql/03.%20Creating%20and%20Designing%20Database/#understanding-one-to-one-relationships","title":"Understanding One-to-One relationships","text":"<p>Dalam tipe hubungan ini, sebuah tabel hanya memiliki satu baris yang sesuai terhadap tabel lain. Tipe hubungan ini juga jarang dan digunakan. Biasanya, database administrator menggunakan ini untuk tujunan keamanan. Misalkan, anda memliki tabel employess, namun ingin membuat tabel terpisah untuk tabel employeePay karena hanya beberapa admin lain yang dapat mengakses tabel employeepay tersebut.</p> <pre><code>erDiagram\n    employess ||..|| employeePay : employeeId\n\n    employess {\n        string employeeId\n        string name\n        string address\n    }\n\n    employeePay{\n        string employeeId\n        string wagePerMonth\n    }\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/03.%20Creating%20and%20Designing%20Database/#understanding-one-to-many-relationships","title":"Understanding One-to-Many Relationships","text":"<p>Dalam tipe hubungan ini, sebuah tabel dapat memiliki satu atau banyak baris yang cocok dengan tabel lain, atau bahkan tidak sama sekali. <pre><code>erDiagram\n    adult ||..}o child : adultId\n    adult {\n        string adultId\n        string firstName\n        string lastName\n    }\n    child {\n        string childId\n        string adultId\n        string childName\n    }</code></pre></p>"},{"location":"DBMS/Catatan%20MySql/03.%20Creating%20and%20Designing%20Database/#understanding-many-to-many-relaionships","title":"Understanding Many-to-Many Relaionships","text":"<p>Dalam tipe hubungan ini, sebuah tabel cocok dengan banyak baris pada tabel lain. Contohnya, tabel costumers dengan tabel products. Pelanggan dapat membeli lebih dari satu buah produk, sedangkan produk juga dapat dibeli oleh lebih dari satu pelanggan. <pre><code>erDiagram\n    costumers o{..}o products : costumerId\n    costumers {\n        string costumerId\n        string firstName\n        string lastName\n    }\n    products {\n        string productId\n        string costumerId\n        string productName\n    }</code></pre></p>"},{"location":"DBMS/Catatan%20MySql/03.%20Creating%20and%20Designing%20Database/#summary-about-relationships","title":"Summary About Relationships","text":"<pre><code>erDiagram\n    salaries {\n        string playerId\n        string salaryId\n        yaer yearId\n    }\n    peoples {\n        string playerId\n        string birthYear\n        string birthMonth\n    }\n    collegePlaying {\n        string schoolId\n        string playerId\n        string yearId\n    }\n\n    schools {\n        string schoolId\n        string nameFull\n        string city\n    }\n\n    appearances {\n        string playerId\n        string teamId\n        string yearId\n    }\n\n    salaries }|..||peoples : playerId\n    peoples ||..o{ collegePlaying : playerId\n    peoples ||..o{ appearances : playerId\n    collegePlaying }|..||schools : schoolId </code></pre> <ul> <li>People memliki hubungan one-to-many terhadap salaries</li> <li>People memiliki hubungan one-to-zero atau one-to-many terhadap collegeplaying</li> <li>People memiliki hubungan one-to-zero atau one-to-many terhadap apperances</li> <li>collegeplaying memiliki hubungan many-to-one terhadap schools</li> </ul>"},{"location":"DBMS/Catatan%20MySql/03.%20Creating%20and%20Designing%20Database/#learning-to-create-database","title":"Learning to Create Database","text":"<p>Warning</p> <p>Pastikan schema <code>baseball</code> sudah dibuat jika ingin mengikuti query yang sama persis dengan query yang disediakan dicatatan ini.</p> <p>Jika <code>baseball</code> belum dibuat gunakan query dibawah ini <pre><code>CREATE SCHEMA `baseball`;\n</code></pre></p> <p>Simulasi yang digunakan pada catatan ini akan bersinggunan dengan dua buah tabel, <code>managers</code> dan <code>teams</code>, dibawah ini adalah sumber data yang akan dimasukan pada kedua tabel tersebut.</p> <ul> <li>Managers</li> <li>Teams</li> </ul> <p>Sebelum membuat tabel,anda harus menginspeksi tabel tersebut sehingga mengetahui hubungan antara tabel Managers dengan Teams dan bagaimana memasang data integrity menggunakan keys dan constraints. Satu hal yang sangat membantu dalam memahai hubunga tersebut adalah dengan melihat perbedaan nilai dari setiap kolom yang ingin kita tambah pada tabel didalam database. Kita dapat memanfaatkan fitur Column Status dari google spread sheet.</p> <p>Hasil inspeksi tabel Manager</p> <p>Kolom yang akan digunakan adalah playerID, yearID, teamID, G, W, L &amp; plyrMgr</p> <ul> <li>Tidak ada kolom yang unik</li> <li>playerID terdiri dari 8-9 alphanumeric, bahkan bisa terdiri dari 3 karakter saja (panjang karakternya signifikan).</li> <li>Rentang nilai yearID 1964-2018</li> <li>teamID terdiri dari 3 huruf</li> <li>G, W dan L berisikan angka saja dengan rentang (0-166, 0-115 0-119)</li> <li>plyrMgr terdiri dari nilai Y atau N</li> </ul> <p>Hasil inspeksi tabel Team</p> <p>Kolom yang akan digunakan adalah yearID, lgID, teamID, &amp; Rank * Tidak ada kolom uang unik * Rentang nilai yearID 1871-2018 * Rank memliki nilai minimum 1, dan maksimum 12 * teamID terdiri dari 3 huruf * lgID terdiri dari 2 huruf</p> <p>Berdasarkan hasil inspeksi terhadap tabel, kita dapat menentukan tipe data yang sesuai sehingga dapat mencapai performa yang terbaik pada database, tabel berikut menerangkan rangkuman nama kolom, tipe data yang digunakan atau termasuk Key atau Constraint</p> <p>Rangkuman inspeksi tabel Manager</p> Original Coloumn Name Table column name Data type Key or Constraint Tidak ada managerkey SMALLINT(5) Primary Key Auto Incrament playerID playerid VARCHAR(9) Bagian dari <code>unique composite key</code>, <code>Not Null Constraint</code> yearID yearid YEAR Bagian dari <code>unique composite key</code>, <code>Not Null Constraint</code>, dan <code>Check Constraint</code> untuk rentang 1964-2018 teamID teamid CHAR(3) Bagian dari <code>unique composite key</code>, <code>Not Null Constraint</code>, dan <code>Foreign Key</code> untuk tabel pada kolom teamID G games TINYINT Not Null Constraint W wins TINYINT Not Null Constraint L losses TINYINT Not Null Constraint plyrMgr alsoplayer CHAR(1) <code>Not Null Constraint</code>, <code>Check Constraint</code> untuk nilai Y dan N <p>Rangkuman inspeksi tabel Team</p> Original Coloumn Name Table column name Data type Key or Constraint Tidak ada teamkey SMALLINT(5) <code>Primary Key Auto Incrament</code> yearID yearid YEAR Bagian dari <code>unique composite key</code>, dan <code>Not Null Constraint</code> lgID leagueid CHAR(2) Bagian dari <code>unique composite key</code>, dan <code>Not Null Constraint</code> teamID teamid CHAR(3) Bagian dari <code>unique composite key</code>, dan <code>Not Null Constraint</code> rank teamrank TINTYINT(2) <code>Not Null Constraint</code>, dan <code>Check Constraint</code> untuk rentang nilai 0-12 <p>Natural and Surrogate Primary Key</p> <p>Oke, mari kita membahas tentang pemilihan primary key. Terdapat dua jenis primary key, Natural Primary Key dan Surrogate Primary Key. Natural Key, anda menggunakan beberapa kolom unik dan data yang ada pada kolom tersebut keberadaanya diakui diluar dari database. Surrogate key, anda membuat sebuah kolom yang menampung nilai unik disetiap baris dan nilai tersebut tidak dianggap diluar database, Primary Key Autoincrement.</p> <p>Jika ada kolom yang jelas untuk primary key artinya, kolom tersebut benar-benar berisi nilai yang unik, maka gunakan kolom tersebut. Misalnya, kita dapat menggunakan obvious primary key jika salah satu dari tabel tersebut berisikan informasi tentang buku-buku. Setiap buku memliki nomor unik, ISBN. ISBN sebagai natural key adalah pilihan yang tepat. Namun jika dalam kondisi dimana tabel berisikan beberapa kolom yang unik (jika digabungkan) dan tidak ada nilai NULL maka buatlah composite primary key, akan tetapi lebih baik kita hanya memliki satu kolom sebagai nomor unik dari setiap baris. Untuk itu kita dapat membuat Surrogate Primary Key berdampingan dengan composite primary key sebagai nomor identitas setiap baris.</p>"},{"location":"DBMS/Catatan%20MySql/03.%20Creating%20and%20Designing%20Database/#creating-a-database-tabel-using-sql-script","title":"Creating a Database Tabel using SQL Script","text":"Membuat tabel teams<pre><code>CREATE TABLE baseball.`teams` (\n`teamkey` smallint NOT NULL AUTO_INCREMENT,\n`teamid` char(3) NOT NULL,\n`yearid` YEAR NOT NULL,\n`leagueid` char(2) NOT NULL,\n`teamrank` TINYINT(2) NOT NULL,\nPRIMARY KEY (`teamkey`),\nUNIQUE KEY `teamkey_UNIQUE` (`teamkey`),\nKEY `teamid_yearid_league_id_UNIQUE` (`teamid`,`yearid`,`leagueid`),\nCONSTRAINT `check_teamrank` CHECK (((`teamrank` &gt;=0) AND (`teamrank` &lt;= 12))),\nCONSTRAINT `check_year` CHECK (((`yearid` &gt;= 1844) AND (`yearid` &lt;= 2155)))\n);\n</code></pre> Membuat tabel managers<pre><code>CREATE TABLE baseball.`managers` (\n`managerkey` SMALLINT NOT NULL AUTO_INCREMENT,\n`playerid` VARCHAR(9) NOT NULL,\n`yearid` YEAR(4) NOT NULL,\n`teamid` CHAR(3) NOT NULL,\n`games` TINYINT(3) NOT NULL,\n`wins` TINYINT(3) NOT NULL,\n`losess` TINYINT(3) NOT NULL,\n`alsoplayer` CHAR(1) NOT NULL,\nPRIMARY KEY (`managerkey`),\nUNIQUE KEY `managerkey_UNIQUE` (`managerkey`),\nUNIQUE KEY `playerid_yearid_teamid_UNIQUE` (`playerid`,`yearid`,`teamid`),\nKEY `FK_teamid_idx` (`teamid`),---- (1)!\n\nCONSTRAINT `FK_teamid` FOREIGN KEY (`teamid`) REFERENCES `teams`(`teamid`) \nON DELETE RESTRICT ON UPDATE RESTRICT,\n\nCONSTRAINT `check_alsoplayer` CHECK ((`alsoplayer`)in (_utf8mb4'Y',_utf8mb4'N')),\nCONSTRAINT `check_games` CHECK (((`games` &gt;= 0) AND (`games` &lt;= 165))),\nCONSTRAINT `check_wins` CHECK (((`wins` &gt;= 0) AND (`wins` &lt;= 165))),\nCONSTRAINT `check_losess` CHECK (((`losess` &gt;= 0) AND (`losess` &lt;= 165))),\nCONSTRAINT `check_manageryear` CHECK  (((`yearid` &gt;= 1871) \nAND (`yearid` &lt;= 2155)))\n);\n</code></pre> <ol> <li>Coba perhatikan keyword KEY pada syntax ini, KEY <code>FK_teamid_idx</code> (<code>teamid</code>), jika hal ini dispesifikasikan, maka MySql akan membuantya secara otomatis dengan Key_Name <code>FK_tables_name</code>.</li> </ol> <p>Info</p> <p>Untuk mengaitkan antara tabel menggunakan constraint referential (foreign key) pastikan kolom pengait pada parent tabel setidaknya harus di <code>index</code>, atau di deklarasi sebagai <code>PRIMARY KEY</code> atau <code>UNIQUE</code></p>"},{"location":"DBMS/Catatan%20MySql/03.%20Creating%20and%20Designing%20Database/#understanding-indexes","title":"Understanding Indexes","text":"<p>Indexing adalah sebuah metode untuk mengoptimalkan perfoma dari database untuk meningkatkan kecepatan database saat di inquiry. Indexes ditempatkan pada kolom disebuah table. Tabel dapat memiliki lebih dari satu index, banyaknya index bervariasi tergantung tabel. Untuk membuat index secara benar, anda harus memahami bagaimana mempersingkat proses query hingga hasil nilai tersebut tampil ke pengguna. Maka dari itu, sangat disarankan untuk menrencakanan pembuatan index sebelum memasukan data kedalam tabel. Karena, saat membuat index pada sebuah tabel akan lebih cepat prosesnya dibandingkan menambahkan index setelah ada data, bergantung sberapa besar data pada tabel tersebut, karena indexes bekerja dengan mengurutkan (sort) dan menambahkan pointer ke data.</p>"},{"location":"DBMS/Catatan%20MySql/03.%20Creating%20and%20Designing%20Database/#understanding-how-indexing-relates-to-data-integrity","title":"Understanding How Indexing Relates to Data Integrity","text":"<p>Saat membuat primary key, unique constraint, atau foreign key, MySQL menyimpannya sebagai sebuah indexes. Index ini secara tidak langsung berhubungan terhadap data integrity karena indexing berhubungan dengan Keys dan Constraint yang mana kedua hal itu menentukan data integrity.</p>"},{"location":"DBMS/Catatan%20MySql/03.%20Creating%20and%20Designing%20Database/#types-of-indexs","title":"Types of Indexs","text":"<p>Ada dua tipe dari index;</p> <ol> <li> <p>Clustered, Index ini menyimpan data secara berurutan (tersortir), maka kolom manamun yang anda pilih sebagai clustered index, maka data akan disimpan secara berurut pada sebuah tabel. Data tersimpan secara fisik pada sebuah disk secara berurutan pada clustered index. Index ini dapat dikiaskan sebagai tree built diatas sebuah tabel. Key pada sebuah kolom yang ditaruh di clustered index menentukan urutan baris pada sebuah tabel. Dibawah ini adalah diagram yang menunjukan contoh bagaimana clustered index tersusun. </p> </li> <li> <p>Non-Clustered,  Index ini tidak menyortir data. Akan tetapi index ini menggunakan pointers ke data fisik (disk) untuk menemukan data ketika index digunakan saat meng-query data. Anda dapat membuat beberapa nonclustered index pada sebuah tabel, akan tetapi jangan terlalu banyak karena akan menyebabkan query melambat. Berikut adalah contoh diagram bagaiaman nonclustered index terstruktur. </p> </li> </ol> <p>Oke, agar lebih mengena, mari kita lihat dua tabel diatas yang telah kita buat, tabel <code>managers</code> dan players (ditampilkan hanya managers saja).</p> <pre><code>USE baseball;\nSHOW INDEX FROM managers;\n</code></pre> Hasil query <pre><code>+----------+------------+-------------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n| Table    | Non_unique | Key_name                      | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression |\n+----------+------------+-------------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n| managers |          0 | PRIMARY                       |            1 | managerkey  | A         |           0 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| managers |          0 | managerkey_UNIQUE             |            1 | managerkey  | A         |           0 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| managers |          0 | playerid_yearid_teamid_UNIQUE |            1 | playerid    | A         |           0 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| managers |          0 | playerid_yearid_teamid_UNIQUE |            2 | yearid      | A         |           0 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| managers |          0 | playerid_yearid_teamid_UNIQUE |            3 | teamid      | A         |           0 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| managers |          1 | FK_teamid                     |            1 | teamid      | A         |           0 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n+----------+------------+-------------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n</code></pre> <ul> <li>Primary Key (PRIMARY dan managerkey_UNIQUE) adalah clustered index, dan key tersebut akan didapati primary key field dalam urutan ascending pada sebuah tabel, dan kolom managerkey yang akan menjadi primary key-nya.</li> <li>Unique Key (playerid_yearid_team_id_UNIQUE) adalah non-clustered index. Unique key ini akan memaksa keunikan sebuah kolom di key.</li> <li>Foreign Key(FK_teamid) adalah non-clustered index, index ini akan mempercepat query ketika anda meng-query field yang ada didalam foreign-key.</li> </ul>"},{"location":"DBMS/Catatan%20MySql/03.%20Creating%20and%20Designing%20Database/#understanding-how-indexing-impacts-performance","title":"Understanding how indexing impacts performance","text":"<p>Saat anda menjalankan query, MySQL menentukan bagaimana mengambil data dari tabel. Jika tabel tersebut tidak memiliki index, maka query tersebut harus memindai semua baris pada tabel untuk menemukan data, sama seperti anda ketika ingin mencari rumus tertentu dari sebuah buku yang tidak memliki halaman index, anda harus membaca semua halaman satu demi satu. Hal itu akan memakan waktu, tergantung seberapa banyak halaman pada buku tersebut. Sama halnya dengan index pada sebuah tabel. Oke, mungkin anda tidak akan merasa query terlalu lama pada tabel memliki data yang sedikit. Namun jika tabel sudah menampung data yang sangat banyak maka query akan menjadi sangat lama. Ditambah jika ada pengguna lain didalam waktu yang sama meng-query tabel yang sama, maka bisa jadi salah satu query dari para pengguna tidak akan muncul hasilnya disebabkan query memblock query yang lainnya atau disebut dengan deadlock.</p> <p>Ketika anda menjalankan sebuah query terjadilah sebauh proses yang disebut dengan locking, dan locking ini tidak buruk karena umum dan pasti terjadi. Akan tetapi, dapat menjadi masalah jika ada query lain yang berbeda mengganggu satu sama lain yang menyebabkan terjadinya blocking.</p> <p>Secara detail bahwa blocking terjadi ketika satu atau lebih query mencoba me-read atau write data yang sama. Terkadang, blocking terjadi dalam waktu yang sangat singkat, sehingga blocking ini tidak terlalu mengkhawatirkan. Akantetapi jika dua atau lebih query meminta data yang sama, lalu membuat locks yang tidak dapat diurai, maka MySQL akan mematikan (kill, lamanya tergantung MySQL mengembalikan data sesuai dengan query yang diberikan) proses query. Dan ini yang disebut dengan deadlock. MySQL harus mengembalikan data (roll back) sesuai query jika tidak berhasil meng-inserting, updating, atau deleting data agar data tetap pada kondisi yang konsisten (constent state).</p> <p>Jika anda membuat index dan menggunakannya pada query, maka dapat mengurangi kemungkinan terjadinya blocking dan deadlocking karena index akan membuat query data menjadi lebih cepat.</p> <p>catatan penting yang menyangkut tentang indexing</p> <ul> <li>Indexing tidak mempercepat segala proses pada tabel didalam databse. Indexing tidak akan mempercepat prosesi write (inserting, updating dan deleting), akan tetapi hanya mempercepat proses reading.</li> <li>Urutan kolom dalam index itu penting. Jika anda ingin menyortir query data hanya pada yearid, namun urutan index anda adalah managerid dan selanjutnya yearid maka query tidak akan meningkatkan performa. Jika anda ingin menyortir yearid, maka anda harus memeliki index pada yearid pada kolom pertama sebuah index.</li> <li>Index dapat mengkonsumsi banyak penyimpanan. Clustered Index tidak terlalu menggunakan ruang disk karena clustered index sudah tersusun pada sebuah disk, akan tetapi, untuk nonclustered index dapat memakan ruang penyimpanan yang lebih banyak tergantung seberapa besar tabel dan banyak kolom didalam index.</li> <li>Ketika menambahkan index pada kolom, perhatikanlah dan hati-hati jika memliki banyak kolom pada index. Misalkan, memasukan semua kolom pada tabel anda ke index tidak akan membuat nya lebih cepat, ditambah jika tabel anda memliki banyak kolom. Jika tabel anda hanya memliki beberap kolom, maka memasukan semua colom kedalam index mungkin bisa termasuk dikatakan implemetasi yang bagus.</li> <li>Indexing kolom yang memiliki banyak nilai yang tidak unik (seragam) tidak memberikan peningkatan performa yang signifikan. Jika ada sedang memutuskan kolom mana yang harus diberi index, pilihlah kolom dengan tingka variasi datanya tinggi.</li> </ul>"},{"location":"DBMS/Catatan%20MySql/03.%20Creating%20and%20Designing%20Database/#understanding-naming-conventions-for-indexes","title":"Understanding naming conventions for indexes","text":"<p>Saat memberikan nama pada index, sangat penting untuk memberikan nama yang menggambarkan dengan jelas jenis index tersebut. Sebagaimana yang telah kita buat pada tabel managers. kita memberikan nama <code>managerkey_UNIQUE</code> yang jika dibaca kita mengetahui bahwa index tersebut unik untuk kolom managerkey.</p> <p>Umumnya, dan praktik yang dapat ditiru bila memberikan nama index dengan nama kolom dan ditambah dengan karakter awalan atau akhiran yang menjelaskan index macam apa itu. Berikut contoh saran nama index.</p> Sample index name What it contains <code>cix_firstname_lastname</code> Clustered index of first and last names <code>ix_firstname_lastname</code> Nonclustered index of first and last names <code>ncix_firstname_lastname</code> Nonclustered index of first and last names <code>idx_firstname_lastname</code> Nonclustered index of first and last names"},{"location":"DBMS/Catatan%20MySql/04.%20Importing%20and%20Exporting%20Data/","title":"Importing and Exporting Data","text":"<p>Info</p> <p>Untuk menjalankan query dibawah ini pastikan anda sudah masuk kedalam MySql session anda.</p>"},{"location":"DBMS/Catatan%20MySql/04.%20Importing%20and%20Exporting%20Data/#understanding-sql-syntax-for-importing-and-exporting-data","title":"Understanding SQL Syntax for importing and exporting data","text":"<p>Untuk meng-import dan meng-export data melalui SQL scripts, opsi <code>--secure_file_priv</code> harus dikonfigurasi dengan benar. Opsi secure_file_priv mungkin secara bawaan di non aktifkan, atau file yang ingin di import harus berlokasi pada lokasi yang spesifik. Anda dapat merubah pengaturan ini di sisi server dimana MySQL tersebut terinstall.</p> <p>Untuk menge-check konfigurasi secure_file_priv, jalankan perintah berikut;</p> <pre><code>select @@secure_file_priv \n-- OR\nSHOW VARIABLES LIKE \"secure_file_priv\";\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/04.%20Importing%20and%20Exporting%20Data/#settingup-secure_file_priv","title":"Settingup <code>secure_file_priv</code>","text":"<p>Bawaanya fitur <code>secure_file_priv</code> aktif, sehingga untuk membaca file atau upload file harus berada pada direktori tersebut. Untuk mengubah lokasi secure file atau menonaktifkannya anda dapat membuat beberap baris kata di <code>/etc/mysql/my.cnf</code></p> Menggatin lokasi secure fileMenonaktifkan lokasi secure file /etc/mysql/my.cnf<pre><code>[mysqld]\nsecure_file_priv=\"/Location/To/Scure/File\"\n</code></pre> /etc/mysql/my.cnf<pre><code>[mysqld]\nsecure_file_priv=\"\"\n</code></pre> <p>Warning</p> <p>Tujuannya nilai bawaan <code>secure_file_priv</code> adalah keamanan. Karena jika tidak tersetup, maka user yang memliki akses <code>FILE</code> dapat membaca dan menulis file disemua repositori server jika user sql kebetulan masuk kedalam group SUDO atau bahkan ROOT.</p> <p>Jika sudah maka save, dan restar service mysql</p> <pre><code>systemctl restart mysql.service\n</code></pre> <p>Jika berhasil maka nilai dari variabel <code>secure_file_priv</code> akan berubah <pre><code>mysql&gt; select @@secure_file_priv;\n+--------------------+\n| @@secure_file_priv |\n+--------------------+\n|                    |\n+--------------------+\n1 row in set (0,00 sec)\n\nmysql&gt; SHOW VARIABLES LIKE \"secure_file_priv\";\n+------------------+-------+\n| Variable_name    | Value |\n+------------------+-------+\n| secure_file_priv |       |\n+------------------+-------+\n1 row in set (0,01 sec)\n</code></pre></p> <p>Contoh diatas saya menonaktifkan <code>file_secure_priv</code>, namun perlu diingat ini sangat rentan, baiknya fitur ini AKTIF.</p>"},{"location":"DBMS/Catatan%20MySql/04.%20Importing%20and%20Exporting%20Data/#importing-with-sql-script","title":"Importing With SQL script","text":"<p>Untuk mengimport jalankan syntax dibawah ini <pre><code>LOAD DATA INFILE 'your_path'\nINTO TABLE baseball.teams\nFIELDS TERMINATED BY ','; \n</code></pre></p> <p>Warning</p> <p>Jika terjadi error, yang mengatakan \u201cThe MySQL server is running with the --secure-file-priv option so it cannot execute this statement\u201d. Solusinya kita harus menempatkan file tersebut kedalam saved directory. Alamat secure_file_priv didapatkan dengan perintah diatas (awal). Pada komputer saya alamatnnya adalah C:/ProgramData/MySQL/MySQL Server 8.0/Uploads.</p>"},{"location":"DBMS/Catatan%20MySql/05.%20Querying%20a%20Single%20Table/","title":"Querying a Single Table","text":"<p>Info</p> <p>Database, table dan records yang digunakan pada sesi ini anda dapat merujuk ke resource. Dan untuk menjamin kelancaran penggunaan setiap query yang ada pada catatan ini, maka saya sarankan untuk menggunakan schema <code>lahmansbaseballdb</code>, jika belum ada buat schema dengan nama tersebut.</p> <p>Warning</p> <p>Jika query dibawah ini tidak mensiratkan penggunaan nama schema maka saya menggunakan <code>USE lahmansbaseballdb;</code> pada session saya. Anda dapat mengikuti cara tersebut atau selalu siratkan nama scema anda jika menggunakan nama selain lahmansbaseballdb.</p> Contoh menyiratkan nama schema<pre><code>    SELECT * \n    FROM nama_data_base.contoh_table;\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/05.%20Querying%20a%20Single%20Table/#select-statement-and-from-statement","title":"SELECT statement and FROM statement","text":"<p>Select semua kolom <pre><code>    SELECT * FROM appereances;\n</code></pre> Membatasi untuk mengambil beberapa kolom <pre><code>    SELECT teamID, lgID FROM appearances;\n</code></pre></p>"},{"location":"DBMS/Catatan%20MySql/05.%20Querying%20a%20Single%20Table/#columns-aliases","title":"Columns aliases","text":"<p>Column aliases membuat kita dapat menggunakan nama kolom yang berbeda pada query, gunakan keyword <code>AS</code>. <pre><code>SELECT playerID as player_gua FROM appearances;\n</code></pre></p> Output <pre><code>+------------+\n| player_gua |\n+------------+\n| barnero01  |\n| barrofr01  |\n| birdsda01  |\n| conefr01   |\n| gouldch01  |\n| .........  |\n</code></pre> <p>Atau dapat menggunakan <pre><code>SELECT playerID as 'player kita' FROM appearances;\n</code></pre></p> Output <pre><code>+------------+\n| player kita|\n+------------+\n| barnero01  |\n| barrofr01  |\n| birdsda01  |\n| conefr01   |\n| gouldch01  |\n| .........  |\n</code></pre> <p>Kita dapat menggunakan aliases pada <code>ORDER BY</code>, <code>GROUP BY</code> dan <code>HAVING</code> akan tetapi tidak dapat digunakan pada klausa <code>WHERE</code>.</p>"},{"location":"DBMS/Catatan%20MySql/05.%20Querying%20a%20Single%20Table/#using-use-statment","title":"Using Use Statment","text":"<p>Statemen ini digunakan untuk merujuk pada database tertentu, sehingga penulisan sebuah query menjadi lebih singkat. Jika tidak menggunakan statement ini misal maka harus ditulis namadatabase.namatable</p> <ul> <li>Tidak menggunakan USE     <pre><code>SELECT * FROM lahmansbaseballdb.appearances;\n</code></pre></li> <li>Menggunakan USE     <pre><code>SELECT * FROM appearances;\n</code></pre></li> </ul>"},{"location":"DBMS/Catatan%20MySql/05.%20Querying%20a%20Single%20Table/#using-distinct-clause","title":"Using DISTINCT clause","text":"<p>Klause ini jika digunakan pada statement <code>SELECT</code>, akan mengembalikan hanya nilai yang berbeda. <pre><code>SELECT DISTINCT playerID from appearances;\n</code></pre></p> Output <pre><code>+-----------+\n| playerID  |\n+-----------+\n| barnero01 |\n| barrofr01 |\n| birdsda01 |\n| conefr01  |\n| gouldch01 |\n| ......... |\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/05.%20Querying%20a%20Single%20Table/#using-limit-clause","title":"Using LIMIT Clause","text":"<p>Klause ini jika digunakan pada statement <code>SELECT</code> hanya akan mengembalikan sebanyak nilai yang ditentukan pada <code>LIMIT</code>. <pre><code>SELECT playerID from appearances LIMIT 10;\n</code></pre> Query diatas hanya mengambil 10 baris peratama pada sebuah tabel.</p> <p>Jika ingin mengambil \\(n\\) baris dimulai pada baris \\(k\\) maka dapat menggunakan <code>OFFSET</code> clause <pre><code>SELECT playerID FROM appearances LIMIT 10 OFFSET 3;\n</code></pre> Query diatas mengambil 10 baris dimulai dari baris ke-3.</p>"},{"location":"DBMS/Catatan%20MySql/05.%20Querying%20a%20Single%20Table/#using-where-and-or-clause","title":"Using WHERE, AND &amp; OR Clause","text":"<p>Klause ini digunakan untuk membatasi keluaran yang dihasilkan berdasarkan kondisi tertentu, misalkan; <pre><code>SELECT playerid, g_all, g_batting, g_defense FROM appearances\nWHERE g_all &gt; 40; \n</code></pre> Query diatas akan menampilkan pemain dengan <code>g_all</code> (akumulasi pemain bermain) yang lebih dari 40.</p> <p>Anda juga dapat menggunakan lebih dari <code>WHERE</code> menggunakan <code>AND</code> and <code>OR</code>. Serta dapat menggunakan <code>AND</code> and <code>OR</code> sekaligus,</p> <pre><code>SELECT playerid, g_all, g_batting, g_defense FROM appearances\nWHERE (g_all &gt; 40 AND g_defense &lt; 30)\nOR g_all &gt; 60; \n</code></pre>"},{"location":"DBMS/Catatan%20MySql/05.%20Querying%20a%20Single%20Table/#using-not-in-dan-between","title":"Using NOT, IN dan BETWEEN","text":"<p>klause <code>IN</code> membuat anda dapat menggunakan daftar tertentu yang digunakan sebagai nilai atau kondisi tertentu yang berdampak pada nilai pada sebuah query. Misalkan anda ingin mengeluarkan nilai pada tabel appearances dengan ketentuan akumulasi permainan dengan jumlah 40,50 dan 60;</p> <pre><code>SELECT playerid, g_all, g_batting, g_defense FROM appearances\nWHERE g_all IN (40, 50, 60); \n</code></pre> <p><code>BETWEEN</code> berbeda dengan <code>IN</code>, klause ini mengembalian sebuah ketentuan yang berada diantara kedua nilai <pre><code>SELECT playerid, g_all, g_batting, g_defense FROM appearances\nWHERE g_all BETWEEN 40 and 60; \n</code></pre></p> <p>Sedangkan klause <code>NOT</code> akan menampilkan sebuah nilai yang berada diluar dari ketentuan yang ditetapkan <pre><code>SELECT playerid, g_all, g_batting, g_defense FROM appearances\nWHERE g_all NOT BETWEEN 40 and 60; \n</code></pre> Dan anda dapat menggabungkan <code>NOT</code>, <code>INT</code>, <code>BETWEEN</code> serta <code>lAND</code> <pre><code>SELECT playerid, g_all, g_batting, g_defense FROM appearances\nWHERE g_all NOT IN (40, 50, 60)\nAND g_batting NOT BETWEEN 30 and 40; \n</code></pre></p>"},{"location":"DBMS/Catatan%20MySql/05.%20Querying%20a%20Single%20Table/#using-like-operators-and-wildcards","title":"Using LIKE operators and wildcards","text":"<p>Penggunaan perator <code>LIKE</code> dan wildcards sangat bergunaa ketika anda ingin mencari sebuah nilai pada tabel yang tidak membutuhkan keseluruhan karakter. Misalkan anda ingin mencari nama pemain yang mengandung kata \u201chode\u201d. Dibawah ini adalah tipe dari wildcards yang dapat digunakan didlam MySql</p> Wildcard characters Character description How it works % Percent sign Representasi kosong hingga lebih dari satu karakter _ Underscore Representasi dari satu karakter"},{"location":"DBMS/Catatan%20MySql/05.%20Querying%20a%20Single%20Table/#using-widlcard","title":"Using % widlcard","text":"<p>% wildcard merepresentasi 0 karakter atau lebih. Misalkan anda disuruh untuk mencari player ID yang diawail dengan huruf a. </p> <pre><code>SELECT playerID, G_all, G_batting, G_defense \nFROM lahmansbaseballdb.appearances \nWHERE playerID LIKE \"a%\";\n</code></pre> <p>Query diatas artinya : \u201ccari pada kolom playerID nama yang diawal dengan huruf a dan diikuti oleh karakter apapun dari 0~tak hingga pada tabel appearances\u201d</p> Output <pre><code>+-----------+-------+-----------+-----------+\n| playerID  | G_all | G_batting | G_defense |\n+-----------+-------+-----------+-----------+\n| allisar01 |    29 |        29 |        29 |\n| armstbo01 |    12 |        12 |        12 |\n| addybo01  |    25 |        25 |        25 |\n| ansonca01 |    25 |        25 |        25 |\n| ......................................... |\n</code></pre> <p>Contoh diatas kita meletakan % setelah karakter a, namun bagai mana jika tempatkan diawal ? </p> <pre><code>SELECT playerID, G_all, G_batting, G_defense \nFROM lahmansbaseballdb.appearances \nWHERE playerID LIKE \"%a\";\n</code></pre> <p>Query diatas artinya : \u201ccari pada kolom playerID nama yang diawal dengan karakter apapun dari 0~tak hingga dan diikuti oleh huruf a pada tabel appearances\u201d</p> <p>Oke, query diatas tidak menghasilkan 0 baris, yup karena semua playerID selalu diakhiri dengan angka.</p> <p>Sehingga, jika kita menempatkan karakter % pada awal dan akhir dari sebuah kata atau kalimat, maka dapat kita artikan, cari karakter yang mengandung kata tersebut. Misalkan</p> <pre><code>SELECT playerID, G_all, G_batting, G_defense \nFROM lahmansbaseballdb.appearances \nWHERE playerID LIKE \"%a%\";\n</code></pre> Output <pre><code>+-----------+-------+-----------+-----------+\n| playerID  | G_all | G_batting | G_defense |\n+-----------+-------+-----------+-----------+\n| barnero01 |    31 |        31 |        31 |\n| barrofr01 |    18 |        18 |        18 |\n| birdsda01 |    29 |        29 |        29 |\n| jackssa01 |    16 |        16 |        16 |\n| mcveyca01 |    29 |        29 |        29 |\n| schafha01 |    31 |        31 |        31 |\n| ......................................... |\n</code></pre> <p>Warning</p> <p>hindari penggunakan % pada awal karakter karena akan memperlambat proses query.</p>"},{"location":"DBMS/Catatan%20MySql/05.%20Querying%20a%20Single%20Table/#using-_-wildcard","title":"Using _ wildcard","text":"<p>Berbeda degan %, _ hanya mencari satu karakter saja. Misalkan \u201ca_a\u201d, cari karakter yang diawal dengan huruf a diikut dengan satu buah karakter apapun dan diakhiri dengan huruf a. Sebagai contoh, buatlah sebuah query untuk mencari round pada tabel fieldingpost yang mana karakter kedua dan keempat disi dengan huruf L &amp; S.</p> <pre><code>SELECT *\nFROM lahmansbaseballdb.fieldingpost \nWHERE round LIKE \"_L_S_\";\n</code></pre> Output <pre><code>+-----------+--------+--------+------+-------+-----+------+------+---------+------+------+------+------+------+------+------+------+\n| playerID  | yearID | teamID | lgID | round | POS | G    | GS   | InnOuts | PO   | A    | E    | DP   | TP   | PB   | SB   | CS   |\n+-----------+--------+--------+------+-------+-----+------+------+---------+------+------+------+------+------+------+------+------+\n| abbotku01 |   2000 | NYN    | NL   | NLDS2 | SS  |    1 |    0 |      12 |    0 |    0 |    0 |    0 |    0 | NULL | NULL | NULL |\n| abbotpa01 |   2000 | SEA    | AL   | ALDS2 | P   |    1 |    1 |      17 |    0 |    1 |    0 |    0 |    0 | NULL | NULL | NULL |\n| abbotpa01 |   2001 | SEA    | AL   | ALDS1 | P   |    1 |    0 |       9 |    0 |    0 |    0 |    0 |    0 | NULL | NULL | NULL |\n| abreubo01 |   2006 | NYA    | AL   | ALDS1 | RF  |    4 |    4 |     102 |    4 |    0 |    0 |    0 |    0 | NULL | NULL | NULL |\n| abreubo01 |   2007 | NYA    | AL   | ALDS2 | RF  |    4 |    4 |     110 |    7 |    0 |    0 |    0 |    0 | NULL | NULL | NULL |\n| abreubo01 |   2009 | LAA    | AL   | ALDS2 | RF  |    3 |    3 |      81 |    8 |    0 |    0 |    0 |    0 | NULL | NULL | NULL |\n| aceveal01 |   2009 | NYA    | AL   | ALDS1 | P   |    1 |    0 |       3 |    0 |    0 |    0 |    0 |    0 | NULL | NULL | NULL |\n| ................................................................................................................................ |\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/05.%20Querying%20a%20Single%20Table/#escaping-wildcard-values","title":"Escaping wildcard values","text":"<p>JIka kalimat yang anda cari memliki karakter wildcard didalamnya. Maka anda harus meng-escape wildcard tersebut agar query bekerja semestinya. Dibawah ini adalah escape karakter beserta karakter-nya</p> <p><pre><code>SELECT *\nFROM lahmansbaseballdb.fieldingpost \nWHERE playerID LIKE '%\\\"%';\n</code></pre> Atau anda dapat ingin menggunakan karater lain selain backslash, anda dapat mengaturnya menggunakan operator <code>ESCAPE</code> <pre><code>SELECT *\nFROM lahmansbaseballdb.fieldingpost \nWHERE playerID LIKE '%^\"%' ESCAPE \"^\"; --- (1)!\n</code></pre></p> <ol> <li>Operator <code>ESCAPE</code> menggatin <code>\\</code> menjadi <code>^</code>.</li> </ol> Output <pre><code>+----------+--------+--------+------+-------+-----+------+------+---------+------+------+------+------+------+------+------+------+\n| playerID | yearID | teamID | lgID | round | POS | G    | GS   | InnOuts | PO   | A    | E    | DP   | TP   | PB   | SB   | CS   |\n+----------+--------+--------+------+-------+-----+------+------+---------+------+------+------+------+------+------+------+------+\n| farr\"as  |   2000 | CHA    | AL   | ALDS2 | CF  |    1 |    0 |       9 |    1 |    0 |    0 |    0 |    0 | NULL | NULL | NULL |\n+----------+--------+--------+------+-------+-----+------+------+---------+------+------+------+------+------+------+------+------+\n1 row in set (0.02 sec)\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/05.%20Querying%20a%20Single%20Table/#how-to-filter-null-value","title":"How to filter NULL value","text":"<p>Anda tidak dapat memfilter nilai NULL menggunakan operator seperti <code>=</code>, <code>&gt;</code>, <code>&lt;</code> dan <code>&lt;&gt;</code>. Anda harus menggunakan operatnor <code>IS NULL</code> atau <code>IS NOT NULL</code></p> <pre><code>SELECT playerID, G_all, G_batting, G_defense \nFROM lahmansbaseballdb.appearances \nWHERE G_defense IS NULL;\n</code></pre> Output <pre><code>+-----------+-------+-----------+-----------+\n| playerID  | G_all | G_batting | G_defense |\n+-----------+-------+-----------+-----------+\n| barrebi01 |     1 |         1 |      NULL |\n| brainas01 |    16 |        16 |      NULL |\n| careyto01 |    56 |        56 |      NULL |\n| cravebi01 |    41 |        41 |      NULL |\n| cummica01 |    42 |        42 |      NULL |\n| forceda01 |    49 |        49 |      NULL |\n| hallge01  |    35 |        35 |      NULL |\n| ......................................... |  \n</code></pre>"},{"location":"DBMS/Catatan%20MySql/05.%20Querying%20a%20Single%20Table/#using-order-by-clause","title":"Using ORDER BY clause","text":"<p>Klausa <code>ORDER BY</code> ditempatkan setelah <code>FROM</code> dan setelah <code>WHERE</code> jika menggunakan klausa tersebut. Denga klausa ini kita dapat mengurutkan kolom secara ascending atau descending. Ascending adalah pengurutan bawaan yang ditetapkan oleh MySql.</p> <p>Untuk mengurutkan kolom dengan urutan ascending gukana kata kunci <code>ASC</code> dan desceding menggunakan kata kunci <code>DESC</code>.</p> <pre><code>SELECT playerID, G_all, g_batting, g_defense \nFROM appearances \nWHERE G_all &gt;= 100 \nORDER BY G_all DESC;\n</code></pre> <p>Query diatas artinya : \u201cTampilkan kolom-kolom tersebut dengan kondisi G_all lebih besar atau sama dengan 100 dan urutkan dari yang terbesar ke yang terkecil\u201d</p> Output <pre><code>+-----------+-------+-----------+-----------+\n| playerID  | G_all | g_batting | g_defense |\n+-----------+-------+-----------+-----------+\n| willsma01 |   165 |       165 |       165 |\n| paganjo01 |   164 |       164 |       164 |\n| santoro01 |   164 |       164 |       164 |\n| willibi01 |   164 |       164 |       164 |\n| tovarce01 |   164 |       164 |       163 |\n| robinbr01 |   163 |       163 |       163 |  \n</code></pre> <p>Anda juga dapat mengurutkan lebih dari satu buah kolom serta dapat mengurutkan kolom yang berbeda dengan metode urutan yang berbeda. <pre><code>SELECT playerID, G_all, g_batting, g_defense \nFROM appearances \nWHERE G_all &gt;= 100 \nORDER BY G_all DESC, playerID ASC;\n</code></pre></p> Output <pre><code>+-----------+-------+-----------+-----------+\n| playerID  | G_all | g_batting | g_defense |\n+-----------+-------+-----------+-----------+\n| willsma01 |   165 |       165 |       165 |\n| paganjo01 |   164 |       164 |       164 |\n| santoro01 |   164 |       164 |       164 |\n| tovarce01 |   164 |       164 |       163 |\n| willibi01 |   164 |       164 |       164 |\n| bankser01 |   163 |       163 |       162 | \n</code></pre> <p>Warning</p> <p>Jika dibutuhkan, anda dapat mengurutkan semua kolom pada tabel, akan tetapi akan berdampak pada performa query. Anda harus memperhatikan pemilihan dan berapa banyak kolom yang akan diurutkan.</p>"},{"location":"DBMS/Catatan%20MySql/05.%20Querying%20a%20Single%20Table/#using-indexes-with-your-queries","title":"Using Indexes With Your Queries","text":"<p>Sebagaimana pada bagian Creating and Desinging Database, locking, blocking dan deadlocking memainkan peranan penting pada query. Jika anda menggunakan index secara benar pada query anda, kemungkinan terjadinya locking, blocking dan deadlocking semakin kecil dan hasil query akan semakin lebih cepat.</p>"},{"location":"DBMS/Catatan%20MySql/05.%20Querying%20a%20Single%20Table/#how-to-set-indexes-to-query","title":"How to set indexes to query","text":"<p>Untuk melihat bagaimana MySql menjalankan query anda, gunakan klausa <code>EXPLAIN</code> didepan query anda, misalkan;</p> <pre><code>EXPLAIN SELECT playerID, g_all, g_batting, g_defense\nFROM appearances;\n</code></pre> Output <pre><code>+----+-------------+-------------+------------+------+---------------+------+---------+------+--------+----------+-------+\n| id | select_type | table       | partitions | type | possible_keys | key  | key_len | ref  | rows   | filtered | Extra |\n+----+-------------+-------------+------------+------+---------------+------+---------+------+--------+----------+-------+\n|  1 | SIMPLE      | appearances | NULL       | ALL  | NULL          | NULL | NULL    | NULL | 105627 |   100.00 | NULL  |\n+----+-------------+-------------+------------+------+---------------+------+---------+------+--------+----------+-------+\n1 row in set, 1 warning (0.01 sec)\n</code></pre> Oke mari kita jelaskan apa maksud dari kolom dan record diatas. <code>id</code> Ini adalah nomor urut dari query. Karena query yang kita gunakan sangat sederhana maka hanya muncul satu baris   <code>select type</code> Kolom ini menceritakan jenis query apa yang dijalankan. Pada kasus ini hasilnya adalah SIMPLE karena hanya berusuan dengan satu buah table.  <code>table</code> Kolom ini merujuuk pada tabel apa yang berusuan dengan query <code>partition</code> Nilai pada contoh ini adalah NULL untuk nonpartitioned table. <code>type</code> Kolom ini merujuk pada type dari JOIN table. <code>possible keys</code> Kolom ini merujuk pada kemungkinan index yang digunakan oleh query. Karena hasilnya NULL maka tidak ada index yang berhubungan dengan query ini. <code>key</code> Kolom ini merujuk pada index apa yang dipiih. NULL pada contoh ini karena tidak ada index yang digunakan pada query ini. <code>key len</code> Merujuk pada pangjang dari key yang digunakna pada query ini. <code>ref</code> This shows what columns or constraints were compared to the key column. Since the key is NULL, this is also NULL.  <code>rows</code> Kolom ini menampilkan estimasi jumlah baris yang dihasilkan oleh query. <code>filtered</code> Kolom ini menampilkan prosesntasi baris yang tidak terfilter, berdasarkan penggunaan WHERE clasue. Karena pada contoh ini kita tidak menggunakan WHnuytfuERE, maka menghasilkan 100. Jika menggunakan WHERE makan akang ditampilkan nilai kurang dari 100. <code>extra</code> This gives you additional information about the query, such as if a WHERE clause was used, if the query used filesort, or if it used temporary tables. Those last two are important for improving performance. If you see using filesort, this means that MySQL had to do an extra pass to retrieve rows in sorted order. If you see using temporary, this means MySQL had to use a temporary table to store values <p>Oke mari kita coba query dengan tambahan klausa <code>WHERE</code> dan <code>ORDER BY</code> untuk melihat informasi lain pada <code>EXPLAIN</code>.</p> <pre><code>EXPLAIN SELECT DISTINCT playerID, g_all, g_batting, g_defense\nFROM appearances\nWHERE playerID LIKE 'a%'\nORDER BY playerID;\n</code></pre> Output <pre><code>+----+-------------+-------------+------------+------+---------------+------+---------+------+--------+----------+----------------------------------------------+\n| id | select_type | table       | partitions | type | possible_keys | key  | key_len | ref  | rows   | filtered | Extra|\n+----+-------------+-------------+------------+------+---------------+------+---------+------+--------+----------+----------------------------------------------+\n|  1 | SIMPLE      | appearances | NULL       | ALL  | NULL          | NULL | NULL    | NULL | 105627 |    11.11 | Using where; Using temporary; Using filesort |\n+----+-------------+-------------+------------+------+---------------+------+---------+------+--------+----------+----------------------------------------------+\n1 row in set, 1 warning (0.00 sec) \n</code></pre> <p>Hmm ada beberapa perbedaan dari hasil sebelumnya,   1. pertama, pada kolom filtered, kita hanya mendapatkan perkiraan 11.11% record dari total jumlah baris.  2. Kedua pada kolom Extra, informasinya kita menggunakan klausa <code>WHERE</code> sehingga query membutuhkan \"temporary table\", dan MySql menggunakan extra pass untuk mengurutkan record.</p> <p>Note</p> <p>Pada kasus kasus spesifik ini, karena tabel appearances kecil, dan perkembangan datanya tidak cepat, maka tidak perlu ada perubahan yang dilakukan, namun, jika dirasa perkembanganan besarnya tabel tersebut akan sangat besar dan cepat maka anda harus melakukan perhitungan mengatasi lambatnya query nantinya.</p> <p>Seandainya tabel tersebut menjadi atau berkembang sangat besar dan cepat, maka apa yang harus dilakukan ? Oke, mari kita coba dan test menggunakan index. Coba jalankan query berikut</p> <pre><code>EXPLAIN SELECT DISTINCT playerID ---(1)!\n      FROM appearances\n      WHERE playerID LIKE 'a%'\n      ORDER BY playerID;\n</code></pre> <ol> <li>Hanya mengambil kolom <code>playerId</code> dibandingkan dengan query sebelumnya yang mengambil kolom <code>g_all</code>, <code>g_batting</code> dan <code>g_defense</code>.</li> </ol> Output <pre><code>+----+-------------+-------------+------------+-------+---------------+---------+---------+------+--------+----------+-------------------------------------------+\n| id | select_type | table       | partitions | type  | possible_keys | key     | key_len | ref  | rows   | filtered | Extra\n|\n+----+-------------+-------------+------------+-------+---------------+---------+---------+------+--------+----------+-------------------------------------------+\n|  1 | SIMPLE      | appearances | NULL       | index | PRIMARY       | PRIMARY | 54      | NULL | 105627 |    11.11 | Using where; Using index; Using temporary |\n+----+-------------+-------------+------------+-------+---------------+---------+---------+------+--------+----------+-------------------------------------------+\n1 row in set, 1 warning (0.00 sec)\n</code></pre> <p>Karena kita membuang kolom <code>g_all</code>, <code>g_batting</code> dan <code>g_defense</code> dari klausa <code>SELECT</code>, anda dapat melihat bahwa sekarang query menggunakan PRIMARY key (yang mana termasuk tipe clustered index pada tabel ini), anda bisa melihat pada kolom type dan possible_keys diatas. Dengan demikian query ini akan berjalan lebih cepat dari sebelumnya. Akan tetapi, query tersebut tidak menampilkan kolom-kolom yang mungkin kita butuhkan. Jika kita membutuhkan kolom tersebut dan tetap ingin performa yang tinggi maka anda harus menambahkan index baru, non-clustered index. Hal ini disebut dengan adding an index to cover query.</p> <p>Warning</p> <p>Namun harus diingat ketika menambahkan index baru, penambahan tersebut akan mempengaruho query lain, mungkin menurunkan tingkat efesiensi dengan menurunya performa inserts, updates dan deletes.</p> <p>Anda dapat menambahkan index menggunakan MySql Workbrench atau langsung pada session sql pada CMD, untuk catatan ini saya menggunakan Command Line.</p> Query menabah Non-Clustered<pre><code>ALTER TABLE `appearances`\nADD INDEX `NC_playerid_g_cols` (`playerID` ASC, `G_all` ASC, `G_batting`\nASC, `G_defense` ASC) VISIBLE;\n</code></pre> <p>Query diatas digunakan untuk menambah index, non-clustered index pada table appearances. Sebelum kita jalankan query diatas, mari kita tampilkan informasi mengenai tabel tersebut sehingga kita bisa membandingkan efek dari sebelum dan sesudah menambahkan non-clustered index, menggunakan script dibawah ini.</p> <pre><code>SHOW INDEX FROM appearances;\n</code></pre> Sebelum penamabahan Index<pre><code>+-------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n| Table       | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression |\n+-------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n| appearances |          0 | PRIMARY  |            1 | yearID      | A         |         151 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| appearances |          0 | PRIMARY  |            2 | teamID      | A         |        2904 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| appearances |          0 | PRIMARY  |            3 | playerID    | A         |      105627 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n+-------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n</code></pre> Sesudah penamabahan Index<pre><code>+-------------+------------+--------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n| Table       | Non_unique | Key_name           | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression |\n+-------------+------------+--------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n| appearances |          0 | PRIMARY            |            1 | yearID      | A         |         151 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| appearances |          0 | PRIMARY            |            2 | teamID      | A         |        2904 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| appearances |          0 | PRIMARY            |            3 | playerID    | A         |      105627 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| appearances |          1 | NC_playerid_g_cols |            1 | playerID    | A         |       19347 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| appearances |          1 | NC_playerid_g_cols |            2 | G_all       | A         |       97676 |     NULL |   NULL | YES  | BTREE      |         |               | YES     | NULL       |\n| appearances |          1 | NC_playerid_g_cols |            3 | G_batting   | A         |       99810 |     NULL |   NULL | YES  | BTREE      |         |               | YES     | NULL       |\n| appearances |          1 | NC_playerid_g_cols |            4 | G_defense   | A         |      102552 |     NULL |   NULL | YES  | BTREE      |         |               | YES     | NULL       |\n+-------------+------------+--------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+                    7 rows in set (0.01 sec)\n</code></pre> <p>Kita bisa melihat bahwa, penambahan index berhasil dilakukan dengan munculnya key_name dengan nama <code>NC_playerid_g_cols</code>. Sekarang mari kita jalankan script sebelumnya yang menampilkan kolom playerID, g_all, g_bating dan g_defense.</p> <pre><code>EXPLAIN SELECT DISTINCT playerID, g_all, g_batting, g_defense\nFROM appearances\nWHERE playerID LIKE 'a%'\nORDER BY playerID;\n</code></pre> <p>Output</p> <pre><code>+----+-------------+-------------+------------+-------+--------------------+--------------------+---------+------+------+----------+--------------------------+\n| id | select_type | table       | partitions | type  | possible_keys      | key                | key_len | ref  | rows | filtered | Extra                    |\n+----+-------------+-------------+------------+-------+--------------------+--------------------+---------+------+------+----------+--------------------------+\n|  1 | SIMPLE      | appearances | NULL       | range | NC_playerid_g_cols | NC_playerid_g_cols | 38      | NULL | 3282 |   100.00 | Using where; Using index |\n+----+-------------+-------------+------------+-------+--------------------+--------------------+---------+------+------+----------+--------------------------+\n1 row in set, 1 warning (0.00 sec)\n</code></pre> <p>Dari penambahan non-clustered index pada table appearances kita dapat perubahan informasi dari query Select diatas. kita tidak lagi menggunakan filesort dan temporary table, yang membuat query kita lebih efesien dari sebelum menggunakan index.</p> <p>Berikut adalah hal yang penting dicatat tentang performa dari query</p> <ol> <li> <p>Hindari penggunakan wildcard (% and _) diawal pencari setelah klausa LIKE</p> </li> <li> <p>Wildcard underscore (_) lebih disarankan digunakan dalam pertimbangan performa dari pada wildcard percentage (%)</p> </li> </ol> <p>Terakhir yang akan kita basah adalah menampilkan grafik (menggunakan MySql Workbrench) atas query yang dijalankan. Kita akan menjalankan query sebelumnya tapi tanpa menggunakan clausa <code>EXPLAIN</code>.</p> <p>Ada dua cara untuk menampilkan grafik dari sebuah query;</p> <ol> <li> <p>Pilih tab <code>Query</code> lalu pilih <code>Explain Current Statement</code> </p> </li> <li> <p>Menggunakan shortcut Ctrl + Alt + <code>X</code></p> </li> </ol> <p>Jika tidak ada error pada query maka MySql Workbrench akan menampilkan grafik tepat seperti dibawha ini</p> <p></p> <p>Gambar diatas menjelaskan bahwa query tersebut menggunakan NC_playerid_g_cols index yang mana hanya menge-scan range dari index (cukup bagus, karena query tidak menge-scan keseluruhan index). Perkiraan dari query tersebut terdapat 3.28 rb baris yang discan dan waktu 696.42 milliseconds. Gambar tersebut juga menampilkan query tersebut dijalankan pada table appearances, lalu proses scan dilanjutkan menge-cechk nilai yang berbeda (DISTINCT) lalu mengurutkan (ORDER) setelah itu baru hasil dari query tersebut.</p> <p>Oke, sekarang bagaimana kalau kita tidak menggunakan index, apa yang akan ditampilkan sebagaimana visualisasi diatas ? Sebelum itu kita harus menghapus index NC_playerid_g_cols.</p> <pre><code>ALTER TABLE appearances DROP INDEX NC_playerid_g_cols;\n</code></pre> <p>Oke, index tersebut sudah terhapus sekarang coba kita visualkan kembali query select diatas dengan menampilkan grafik query tersebut.</p> <p></p> <p>Euw, dari visual diatas, dari yang sebelumnya Sql melakukan scan hanya 3.2 rb menjadi 10 rb, cukup banyak proses yang tidak efisien, serta waktu yang tadinya membutuhkan 6.. millisecond menjad 10 millisecond. Serta, coba perhatikan Query Cost yang menggunakan non-clustered index memakan waktu 696 millisecond, angka tersebut meningkat secara drastis menjadi 22434 millisecond.</p> <p>Query Cost dihitung berdasarkan sebarapa banyak CPU atau I/O MySql perkirakaan yang dibutuhkan. Jadi angka tersebut menggambarkan keuntungan menggunakan index dalam menjalan query.</p>"},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/","title":"Querying Multiple Tables","text":"<p>Info</p> <p>Database, table dan records yang digunakan pada sesi ini anda dapat merujuk ke resource. Dan untuk menjamin kelancaran penggunaan setiap query yang ada pada catatan ini, maka saya sarankan untuk menggunakan schema <code>lahmansbaseballdb</code>, jika belum ada buat schema dengan nama tersebut.</p> <p>Warning</p> <p>Jika query dibawah ini tidak mensiratkan penggunaan nama schema maka saya menggunakan <code>USE lahmansbaseballdb;</code> pada session saya. Anda dapat mengikuti cara tersebut atau selalu siratkan nama scema anda jika menggunakan nama selain lahmansbaseballdb.</p> Contoh menyiratkan nama schema<pre><code>    SELECT * \n    FROM nama_data_base.contoh_table;\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/#understanding-join","title":"Understanding JOIN","text":"<p>JOIN adalah proses menghubungkan dua atau lebih tabel dalam satu query tunggal. Menggabungkan tabel-tabel dalam sebuah query mewajibkan anda untuk menggabungkan mereka pada kolom yang berhubungan atau memiliki relasi pada setiap tabel yang ingin digabungkan. Ada beberapa pasanga tipe join, diantaranya.</p> <ul> <li> <p>Inner Join : Tipe ini, mengembalikan hanya record yang sesuai dari setiap table yang digabungkan.</p> </li> <li> <p>Outer Join : Tipe ini  memeliki beberapa join yang dapat digunakan, sebegai berikut;</p> <ul> <li> <p>Left Outer Join : Tipe join ini mengembalikan semua baris dari tabel kiri serta baris yang cocok antara tabel kiri dan kanan.</p> </li> <li> <p>Right Outer Join : Tipe join ini mengembalikan semua baris dari tabel kanan dan baris yang cocok antara kanan dan kiri.</p> </li> <li> <p>Full Outer Join : Tipe join ini mengembalikan semua baris dari kiri dan kanan, tapi tipe ini tidak tersedia di MySql.</p> </li> </ul> </li> <li> <p>Cross Join : Tipe join ini mengembalikan sebuah kombinasi setiap baris dari dua tabel, meshhupp form me lol.</p> </li> <li> <p>Natural Join : Tipe dari join ini akan mengaitkan kolom-kolom dengan nama yang sama pada satu sama lain table-table yang di-join. Ini sama dengan inner join atau left outer join, namun tidak harus memperjelas kolom-kolom yang digabung.</p> </li> <li> <p>Self Join : Tipe join ini digunakan untuk mengabungkan sebuah tabel itu sendiri.</p> </li> </ul>"},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/#understanding-results-returned-with-an-inner-join","title":"Understanding results returned with an inner join","text":"<p>Venn diagram dibawah ini menggambarkan record-record yang dikembalikan jikn menggabungkan table A dan B menggunakan tipe inner join.</p> <p></p> <p>Diagram diatas menggambarkan hanya nilai yang cocok diantara kedua gabungan tabel tersebut yang dikembalikan oleh tipe inner join.</p>"},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/#understanding-results-returned-with-a-left-outer-join","title":"Understanding results returned with a left outer join","text":"<p>Left outer join mengembalikan tabel kiri dan baris yang cocok dengan table kiri dan table kanan.</p> <p></p> <p>Jika tidak ada baris pada table B yang cocok dengan baris pada table A, maka tipe ini hanya mengembalikan record pada table A. Jika tidak ada dan baris yang dikembalikan pada table A yang tidak memliki kecocokan dengan baris pada tabel B akan menampilkan nilai null untuk kolom pada tabel B.</p> <p>Selain itu, anda dapat menggunakan left excluding join. Dengan ini, tipe ini akan mengembalikan semua baris pada tabel kiri namun tidak termasuk baris yang cocok dengan tabel kanan. Penggambaran ini ada pada gambar dibawah.</p> <p></p>"},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/#understanding-results-returned-with-a-right-outer-join","title":"Understanding results returned with a right outer join","text":"<p>Right outer join mengembalikan tabel kanan  dan baris yang cocok antara tabel kanan dan tabel kiri.</p> <p></p> <p>Jika tidak baris pada tabel A yang cocok dengan baris pada table B maka tipe join ini akan mengembalikan baris pada table B saja. Dan baris pada tabel B yang tidak ada baris yang cocok dengan tabel akan akan menampilkan nilai null pada kolom di table B.</p> <p>Sama denga left outer join, tipe ini juga memliki right excluding join. </p>"},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/#using-inner-join","title":"Using Inner JOIN","text":"<p>Jika anda bermaksud menampilkan baris yang hanya cocok diantara tabel maka gunakanlah INNER JOIN.</p>"},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/#learning-inner-join-syntax","title":"Learning INNER JOIN syntax","text":"<p>Untuk menggabungkan tabel menggunakan <code>INNER JOIN</code> gunakan syntax dibawah ini (standar using of inner join)</p> <pre><code>SELECT column(s)\nFROM table_1\nINNER JOIN table_2\nON table_1.column = table_2.column\nWHERE conditions\nORDER BY column(s)\n</code></pre> <p>Query diatas hanya akan mengembalikan baris yang cocok antara table_1 dan table_2.</p> <p>Oke, mudahnya, kita akan gunakan langsung pada database <code>lahmansbaseballdb</code> untuk men-join tabel-tabel didalamnya. Misalkan, kita ingin men-join tabel dari appearances dan people.</p> <pre><code>SELECT people.nameFirst, people.nameLast, appearances.playerID, appearances.G_all\nFROM appearances\nINNER JOIN people\nON appearances.playerID = people.playerID;\n</code></pre> Output Query dan Explain Output Query<pre><code>+--------------+----------------+-----------+-------+\n| nameFirst    | nameLast       | playerID  | G_all |\n+--------------+----------------+-----------+-------+\n| David        | Aardsma        | aardsda01 |     1 |\n| David        | Aardsma        | aardsda01 |    11 |\n| David        | Aardsma        | aardsda01 |    25 |\n| David        | Aardsma        | aardsda01 |    33 |\n| David        | Aardsma        | aardsda01 |    43 |\n| ................................................. |\n</code></pre> Explain<pre><code>+----+-------------+-------------+------------+------+--------------------+--------------------+---------+-----------------------------------+-------+----------+--------------------------+\n| id | select_type | table       | partitions | type | possible_keys      | key                | key_len | ref                               | rows  | filtered | Extra                    |\n+----+-------------+-------------+------------+------+--------------------+--------------------+---------+-----------------------------------+-------+----------+--------------------------+\n|  1 | SIMPLE      | people      | NULL       | ALL  | NULL               | NULL               | NULL    | NULL                              | 19554 |   100.00 | Using where              |\n|  1 | SIMPLE      | appearances | NULL       | ref  | NC_playerid_g_cols | NC_playerid_g_cols | 38      | lahmansbaseballdb.people.playerID |     5 |   100.00 | Using where; Using index |\n+----+-------------+-------------+------------+------+--------------------+--------------------+---------+-----------------------------------+-------+----------+--------------------------+\n2 rows in set, 1 warning (0.00 sec)\n</code></pre> <p>Tidak sebatas dua table, join tabel dapat kita lakukan pada lebih dari dua tabel. Kasus ini kita ingin meng-query tiga table, appearances, people dan batting.</p> <pre><code>SELECT people.playerID, people.birthYear, appearances.yearID, appearances.teamID, appearances.G_defense, batting.H\nFROM appearances\nINNER JOIN people\nON appearances.playerID = people.playerID\nINNER JOIN batting\nON people.playerID = batting.playerID\nWHERE batting.yearid = 2017 AND H &lt;&gt; 0\nORDER BY people.playerID, appearances.yearID, appearances.teamID, appearances.G_defense, batting.H;\n</code></pre> Output <pre><code>+-----------+-----------+--------+--------+-----------+------+\n| playerID  | birthYear | yearID | teamID | G_defense | H    |\n+-----------+-----------+--------+--------+-----------+------+\n| abreujo02 |      1987 |   2014 | CHA    |       109 |  189 |\n| abreujo02 |      1987 |   2015 | CHA    |       115 |  189 |\n| abreujo02 |      1987 |   2016 | CHA    |       152 |  189 |\n| abreujo02 |      1987 |   2017 | CHA    |       139 |  189 |\n| abreujo02 |      1987 |   2018 | CHA    |       114 |  189 |\n| adamsla01 |      1989 |   2014 | KCA    |         2 |   30 |\n| adamsla01 |      1989 |   2017 | ATL    |        41 |   30 |\n| .......................................................... |\n</code></pre> <p>Diagram dibawah ini menggambarkan baris yang dikembalikan atas query diatas </p>"},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/#learning-how-to-use-table-aliases","title":"Learning how to use table aliases","text":"<p>Fitur aliases membuat kita dapat memberikan nama pendek pada nama kolom didalam query. Manfaatnya penulisan nama kolom atau table menjadi lebih singkat dengan dibuatnya alias ini. Berikut adalah penggunakan aliases menggunakan keyword <code>AS</code> pada query join 3 tabel.</p> <pre><code>SELECT B.playerID, B.birthYear, A.yearID, A.teamID, A.G_defense, C.H\nFROM appearances AS A\nINNER JOIN people AS B\nON A.playerID = B.playerID\nINNER JOIN batting AS C\nON B.playerID = C.playerID\nWHERE C.yearid = 2017 AND H &lt;&gt; 0\nORDER BY B.playerID, A.yearID, A.teamID, A.G_defense, C.H;\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/#using-outer-join","title":"Using OUTER JOIN","text":""},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/#lerning-left-outer-join-syntax","title":"Lerning LEFT OUTER JOIN syntax","text":"<p>Untuk menggunakan tipe join ini gunakan syntax berikut <pre><code>SELECT column(s)\nFROM table_1\nINNER JOIN table_2\nON table_1.column = table_2.column\nWHERE conditions\nORDER BY column(s)\n</code></pre></p> <p>Query diatas akan mengembalikan seluruh baris pada tabel_1 dan baris pada tabel_2 yang cocok dengan table_1</p> <p>Hmm oke kita coba langsung penerapannya. Anda diminta untuk menampilkan pemain dengan kelahiran 1985, serta beberapa informasi tentang pemain tersebut ketika bermain di sekolah mereka. </p> <pre><code>SELECT p.playerID, p.nameGiven, p.birthYear, c.schoolID, c.yearID\nFROM people p\nLEFT OUTER JOIN collegeplaying c\nON p.playerID = c.playerID\nWHERE p.birthYear = 1985;\n</code></pre> Output <pre><code>+-----------+-----------------------+-----------+------------+--------+\n| playerID  | nameGiven             | birthYear | schoolID   | yearID |\n+-----------+-----------------------+-----------+------------+--------+\n| abadfe01  | Fernando Antonio      |      1985 | NULL       |   NULL |\n| abreuju01 | Juan de Dios          |      1985 | NULL       |   NULL |\n| adducji02 | Jim Charles           |      1985 | NULL       |   NULL |\n| alberan01 | Andrew William        |      1985 | kentucky   |   2005 |\n| alberan01 | Andrew William        |      1985 | kentucky   |   2006 |\n| alberan01 | Andrew William        |      1985 | kentucky   |   2007 |\n</code></pre> <p>Sebagaiman yang kita lihat diatas, ada beberapa baris yang menampilkan nilai NULL, artinya, playerID pada tabel collageplaying tidak ada yang cocok dengan playerid pada tabel people.</p> <p>Sama dengna inner join, outer join juga dapat menggabungkan lebih dari dua buah tabel. Dari query terakhir diaras mari kita tambah dengan menampilkan kolom yearid dan gameid pada tabel allstarfull.</p> <pre><code>SELECT p.playerID, p.nameGiven, p.birthYear, c.schoolID, c.yearID\nFROM people AS p\nLEFT OUTER JOIN collegeplaying AS c\nON p.playerID = c.playerID\nLEFT OUTER JOIN allstarfull AS asf\nON c.playerID = asf.playerID\nWHERE p.birthYear = 1985;\n</code></pre> Output <pre><code>+-----------+-----------------------+-----------+------------+--------+\n| playerID  | nameGiven             | birthYear | schoolID   | yearID |\n+-----------+-----------------------+-----------+------------+--------+\n| abadfe01  | Fernando Antonio      |      1985 | NULL       |   NULL |\n| abreuju01 | Juan de Dios          |      1985 | NULL       |   NULL |\n| adducji02 | Jim Charles           |      1985 | NULL       |   NULL |\n| alberan01 | Andrew William        |      1985 | kentucky   |   2005 |\n| alberan01 | Andrew William        |      1985 | kentucky   |   2006 |\n| alberan01 | Andrew William        |      1985 | kentucky   |   2007 |\n</code></pre> <p>Selain itu, anda bisa menggunakan excluding join, jadi, query tersebut akan mengembalikan semua baris yang tidak ada kecocokan dengan baris pada bagian kanannya, nilai pengembaliannya akan seperti ini</p> <p></p> <p>Untuk excluding join anda dapat menggunakan syntax dibawah ini <pre><code>SELECT column(s)\nFROM table_1\nLEFT OUTER JOIN table_2\nON table_1.column = table_2.column\nWHERE table2.column IS NULL;\n</code></pre></p> <p>Yup, kita hanya menambah kondisi dimana pada kolom pada table_2 bernilai Null. Ingat, setiap baris pada table yang ke-2 akan bernilai null jika tidak ada baris yang cocok dengan tabel utama.</p> <p>Sekarang mari kita excluding join pada query outer join 3 tabel terakhir kita <pre><code>SELECT p.playerID, p.nameGiven, p.birthYear, c.schoolID, c.yearID\nFROM people AS p\nLEFT OUTER JOIN collegeplaying AS c\nON p.playerID = c.playerID\nLEFT OUTER JOIN allstarfull AS asf\nON c.playerID = asf.playerID\nWHERE p.birthYear = 1985 AND asf.playerID IS NULL AND c.playerID IS NULL;\n</code></pre></p> Output <pre><code>+-----------+-----------------------+-----------+----------+--------+\n| playerID  | nameGiven             | birthYear | schoolID | yearID |\n+-----------+-----------------------+-----------+----------+--------+\n| abadfe01  | Fernando Antonio      |      1985 | NULL     |   NULL |\n| abreuju01 | Juan de Dios          |      1985 | NULL     |   NULL |\n| adducji02 | Jim Charles           |      1985 | NULL     |   NULL |\n| ascanjo01 | Jose Eleazar          |      1985 | NULL     |   NULL |\n| atilalu01 | Luis A.               |      1985 | NULL     |   NULL |\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/#learning-right-outer-join-syntax","title":"Learning RIGHT OUTER JOIN syntax","text":"<p>Untuk menggunakan tipe join ini gunakan syntax berikut <pre><code>SELECT column(s)\nFROM table_1\nRIGHT OUTER JOIN table_2\nON table_1.column = table_2.column\nWHERE conditions\nORDER BY column(s)\n</code></pre></p> <p>Query diatas akan mengambil semua baris pada table 2 dan baris pada tabel 1 yang cocok dengan baris pada table 2.</p> <p>Mari kita buat query untuk melihat hasil dari RIGHT OUTER JOIN <pre><code>SELECT p.playerid, asf.yearid, asf.gameid, asf.startingpos\nFROM lahmansbaseballdb.allstarfull asf\nRIGHT OUTER JOIN lahmansbaseballdb.people p\nON p.playerid = asf.playerid;\n</code></pre></p> Output <pre><code>+-----------+--------+--------------+-------------+\n| playerid  | yearid | gameid       | startingpos |\n+-----------+--------+--------------+-------------+\n| aardsda01 |   NULL | NULL         |        NULL |\n| aaronha01 |   1955 | NLS195507120 |        NULL |\n| aaronha01 |   1956 | ALS195607100 |        NULL |\n| aaronha01 |   1957 | NLS195707090 |           9 |\n| aaronha01 |   1958 | ALS195807080 |           9 |\n| aaronha01 |   1959 | NLS195907070 |           9 |\n</code></pre> <p>Ya, query diatas mengambil seluruh baris pada tabel people dan baris yang cocok pada tabel allstarfull dengan baris pada table people.</p> <p>Sama hal-nya dengan LEFT OUTER JOIN, RIGHT OUTER JOIN dapat menggabungkan lebih dari dua table dan exlcude join menggunalan kalusa WHERE dan IS NULL.</p>"},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/#using-advanced-joins","title":"Using Advanced Joins","text":"<p>MySQL memliki joins lanjutan seperti cross, natural, dan self joins </p>"},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/#understanding-what-is-cross-join-and-how-to-use-it","title":"Understanding what is CROSS JOIN and how to use it","text":"<p>A Cross JOIN mirip seperti INNER JOIN namun tidak menggunakan klausa ON. Hasil dari tipe ini seperti meng-kalikan setiap tabel dengan tabel lain, hasilnya seperti perkalian cartesian. Tipe ini akan mengembalikan sebuah kombinasi dari setiap baris dari dua buah tabel. Penggabungakan ini menghasilkan banyak baris. Mungkin hasilnya tidak muncul karena terlalu intensif bagi database system untuk mengembalikan hasil dari query menggunakna tipe JOIN ini.</p> <p>Untuk menggunakan cross join gunakan syntax dibawah ini <pre><code>SELECT column(s)\nFROM table_1\nCROSS JOIN table_2\nWHERE condition(s);\n</code></pre></p> <p>Untuk mensimulasikan cross join kita akan coba membuat dua tabel, dan meng-join keduanya. Saya akan menggunakan schema baru agar tidak merusak keutuhan schema yang dibawakan oleh penulis buku.</p> Membuat schema dan tabel untuk simulasi cross join<pre><code>CREATE SCHEMA IF NOT EXISTS adds_schema;\nCREATE TABLE IF NOT EXISTS adds_schema.tabel_a (\n    `huruf` VARCHAR (1) NOT NULL\n);\n\nCREATE TABLE IF NOT EXISTS adds_schema.tabel_b (\n    `angka` INT NOT NULL\n);\n\nINSERT INTO adds_schema.tabel_a VALUE('A'), ('B'),('C'),('D');\nINSERT INTO adds_schema.tabel_b VALUE(1), (2),(3),(4);\n</code></pre> <p>Selanjutnya mari kita corss join <code>tabel_a</code> dan <code>tabel_b</code></p> <pre><code>select a.*, b.*, CONCAT(a.huruf,\"\",b.angka)\nFROM tabel_a AS a\nCROSS JOIN tabel_b AS b\nORDER BY a.huruf, b.angka; ---(1)!\n</code></pre> <ol> <li>Hanya biar rapih saja di urutkan, tidak ada kaitannya dengan CROSS JOIN.</li> </ol> Output <pre><code>+-------+-------+----------------------------+\n| huruf | angka | CONCAT(a.huruf,\"\",b.angka) |\n+-------+-------+----------------------------+\n| A     |     1 | A1                         |\n| A     |     2 | A2                         |\n| A     |     3 | A3                         |\n| A     |     4 | A4                         |\n| B     |     1 | B1                         |\n| B     |     2 | B2                         |\n| B     |     3 | B3                         |\n| B     |     4 | B4                         |\n| C     |     1 | C1                         |\n| C     |     2 | C2                         |\n| C     |     3 | C3                         |\n| C     |     4 | C4                         |\n| D     |     1 | D1                         |\n| D     |     2 | D2                         |\n| D     |     3 | D3                         |\n| D     |     4 | D4                         |\n+-------+-------+----------------------------+\n</code></pre> <p>Warning</p> <p>Yang harus anda ingat pada cross join adalah, tipe tersebut bisa sangat intensif bagi sistem basis data, dan baiknya gunakan tipe join lain jika memungkinkan, dan selalu gunakan klausa <code>WHERE</code> jika menggunakan CROSS JOIN.</p>"},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/#understanding-what-natural-join-is-and-how-to-use-it","title":"Understanding What NATURAL JOIN is and how to use it","text":"<p>Tipe join ini akan mengaitkan kolom-kolom yang memliki nama yang sama dari tabel-tabel yang digabungkan. Hampir mirip dengan INNER JOIN atau LEFT OUTER JOIN. Untuk menggunakan NATURAL JOIN gunakan query berikut;</p> <p><pre><code>SELECT column(s)\nFROM table1\nNATURAL JOIN table2;\n</code></pre> Marikita simulasikan dengan tabel collegePlaying dan school <pre><code>SELECT c.playerid, c.schoolid as 'School ID-collegeplaying', \nc.yearid, s.schoolid as 'School ID-schools', s.city, s.state, s.country\nFROM lahmansbaseballdb.collegeplaying c\nNATURAL JOIN lahmansbaseballdb.schools s;\n</code></pre></p> <p>Output</p> <pre><code>+-----------+--------------------------+--------+-------------------+------------+-------+---------+\n| playerid  | School ID-collegeplaying | yearid | School ID-schools | city       | state | country |\n+-----------+--------------------------+--------+-------------------+------------+-------+---------+\n| birkbmi01 | akron                    |   1980 | akron             | Akron      | OH    | USA     |\n| birkbmi01 | akron                    |   1981 | akron             | Akron      | OH    | USA     |\n| birkbmi01 | akron                    |   1982 | akron             | Akron      | OH    | USA     |\n| birkbmi01 | akron                    |   1983 | akron             | Akron      | OH    | USA     |\n| dilauja01 | akron                    |   1962 | akron             | Akron      | OH    | USA     |\n| malasma01 | akron                    |   1998 | akron             | Akron      | OH    | USA     |\n| malasma01 | akron                    |   1999 | akron             | Akron      | OH    | USA     |\n| malasma01 | akron                    |   2000 | akron             | Akron      | OH    | USA     |\n| nealejo01 | akron                    |   1893 | akron             | Akron      | OH    | USA     |\n| avilaal01 | alabama                  |   2006 | alabama           | Tuscaloosa | AL    | USA     |\n</code></pre> <p>Hasil tersebut akan menjadi NATRUAL JOIN, dimana tipe join ini mencari kesamaan antar kolom-kolom pada tabel schools dan collegeplaying, yang mana pada kasus ini dapat kita lihat, kolom schoolID yang menjadi kondisi kesamaan antara kedua table. Dapat dibuktikan dengan hasil diatas, <code>School ID-collegeplaying</code> dan <code>School ID-schools</code> memliki nilai yang identik.</p>"},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/#understanding-set-theory","title":"Understanding set theory","text":"<p>Teori set adalah yang mendasari konsep dari SQL. Set adalah kumpulan dari objek-objek. Setiap objek didalam set disebut dengna element. Didalam MySql , tabel adalah set dan recordnya adalah element.  Anda dapat mengambil subset dari set. Subset adalah set terkecil dari element pada sebuah set. Di SQL anda dapat mengambil subset menggunakan klausa WHERE.  Cross product adalah sebuah set yang diciptakan dari dua buah atau lebih set. Didalam sql, cross product adalah join. Untuk membuat different set of data didalam sql, anda dapat menggunakan intersection, difference dan union joins.</p>"},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/#understanding-what-is-a-union-join-is-and-learning-how-to-use-it-in-a-sql-query","title":"Understanding what is a UNION join is and learning how to use it in a SQL query","text":"<p>UNION dapat mengkombinasikan dua atau lebih hasil set kedalam satu set. Namun ada beberapa aturan yang harus diikut untuk menghindari error, diantaranya:</p> <ol> <li>Banyak kolom pada statement SELECT harus sama.</li> <li>Urutan kolom-kolom yang ada pada statement SELECT harus sama.</li> <li>Tipe data dari setiap kolom-kolom harus sama atau setidaknya kompatibel.</li> </ol> <p>Ada beberapa yang harus diingat dalam me-review hasil dari UNION join, diantaranya: * Nama kolom pada kolom-kolom terakhir akan disamakan dengan nama dari kolom-kolom yang digunakan pada statement select pertama. * <code>GROP BY</code> dan <code>HAVING</code> hanya dapat digunakan dalam setiap query, namun tidak akan berdampak pada hasil akhir</p> Anda memliki dua pilihan ketika menggunakan UNION, diantranya: <code>UNION</code> tipe ini akan menghapus record yang ganda, duplicate tanpa menggunakan DISTINCT pada statement SELECT. <code>UNION ALL</code> Tipe ini tidak akan menghapus record ganda. Lalu, tipe ini lebih cepat dibandingkan dengan UNION karena tipe ini tidak perlu mengetahui record mana yang duplicate lalu menghapusnya. <p>Kedua UNION diatas akan mengkombinasi secara vertikal, sedangkan JOIN menggabungkannya secara horizontal. Gambar dibawah ini menjelaskan perbedaan antara JOIN, UNION, dan UNION ALL.</p> <p></p>"},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/#union","title":"UNION","text":"<p>Untuk menggunakan UNION gunakna syntax berkut ini;</p> <pre><code>SELECT column(s)\nFROM table1\nWHERE condition(s)\nUNION\nSELECT column(s)\nFROM table2\nWHERE condition(s)\nORDER BY column(s)\n</code></pre> <p>Syntax diatas menujukan kita bagaimana cara <code>UNION</code> dua query bersamaan. <code>WHERE</code> didalam setiap query adalah opsional. <code>ORDER BY</code> juga opsional namun hanya dapat digunakan pada query terakhir.</p> <p>Sekarang kita coba papa kasus di lahmansbaseballdb, anda diperintah untuk menampilkan penghargaan yang deterima oleh manager dan player pada tahun 1994.</p> <pre><code>SELECT p.playerID, p.nameGiven, awardID, yearID\nFROM awardsplayers AS ap\nINNER JOIN people AS p ON ap.playerID = p.playerID \nWHERE yearID = 1994\nUNION\nSELECT p.playerID, p.nameGiven, awardID, yearID\nFROM awardsmanagers AS am\nINNER JOIN people AS p ON am.playerID = p.playerID \nWHERE yearID = 1994\nORDER BY awardid;\n</code></pre> Output <pre><code>+-----------+-------------------+-------------------------------------+--------+\n| playerID  | nameGiven         | awardID                             | yearID |\n+-----------+-------------------+-------------------------------------+--------+\n| mcgrifr01 | Frederick Stanley | All-Star Game MVP                   |   1994 |\n| showabu99 | William Nathaniel | BBWAA Manager of the Year           |   1994 |\n| aloufe01  | Felipe Rojas      | BBWAA Manager of the Year           |   1994 |\n| smithoz01 | Osborne Earl      | Branch Rickey Award                 |   1994 |\n| coneda01  | David Brian       | Cy Young Award                      |   1994 |\n| maddugr01 | Gregory Alan      | Cy Young Award                      |   1994 |\n| mattido01 | Donald Arthur     | Gold Glove                          |   1994 |\n| bondsba01 | Barry Lamar       | Gold Glove                          |   1994 |\n| rodriiv01 | Ivan              | Gold Glove                          |   1994 |\n| griffke02 | George Kenneth    | Gold Glove                          |   1994 |\n| pagnoto01 | Thomas Alan       | Gold Glove                          |   1994 |\n| grissma02 | Marquis Deon      | Gold Glove                          |   1994 |\n| alomaro01 | Roberto           | Gold Glove                          |   1994 |\n| maddugr01 | Gregory Alan      | Gold Glove                          |   1994 |\n| loftoke01 | Kenneth           | Gold Glove                          |   1994 |\n| lewisda01 | Darren Joel       | Gold Glove                          |   1994 |\n</code></pre> <p>Sekarang kita coba untuk membuat <code>SELECT</code> statement tidak sesuai jumlahnya pada UNION diatas. Kita akan kolom <code>yearID</code> pada SELECT yang ke-2. <pre><code>SELECT p.playerID, p.nameGiven, awardID, yearID\nFROM awardsplayers AS ap\nINNER JOIN people AS p ON ap.playerID = p.playerID \nWHERE yearID = 1994\nUNION\nSELECT p.playerID, p.nameGiven, awardID ---(1)!\nFROM awardsmanagers AS am\nINNER JOIN people AS p ON am.playerID = p.playerID \nWHERE yearID = 1994\nORDER BY awardid;\n</code></pre></p> <ol> <li>Menghapus kolom <code>yearID</code></li> </ol> Output <pre><code>ERROR 1222 (21000): The used SELECT statements have a different number of columns\n</code></pre> <p>Jika banyak kolom pada setiap statement tidak sama maka MySql akan menghasilkan error. Sebagiamana syarat yang harus dipenuhi (baca. Bagaimana jika urutan dari query tidak seusai pada setiap SELECT statement ?</p> <pre><code>SELECT p.playerID, p.nameGiven, awardID, yearID\nFROM awardsplayers AS ap\nINNER JOIN people AS p ON ap.playerID = p.playerID \nWHERE yearID = 1994\nUNION\nSELECT p.playerID, p.nameGiven, yearID, awardID\nFROM awardsmanagers AS am\nINNER JOIN people AS p ON am.playerID = p.playerID \nWHERE yearID = 1994\nORDER BY awardid;\n</code></pre> Output <pre><code>| playerID  | nameGiven         | awardID                             | yearID                    |\n+-----------+-------------------+-------------------------------------+---------------------------+\n| showabu99 | William Nathaniel | 1994                                | TSN Manager of the Year   |\n| showabu99 | William Nathaniel | 1994                                | BBWAA Manager of the Year |\n| aloufe01  | Felipe Rojas      | 1994                                | TSN Manager of the Year   |\n| aloufe01  | Felipe Rojas      | 1994                                | BBWAA Manager of the Year |\n| mcgrifr01 | Frederick Stanley | All-Star Game MVP                   | 1994                      |\n| smithoz01 | Osborne Earl      | Branch Rickey Award                 | 1994                      |\n| coneda01  | David Brian       | Cy Young Award                      | 1994                      |\n| maddugr01 | Gregory Alan      | Cy Young Award                      | 1994                      |\n| maddugr01 | Gregory Alan      | Gold Glove                          | 1994                      |\n| griffke02 | George Kenneth    | Gold Glove                          | 1994                      |\n| grissma02 | Marquis Deon      | Gold Glove                          | 1994                      |\n</code></pre> <p>Kita tidak mendapatkan sebuah error, query tersebut memberikan hasil diatas. Query diatas tidak memliki urutan yang benar. Kolom <code>awardid</code> dan <code>yearid</code> ditukar. Nama kolom yang digunakan adalah namakolom pada SELECT statement pertama. Namun, bukan berarti jika MySql tidak menghasilkan error query kita bekerja sesuai yang diharapkan, tidak selalu. Kasus diatas MySql mengkonversi secara implisit <code>yearid</code> ke kolom yang memliki tipe sejenis seperti <code>awardid</code>.</p> <p>Berbicara tentang konversi, terdapat dua tipe konversi, explicit dan implicit. Explicit conversion maksudnya adalah ketika secara tersurat anda mengganti tipe data. Sedangkan Implicit terjadi ketika MySql harus me-nyamakan tipe data, sama seperti kasus diatas ketika kita menggunakan UNION JOIN, mengkonversi SMALLINT kedalam VARCHAR dan sebaliknya.</p> <p>Sebagai tambahan anda dapat membuat kolom statis dengan nilai yang statis, pada contoh ini kita diperintah untuk membuat kolom yang menjelaskan baris-baris tersebut player atau manager.</p> <pre><code>SELECT p.playerID, p.nameGiven, awardID, yearID, 'Player' AS playeridType\nFROM awardsplayers AS ap\nINNER JOIN people AS p ON ap.playerID = p.playerID \nWHERE yearID = 1994\nUNION\nSELECT p.playerID, p.nameGiven, awardID, yearID, 'Manager' AS palyeridType\nFROM awardsmanagers AS am\nINNER JOIN people AS p ON am.playerID = p.playerID \nWHERE yearID = 1994\nORDER BY awardid;\n</code></pre> Output <pre><code>+-----------+-------------------+-------------------------------------+--------+--------------+\n| playerID  | nameGiven         | awardID                             | yearID | playeridType |\n+-----------+-------------------+-------------------------------------+--------+--------------+\n| mcgrifr01 | Frederick Stanley | All-Star Game MVP                   |   1994 | Player       |\n| showabu99 | William Nathaniel | BBWAA Manager of the Year           |   1994 | Manager      |\n| aloufe01  | Felipe Rojas      | BBWAA Manager of the Year           |   1994 | Manager      |\n| smithoz01 | Osborne Earl      | Branch Rickey Award                 |   1994 | Player       |\n| coneda01  | David Brian       | Cy Young Award                      |   1994 | Player       |\n| maddugr01 | Gregory Alan      | Cy Young Award                      |   1994 | Player       |\n| mattido01 | Donald Arthur     | Gold Glove                          |   1994 | Player       |\n| bondsba01 | Barry Lamar       | Gold Glove                          |   1994 | Player       |\n| rodriiv01 | Ivan              | Gold Glove                          |   1994 | Player       |\n| griffke02 | George Kenneth    | Gold Glove                          |   1994 | Player       |\n| pagnoto01 | Thomas Alan       | Gold Glove                          |   1994 | Player       |\n| grissma02 | Marquis Deon      | Gold Glove                          |   1994 | Player       |\n| alomaro01 | Roberto           | Gold Glove                          |   1994 | Player       |\n| maddugr01 | Gregory Alan      | Gold Glove                          |   1994 | Player       |\n| loftoke01 | Kenneth           | Gold Glove                          |   1994 | Player       |\n| lewisda01 | Darren Joel       | Gold Glove                          |   1994 | Player       |\n| langsma01 | Mark Edward       | Gold Glove                          |   1994 | Player       |\n| larkiba01 | Barry Louis       | Gold Glove                          |   1994 | Player       |\n| boggswa01 | Wade Anthony      | Gold Glove                          |   1994 | Player       |\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/#union-all","title":"UNION ALL","text":"<p>Jika anda menjalan query sebelumnya dan mengganti dari UNION menjadi UNION ALL, anda akan mendapatkan hasil yang sama karena tidak ada record ganda untuk di filter. </p> <p>Gunakan query dibawah ini untuk mengatahu bagaimana UNION ALL bekerja.</p> <pre><code>SELECT playerid, yearid, teamid, G AS gamesbatted FROM\nlahmansbaseballdb.batting\nWHERE yearid = 2005\nUNION ALL\nSELECT playerid, yearid, teamid, g_batting FROM\nlahmansbaseballdb.appearances\nWHERE yearid = 2005\nORDER BY yearid, playerid, gamesbatted;\n</code></pre> Output <pre><code>+-----------+--------+--------+-------------+\n| playerid  | yearid | teamid | gamesbatted |\n+-----------+--------+--------+-------------+\n| abernbr01 |   2005 | MIN    |          24 |\n| abernbr01 |   2005 | MIN    |          24 |\n| abreubo01 |   2005 | PHI    |         162 |\n| abreubo01 |   2005 | PHI    |         162 |\n| accarje01 |   2005 | SFN    |          28 |\n| accarje01 |   2005 | SFN    |          28 |\n| acevejo01 |   2005 | COL    |          36 |\n| acevejo01 |   2005 | COL    |          36 |\n| adamsmi03 |   2005 | MIL    |          12 |\n| adamsmi03 |   2005 | MIL    |          13 |\n| adamsru01 |   2005 | TOR    |         139 |\n| adamsru01 |   2005 | TOR    |         139 |\n| adamste01 |   2005 | PHI    |          14 |\n| adamste01 |   2005 | PHI    |          16 |\n| adkinjo01 |   2005 | CHA    |           0 |\n| adkinjo01 |   2005 | CHA    |           5 |\n| affelje01 |   2005 | KCA    |           3 |\n| affelje01 |   2005 | KCA    |          49 |\n| aguilch01 |   2005 | FLO    |          65 |\n| aguilch01 |   2005 | FLO    |          65 |\n</code></pre> <p>Dari Output diatas kita dapat mengoservasi;</p> <ol> <li>Hasil dari query tersebut, anda dapat lihat setiap plyerId selalu memliki dua baris tanpa memperhatikan apakah <code>yearId</code>, <code>teamId</code> dan <code>gamesbatted fields</code>pada kedua baris tersebut sama atau tidak pada tabel batting dan appearances</li> <li>Diatas menggunaka UNION ALL, jika kita menggunakan query diatas dan menggunakan UNION maka seharusnya setiap playerID hanya mengeluarkan satu baris jika <code>yearId</code>, <code>teamId</code> dan <code>gamesbatted fields</code> memiliki nilai yang berbeda.</li> </ol> <pre><code>SELECT playerid, yearid, teamid, G AS gamesbatted \nFROM lahmansbaseballdb.batting\nWHERE yearid = 2005\nUNION\nSELECT playerid, yearid, teamid, g_batting\nFROM lahmansbaseballdb.appearances\nWHERE yearid = 2005\nORDER BY yearid, playerid, gamesbatted;\n</code></pre> Output <pre><code>+-----------+--------+--------+-------------+\n| playerid  | yearid | teamid | gamesbatted |\n+-----------+--------+--------+-------------+\n| abernbr01 |   2005 | MIN    |          24 |\n| abreubo01 |   2005 | PHI    |         162 |\n| accarje01 |   2005 | SFN    |          28 |\n| acevejo01 |   2005 | COL    |          36 |\n| adamsmi03 |   2005 | MIL    |          12 |\n| adamsmi03 |   2005 | MIL    |          13 |\n| adamsru01 |   2005 | TOR    |         139 |\n| adamste01 |   2005 | PHI    |          14 |\n| adamste01 |   2005 | PHI    |          16 |\n| adkinjo01 |   2005 | CHA    |           0 |\n| adkinjo01 |   2005 | CHA    |           5 |\n</code></pre> <p>Higlight diatas, untuk playerID adamsmi03 tetap memliki dua baris karena nilai pada kolom <code>gamesbatted</code> memliki nilai yang berbeda pada tabel gamesbatted dan appearances.</p>"},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/#understanding-what-an-intersect-is-and-learning-how-to-use-it-in-a-sql-query","title":"Understanding what an intersect is and learning how to use it in a SQL query","text":"<p>Intersect dapat mengkombinasi dua atau lebih sets yang mengandung nilai yang berbeda dari setiap set. Foto dibawah ini menggambarkan hasil dari sebuah intersect:</p> <p></p> <p>MySql tidak mendungkun INTERSECT SQL operator, namun ada workaround menggunakan join. Anda dapat menambahkan DISTINCT pada INNER JOIN. Query dibawah ini menunjukan cara meng-intersect dalam MySql.</p> Tabel simulasi INTERSECT Membuat tabel baru dan insert value<pre><code>CREATE SCHEMA IF NOT EXISTS adds_schema;\nCREATE TABLE IF NOT EXISTS adds_schema.tabel_satu (\n    `id` INT NOT NULL PRIMARY KEY,\n    `huruf` VARCHAR (1) NOT NULL\n);\n\nCREATE TABLE IF NOT EXISTS adds_schema.tabel_dua (\n    `id` INT NOT NULL PRIMARY KEY,\n    `huruf` VARCHAR (1) NOT NULL\n);\n\nINSERT INTO adds_schema.tabel_satu VALUE(1,'A'), (2,'A'),(3,'C'),(4,'D'),(5,'F'),(6,'C');\nINSERT INTO adds_schema.tabel_dua VALUE(1,'A'), (2,'A'),(3,'C'),(4,'E'),(5,'B'),(6,'C');\n</code></pre> Query select atas tabel_satu dan tabel_dua<pre><code>select * from tabel_satu; SELECT * FROM tabel_dua;\n+----+-------+\n| id | huruf |\n+----+-------+\n|  1 | A     |\n|  2 | A     |\n|  3 | C     |\n|  4 | D     |\n|  5 | F     |\n|  6 | C     |\n+----+-------+\n6 rows in set (0,00 sec)\n\n+----+-------+\n| id | huruf |\n+----+-------+\n|  1 | A     |\n|  2 | A     |\n|  3 | C     |\n|  4 | E     |\n|  5 | B     |\n|  6 | C     |\n+----+-------+\n6 rows in set (0,01 sec)\n</code></pre> <p>Jalankan query dibawah ini untuk meng-INTERSECT tabel_satu dan tabel_dua <pre><code>USE adds_schema;\nSELECT DISTINCT b.huruf\nFROM tabel_satu a\nINNER JOIN tabel_dua b ON b.huruf = a.huruf;\n</code></pre></p> Output <pre><code>+-------+\n| huruf |\n+-------+\n| A     |\n| C     |\n+-------+\n</code></pre> <p>Hasil diatas adalah intersection dari tabel_satu dan tabel_dua dibawah kolom <code>huruf</code>. Daftar dari hasil diatas mengandung hanya nilai yang ada dikedua tabel tersebut. Operator <code>DISTINCT</code> menghapus nilai yang ganda, dan inner join mengembalikan baris dari kedua tabel.</p>"},{"location":"DBMS/Catatan%20MySql/06.%20Querying%20Multiple%20Tables/#using-indexes-with-your-query","title":"Using indexes with your query","text":"<p>Pada sesi ini, kita akan melihat index mana yang kita gunakan pada query kita dan bagaimana men-troubleshoot index pada query tersebut jika performa tidak sesuai dengan yang kitaharpakan, dalam arti, LAMBAT. Untuk memulai kita gunakan query dibawah dengan menambahkan klausa <code>EXPLAIN</code>.</p> <pre><code>EXPLAIN SELECT p.playerid, p.birthyear,\na.yearid, a.teamid, a.G_defense, b.H\nFROM lahmansbaseballdb.appearances AS a\nINNER JOIN lahmansbaseballdb.people AS p\nON p.playerid = a.playerid\nINNER JOIN lahmansbaseballdb.batting AS b\nON p.playerid = b.playerid\nWHERE b.yearid = 2017\nAND b.H &lt;&gt; 0\nORDER BY p.playerid, a.yearid, a.teamid, a.G_defense, b.H;\n</code></pre> Output <pre><code>+----+-------------+-------+------------+------+---------------+---------+---------+------------------------------------+--------+----------+----------------------------------------------+\n| id | select_type | table | partitions | type | possible_keys | key     | key_len | ref                                | rows   | filtered | Extra                                        |\n+----+-------------+-------+------------+------+---------------+---------+---------+------------------------------------+--------+----------+----------------------------------------------+\n|  1 | SIMPLE      | p     | NULL       | ALL  | NULL          | NULL    | NULL    | NULL                               |  19484 |   100.00 | Using where; Using temporary; Using filesort |\n|  1 | SIMPLE      | b     | NULL       | ref  | PRIMARY       | PRIMARY | 40      | lahmansbaseballdb.p.playerID,const |      1 |    90.00 | Using where                                  |\n|  1 | SIMPLE      | a     | NULL       | ALL  | NULL          | NULL    | NULL    | NULL                               | 105627 |    10.00 | Using where; Using join buffer (hash join)   |\n+----+-------------+-------+------------+------+---------------+---------+---------+------------------------------------+--------+----------+----------------------------------------------+\n3 rows in set, 1 warning (0,03 sec)\n</code></pre> <p>Dari hasil siatas dapat kita lihat bahwa;</p> <ol> <li> <p>Pada kolom table, a adalah alias dari tabel <code>appearances</code>, dari p adalah alias dari tabel <code>people</code>, dan b alias dari tabel <code>batting</code>. Jika kita tidak menggunakan alias, maka nama asli tabel yang akan ditampilkan</p> </li> <li> <p>Tabel <code>batting</code>, b, menggunakan primary key dalam mengembalikan datanya, Ini baguas, karena hasil yang didapatkan akan lebih cepat karena query menggunakan index. Tabel <code>batting</code> difilter sebesar 90.00 menggunakan klausa where.</p> </li> <li> <p>Tabel <code>people</code> dan <code>appearances</code> tidak menggunakan index pada query tersebut. Tabel <code>people</code> menggunakan temporary dan filesort yang mana memperlambat query, dan tabel <code>appearances</code> menggunakan join buffer (Block Nested Loop) yang mana artinya data dari yang dari awal digabung telah ditempatkan kedalam sebuah buffer. Jadi data dari table <code>appearancse</code> akan digabungkan pada data tersebut didalam buffer, yang menyebabkan query tersebut lebih lambat. </p> </li> <li> <p>Query tersebut tanpa menggunakan klausa <code>EXPLAIN</code> akan mengembalikan sebanyak 5520 baris, namun ternyata query tersebut memindai sebanyak 19.554 baris pada tabel <code>people</code> dan 105.267 baris pada tabel <code>appearances</code>.</p> </li> <li> <p>Kolom Type menampilkan nilai yang berbeda, All dan ref. Kolom tersebut menggambarkan tipe join yang digunakan untuk tabel. All artinya terjadi pemindaian secara menyeluruh pada tabel, yup, jika kita lihat pada tabel <code>people</code> dan <code>appearances</code> tidak memliki index, sehingga perlu untuk memindai seluruh tabel untuk menemukan hasil. Sedangkan ref artinya semua baris yang memliki kecocokan yang ada pada tabel lain yang akan dibaca, seperti tabel <code>batting</code> yang memliki index, sehingga query tidak perlu untuk memindai secara menyeluruh.</p> </li> </ol> <p>Sebelum menambahkan index untuk meningkatkan performa sebuah query, anda harus melihat query anda terlebih dahulu. Misalkan, pada contoh diatas, penggunakan klausa <code>WHERE</code> merujuk pada kolom yearID pada tabel <code>batting</code>. Coba anda ganti menggunakan tabel <code>appearances</code>.</p> <pre><code>EXPLAIN SELECT p.playerid, p.birthyear,\na.yearid, a.teamid, a.G_defense, b.H\nFROM lahmansbaseballdb.appearances AS a\nINNER JOIN lahmansbaseballdb.people AS p\nON p.playerid = a.playerid\nINNER JOIN lahmansbaseballdb.batting AS b\nON p.playerid = b.playerid\nWHERE a.yearid = 2017 ---(1)!\nAND b.H &lt;&gt; 0\nORDER BY p.playerid, a.yearid, a.teamid, a.G_defense, b.H;\n</code></pre> <ol> <li>Mengganti <code>WHERE b.yearid = 2017</code> ke <code>WHERE a.yearid = 2017</code> </li> </ol> Output <pre><code>+----+-------------+-------+------------+------+---------------+---------+---------+------------------------------+-------+----------+--------------------------------------------+\n| id | select_type | table | partitions | type | possible_keys | key     | key_len | ref                          | rows  | filtered | Extra                                      |\n+----+-------------+-------+------------+------+---------------+---------+---------+------------------------------+-------+----------+--------------------------------------------+\n|  1 | SIMPLE      | a     | NULL       | ref  | PRIMARY       | PRIMARY | 2       | const                        |  1494 |   100.00 | Using temporary; Using filesort            |\n|  1 | SIMPLE      | p     | NULL       | ALL  | NULL          | NULL    | NULL    | NULL                         | 19484 |    10.00 | Using where; Using join buffer (hash join) |\n|  1 | SIMPLE      | b     | NULL       | ref  | PRIMARY       | PRIMARY | 38      | lahmansbaseballdb.p.playerID |     5 |    90.00 | Using where                                |\n+----+-------------+-------+------------+------+---------------+---------+---------+------------------------------+-------+----------+--------------------------------------------+\n3 rows in set, 1 warning (0,00 sec)\n</code></pre> <p>Dari hasil diatas, sekarang, table a (<code>appearances</code>) menggunakan <code>PRIMARY KEY</code> dan rows yang dipindai menjadi 1.494 baris, jauh lebih kecil yang awalnya 19.554 baris. Namun, query ini akan mengmbalikan jumlah baris 5602 yang dari sebelumnya 5520. Ya, lebih cepat, namun bisa jadi perubahan ini tidak sesuai dengan yang anda inginkan.</p> <p>Info</p> <p>Jumlah baris diketahui dengan cara menjalankan query tersebut tanpa klausa <code>EXPLAIN</code> dan lihat pada bagian yang paling bawah. Misalkan Clause WHERE pada tabel batting<pre><code>| zobribe01 |      1981 |   2018 | CHN    |       125 |  101 |\n| zuninmi01 |      1991 |   2013 | SEA    |        50 |   97 |\n| zuninmi01 |      1991 |   2014 | SEA    |       130 |   97 |\n| zuninmi01 |      1991 |   2015 | SEA    |       112 |   97 |\n| zuninmi01 |      1991 |   2016 | SEA    |        52 |   97 |\n| zuninmi01 |      1991 |   2017 | SEA    |       120 |   97 |\n| zuninmi01 |      1991 |   2018 | SEA    |       111 |   97 |\n+-----------+-----------+--------+--------+-----------+------+\n5520 rows in set (0,14 sec)\n</code></pre></p> Clause WHERE pada tabel appearances<pre><code>| zuninmi01 |      1991 |   2017 | SEA    |       120 |   61 |\n| zuninmi01 |      1991 |   2017 | SEA    |       120 |   75 |\n| zuninmi01 |      1991 |   2017 | SEA    |       120 |   87 |\n| zuninmi01 |      1991 |   2017 | SEA    |       120 |   97 |\n+-----------+-----------+--------+--------+-----------+------+\n5602 rows in set (0,05 sec)\n</code></pre> <p>Oke, jika demikian mari kita bermain dengan index. Sebelum itu kita harus mengetahui index yang dimiliki oleh tabel yang terikat pada query tersebut. Kita bisa menggunakan syntax <code>SHOW INDEX FROM \u2018table name\u2019.</code></p> Output Index Appearances<pre><code>+-------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n| Table       | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression |\n+-------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n| appearances |          0 | PRIMARY  |            1 | yearID      | A         |         151 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| appearances |          0 | PRIMARY  |            2 | teamID      | A         |        2878 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| appearances |          0 | PRIMARY  |            3 | playerID    | A         |      105627 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n+-------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n3 rows in set (0,26 sec)\n</code></pre> Index Bating<pre><code>+---------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n| Table   | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression |\n+---------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n| batting |          0 | PRIMARY  |            1 | playerID    | A         |       20007 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| batting |          0 | PRIMARY  |            2 | yearID      | A         |       97798 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| batting |          0 | PRIMARY  |            3 | stint       | A         |      105420 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n+---------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n3 rows in set (0,34 sec)\n</code></pre> <p>Gambar diatas menampilkan index yang ada pada tabel appearances dan batting. Sedangkan untuk tabel people tidak memliki index.</p> <p>Yang akan kita coba sekarang untuk meningkat query reading ini adalah membuat Non Clustered index pada tabel <code>appearances</code> dan tabel <code>people</code>, mengapa pada kedua tabel ini ditentukan ? Lihat pada EXPLAIN query sebelumnya. Kedua tabel ini melakukan full scan alih-alih seharusnya memindai hanya tabel yang saling ada kecocokan dengan tabel yang lainnya. </p> <p>Warning</p> <p>Namun yang harus menjadi perhatian adalah, penambahan index ini akan memperlambat query lainnya seperti inserting, updating atau deleteing dan munkin juga akan berdampat pada menurunnya performa selecting data pada query yang lain. Maka berhati-hatilkan dalam membuat index baru untuk mempercepat sebuah query. Anda harus menganalisa dan memperhatikan query anda yang lain pada MySql Server untuk memahami dampak yang dihasilkan dari penambahan atau pengurangan sebuah index.</p> <p>Karena pada query tersebut kita ingin menampilkan playerID dan birthYear pada tabel people, kita dapat menambahkan Non-Clustered untuk kedua kolom tersebut pada tabel poeple.</p> Membuat Non-Clustered Index pada People<pre><code>ALTER TABLE people\nADD INDEX NC_peopleID_birthYear (playerID ASC, birthYear ASC) VISIBLE;\n</code></pre> Show index tabel people <pre><code>SHOW INDEX FROM people;\n</code></pre> Index tabel people<pre><code>+--------+------------+-----------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n| Table  | Non_unique | Key_name              | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression |\n+--------+------------+-----------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n| people |          1 | NC_peopleID_birthYear |            1 | playerID    | A         |       19484 |     NULL |   NULL | YES  | BTREE      |         |               | YES     | NULL       |\n| people |          1 | NC_peopleID_birthYear |            2 | birthYear   | A         |       19484 |     NULL |   NULL | YES  | BTREE      |         |               | YES     | NULL       |\n+--------+------------+-----------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n2 rows in set (0,16 sec)\n</code></pre> <p>Oke alhamdulilah kita telah berhasil menambahkan sebuah index pada tabel people. Sekarang mari kita coba lagi jalankan query dibawah ini, apakah akan ada perubahan setelah kita menambahkan index.</p> <p>Perubahan performa setelah penambahan index</p> Explain<pre><code>EXPLAIN SELECT p.playerid, p.birthyear,\na.yearid, a.teamid, a.G_defense, b.H\nFROM lahmansbaseballdb.appearances AS a\nINNER JOIN lahmansbaseballdb.people AS p\nON p.playerid = a.playerid\nINNER JOIN lahmansbaseballdb.batting AS b\nON p.playerid = b.playerid\nWHERE b.yearid = 2017\nAND b.H &lt;&gt; 0\nORDER BY p.playerid, a.yearid, a.teamid, a.G_defense, b.H;\n</code></pre> Output setelah penambahan index<pre><code>+----+-------------+-------+------------+------+-----------------------+-----------------------+---------+------------------------------------+--------+----------+---------------------------------+\n| id | select_type | table | partitions | type | possible_keys         | key                   | key_len | ref                                | rows   | filtered | Extra                           |\n+----+-------------+-------+------------+------+-----------------------+-----------------------+---------+------------------------------------+--------+----------+---------------------------------+\n|  1 | SIMPLE      | a     | NULL       | ALL  | NULL                  | NULL                  | NULL    | NULL                               | 105627 |   100.00 | Using temporary; Using filesort |\n|  1 | SIMPLE      | p     | NULL       | ref  | NC_peopleID_birthYear | NC_peopleID_birthYear | 1023    | lahmansbaseballdb.a.playerID       |      1 |   100.00 | Using where; Using index        |\n|  1 | SIMPLE      | b     | NULL       | ref  | PRIMARY               | PRIMARY               | 40      | lahmansbaseballdb.p.playerID,const |      1 |    90.00 | Using where                     |\n+----+-------------+-------+------------+------+-----------------------+-----------------------+---------+------------------------------------+--------+----------+---------------------------------+\n3 rows in set, 1 warning (0,01 sec)\n</code></pre> Output sebelum penambahan index<pre><code>+----+-------------+-------+------------+------+---------------+---------+---------+------------------------------------+--------+----------+----------------------------------------------+\n| id | select_type | table | partitions | type | possible_keys | key     | key_len | ref                                | rows   | filtered | Extra                                        |\n+----+-------------+-------+------------+------+---------------+---------+---------+------------------------------------+--------+----------+----------------------------------------------+\n|  1 | SIMPLE      | p     | NULL       | ALL  | NULL          | NULL    | NULL    | NULL                               |  19484 |   100.00 | Using where; Using temporary; Using filesort |\n|  1 | SIMPLE      | b     | NULL       | ref  | PRIMARY       | PRIMARY | 40      | lahmansbaseballdb.p.playerID,const |      1 |    90.00 | Using where                                  |\n|  1 | SIMPLE      | a     | NULL       | ALL  | NULL          | NULL    | NULL    | NULL                               | 105627 |    10.00 | Using where; Using join buffer (hash join)   |\n+----+-------------+-------+------------+------+---------------+---------+---------+------------------------------------+--------+----------+----------------------------------------------+\n3 rows\n</code></pre> <p>Sebagaimana yang anda lihat pada gambar diatas, query kita sekarang menggunakan non-clustered index yang baru saja kita buat pada tabel people yang mana setelah penambahan index ini MySql hanya memindai satu baris saja dari yang sebelumnya 19.554 baris (Lihat pada kolom rows). Oke sekarang mari kita coba pengoprekan pada tabel appearances, karena tabel tersebut masih harus memindai 105.627 barus dan tidak menggunakan index.</p> <p>Sekarang tambah Non-Clustered index pada tabel appearances</p> Membuat Non-Clustered Index pada Appearances<pre><code>ALTER TABLE appearances\nADD INDEX NC_yearID_teamID_GDefense (yearID ASC, teamID ASC, G_defense ASC) VISIBLE;\n</code></pre> Show index table appearances <pre><code>SHOW INDEX FROM appearances;\n</code></pre> <pre><code>+-------------+------------+---------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n| Table       | Non_unique | Key_name                  | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression |\n+-------------+------------+---------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n| appearances |          0 | PRIMARY                   |            1 | yearID      | A         |         151 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| appearances |          0 | PRIMARY                   |            2 | teamID      | A         |        2878 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| appearances |          0 | PRIMARY                   |            3 | playerID    | A         |      105627 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| appearances |          1 | NC_yearID_teamID_GDefense |            1 | yearID      | A         |         171 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| appearances |          1 | NC_yearID_teamID_GDefense |            2 | teamID      | A         |        2946 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| appearances |          1 | NC_yearID_teamID_GDefense |            3 | G_defense   | A         |       81038 |     NULL |   NULL | YES  | BTREE      |         |               | YES     | NULL       |\n+-------------+------------+---------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n6 rows in set (0,20 sec)\n</code></pre> <p>Oke,sekarag kita jalankan lagi query sebelumnya untuk meliha setelah ada penambahan non-clustered index pada tabel appearances.</p> <p>Perubahan performa setelah penambahan index</p> Explain<pre><code>EXPLAIN SELECT p.playerid, p.birthyear,\na.yearid, a.teamid, a.G_defense, b.H\nFROM lahmansbaseballdb.appearances AS a\nINNER JOIN lahmansbaseballdb.people AS p\nON p.playerid = a.playerid\nINNER JOIN lahmansbaseballdb.batting AS b\nON p.playerid = b.playerid\nWHERE b.yearid = 2017\nAND b.H &lt;&gt; 0\nORDER BY p.playerid, a.yearid, a.teamid, a.G_defense, b.H;\n</code></pre> Output sebelum penambahan index<pre><code>+----+-------------+-------+------------+------+---------------+---------+---------+------------------------------------+--------+----------+----------------------------------------------+\n| id | select_type | table | partitions | type | possible_keys | key     | key_len | ref                                | rows   | filtered | Extra                                        |\n+----+-------------+-------+------------+------+---------------+---------+---------+------------------------------------+--------+----------+----------------------------------------------+\n|  1 | SIMPLE      | p     | NULL       | ALL  | NULL          | NULL    | NULL    | NULL                               |  19484 |   100.00 | Using where; Using temporary; Using filesort |\n|  1 | SIMPLE      | b     | NULL       | ref  | PRIMARY       | PRIMARY | 40      | lahmansbaseballdb.p.playerID,const |      1 |    90.00 | Using where                                  |\n|  1 | SIMPLE      | a     | NULL       | ALL  | NULL          | NULL    | NULL    | NULL                               | 105627 |    10.00 | Using where; Using join buffer (hash join)   |\n+----+-------------+-------+------------+------+---------------+---------+---------+------------------------------------+--------+----------+----------------------------------------------+\n3 rows\n</code></pre> Output setelah penambahan index people<pre><code>+----+-------------+-------+------------+------+-----------------------+-----------------------+---------+------------------------------------+--------+----------+---------------------------------+\n| id | select_type | table | partitions | type | possible_keys         | key                   | key_len | ref                                | rows   | filtered | Extra                           |\n+----+-------------+-------+------------+------+-----------------------+-----------------------+---------+------------------------------------+--------+----------+---------------------------------+\n|  1 | SIMPLE      | a     | NULL       | ALL  | NULL                  | NULL                  | NULL    | NULL                               | 105627 |   100.00 | Using temporary; Using filesort |\n|  1 | SIMPLE      | p     | NULL       | ref  | NC_peopleID_birthYear | NC_peopleID_birthYear | 1023    | lahmansbaseballdb.a.playerID       |      1 |   100.00 | Using where; Using index        |\n|  1 | SIMPLE      | b     | NULL       | ref  | PRIMARY               | PRIMARY               | 40      | lahmansbaseballdb.p.playerID,const |      1 |    90.00 | Using where                     |\n+----+-------------+-------+------------+------+-----------------------+-----------------------+---------+------------------------------------+--------+----------+---------------------------------+\n3 rows in set, 1 warning (0,01 sec)\n</code></pre> Output setelah penambahan index people dan appearances<pre><code>+----+-------------+-------+------------+-------+-----------------------+---------------------------+---------+------------------------------------+--------+----------+----------------------------------------------+\n| id | select_type | table | partitions | type  | possible_keys         | key                       | key_len | ref                                | rows   | filtered | Extra                                        |\n+----+-------------+-------+------------+-------+-----------------------+---------------------------+---------+------------------------------------+--------+----------+----------------------------------------------+\n|  1 | SIMPLE      | a     | NULL       | index | NULL                  | NC_yearID_teamID_GDefense | 19      | NULL                               | 105627 |   100.00 | Using index; Using temporary; Using filesort |\n|  1 | SIMPLE      | p     | NULL       | ref   | NC_peopleID_birthYear | NC_peopleID_birthYear     | 1023    | lahmansbaseballdb.a.playerID       |      1 |   100.00 | Using where; Using index                     |\n|  1 | SIMPLE      | b     | NULL       | ref   | PRIMARY               | PRIMARY                   | 40      | lahmansbaseballdb.p.playerID,const |      1 |    90.00 | Using where                                  |\n+----+-------------+-------+------------+-------+-----------------------+---------------------------+---------+------------------------------------+--------+----------+----------------------------------------------+\n3 rows in set, 1 warning (0,00 sec)\n</code></pre> <p>Hasil diatas setelah penambahan index pada tabel appearances tidak ada perbedaan, jadi tidak selamanya penambahan index mempercepat perfroma, jadi anda harus melakukannya dengan analisa yang mendalam dari setiap perubahan index, juga harus memperhatikan dampat pada query select yang lain.</p> <p>Abstract</p> <p>Demi kelancaran penggunaan semua query-query diatas, ada baiknya untuk menge-DROP semua tabel atas query yang dijalankan agar anda bisa menggunakan kembali query-query diatas tanpa ada error.</p> Drop table<pre><code>DROP TABLE IF EXISTS tabel_a, tabel_b;\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/","title":"Modifying Data and Table Structure","text":"<p>Info</p> <p>Database, table dan records yang digunakan pada sesi ini anda dapat merujuk ke resource. Dan untuk menjamin kelancaran penggunaan setiap query yang ada pada catatan ini, maka saya sarankan untuk menggunakan schema <code>lahmansbaseballdb</code>, jika belum ada buat schema dengan nama tersebut.</p> <p>Warning</p> <p>Jika query dibawah ini tidak mensiratkan penggunaan nama schema maka saya menggunakan <code>USE lahmansbaseballdb;</code> pada session saya. Anda dapat mengikuti cara tersebut atau selalu siratkan nama scema anda jika menggunakan nama selain lahmansbaseballdb.</p> Contoh menyiratkan nama schema<pre><code>    SELECT * \n    FROM nama_data_base.contoh_table;\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#inserting-data-into-tables","title":"Inserting Data Into Tables","text":"<p>Memasukan data adalah salah satu cara untuk mengisi tabel pada database dengan data. Statement <code>INSERT</code> akan menyisipkan data kedalam tabel pada database. Untuk memasukan data anda harus mengetahui informasi tentang tabel yang bersangkutan.</p>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#gathering-information-to-insert-update-or-delete-data","title":"Gathering Information to Insert, Update, or Delete Data","text":"<p>Informasi yang dibutuhkan untuk meng-insert, update atau men-delete tabel.</p> <ul> <li> <p>Nama dari setiap kolom, anda dapat menggunakan nama kolom untuk menspesifikasi nama dari setiap kolom.</p> </li> <li> <p>Urutan dari setiap kolom, secara khusus mengetahui urutan dari setiap kolom penting ketika anda men-select data dari tabel lain dan meng-insert-nya kedalam sebuah table.</p> </li> <li> <p>Tipe data dari setiap kolom, mengetahui ini sangat penting karena bisa jadi ada kesalahan dalam meng-input data karena tipe data yang tidak sesuai.</p> </li> <li> <p>Apakah kolom bagian dari key atau constraint, anda harus memperhatikan apa ada kolom pada table yang dikonfigurasi dengan NOT NULL, default, unique atau CHECK constraints yang dapat berdampak serta menentukan apaka data dapat dimodifikasi atua tidak.</p> </li> </ul> <p>Untuk mendapatkan informasi diatas kita dapat menggunakan beberapa query;</p> <ol> <li> <p>Untuk mengetahui informasi struktur tabel gunakan <code>DESCRIBE</code></p> <pre><code>DESCRIBE managers;\n</code></pre> Output <pre><code>+----------+-------------+------+-----+---------+-------+\n| Field    | Type        | Null | Key | Default | Extra |\n+----------+-------------+------+-----+---------+-------+\n| playerID | varchar(10) | YES  |     | NULL    |       |\n| yearID   | smallint    | NO   | PRI | NULL    |       |\n| teamID   | varchar(3)  | NO   | PRI | NULL    |       |\n| lgID     | varchar(2)  | YES  |     | NULL    |       |\n| inseason | smallint    | NO   | PRI | NULL    |       |\n| G        | smallint    | YES  |     | NULL    |       |\n| W        | smallint    | YES  |     | NULL    |       |\n| L        | smallint    | YES  |     | NULL    |       |\n| rank     | smallint    | YES  |     | NULL    |       |\n| plyrMgr  | varchar(1)  | YES  |     | NULL    |       |\n+----------+-------------+------+-----+---------+-------+\n10 rows in set (0,01 sec)\n</code></pre> </li> <li> <p>Untuk mengetahui informasi mengenai constraint gunakan query dibawah ini</p> <pre><code>SELECT * FROM information_schema.table_constraints\nWHERE table_name = 'managers'\nAND table_schema = 'lahmansbaseballdb'; \n</code></pre> Output <pre><code>+--------------------+-------------------+-----------------+-------------------+------------+-----------------+----------+\n| CONSTRAINT_CATALOG | CONSTRAINT_SCHEMA | CONSTRAINT_NAME | TABLE_SCHEMA      | TABLE_NAME | CONSTRAINT_TYPE | ENFORCED |\n+--------------------+-------------------+-----------------+-------------------+------------+-----------------+----------+\n| def                | lahmansbaseballdb | PRIMARY         | lahmansbaseballdb | managers   | PRIMARY KEY     | YES      |\n| def                | lahmansbaseballdb | managers_chk_1  | lahmansbaseballdb | managers   | CHECK           | YES      |\n+--------------------+-------------------+-----------------+-------------------+------------+-----------------+----------+\n2 rows in set (0,00 sec)\n</code></pre> <p>Perhatikan baris yang di highlight diatas, dapat kita lihat tabel managers memliki <code>CHECK</code> constraint dengan nama managers_chk_1. Untuk melihat conditional constrain tersebut statement SHOW yang diikuti dengan query CREATE TABLE untuk mengetahu detail tentang constraint tersebut.</p> <pre><code>show CREATE TABLE managers;\n</code></pre> Output <pre><coden| Table    | Create Table|\nn| managers | CREATE TABLE `managers` (\n`playerID` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\n`yearID` smallint NOT NULL,\n`teamID` varchar(3) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,\n`lgID` varchar(2) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\n`inseason` smallint NOT NULL,\n`G` smallint DEFAULT NULL,\n`W` smallint DEFAULT NULL,\n`L` smallint DEFAULT NULL,\n`rank` smallint DEFAULT NULL,\n`plyrMgr` varchar(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\nPRIMARY KEY (`yearID`,`teamID`,`inseason`),\nCONSTRAINT `managers_chk_1` CHECK ((`yearID` &lt;= 2020))\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci |\nn1 row in set (0,00 sec)\n</code></pre> <p>Dari informasi diatas kita dapat mengetahui bahwa constrain check managers_chk_1 akan memfilter nilai insert atau update hanya jika nilai dari yearid tidak lebih dari 2020.</p> </li> </ol>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#using-insert-statement","title":"Using Insert Statement","text":"<p>Ada dua cara untuk memasuka data pada table menggunakan INSERT. Anda dapat menggunakan penyisipan tunggal atau penyisipan ganda.</p>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#single-row-insert","title":"Single Row Insert","text":"<p>untuk menysipkan satu baris kedalam table gunakan syntax berikut;</p> <pre><code>INSERT INTO database_name.table_name (column_name1, column_name2, ... ,  column_namex)\nVALUES (values_1, values_2, ... , values_x);\n</code></pre> <p>Statemen <code>INSERT</code> membuat anda dapat menambah nilai pada table collegeplaying. Untuk membuat query insert tepat dalam memasukan nilainya kedalam baris pada table collegeplaying, anda harus menambahkan nilai-nilai tersebut menggunakan statemen VALUE, sebagaimana query dibawah ini.</p> <pre><code>INSERT INTO collegeplaying (playerID, schoolID, yearID) VALUES('blaloha01', 'sandiegost', 1999);\n</code></pre> Output <pre><code>Query OK, 1 row affected (0.04 sec)\n</code></pre> <p>Dari retrun value query diatas, ada satu buah baris yang affected. Jika kita men-SELECT tabel collegeplaying menggunakan query dibawah ini akan kita dapatkan penyisipan data yang telah kita lakukan berhasil tercatat pada table tersebut.</p> <pre><code>select * from collegeplaying where playerid='blaloha01';\n</code></pre> Output <pre><code>+-----------+-------------+--------+\n| playerID  | schoolID    | yearID |\n+-----------+-------------+--------+\n| blaloha01 | sandiegost  |   1999 |\n+-----------+-------------+--------+\n1 rows in set (0,02 sec)\n</code></pre> <p>Anda juga dapat menyisipkan data pada table tanpa harus menspesifikasikan kolom jika anda yakin menempatkan nilai pada statement <code>VALUE</code> dengan urutan yang benar.</p> <pre><code>INSERT INTO collegeplaying VALUES('blaloha01', 'sandiegost',2000);\n</code></pre> <p>Misalkan, anda ingin memasukan nilai hanya pada kolom tertentu, maka anda harus menspesifikasikan nama kolom dan disesuai urutan nilainya dengan statement <code>VALUES</code>.</p> <pre><code>INSERT INTO collegeplaying (playerID, yearID) VALUES ('blaloha01',2001);\n</code></pre> Output hasil query select setelah insert statement diatas <pre><code>+-----------+-------------+--------+\n| playerID  | schoolID    | yearID |\n+-----------+-------------+--------+\n| blaloha01 | NULL        |   2001 |\n| blaloha01 | sandiegost  |   1999 |\n| blaloha01 | sandiegost  |   2000 |\n+-----------+-------------+--------+\n8 rows in set (0,02 sec)\n</code></pre> <p>Dapat kita lihat nilai <code>NULL</code> diatas (highlight) karena kita tidak menspesifikasikan kolom schoolID pada query terakhir yang kita buat. </p> <p>Struktur kolom collegePlaying</p> <pre><code>DESCRIBE collegePlaying;\n</code></pre> Output<pre><code>+----------+-------------+------+-----+---------+-------+\n| Field    | Type        | Null | Key | Default | Extra |\n+----------+-------------+------+-----+---------+-------+\n| playerID | varchar(9)  | NO   | MUL | NULL    |       |\n| schoolID | varchar(15) | YES  | MUL | NULL    |       |\n| yearID   | smallint    | YES  |     | NULL    |       |\n+----------+-------------+------+-----+---------+-------+\n3 rows in set (0,00 sec)\n</code></pre> <p>Misalkan, secara tidak sengaja kita ingin mengisi kolom tertentu saja namun lupa menuliskan nama kolom-kolom yang dipilih tersebut, maka MySql akan mengeluarkan exception.</p> <pre><code>INSERT INTO collegeplaying ---(1)! \nVALUES ('blaloha01',2001);\n</code></pre> <ol> <li>Tidak menspesifikasikan kolom-kolom seperti <code>INSERT INTO collegeplaying (playerID, yearID)</code></li> </ol> Output <pre><code>ERROR 1136 (21S01): Column count doesn't match value count at row 1\n</code></pre> <p>Oke sekarang kita akan membahas tentang converting data type pada statement insert. Misalkan, anda tidak sengaja salah menaruh urutan nilai yang ingin dimasukan, alih-alih memasukan yearID dengan tipe <code>INT</code>, anda malah terbalik dengan schoolID yang bertipe <code>CHAR</code>. Katakan query anda seperti dibawah ini.</p> <pre><code>INSERT INTO collegeplaying VALUES('blaloha01', 2002, 'sandiegost');\n</code></pre> Failure <pre><code>ERROR 1366 (HY000): Incorrect integer value: 'sandiegost' for column 'yearID' at row 1 \n</code></pre> <p>MySql akan mengeluarkan error yang mengatakan ketidak sesuaian antra integer dengan string. Karena MySql tidak dapat mengkonversi \u2018sadieogost\u2019 menjadi nilai <code>smallint</code>.</p> <p>Namun, nilai <code>smallint</code> dapat dikonversi kedalam <code>VARCHAR</code>. Misalkan, anda menulis query dibawah ini,</p> <pre><code>INSERT INTO collegeplaying (playerID, schoolID) VALUES('blaloha01',2003);\n</code></pre> Hasil dari query SELECT collegePlaying <pre><code>+-----------+-------------+--------+\n| playerID  | schoolID    | yearID |\n+-----------+-------------+--------+\n| blaloha01 | NULL        |   2001 |\n| blaloha01 | 2003        |   NULL |\n| blaloha01 | sandiegost  |   1999 |\n| blaloha01 | sandiegost  |   2000 |\n+-----------+-------------+--------+\n4 rows in set (0,00 sec)\n</code></pre> <p>Dapat kita lihat, nilai 2003 yang awalnya dalam bentuk <code>smallint</code> di konversi menjadi <code>varchar</code>.</p>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#inserting-on-colomn-that-have-default-constraint","title":"Inserting on colomn that have default constraint","text":"<p>Jika table yang anda masukan data kepada kolom pada table yang memliki default constraint, maka anda dapat mengabaikan, tidak mensepsifikan pada daftar kolom ketika memasukan nilai.</p> <p>Contoh, saya membuat default value untuk kolom schoolid pada table collegeplaying. </p> <pre><code>ALTER TABLE collegeplaying ALTER schoolID SET DEFAULT 'Not Yet Set';\n</code></pre> Query hasi <code>DESCRIBE</code> tabel collegePlaying <pre><code>+----------+-------------+------+-----+-------------+-------+\n| Field    | Type        | Null | Key | Default     | Extra |\n+----------+-------------+------+-----+-------------+-------+\n| playerID | varchar(9)  | NO   | MUL | NULL        |       |\n| schoolID | varchar(15) | YES  | MUL | Not Yet Set |       |\n| yearID   | smallint    | YES  |     | NULL        |       |\n+----------+-------------+------+-----+-------------+-------+\n3 rows in set (0,00 sec)\n</code></pre> <p>Lalu jalankan query tanpa menaruh schoolID pada daftar spesifikasi insert data. Maka nilai dari kolom schoolID akan diisi dengan default value yang telah kita tetapkan. <pre><code>INSERT INTO collegeplaying(playerId,yearID) VALUES('blaloha01',2001);\n</code></pre></p> Hasil dari query SELECT collegePlaying <pre><code>+-----------+-------------+--------+\n| playerID  | schoolID    | yearID |\n+-----------+-------------+--------+\n| blaloha01 | NULL        |   2001 |\n| blaloha01 | 2003        |   NULL |\n| blaloha01 | Not Yet Set |   2001 |\n| blaloha01 | sandiegost  |   1999 |\n| blaloha01 | sandiegost  |   2000 |\n+-----------+-------------+--------+\n5 rows in set (0,00 sec)\n</code></pre> <p>Abstract</p> <p>Demi keutuhan struktur data pada schema <code>lahmansbaseballdb</code>, setiap perubahan pada struktur tabel pada schema tersebut lebih baik dikembalikan agar tidak membuat anda bingung ketika anda menjalankan query pada bab-bab sebelumnya yang menyebabkan hasil keluarannya berbeda dengan yang ada di Output</p> Drop default value pada tabel collegeplaying<pre><code>ALTER TABLE collegeplaying ALTER schoolID DROP DEFAULT;\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#inserting-on-colomn-that-have-check-constraint","title":"Inserting on colomn that have check constraint","text":"<p>Jika anda ingin meng-insert data pada kolom yang memliki check constraint, anda harus memenuhi kondisi tersebut. Sebagai ilustrasi mari kita buat sebuah check constraint pada tabel collegeplaying dengan kondisi kolom yearID harus kurang dari tahun 2022.</p> <pre><code>alter table collegeplaying \nADD CONSTRAINT  hck_collage_yearID  CHECK (yearID &lt; 2022);\n</code></pre> <p>Untuk mengechecknya anda dapat melihat pada table_constraint menggunakan query dibawah ini.</p> <pre><code>select * \nfrom information_schema.table_constraints\nWHERE table_name='collegeplaying';\n</code></pre> Output <pre><code>+--------------------+-------------------+--------------------+-------------------+----------------+-----------------+----------+\n| CONSTRAINT_CATALOG | CONSTRAINT_SCHEMA | CONSTRAINT_NAME    | TABLE_SCHEMA      | TABLE_NAME     | CONSTRAINT_TYPE | ENFORCED |\n+--------------------+-------------------+--------------------+-------------------+----------------+-----------------+----------+\n| def                | lahmansbaseballdb | hck_collage_yearID | lahmansbaseballdb | collegeplaying | CHECK           | YES      |\n+--------------------+-------------------+--------------------+-------------------+----------------+-----------------+----------+\n1 row in set (0,01 sec)\n</code></pre> <p>Lalu mari kita uji coba meng-insert value dengan yearID diatas atau sama dengan 2022.</p> <pre><code>INSERT INTO collegeplaying VALUES('blaloha01', 'sandiegost', 2023);\n</code></pre> Failure <pre><code>ERROR 3819 (HY000): Check constraint 'hck_collage_yearID' is violated.\n</code></pre> <p>Oke, MySql akan memberitahu kita, nilai yang kita insert melanggar kondisi dari Check constraint dari hck_collage_yearID.</p> <p>Abstract</p> <p>Demi keutuhan struktur data pada schema <code>lahmansbaseballdb</code>, setiap perubahan pada struktur tabel pada schema tersebut lebih baik dikembalikan agar tidak membuat anda bingung ketika anda menjalankan query pada bab-bab sebelumnya yang menyebabkan hasil keluarannya berbeda dengan yang ada di Output</p> Drop Check Constraint pada tabel collegeplaying<pre><code>ALTER TABLE collegeplaying DROP CONSTRAINT hck_collage_yearID;\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#multiple-row-inserts","title":"Multiple row Inserts","text":"<p>Untuk meng-insert beberapa baris anda dapat menggunakan syntax dibawah ini</p> <pre><code>INSERT INTO table_name\nVALUES ('x_1','x_2','x_3','x_n'),\n('y_1','y_2','y_3','y_n'),\n('z_1','z_2','z_3','z_n')\n\n--Equal to--\n\nINSERT INTO table_name\n('columns_1','columns_2', 'columns_3')\nVALUES ('x_1','x_2','x_3','x_n'),\n('y_1','y_2','y_3','y_n'),\n('z_1','z_2','z_3','z_n')\n</code></pre> <p>Oke, pada kasus ini mari kita coba untuk menginsert pada table collegeplaying menggunakan query dibawah ini</p> <pre><code>INSERT INTO collegeplaying\nVALUES ('blaloha01','sandiegost', 2017),\n('blaloha01','sandiegost', 2018),\n('blaloha01','sandiegost', 2019);\n</code></pre> Output <pre><code>+-----------+-------------+--------+\n| playerID  | schoolID    | yearID |\n+-----------+-------------+--------+\n| blaloha01 | NULL        |   2001 |\n| blaloha01 | 2003        |   NULL |\n| blaloha01 | Not Yet Set |   2001 |\n| blaloha01 | sandiegost  |   1999 |\n| blaloha01 | sandiegost  |   2000 |\n| blaloha01 | sandiegost  |   2017 |\n| blaloha01 | sandiegost  |   2018 |\n| blaloha01 | sandiegost  |   2019 |\n+-----------+-------------+--------+\n8 rows in set (0,00 sec)\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#inserting-data-from-one-table-into-another-table","title":"Inserting data from one table into another table","text":"<p>Untuk meng-insert data dari satu table kedalam table lain ada bebera opsi untuk melakukannya;</p> <ol> <li>Buat table baru dan insert data kedalam table tersebut dari tabel yang sudah ada</li> <li>Insert data kedalam table yang sudah ada berdasarkan data dari tabel yang sudah ada juga.</li> </ol> <p>Info</p> <p>Semua table yang dibuat sementara akan kita drop langsung</p> <p>Untuk opsi membuat tabel baru dan memasukan data dari tabel lain gunakan syntax dibawah ini</p> <pre><code>CREATE TABLE newtable\nSELECT * FROM existingtable;\n</code></pre> <p>Oke mari sekarang kita coba menggunakan database lahmansbaseballdb. Kita akan membuat tabel baru dan menyalin semua data dari tabel <code>managers</code> ke tabel baru tersebut.</p> <pre><code>CREATE TABLE managers_copy SELECT * FROM managers;\n</code></pre> Output <pre><code>Query OK, 3504 rows affected (0.11 sec)\nRecords: 3504  Duplicates: 0  Warnings: 0\n</code></pre> <p>Alhamdulillah berhasil, query diatas meng-copy seluruh kondisi dan data dari tabel managers. Sekarang mari kita buktikan isi dari keuda table tersebut. Saya hanya menampilkan 10 record teratas dan mensandingkan kedua tabel tersebut menggunakan <code>INNER JOIN</code>.</p> <pre><code>select asli.playerID, asli.teamID, asli.yearID, 'Asli' as ket, \nsalinan.playerID, salinan.teamID, salinan.yearID, 'Salinan' as ket\nFROM managers AS asli\nINNER JOIN managers_copy AS salinan\nON asli.playerID = salinan.playerID\nLIMIT 10;\n</code></pre> Output <pre><code>+-----------+--------+--------+------+-----------+--------+--------+---------+\n| playerID  | teamID | yearID | ket  | playerID  | teamID | yearID | ket     |\n+-----------+--------+--------+------+-----------+--------+--------+---------+\n| wrighha01 | PHI    |   1893 | Asli | wrighha01 | BS1    |   1871 | Salinan |\n| wrighha01 | PHI    |   1892 | Asli | wrighha01 | BS1    |   1871 | Salinan |\n| wrighha01 | PHI    |   1891 | Asli | wrighha01 | BS1    |   1871 | Salinan |\n| wrighha01 | PHI    |   1890 | Asli | wrighha01 | BS1    |   1871 | Salinan |\n| wrighha01 | PHI    |   1890 | Asli | wrighha01 | BS1    |   1871 | Salinan |\n| wrighha01 | PHI    |   1889 | Asli | wrighha01 | BS1    |   1871 | Salinan |\n| wrighha01 | PHI    |   1888 | Asli | wrighha01 | BS1    |   1871 | Salinan |\n| wrighha01 | PHI    |   1887 | Asli | wrighha01 | BS1    |   1871 | Salinan |\n| wrighha01 | PHI    |   1886 | Asli | wrighha01 | BS1    |   1871 | Salinan |\n| wrighha01 | PHI    |   1885 | Asli | wrighha01 | BS1    |   1871 | Salinan |\n+-----------+--------+--------+------+-----------+--------+--------+---------+\n10 rows in set (0,00 sec)\n</code></pre> <p>Kita juga dapat memfilter record yang dimasukan pada table baru menggunakan statement #!sql WHERE`. Misalkan kita ingin membuat tabel baru untuk mengabil data dari table managers untuk setiap managers yang juga player.</p> <pre><code>CREATE TABLE managers_players_copy\nSELECT * FROM managers\nWHERE plyrMgr = 'Y';\n</code></pre> Query Select dan ouput table managers_players_copy Query Select<pre><code>SELECT * FROM managers_players_copy\nLIMIT 7;\n</code></pre> Output<pre><code>+-----------+--------+--------+------+----------+------+------+------+------+---------+\n| playerID  | yearID | teamID | lgID | inseason | G    | W    | L    | rank | plyrMgr |\n+-----------+--------+--------+------+----------+------+------+------+------+---------+\n| wrighha01 |   1871 | BS1    | NA   |        1 |   31 |   20 |   10 |    3 | Y       |\n| woodji01  |   1871 | CH1    | NA   |        1 |   28 |   19 |    9 |    2 | Y       |\n| paborch01 |   1871 | CL1    | NA   |        1 |   29 |   10 |   19 |    8 | Y       |\n| lennobi01 |   1871 | FW1    | NA   |        1 |   14 |    5 |    9 |    8 | Y       |\n| deaneha01 |   1871 | FW1    | NA   |        2 |    5 |    2 |    3 |    8 | Y       |\n| fergubo01 |   1871 | NY2    | NA   |        1 |   33 |   16 |   17 |    5 | Y       |\n| mcbridi01 |   1871 | PH1    | NA   |        1 |   28 |   21 |    7 |    1 | Y       |\n+-----------+--------+--------+------+----------+------+------+------+------+---------+\n7 rows in set (0,00 sec)\n</code></pre> <p>Oke katakan kita ingin membuat sebuah table yang tidak memliki data (kosong) namun memliki struktur data dari tabel yang sudah ada. Anda harus menambahkan conditional logic yang nilainya selalu false pada setiap row.</p> <pre><code>CREATE TABLE blank_mgrs_plyrs\nSELECT * FROM managers\nWHERE 1 = 0;\n</code></pre> Describe tabel blank_mgrs_plyrs <pre><code>describe blank_mgrs_plyrs;\n</code></pre> <pre><code>+----------+-------------+------+-----+---------+-------+\n| Field    | Type        | Null | Key | Default | Extra |\n+----------+-------------+------+-----+---------+-------+\n| playerID | varchar(10) | YES  |     | NULL    |       |\n| yearID   | smallint    | NO   |     | NULL    |       |\n| teamID   | varchar(3)  | NO   |     | NULL    |       |\n| lgID     | varchar(2)  | YES  |     | NULL    |       |\n| inseason | smallint    | NO   |     | NULL    |       |\n| G        | smallint    | YES  |     | NULL    |       |\n| W        | smallint    | YES  |     | NULL    |       |\n| L        | smallint    | YES  |     | NULL    |       |\n| rank     | smallint    | YES  |     | NULL    |       |\n| plyrMgr  | varchar(1)  | YES  |     | NULL    |       |\n+----------+-------------+------+-----+---------+-------+\n10 rows in set (0,01 sec)\n</code></pre> <p>Tabel diatas hanya menyalin struktur data, tidak ada record yang salin dari tabel managers.</p> <p>Jika anda ingin memasukan data kedalam table yang sudah ada dari tabel yang sudah ada gunakan sytanx dibawah ini.  <pre><code>INSERT INTO existingtable\nSELECT * FROM anotherexistingtable\n</code></pre></p> <p>Sebagai simulasi kita coba masukan data pada managers kedalam tabel <code>blank_mgrs_plyrs</code>. Sebagimana yang telah kita ketahui, tabel tersebut hanya menyalin struktur, tidak dengan record. Maka kali ini kita akan meng-copy nilai dari tabel managers sebanyak 10 record paling atas saja.</p> <pre><code>INSERT INTO blank_mgrs_plyrs\nSELECT * FROM managers LIMIT 10;\n</code></pre> Output Select table managers <pre><code>+-----------+--------+--------+------+----------+------+------+------+------+---------+\n| playerID  | yearID | teamID | lgID | inseason | G    | W    | L    | rank | plyrMgr |\n+-----------+--------+--------+------+----------+------+------+------+------+---------+\n| wrighha01 |   1871 | BS1    | NA   |        1 |   31 |   20 |   10 |    3 | Y       |\n| woodji01  |   1871 | CH1    | NA   |        1 |   28 |   19 |    9 |    2 | Y       |\n| paborch01 |   1871 | CL1    | NA   |        1 |   29 |   10 |   19 |    8 | Y       |\n| lennobi01 |   1871 | FW1    | NA   |        1 |   14 |    5 |    9 |    8 | Y       |\n| deaneha01 |   1871 | FW1    | NA   |        2 |    5 |    2 |    3 |    8 | Y       |\n| fergubo01 |   1871 | NY2    | NA   |        1 |   33 |   16 |   17 |    5 | Y       |\n| mcbridi01 |   1871 | PH1    | NA   |        1 |   28 |   21 |    7 |    1 | Y       |\n| hastisc01 |   1871 | RC1    | NA   |        1 |   25 |    4 |   21 |    9 | Y       |\n| pikeli01  |   1871 | TRO    | NA   |        1 |    4 |    1 |    3 |    6 | Y       |\n| cravebi01 |   1871 | TRO    | NA   |        2 |   25 |   12 |   12 |    6 | Y       |\n+-----------+--------+--------+------+----------+------+------+------+------+---------+\n10 rows in set (0,00 sec)\n</code></pre> <p>Abstract</p> <p>Demi kelancaran penggunaan semua query-query diatas, ada baiknya untuk menge-DROP semua tabel atas query yang dijalankan agar anda bisa menggunakan kembali query-query diatas tanpa ada error.</p> Drop table<pre><code>drop table managers_copy;\ndrop table managers_players_copy;\ndrop table blank_mgrs_plyrs;\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#deleting-data-from-tables","title":"Deleting data from tables","text":"<p>Untuk menghapus data dari data yang sudha dimasukan kedalam database, gunakan statement <code>DELETE</code>. Anda dapat menghapus semua record dari sebuah table atau gunakan klausa <code>WHERE</code> untuk meghapus beberapa record dari sebuah tabel.</p>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#using-delete-statement","title":"Using DELETE statement","text":"<pre><code>DELETE\u00a0FROM\u00a0database.table_name\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#using-delete-statement-with-where-statement","title":"Using DELETE statement with WHERE statement","text":"<p>Gunakan syntax dibawha ini untuk menghapus record dengan kondisi WHERE</p> <pre><code>DELETE FROM database.table_name\nWHERE &lt;{where_expression}&gt;;\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#updating-data-in-table","title":"Updating data in table","text":"<p>Untuk memperbaharui atau mengkoreksi nilai pada semua record didalam tabel anda dapat menggunakan <code>UPDATE</code>, lihatlah syntax dibawah ini,</p> <pre><code>UPDATE databasename.table_name \nSET `column_name` = &lt;{value_1}&gt;,\n`column_name_2` = &lt;{value_2}&gt;,\n`column_name_3` = &lt;{value_3}&gt;\n</code></pre> <p>Oke sekarang mari kita coba buat implementasi menggunakan database lahmansbaseballdb. Sebelumnya kita telah membuat tabel salinan dari managers namun telah kita drop. Untuk itu mari kita buat lagi table tersebut dan kita update semua record dari kolom lgID menjadi string \"--\"</p> Crate and insert tabel<pre><code>CREATE TABLE managers_copy SELECT * FROM managers;\n</code></pre> Update all data<pre><code>UPDATE managers_copy SET lgID = \"--\";\n</code></pre> Output query select tabel managers_copy <pre><code>+-----------+--------+--------+------+----------+------+------+------+------+---------+\n| playerID  | yearID | teamID | lgID | inseason | G    | W    | L    | rank | plyrMgr |\n+-----------+--------+--------+------+----------+------+------+------+------+---------+\n| wrighha01 |   1871 | BS1    | --   |        1 |   31 |   20 |   10 |    3 | Y       |\n| woodji01  |   1871 | CH1    | --   |        1 |   28 |   19 |    9 |    2 | Y       |\n| paborch01 |   1871 | CL1    | --   |        1 |   29 |   10 |   19 |    8 | Y       |\n| lennobi01 |   1871 | FW1    | --   |        1 |   14 |    5 |    9 |    8 | Y       |\n| deaneha01 |   1871 | FW1    | --   |        2 |    5 |    2 |    3 |    8 | Y       |\n| fergubo01 |   1871 | NY2    | --   |        1 |   33 |   16 |   17 |    5 | Y       |\n| mcbridi01 |   1871 | PH1    | --   |        1 |   28 |   21 |    7 |    1 | Y       |\n| hastisc01 |   1871 | RC1    | --   |        1 |   25 |    4 |   21 |    9 | Y       |\n| pikeli01  |   1871 | TRO    | --   |        1 |    4 |    1 |    3 |    6 | Y       |\n| cravebi01 |   1871 | TRO    | --   |        2 |   25 |   12 |   12 |    6 | Y       |\n</code></pre> <p>Namun jika anda hanya ingin mengupdate beberapa baris saja menggunakan kriteria tertentu anda gunakan <code>WHERE</code>. Lihat syntax dibawah ini</p> <pre><code>UPDATE databasename.table_name \nSET `column_name` = &lt;{value_1}&gt;,\n`column_name_2` = &lt;{value_2}&gt;,\n`column_name_3` = &lt;{value_3}&gt;\nWHERE &lt;{where_expression}&gt;\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#updating-table-from-another-existing-table","title":"Updating table from another existing table","text":"<p>Oke, katakan kita inign mengubah table managers_copy diatas khususnya kolom lgID menjadi nilai yang aslinya. Berarti kita butuh tabel managers, mengambil datanya dan ditaruh kedalam tabel managers_copy</p> <pre><code>UPDATE managers_copy AS mc\nINNER JOIN managers AS m\nON m.playerID = mc.playerID AND\nm.yearID = mc.yearID\nAND m.teamID = mc.teamID\nSET mc.lgID = m.lgID;\n</code></pre> Output query select tabel managers_copy setelah diisi dengan nilai aslinya pada lgID <pre><code>-----------+--------+--------+------+----------+------+------+------+------+---------+\n| playerID  | yearID | teamID | lgID | inseason | G    | W    | L    | rank | plyrMgr |\n+-----------+--------+--------+------+----------+------+------+------+------+---------+\n| wrighha01 |   1871 | BS1    | NA   |        1 |   31 |   20 |   10 |    3 | Y       |\n| woodji01  |   1871 | CH1    | NA   |        1 |   28 |   19 |    9 |    2 | Y       |\n| paborch01 |   1871 | CL1    | NA   |        1 |   29 |   10 |   19 |    8 | Y       |\n| lennobi01 |   1871 | FW1    | NA   |        1 |   14 |    5 |    9 |    8 | Y       |\n| deaneha01 |   1871 | FW1    | NA   |        2 |    5 |    2 |    3 |    8 | Y       |\n| fergubo01 |   1871 | NY2    | NA   |        1 |   33 |   16 |   17 |    5 | Y       |\n| mcbridi01 |   1871 | PH1    | NA   |        1 |   28 |   21 |    7 |    1 | Y       |\n| hastisc01 |   1871 | RC1    | NA   |        1 |   25 |    4 |   21 |    9 | Y       |\n| pikeli01  |   1871 | TRO    | NA   |        1 |    4 |    1 |    3 |    6 | Y       |\n| cravebi01 |   1871 | TRO    | NA   |        2 |   25 |   12 |   12 |    6 | Y       |\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#using-transactions-to-save-or-revert-changes","title":"Using transactions to save or revert changes","text":"<p>Transaction pada SQL adalah pengelompokan dari satu atau lebih perubahan yang terjadi pada sebuah database. Fitur tersebut membantu kita untuk memastikan kondisi yang konsisten pada sebuah database. Pola umum yang paling sering digunakan pada fitur transaction ini adalah COMIT dan ROLLBACK. Commit membuat perubahan yang terjadi menjadi kondisi yang permanen sedangkan rollback akan membatalkan perubahan pada.</p> <p>Ada empat properti yang harus anda pahami dari trasaction ini.</p> <ul> <li> <p>Atomicty \u2192 Properti ini memastikan semua perubahan dalam sebuah transaction berhasil secara sempurna. Jiak berhasil maka perubahan tersebut akan ditetapkan (committed), akan tetapi jika gagal maka setiap perubahan akan dikembalikan, rolled back.</p> </li> <li> <p>Consistency \u2192 Konsistensi ini akan memastikan setiap perubahan tidak akan mengganggu database's integrity (baca lagi tentang database's integrity disini), seperti constraint. Perubahan yang gagal karena ada kesalahan akibat dari database integrity akan di kembalikan ke kondisi semua, rolled back.</p> </li> <li> <p>Isolation \u2192 Semua trasactions terisolasi dengan transactions lainya. Sehingga tidak ada transactions yang dapat menggangu transactions yang lainnya meskipun berjalan secara bersamaan.</p> </li> <li> <p>Durability \u2192 Ketika transactions telah di commited, gangguan apapun yang terjadi pada ketersedian database seperti system failure, atau restart, tidak akan berdampak pada konsistensi dari data.</p> </li> </ul> <p>Properti diatas dapat kita singkat menjadi ACID (Atomicity, Consistency, Isolation, Durability). Untuk lebih memahami saya akan jelaskan menggunakan kasus transfer antar rekening.</p> <p>Misalkan kita ingin mentransfer dana dari rekening checking ke kerekening penyimpanan yang lainnya. Untuk atomicity, transfer akan dibatalkan kecuali jika saldo pada rekening checking dan rekening peyimpanan berubah. Karena anda tentu tidak ingin saldo anda berkurang pada rekening checking namun tidak bertambah pada rekening penyimpanan. Untuk consistency, jika terjadi gangguan lainnya atau gangguan yang disebabkan oleh database ketika proses transfer telah dilakukan akan menyebabkan pengembalian kondisi (rolled back) sehingga tidak berdampkan pada rekening checking dan rekening peyimpanan. Unuk Isolation, semua transaksi transfer yang ada bank tersebut terisolasi, jadi transfer yang anda lakukan tidak akan menyasar pada rekening yang bukan anda maksudkan. Untuk Durability, setelah transfer telah ditetapkan (committed) kedalam database, semua kendalan atau gangguan tidak akan berpengaruh pada saldo anda di database.  </p>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#understanding-a-sql-transaction","title":"Understanding a SQL transaction","text":"<p>Kita telah mengetauhi transaction itu apa, yaitu pengelompokan dari satu atau lebih perubahan yang ditunda, dapat di commit atau rollback. Pertama kita akan membahas istilah dari kunci atau kata-kata yang digunakna oleh SQL Transaction.</p> <ul> <li> <p>Untuk memulai transaction akan melibatkan penggunakan kata kunci <code>START TRANSACTION</code> atau <code>BEGIN</code>. Kata kunci tersebut menandakan awal dari query yang kita ingin jalankan secara bersamaan. Umumnya, anda dapat menjalankan query tunggal tanpa menggunakan kata kunci tersebut (dan jika terjadi error, maka secara otomatis SQL akan mengembalikan seperti sebelumnya). Namun sangat penting untuk mengelompokan query terkait dengan <code>UPDATE</code>, <code>INSERT</code> atau <code>DELETE</code> kedalam satu buah transaction.</p> </li> <li> <p>Menetapkan perubahan (changes) akan meenjadikan perubah tersebut permanen. Anda dapat menggunakan kata kunci <code>COMMIT</code> pada akhir dari query.</p> </li> <li> <p>Kata kunci <code>ROLLBACK</code> yang diletakan pada block akhir query akan membatalkan query yang anda lakukan.</p> </li> <li> <p>Auto-commit bawaanya aktif pada MySql. Namun anda dapat mematikan fitur tersebut menggunakan keyword <code>SET autocommit</code>. Dengan Auto-commit, anda tidak dapat membatalkan perubahan yang anda lakukan, akan tetapi jika terjadi error, perubahan akan otomatis dikembalikan, rolled back.</p> </li> </ul>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#implicit-and-explicit-transaction","title":"Implicit and Explicit Transaction","text":"<p>Sekarang kita akan membas tentang implicit dan explicit transacitions.</p> <ul> <li> <p>Implicit Transaction \u2192 Anda tidak menjelaskan penggunakan perintah transaction, sebagaimana yang telah disebutkan pada point sebelumnya. Implicit transaction menjalankan auto-commit dari sebuah perintah yang dijalankan. Beberapa hal yang anda jalankan akan memaksa auto-commit, tidak memperhatikan apakah anda menggunakan perintah transaction atau tidak Diantaranya adalah perubahan pada DDL (Data Definition Language), termasuk altering atau membuat table baru.</p> </li> <li> <p>Explicit Transaction \u2192 Anda menjelaskan penggunakan perintah transaction. Tidak akan di commit hingga anda menggunakan perintah <code>COMMIT</code>. Namun, prilaku ini akan ditiban jika anda menggunakan perintah DDL pada explicit transaction. Transaction tersebut akan dikembalikan menjadi auto-commit.</p> </li> </ul> <p></p>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#learning-the-sql-syntax-for-sql-transactions","title":"Learning the SQL syntax for SQL transactions","text":"<p>Ada beberapa kata kunci didalam MySql untuk memastika query kita berada didalam sebuah transaction. Untuk memulai sebuah transaction didalam MySql, gunakan kata kunci <code>START TRANSACTION</code> atau <code>BEGIN</code>. Untuk menetapkan transaction gunakan kata kunci <code>COMMIT</code>. Untuk mengembalikan kondisi gunakan katakunci <code>ROLLBACK</code>.</p> <p>Untuk melihat aksi dari transaction mari kita uji coba menggunakan tabel managers_copy yang struktur dan isinya adalah imitasi dari tabel managers. Jika anda tidak memliki managers_copy gunakan query dibawah ini.</p> Duplkasi tabel managers_copy jika tidak ada<pre><code>---Duplikasi tabel managers\nCREATE TABLE managers_copy\nSELECT * FROM managers;\n</code></pre> <p>Dibawah ini adalah query untuk mengetahui bagaimana hasil dari perintah transaction.</p> <pre><code>BEGIN;\nUPDATE managers_copy\nSET lgID = \"--\";\n</code></pre> Output SELECT tabel managers_copy state partially commited <pre><code>+-----------+--------+--------+------+----------+------+------+------+------+---------+\n| playerID  | yearID | teamID | lgID | inseason | G    | W    | L    | rank | plyrMgr |\n+-----------+--------+--------+------+----------+------+------+------+------+---------+\n| wrighha01 |   1871 | BS1    | --   |        1 |   31 |   20 |   10 |    3 | Y       |\n| woodji01  |   1871 | CH1    | --   |        1 |   28 |   19 |    9 |    2 | Y       |\n| paborch01 |   1871 | CL1    | --   |        1 |   29 |   10 |   19 |    8 | Y       |\n| lennobi01 |   1871 | FW1    | --   |        1 |   14 |    5 |    9 |    8 | Y       |\n| deaneha01 |   1871 | FW1    | --   |        2 |    5 |    2 |    3 |    8 | Y       |\n</code></pre> <p>Query update diatas berada dalam transactions, yang artinya jika hasil yang dikeuluar tidak sesuai dengan yang diinginkan anda dapat mengembalikannya menggunakan statement <code>ROLLBACK</code>. Namun jika sesuai anda dapat membuat hasil tersebut secara permanen menggunakan perintah <code>COMMIT</code>.</p> <p>Jika anda tidak meng-commit transaction segera, penggunakan pada session lain saat meng-query table managers_copy tidak akan melihat perubahan apapun hingga anda menggunakan perintah <code>COMMIT</code>.</p> <p>Ketika menguji sebuah query, sangatlah disarankan untukt tidak menuliskan perintah <code>COMMIT</code> setelah query anda langsung sebelu anda menguji hasil dari query yang ada dalam transaction, karena jika hasilnya dari <code>UPDATE</code>, <code>DELETE</code> atau <code>INSERT</code> tidak sesuai dengan yang anda harapkan anda dapat mengembalikannya menggunakan perintah <code>ROLLBACK</code>.</p> Outuput select tabel managers_copy setelah di Rollback <pre><code>+-----------+--------+--------+------+----------+------+------+------+------+---------+\n| playerID  | yearID | teamID | lgID | inseason | G    | W    | L    | rank | plyrMgr |\n+-----------+--------+--------+------+----------+------+------+------+------+---------+\n| wrighha01 |   1871 | BS1    | NA   |        1 |   31 |   20 |   10 |    3 | Y       |\n| woodji01  |   1871 | CH1    | NA   |        1 |   28 |   19 |    9 |    2 | Y       |\n| paborch01 |   1871 | CL1    | NA   |        1 |   29 |   10 |   19 |    8 | Y       |\n| lennobi01 |   1871 | FW1    | NA   |        1 |   14 |    5 |    9 |    8 | Y       |\n| deaneha01 |   1871 | FW1    | NA   |        2 |    5 |    2 |    3 |    8 | Y       |\n</code></pre> <p>Diatas kita telah mencoba transaction pada pemanipulasian data, yang mana kita ketahui ada didalam skop Data Manipulation Language. Mari kita uji coba pada query yang berkaitan dengan Data Definition Language. Sebelum itu kita harus membuat sebuah table baru dengan nama award namun memliki struktur tabel mirip dengan awardsmanagers atau awardsplayers.</p> Duplikasi struktur awardsmanagers untuk simulasi<pre><code>    CREATE TABLE awards\n    SELECT * FROM awardsmanagers WHERE 1 = 0;\n</code></pre> <p>Dibawah ini adalah query DDL dan MDL yang berada didalam sebuah transaction.</p> <pre><code>START TRANSACTION;\nINSERT INTO awards\n(SELECT * FROM awardsmanagers)\nUNION\n(SELECT * FROM awardsplayers); ---(1)!\nDROP TABLE managers_copy;\nDELETE FROM awards\nWHERE awards.awardid = 'BBWAA Manager of the Year';\nROLLBACK;\n</code></pre> <ol> <li>Dari baris ini hingga keatas akan ter-commit secara implisit</li> </ol> <p>Semua query sebelum perintah DROP TABLE didalam transaction akan ter-commit walaupun anda tidak secara jelas menggunakan <code>COMMIT</code> statement. Berhati-hatilah untuk tidak menempatkan Data Definition Languge di dalam sebuah transaction, karena ini akan menyebabkan setiap perubahan yang tidak kita ingin auto-commit malah menjadi auto-commit walaupun transaction tersebut gagal diselesaikan query didalamnya.</p> <p>MySql secara bawaanya menyalakan fitur auto-commit, namun  MySql juga menyediakan kita cara untuk mematikan auto-commit pada session anda dengan perintah dibawah ini. Untuk menyalakan kembali auto commit anda tiggal menggati dari OFF menjadi ON.</p> <pre><code>SET autocommit = OFF;\n</code></pre> <p>Setelah anda mengeksekusi perintah diatas, anda harus menggunakan perintah <code>COMMIT</code> jika ingin DML anda seperti <code>INSERT</code>, <code>UPDATE</code>, atau <code>DELETE</code> berubah secara permanen walaupun anda tidak menggunakan transaction. Mari kita coba buktikan pada tabel awards, pastikan tabel tersebut kosong, namun jika anda sudah mendrop nya anda dapat membuat lagi menggunakan query ini.</p> <pre><code>INSERT INTO awards\n(SELECT * FROM awardsmanagers LIMIT 5)\nUNION\n(SELECT * FROM awardsplayers LIMIT 5);\n</code></pre> <p>Query DML diatas status Partialy Committed walaupun anda menjalankan query tersebut tidak di dalam sebuah query. Akan tetapi anda mematikan autocommit pada session anda. Sehingga jika anda ingin membuat perubahan tersebut permanen anda harus menjalankan perintah <code>COMMIT</code>.</p> <p>Info</p> <p>MySql secara otomatis meng-commit perubahan pada database (Manipulation Data Langauge) kecuali anda menggunakan transaction atau mematikan autocommit.</p> <p>MySql juga mendukung beberap tambahan pada katakunci tambahan pada transaction, Anda dapat memanfaatkan savepoints didalam sebuah transaction untuk kembali ke titik spesifik tertentu didalam transaction. Anda dapat melakukannya dengan memberikan nama pada <code>SAVEPOINT</code> dan me-rolling back ke titik tersebut. Query dibawah ini menampilkan bagaimana cara menggunakan save point. Untuk query tersebut menggunakan table awards yang telah kita delete semua recod nya.</p> Pastikan men-delete semua record pada tabel awards<pre><code>    DELETE FROM awards;\n</code></pre> <p>Memulai transactions dan penggunaan <code>SAVEPOINT</code></p> <pre><code>BEGIN;\nINSERT INTO awards\n(SELECT * FROM awardsmanagers LIMIT 5)\nUNION\n(SELECT * FROM awardsplayers LIMIT 5);\nSAVEPOINT insertToAwardsFromManagersAndPlayersAwards;\nDELETE FROM awards\nWHERE awardId = \"Gold Glove\";\nSAVEPOINT deleteAllGoldGloveAwardId;\nUPDATE awards SET notes = \"--\";\nSAVEPOINT editAllNotes;\n</code></pre> <p>Saya akan menjelaskans secara detail query diatas dan bagaimana savepoint bekerja. Jika anda menjalankan query tersebut dan anda belum menjalan <code>COMMIT</code> ataupun <code>ROLLBACK</code> maka status perubahan diatas masih dalam status sementara atau partialy committed. Pada awal query kita memulai transaction menggunakan kata kunci <code>BEGIN</code> yang diikuti dengan penetapan titik <code>SAVEPOINT</code> ke-1 pertama, yaitu <code>insertToAwardsFromManagersAndPlayersAwards</code>, pada titik tersebut kita memasukan record kedalam table awards. Savepoint ke-2, <code>deleteAllGoldGloveAwardId</code>, kita menghapus semua awardId \"Gold Glove\", dan pada savepoint ke-3 mengupdate semua notes.</p> <p>Misalkan pada titik savepoint <code>deleteAllGoldGloveAwardId</code> adalah kondisi sesuai dengan yang diharapkan, anda dapat me-rollback pada titik tersebut dengan <code>ROLLBACK TO {savepointname}</code> dan langsung meng-commitnya dengan perintah <code>COMMIT</code>. Namun yang anda perlu perhatikan, jika anda hanya menggunakan perintah <code>ROLLBACK</code> maka setiap perubahan dan savepoint akan dihapus dan dikembalikan pada kondisi sebelumnya.</p> <pre><code>ROLLBACK TO deleteAllGoldGloveAwardId;\nCOMMIT;\n</code></pre> Output query select tabel awards <pre><code>+-----------+---------------------------+--------+------+------+-------+\n| playerID  | awardID                   | yearID | lgID | tie  | notes |\n+-----------+---------------------------+--------+------+------+-------+\n| aloufe01  | BBWAA Manager of the Year |   1994 | NL   | NULL | NULL  |\n| aloufe01  | TSN Manager of the Year   |   1994 | NL   | NULL | NULL  |\n| alstowa01 | TSN Manager of the Year   |   1955 | ML   | NULL | NULL  |\n| alstowa01 | TSN Manager of the Year   |   1959 | ML   | NULL | NULL  |\n| alstowa01 | TSN Manager of the Year   |   1963 | ML   | NULL | NULL  |\n| aaronha01 | Lou Gehrig Memorial Award |   1970 | ML   |      |       |\n| aaronha01 | Most Valuable Player      |   1957 | NL   |      |       |\n+-----------+---------------------------+--------+------+------+-------+\n7 rows in set (0,00 sec)\n</code></pre> <p>Sama dengan sebelumnya, jika anda menggunakan perintah dalam scope DDL semisal <code>DROP</code> table ditengah-tengah transaction atau savepoint, semua transaction sebelum titik DDL tersebut akan secara implisit di commit oleh MySql.</p> <p>Untuk DDL, kita harus membuat sebuah tabel yang nantinya akan kita <code>DROP</code> didalam transaction.</p> Membuat tabel simulasi &amp; restart kondisi tabel awards<pre><code>CREATE TABLE IF NOT EXISTS TabelSimulasiDDL(\n    `ujiCoba` VARCHAR (1) NOT NULL\n);\n\nDELETE FROM awards;\n</code></pre> <p>Setelah menjalankan query diatas, jalankan query transaction dibawah ini yang mana didalamnya ada DDL <code>DROP</code> tabel.</p> <pre><code>    BEGIN;\n    INSERT INTO awards\n    (SELECT * FROM awardsmanagers LIMIT 5)\n    UNION\n    (SELECT * FROM awardsplayers LIMIT 5);\n    SAVEPOINT insertToAwardsFromManagersAndPlayersAwards;\n    DELETE FROM awards\n    WHERE awardId = \"Gold Glove\";\n    SAVEPOINT deleteAllGoldGloveAwardId;\n    UPDATE awards SET notes = \"--\";\n    SAVEPOINT editAllNotes;\n    DROP TABLE TabelSimulasiDDL; ---(1)!\n    SAVEPOINT dropTabelSimulasiDDL;\n</code></pre> <ol> <li>Pada titik ini, semua savepoint diatas (<code>deleteAllGoldGloveAwardId</code>, dan <code>insertToAwardsFromManagersAndPlayersAwards</code>)  akan secara implisit di commit oleh MySql.</li> </ol> <p>Katakan kita ingin kembali ke savepoint <code>deleteAllGoldGloveAwardId</code>. Seharusnya, tabel awards memliki records yang sama dengan query transaction sebelumnya. Oke lets we rollback and display table awards.</p> <pre><code>ROLLBACK TO deleteAllGoldGloveAwardId;\n</code></pre> <p>Failure</p> <pre><code>ERROR 1305 (42000): SAVEPOINT deleteAllGoldGloveAwardId does not exist\n</code></pre> <p>Mengapa savepoint tersebut tidak exist, pada kita telah membuatnya pada query diatas ?  Yups, karena secara implisit MySql telah meng-commit savepoint tersebut dan menghapusnya.</p> <p>Output query SELECT tabel awards</p> <pre><code>+-----------+---------------------------+--------+------+------+-------+\n| playerID  | awardID                   | yearID | lgID | tie  | notes |\n+-----------+---------------------------+--------+------+------+-------+\n| aloufe01  | BBWAA Manager of the Year |   1994 | NL   | NULL | --    |\n| aloufe01  | TSN Manager of the Year   |   1994 | NL   | NULL | --    |\n| alstowa01 | TSN Manager of the Year   |   1955 | ML   | NULL | --    |\n| alstowa01 | TSN Manager of the Year   |   1959 | ML   | NULL | --    |\n| alstowa01 | TSN Manager of the Year   |   1963 | ML   | NULL | --    |\n| aaronha01 | Lou Gehrig Memorial Award |   1970 | ML   |      | --    |\n| aaronha01 | Most Valuable Player      |   1957 | NL   |      | --    |\n+-----------+---------------------------+--------+------+------+-------+\n7 rows in set (0,00 sec)\n</code></pre> <p>Abstract</p> <p>Demi kelancaran penggunaan semua query-query diatas, ada baiknya untuk menge-DROP semua tabel atas query yang dijalankan agar anda bisa menggunakan kembali query-query diatas tanpa ada error.</p> Drop table<pre><code>DROP TABLE IF EXISTS managers_copy, awards;\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#modifying-table-structure","title":"Modifying Table Structure","text":"<p>untuk memodifikasi sebuah tabel gunakan perintah <code>ALTER TABLE</code>. Perintah tersebut dapat digunakan untuk menambah/add, mengubah/edit, dan menghapus/delete objek-objek yang ada pada sebuah tabel seperti column, tipe data, constraint, dan index.</p> Prepare table for simulation <p>Pada sesi ini kita aka membuat schema dan tabel baru untuk simulasi. Jalankan query dibawah ini untuk mengikuti query selanjutnya yang ada pada catatan ini.</p> Membuat schema<pre><code>CREATE SCHEMA IF NOT EXISTS schemaSimulasi;\n</code></pre> membuat tabelSimulasi<pre><code>CREATE TABLE IF NOT EXISTS schemaSimulasi.personal (\n    id INT AUTO_INCREMENT ,\n    name VARCHAR(30) NOT NULL,\n    jmlAnak SMALLINT DEFAULT 0,\n    schoolId VARCHAR(4),\n    yaerStart SMALLINT, ---(1)!\n    yearGraduate SMALLINT,\n    PRIMARY KEY (id),\n    KEY fk_schoolId(schoolId)\n    );\n</code></pre> <ol> <li>Terdapat typo, akan seharusnya yearStart buka yaerStart</li> </ol> Membuat tabelAnakSimulasi<pre><code>CREATE TABLE IF NOT EXISTS schemaSimulasi.sekolah(\n    schoolId VARCHAR(4),\n    schoolName VARCHAR(30),\n    addressSchool VARCHAR(50),\n    PRIMARY KEY (schoolId),\n    CONSTRAINT `FK_schoolID` FOREIGN KEY (schoolId) REFERENCES schemaSimulasi.personal(`schoolId`)\n    ON DELETE RESTRICT ON UPDATE RESTRICT \n);\n</code></pre> insert data pada personal<pre><code>USE schemaSimulasi;\nINSERT INTO personal\n(name, schoolId, jmlAnak, yaerStart, yearGraduate)\n VALUES\n(\"Muhammad Farras Ma'ruf\", 'UTBG',2, 2013, 2017),\n(\"Tania Dwi Haryanti\", 'FTGT',2, 2017, 2020),\n(\"Muhammad Faris Ma'ruf\", NULL, NULL, NULL, NULL),\n(\"Nu'man Noah Ma'ruf\", NULL, NULL, NULL, NULL),\n(\"Hilyah Ma'ruf\", NULL, NULL, NULL, NULL);\n</code></pre> insert data pada sekolah<pre><code>USE schemaSimulasi;\nINSERT INTO sekolah\n(schoolId, schoolName, addressSchool)\n VALUES\n(\"UTBG\", \"Universitas Terbuka Bogor\", \"Jl. Raya Parung\"),\n(\"FTGT\", 'Future Gate Boarding School', \"Bekasi raya\");\n</code></pre> Informasi tabel personal dan sekolah Informasi struktur tabel personal<pre><code>+--------------+-------------+------+-----+---------+----------------+\n| Field        | Type        | Null | Key | Default | Extra          |\n+--------------+-------------+------+-----+---------+----------------+\n| id           | int         | NO   | PRI | NULL    | auto_increment |\n| name         | varchar(30) | NO   |     | NULL    |                |\n| jmlAnak      | smallint    | YES  |     | 0       |                |\n| schoolId     | varchar(4)  | YES  | MUL | NULL    |                |\n| yaerStart    | smallint    | YES  |     | NULL    |                |\n| yearGraduate | smallint    | YES  |     | NULL    |                |\n+--------------+-------------+------+-----+---------+----------------+\n6 rows in set (0,00 sec)\n</code></pre> Informasi struktur tabel sekolah<pre><code>+---------------+-------------+------+-----+---------+-------+\n| Field         | Type        | Null | Key | Default | Extra |\n+---------------+-------------+------+-----+---------+-------+\n| schoolId      | varchar(4)  | NO   | PRI | NULL    |       |\n| schoolName    | varchar(30) | YES  |     | NULL    |       |\n| addressSchool | varchar(50) | YES  |     | NULL    |       |\n+---------------+-------------+------+-----+---------+-------+\n3 rows in set (0,00 sec)\n</code></pre> <p><code>SELECT * FROM information_schema.table_constraints WHERE table_schema = \"schemaSimulasi\";</code> <pre><code>+--------------------+-------------------+-----------------+----------------+------------+-----------------+----------+\n| CONSTRAINT_CATALOG | CONSTRAINT_SCHEMA | CONSTRAINT_NAME | TABLE_SCHEMA   | TABLE_NAME | CONSTRAINT_TYPE | ENFORCED |\n+--------------------+-------------------+-----------------+----------------+------------+-----------------+----------+\n| def                | schemaSimulasi    | PRIMARY         | schemaSimulasi | personal   | PRIMARY KEY     | YES      |\n| def                | schemaSimulasi    | PRIMARY         | schemaSimulasi | sekolah    | PRIMARY KEY     | YES      |\n| def                | schemaSimulasi    | FK_schoolID     | schemaSimulasi | sekolah    | FOREIGN KEY     | YES      |\n+--------------------+-------------------+-----------------+----------------+------------+-----------------+----------+\n3 rows in set (0,00 sec)\n</code></pre></p>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#adding-columns","title":"Adding Columns","text":"<p>Katakan anda ingin menambahkan tempat dan tanggal lahir pada tabel personal, untuk itu jalankan query dibawah ini.</p> <pre><code>ALTER TABLE personal\nADD COLUMN tempatLahir VARCHAR(15) NULL AFTER name,\nADD COLUMN tanggalLahir DATE NULL AFTER tempatLahir,\nADD COLUMN keterangan TEXT NULL;\n</code></pre> Describe personal <pre><code>+--------------+-------------+------+-----+---------+----------------+\n| Field        | Type        | Null | Key | Default | Extra          |\n+--------------+-------------+------+-----+---------+----------------+\n| id           | int         | NO   | PRI | NULL    | auto_increment |\n| name         | varchar(30) | NO   |     | NULL    |                |\n| tempatLahir  | varchar(15) | YES  |     | NULL    |                |\n| tanggalLahir | date        | YES  |     | NULL    |                |\n| jmlAnak      | smallint    | YES  |     | 0       |                |\n| schoolId     | varchar(4)  | YES  | MUL | NULL    |                |\n| yaerStart    | smallint    | YES  |     | NULL    |                |\n| yearGraduate | smallint    | YES  |     | NULL    |                |\n| keterangan   | text        | YES  |     | NULL    |                |\n+--------------+-------------+------+-----+---------+----------------+\n9 rows in set (0,00 sec)\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#dropping-a-column","title":"Dropping a Column","text":"<p>Untuk mengehapus kolom anda dapat menggunakan <code>DROP</code>. Misalkan kita ingin menge-drop kolom <code>keterangan</code> yang baru saja kita buat di Adding Columns</p> <pre><code>ALTER TABLE personal\nDROP COLUMN keterangan;\n</code></pre> Describe personal <pre><code>+--------------+-------------+------+-----+---------+----------------+\n| Field        | Type        | Null | Key | Default | Extra          |\n+--------------+-------------+------+-----+---------+----------------+\n| id           | int         | NO   | PRI | NULL    | auto_increment |\n| name         | varchar(30) | NO   |     | NULL    |                |\n| tempatLahir  | varchar(15) | YES  |     | NULL    |                |\n| tanggalLahir | date        | YES  |     | NULL    |                |\n| jmlAnak      | smallint    | YES  |     | 0       |                |\n| schoolId     | varchar(4)  | YES  | MUL | NULL    |                |\n| yaerStart    | smallint    | YES  |     | NULL    |                |\n| yearGraduate | smallint    | YES  |     | NULL    |                |\n+--------------+-------------+------+-----+---------+----------------+\n8 rows in set (0,00 sec)\n</code></pre> <p>Namun anda akan mendapatkan error jika mencoba men DROP bagain dari hubungan kolom <code>FOREIGN KEY</code>.</p> <pre><code>ALTER TABLE sekolah\nDROP COLUMN schoolId;\n</code></pre> Failure <pre><code>ERROR 1828 (HY000): Cannot drop column 'schoolId': needed in a foreign key constraint 'FK_schoolID'\n</code></pre> <p>Jika anda ingin tetap menghapusnya, setidaknya anda harus menghapus <code>CONSTRAINT FOREIGN KEY</code> terlebih dahulu sebelum DROP kolom.</p> <pre><code>ALTER TABLE sekolah\nDROP FOREIGN KEY `FK_schoolID`,\nDROP COLUMN schoolId;\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#renaming-column","title":"Renaming Column","text":"<p>Sebelumnya kita telah salah mengetik nama kolom yareStart pada tabel personal. Sekarang kita harus membetulkan nama tersebut.</p> <pre><code>ALTER TABLE personal\nCHANGE COLUMN yaerStart yearStart SMALLINT;\n</code></pre> <p>Output</p> <pre><code>+--------------+-------------+------+-----+---------+----------------+\n| Field        | Type        | Null | Key | Default | Extra          |\n+--------------+-------------+------+-----+---------+----------------+\n| id           | int         | NO   | PRI | NULL    | auto_increment |\n| name         | varchar(30) | NO   |     | NULL    |                |\n| tempatLahir  | varchar(15) | YES  |     | NULL    |                |\n| tanggalLahir | date        | YES  |     | NULL    |                |\n| jmlAnak      | smallint    | YES  |     | 0       |                |\n| schoolId     | varchar(4)  | YES  | MUL | NULL    |                |\n| yearStart    | smallint    | YES  |     | NULL    |                |\n| yearGraduate | smallint    | YES  |     | NULL    |                |\n+--------------+-------------+------+-----+---------+----------------+\n8 rows in set (0,00 sec)\n</code></pre> <p>Hasil diatas (highlight) nama kolom sudah tidak typo lagi.</p>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#changing-data-type-of-a-columns","title":"Changing Data Type of a Columns","text":"<p>Katakan kita ingin mengganti tipe data di tabel personal pada kolom <code>yearStart</code> dan <code>yearGraduate</code> yang sebelumnya <code>smallint</code> menjadi <code>YEAR</code>.</p> <pre><code>ALTER TABLE personal\nCHANGE COLUMN yearStart yearStart YEAR,\nCHANGE COLUMN yearGraduate yearGraduate YEAR;\n</code></pre> Output describe <pre><code>+--------------+-------------+------+-----+---------+----------------+\n| Field        | Type        | Null | Key | Default | Extra          |\n+--------------+-------------+------+-----+---------+----------------+\n| id           | int         | NO   | PRI | NULL    | auto_increment |\n| name         | varchar(30) | NO   |     | NULL    |                |\n| tempatLahir  | varchar(15) | YES  |     | NULL    |                |\n| tanggalLahir | date        | YES  |     | NULL    |                |\n| jmlAnak      | smallint    | YES  |     | 0       |                |\n| schoolId     | varchar(4)  | YES  | MUL | NULL    |                |\n| yearStart    | year        | YES  |     | NULL    |                |\n| yearGraduate | year        | YES  |     | NULL    |                |\n+--------------+-------------+------+-----+---------+----------------+\n8 rows in set (0,00 sec)\n</code></pre> <p>Warning</p> <p>Anda harus memperhatikan dan telti jika ingin hanya menggati tipe data dari kolom, nama kolom pertama dan kedua harus sama persis jika tidak ingin nama kolom berganti.</p> <p>Dan seandainya kita ingin mengganti maksimal panjang kolom <code>schoolId</code> menjadi 3. Gunakan query dibawah ini</p> <pre><code>ALTER TABLE personal\nCHANGE COLUMN schoolId schoolId VARCHAR(3);\n</code></pre> <p>Failure</p> <pre><code>ERROR 1265 (01000): Data truncated for column 'schoolId' at row 1\n</code></pre> <p>Anda tidak dapat menggati menjadi maksimal 3 karakter karena data yang terdapat nilai pada kolom tersebut yang panjang karakternya lebih dari 3. Solusinya anda dapat menetapkan maksimal karakter yang lebih tinggi (mengikuti panjang karakter terpanjang pada record di kolom tersebut) atau memotong terlebih dahulu record pada kolom tersebut.</p> <p>Selain itu, anda ternyata ingin mengubah kolom <code>schoolId</code> lagi menjadi tipe integer</p> <pre><code>ALTER TABLE personal\nCHANGE COLUMN schoolId schoolId INT;\n</code></pre> <p>Failure</p> <pre><code>ERROR 1366 (HY000): Incorrect integer value: 'UTBG' for column 'schoolId' at row 1\n</code></pre> <p>Opps, ternyata error juga. Kita tidak bisa mengkonversi nilai pada kolom tersebut seprti <code>UTBG</code> kedalam bentuk integer. Hal ini sama dengan kasus kita meng-insert String kedalam kolom Integer, Using Insert Statement.</p> <p>Akan tetapi konversi dari Integer ke String dapat anda lakukan, MySql bisa untuk itu. Katakan anda ingin menggati tipe data int pada kolom <code>jmlAnak</code> kedalam tipe data String</p> <pre><code>ALTER TABLE personal\nCHANGE COLUMN jmlAnak jmlAnak varchar(3);\n</code></pre> Describe struktur terakhir tabel personal <pre><code>+--------------+-------------+------+-----+---------+----------------+\n| Field        | Type        | Null | Key | Default | Extra          |\n+--------------+-------------+------+-----+---------+----------------+\n| id           | int         | NO   | PRI | NULL    | auto_increment |\n| name         | varchar(30) | NO   |     | NULL    |                |\n| tempatLahir  | varchar(15) | YES  |     | NULL    |                |\n| tanggalLahir | date        | YES  |     | NULL    |                |\n| jmlAnak      | varchar(3)  | YES  |     | NULL    |                |\n| schoolId     | varchar(4)  | YES  | MUL | NULL    |                |\n| yearStart    | year        | YES  |     | NULL    |                |\n| yearGraduate | year        | YES  |     | NULL    |                |\n+--------------+-------------+------+-----+---------+----------------+\n8 rows in set (0,00 sec)\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#adding-or-changing-column-constraint","title":"Adding or Changing Column Constraint","text":"<p>Katakan anda ingin menambahkan paksaan (Constraint) NOT NULL pada kolom <code>tempatLahir</code> di tabel personal, anda dapat menggunakan query dibawah ini.</p> <pre><code>ALTER TABLE personal\nCHANGE COLUMN tempatLahir tempatLahir VARCHAR(15) NOT NULL;\n</code></pre> Failure <pre><code>ERROR 1138 (22004): Invalid use of NULL value\n</code></pre> <p>Ups, error terjadi karena ada record pada kolom tersebut yang memiliki nilai <code>NULL</code>. Maka dari itu sebelum merubah menjadi NULL CONSTRAINT pastikan nilai NULL diganti dengan nilai lain.</p> <pre><code>UPDATE personal\nSET tempatLahir = 'Belum'\nWHERE tempatLahir IS NULL;\n</code></pre> Describe personal <pre><code>+--------------+-------------+------+-----+---------+----------------+\n| Field        | Type        | Null | Key | Default | Extra          |\n+--------------+-------------+------+-----+---------+----------------+\n| id           | int         | NO   | PRI | NULL    | auto_increment |\n| name         | varchar(30) | NO   |     | NULL    |                |\n| tempatLahir  | varchar(15) | NO   |     | NULL    |                |\n| tanggalLahir | date        | YES  |     | NULL    |                |\n| jmlAnak      | varchar(3)  | YES  |     | NULL    |                |\n| schoolId     | varchar(4)  | YES  | MUL | NULL    |                |\n| yearStart    | year        | YES  |     | NULL    |                |\n| yearGraduate | year        | YES  |     | NULL    |                |\n+--------------+-------------+------+-----+---------+----------------+\n8 rows in set (0,00 sec)\n</code></pre> <p>Setelah <code>NULL CONSTRAINT</code> berhasil diganti maka anda dapat lihat pada kolom <code>Null</code> diatas, Field tempatLahir menjadi NO dari yang  sebelumnya yes.</p> <p>Selanjutnya anda ingin membuat check constraint untuk memvalidasi <code>yearGraduate</code> tidak boleh lebih kecil dari <code>yearStart</code>.</p> <pre><code>ALTER TABLE personal\nADD CONSTRAINT `Ck_Graduate_andYearSttart` CHECK (yearGraduate &gt; yearStart);\n</code></pre> <p>Oke selanjutnya kita simulasikan dengan 3 kali simulasi</p> <ol> <li><code>UPDATE</code> record nama Muhammad Faris Ma'ruf dengan mulai pendidikan tahun 2020 dan selesai tahun 2019.</li> <li><code>INSERT</code> record baru dengan mulai pendidikan tahun 2028 dan selesai tahun 2031</li> <li><code>INSERT</code> record baru dengan mulai pendidikan tahun 2035 dan selesai tahun NULL</li> </ol> Simulasi 1Simulasi 2Simulasi 3 <pre><code>UPDATE personal\nSET yearStart = 2020, yearGraduate = 2019;\n</code></pre> <p>Failure</p> <pre><code>ERROR 3819 (HY000): Check constraint 'Ck_Graduate_andYearSttart' is violated.\n</code></pre> <pre><code>INSERT INTO personal\n(name, tempatLahir, tanggalLahir, jmlAnak, schoolId, yearStart, yearGraduate)\nVALUES (\"Fulan\",\"Madinah\", '2023-12-12',0, \"MDNH\", 2028, 2031);\n</code></pre> <p>Output</p> <pre><code>+----+------------------------+-------------+--------------+---------+----------+-----------+--------------+\n| id | name                   | tempatLahir | tanggalLahir | jmlAnak | schoolId | yearStart | yearGraduate |\n+----+------------------------+-------------+--------------+---------+----------+-----------+--------------+\n|  1 | Muhammad Farras Ma'ruf | Belum       | NULL         | 2       | UTBG     |      2013 |         2017 |\n|  2 | Tania Dwi Haryanti     | Belum       | NULL         | 2       | FTGT     |      2017 |         2020 |\n|  3 | Muhammad Faris Ma'ruf  | Belum       | NULL         | NULL    | NULL     |      NULL |         NULL |\n|  4 | Nu'man Noah Ma'ruf     | Belum       | NULL         | NULL    | NULL     |      NULL |         NULL |\n|  5 | Hilyah Ma'ruf          | Belum       | NULL         | NULL    | NULL     |      NULL |         NULL |\n|  6 | Fulan                  | Madinah     | 2023-12-12   | 0       | MDNH     |      2028 |         2031 |\n+----+------------------------+-------------+--------------+---------+----------+-----------+--------------+\n6 rows in set (0,00 sec)\n</code></pre> <pre><code>INSERT INTO personal\n(name, tempatLahir, tanggalLahir, jmlAnak, schoolId, yearStart, yearGraduate)\nVALUES (\"Fulanah\", \"Mecca\", '2029-04-17', 0, \"MDNH\", 2035, NULL);\n</code></pre> <p>Output</p> <pre><code>+----+------------------------+-------------+--------------+---------+----------+-----------+--------------+\n| id | name                   | tempatLahir | tanggalLahir | jmlAnak | schoolId | yearStart | yearGraduate |\n+----+------------------------+-------------+--------------+---------+----------+-----------+--------------+\n|  1 | Muhammad Farras Ma'ruf | Belum       | NULL         | 2       | UTBG     |      2013 |         2017 |\n|  2 | Tania Dwi Haryanti     | Belum       | NULL         | 2       | FTGT     |      2017 |         2020 |\n|  3 | Muhammad Faris Ma'ruf  | Belum       | NULL         | NULL    | NULL     |      NULL |         NULL |\n|  4 | Nu'man Noah Ma'ruf     | Belum       | NULL         | NULL    | NULL     |      NULL |         NULL |\n|  5 | Hilyah Ma'ruf          | Belum       | NULL         | NULL    | NULL     |      NULL |         NULL |\n|  6 | Fulan                  | Madinah     | 2023-12-12   | 0       | MDNH     |      2028 |         2031 |\n|  7 | Fulanah                | Mecca       | 2029-04-17   | 0       | MDNH     |      2035 |         NULL |\n+----+------------------------+-------------+--------------+---------+----------+-----------+--------------+\n7 rows in set (0,00 sec)\n</code></pre> <p>Dapat kita lihat dari 3 simulasi diatas, simulasi pertama menyebabkan error yang mengatakan constraint check dilanggar, dimana <code>yearStart</code> lebih besar dibandingkan dengan <code>yearGraduate</code>.</p>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#adding-index","title":"Adding Index","text":"<p>Catatan tentang index, anda dapat membaca kembali manfaat index saat querying pada single table, dan multiple table</p> <p>Untuk membuat index gunakan quer dibawah ini</p> Membuat index kolom tunggalMembuat index kolom banyak <pre><code>ALTER TABLE personal\nADD INDEX idx_id_personal (id ASC) VISIBLE;\n</code></pre> <p>Index tabel personal</p> <pre><code>+----------+------------+-----------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n| Table    | Non_unique | Key_name        | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression |\n+----------+------------+-----------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n| personal |          0 | PRIMARY         |            1 | id          | A         |           7 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| personal |          1 | fk_schoolId     |            1 | schoolId    | A         |           4 |     NULL |   NULL | YES  | BTREE      |         |               | YES     | NULL       |\n| personal |          1 | idx_id_personal |            1 | id          | A         |           7 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n+----------+------------+-----------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n3 rows in set (0,22 sec)\n</code></pre> <pre><code>ALTER TABLE personal\nADD INDEX idx_name_tmptLhr (name ASC, tempatLahir ASC) VISIBLE;\n</code></pre> <p>Index tabel personal</p> <pre><code>+----------+------------+------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n| Table    | Non_unique | Key_name         | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression |\n+----------+------------+------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n| personal |          0 | PRIMARY          |            1 | id          | A         |           7 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| personal |          1 | fk_schoolId      |            1 | schoolId    | A         |           4 |     NULL |   NULL | YES  | BTREE      |         |               | YES     | NULL       |\n| personal |          1 | idx_id_personal  |            1 | id          | A         |           7 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| personal |          1 | idx_name_tmptLhr |            1 | name        | A         |           7 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n| personal |          1 | idx_name_tmptLhr |            2 | tempatLahir | A         |           7 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |\n+----------+------------+------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+\n5 rows in set (0,08 sec)\n</code></pre>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#dropping-constraint-key-or-index","title":"Dropping Constraint, Key or Index","text":"<p>Untuk menge-drop constraint gunakan query berikut <pre><code>ALTER TABLE personal\nDROP CHECK Ck_Graduate_andYearSttart;\n</code></pre></p> <p>Untuk meng-drop primary key <pre><code>ALTER TABLE personal\nDROP PRIMARY KEY;\n</code></pre></p> <p>Untuk menge-drop index <pre><code>ALTER TABLE personal\nDROP INDEX idx_id_personal;\n\nALTER TABLE personal\nDROP INDEX idx_name_tmptLhr;\n</code></pre></p>"},{"location":"DBMS/Catatan%20MySql/07.%20Modifiying%20data%20and%20Tabel%20Structure/#drop-table","title":"Drop Table","text":"<p>Untuk men-drop tabel yang perlu anda ketahui bahwa dengan drop tabel anda bukan hanya menghapus records dari tabel tersebut namun juga struktur tabel tersebut.</p> <pre><code>DROP TABLE personal;\nDROP TABLE sekolah;\n</code></pre> <p>Abstract</p> <p>Guna membersihan database, anda dapat menghapus schema yang digunakan pada bagian catatan ini <pre><code>DROP SCHEMA schemaSimulasi;\n</code></pre></p>"},{"location":"DBMS/Catatan%20MySql/additional-note/","title":"Additional-notes","text":""},{"location":"DBMS/Catatan%20MySql/additional-note/#json-type","title":"JSON Type","text":"<p>Source : </p> <ul> <li> <p>Official Documentations</p> </li> <li> <p>Pros about json data type</p> </li> <li> <p>Conts about json data type</p> </li> </ul> <p>Ada beberapa manfaat menggunakan JSON data type;</p> <ol> <li> <p>Validasi otomatis pada kolom dengan tipe data JSON. Akan menghasilkan error jika data yang dimasukan bukan dalam format json yang valid</p> </li> <li> <p>Optimasi format penyimpanan. Data yang disimpan kedalam kolum JSON akan dikonversi menjadi format internal yang memungkian akses quick read kedalam data json tersebut. </p> </li> </ol> <p>Warning</p> <p>Akan tetapi, besaran yang dibutuhkan oleh JSON sama seperti besaran peyimpanan dari LONGBLOB atau LONGTEXT. Serta, batas maksium data JSON yang disimpan didalam kolom JSON tidak boleh lebih dari max_allowed_packet system variable.</p>"},{"location":"DBMS/Catatan%20MySql/additional-note/#creating-json-type","title":"Creating Json Type","text":"<p>JSON array berisikan daftar nilai yang dipisahkan dengan koma , dan dibuka ditutup dengan square bracket [].</p> <pre><code>[\"abc\", 10, null, true, false]\n</code></pre> <p>JSON Object berisikan pasangan keys dan values yang dipisahkan dengan koma dan dibuka serta ditutup dengan curl brakcet {}.</p> <pre><code>{\"k1\": \"value\", \"k2\": 10}\n</code></pre> <p>Melihat contoh diatas, JSON Array dan Object dapat berisikan nilai skalar seperit string dan number, null, JSON bollean (true and false). Keys pada JSON Object harus strings. Temporal (date, time or datetime) juga tersedia.</p> <pre><code>[\"12:18:29.000000\", \"2015-07-29\", \"2015-07-29 12:18:29.000000\"]\n</code></pre> <p>JSON bersarang juga bisa disimpan didalam JSON kolom</p> <pre><code>[99, {\"id\": \"HK500\", \"cost\": 75.99}, [\"hot\", \"cold\"]]\n{\"k1\": \"value\", \"k2\": [10, 20]}\n</code></pre> <p>Work with JSON Value Columns</p> <pre><code>CREATE TABLE T1 (jdoc JSON);\n\nINSERT INTO t1 values ('{\"key\":\"this is value\"}');\n--Query OK, 1 row affected (0.01 sec)\n\nINSERT INTO t1 values ('[1,2,4,5,true,false]');\n--OK, 1 row affected (0.00 sec)  \n\nINSERT INTO t1 values ('{\"key\":\"this is value\"');\n--3140 (22032): Invalid JSON text: \"Missing a comma or '}' after an object member.\" at position 22 in value for column 't1.jdoc'. \n</code></pre>"},{"location":"DBMS/Catatan%20MySql/additional-note/#fungsi-json_type","title":"Fungsi JSON_TYPE","text":"<p>Fungsin JSON_TYPE membutuhkan satu buah argumen berupa nilai JSON dengan nilai keluaran tipe JSON jika valid, dan error jika sebaliknya.</p> <p><pre><code>mysql&gt; SELECT JSON_TYPE('[\"a\", \"b\", 1]');\n+----------------------------+\n| JSON_TYPE('[\"a\", \"b\", 1]') |\n+----------------------------+\n| ARRAY                      |\n+----------------------------+\n\nmysql&gt; SELECT JSON_TYPE('\"hello\"');\n+----------------------+\n| JSON_TYPE('\"hello\"') |\n+----------------------+\n| STRING               |\n+----------------------+\n\nmysql&gt; SELECT JSON_TYPE('hello');\nERROR 3146 (22032): Invalid data type for JSON data in argument 1\nto function json_type; a JSON string or JSON type is required.\n</code></pre> More info you can visit the official documentation above.</p>"},{"location":"DBMS/Catatan%20PostgreSQL/catatan/","title":"Catatan Ringkas","text":""},{"location":"DBMS/Catatan%20PostgreSQL/catatan/#login-to-psql-cmd","title":"Login to PSQL CMD","text":"<pre><code>psql -u 'your user name'\n# after this you have to type your password\n</code></pre>"},{"location":"DBMS/Catatan%20PostgreSQL/catatan/#display-databases","title":"Display Databases","text":"<p>Untuk menampilkan data base gunakan perintah <code>\\dt</code></p> <pre><code>\\dt\npostgres=# \\dt\n        List of relations\n Schema | Name | Type  |  Owner\n--------+------+-------+----------\n public | mx   | table | postgres\n</code></pre>"},{"location":"DBMS/Catatan%20PostgreSQL/catatan/#choosing-database","title":"Choosing database","text":"<p>Untuk memilih database gunakan perintah <code>\\c [database name]</code></p> <pre><code>postgres=# \\c DBCM-BBA\nYou are now connected to database \"DBCM-BBA\" as user \"postgres\".\n</code></pre>"},{"location":"DBMS/Catatan%20PostgreSQL/catatan/#display-informatio-about-table","title":"Display informatio about table","text":"<p>Untuk menampilkan informasi mengenai sebuah table seperti tipe data, nama kolom, primary key serta index dan constraint gunakan <code>\\d [table name]</code></p> <pre><code>DBCM-BBA=# \\d mx\n                            Table \"public.mx\"\n Column |  Type   | Collation | Nullable |            Default\n--------+---------+-----------+----------+--------------------------------\n id     | integer |           | not null | nextval('mx_id_seq'::regclass)\n jsonmx | json    |           | not null |\nIndexes:\n    \"mx_pkey\" PRIMARY KEY, btree (id)\n</code></pre> <p>More information about table definition you can visit here</p>"},{"location":"DBMS/Catatan%20PostgreSQL/catatan/#backup-dan-restore","title":"Backup dan restore","text":"<pre><code>pg_dump -U postgres -d DBCM -h 192.168.220.241 &gt; dbcm_muamalat\n</code></pre> <p>Backup database <code>DBCM</code> pada host <code>192.168.220.241</code> dan taruh file output <code>dbcm_muamalat</code></p> <pre><code>psql -U postgres -d \"DBCM-Muamalat\" -h localhost &lt; dbcm_muamalat\n</code></pre> <p>Save <code>dbcm_muamalat</code> pada database <code>DBCM-Muamalat</code> pada localhost</p> <p>Namun ada cara lain untuk restore jika cara diatas gagal</p> <pre><code>pg_restore -U [username] -h [hostname] -d [nama database] [nama file toc]\n</code></pre>"},{"location":"DBMS/Catatan%20PostgreSQL/psql-json/","title":"About JSON","text":"<p>This is the resoucerces of this catatan-pena section</p>"},{"location":"DBMS/Catatan%20PostgreSQL/psql-json/#create-table-for-json-type","title":"Create table for json type","text":"<pre><code>CREATE TABLE mx (\n    id serial NOT NULL PRIMARY KEY,\n    info jsonmx NOT NULL\n);\n</code></pre>"},{"location":"DBMS/Catatan%20PostgreSQL/psql-json/#insert-value-to-table","title":"insert value to table","text":"<pre><code>insert into mx (jsonmx) values('{   \"bkToCstmrStmt\": {     \"grpHdr\": {       \"msgId\": \"cmt053bizmsgidr-001\",       \"creDtTm\": {         \"year\": 2020,         \"month\": 8,         \"day\": 4,         \"timezone\": 120,         \"hour\": 18,         \"minute\": 0,         \"second\": 0       }     },     \"stmt\": [       {         \"id\": \"100-01-053053\",         \"stmtPgntn\": {           \"pgNb\": \"1\",           \"lastPgInd\": true         },         \"lglSeqNb\": 1001,         \"acct\": {           \"id\": {             \"othr\": {               \"id\": \"48751258\"             }           },           \"ccy\": \"EUR\"         },         \"bal\": [           {             \"tp\": {               \"cdOrPrtry\": {                 \"cd\": \"OPBD\"               }             },             \"amt\": {               \"value\": 8547.25,               \"ccy\": \"EUR\"             },             \"cdtDbtInd\": \"DBIT\",             \"dt\": {               \"dt\": {                 \"year\": 2020,                 \"month\": 8,                 \"day\": 4,                 \"timezone\": -2147483648,                 \"hour\": -2147483648,                 \"minute\": -2147483648,                 \"second\": -2147483648               }             }           },           {             \"tp\": {               \"cdOrPrtry\": {                 \"cd\": \"CLBD\"               }             },             \"amt\": {               \"value\": 26452.75,               \"ccy\": \"EUR\"             },             \"cdtDbtInd\": \"CRDT\",             \"dt\": {               \"dt\": {                 \"year\": 2020,                 \"month\": 8,                 \"day\": 4,                 \"timezone\": -2147483648,                 \"hour\": -2147483648,                 \"minute\": -2147483648,                 \"second\": -2147483648               }             }           }         ],         \"ntry\": [           {             \"amt\": {               \"value\": 35000,               \"ccy\": \"EUR\"             },             \"cdtDbtInd\": \"CRDT\",             \"sts\": {               \"cd\": \"BOOK\"             },             \"valDt\": {               \"dt\": {                 \"year\": 2020,                 \"month\": 8,                 \"day\": 4,                 \"timezone\": -2147483648,                 \"hour\": -2147483648,                 \"minute\": -2147483648,                 \"second\": -2147483648               }             },             \"acctSvcrRef\": \"ABKREF-125646\",             \"bkTxCd\": {               \"domn\": {                 \"cd\": \"PMNT\",                 \"fmly\": {                   \"cd\": \"RCDT\",                   \"subFmlyCd\": \"XBCT\"                 }               }             },             \"ntryDtls\": [               {                 \"txDtls\": [                   {                     \"refs\": {                       \"acctSvcrRef\": \"ABKREF-125646\",                       \"instrId\": \"asdfqwertest0003\",                       \"endToEndId\": \"pacs008EndToEndId-001\",                       \"uetr\": \"8a562c67-ca16-48ba-b074-65581be6f001\"                     },                     \"amt\": {                       \"value\": 35000,                       \"ccy\": \"EUR\"                     },                     \"cdtDbtInd\": \"CRDT\"                   }                 ]               }             ]           },           {             \"amt\": {               \"value\": 35000,               \"ccy\": \"EUR\"             },             \"cdtDbtInd\": \"CRDT\",             \"sts\": {               \"cd\": \"BOOK\"             },             \"valDt\": {               \"dt\": {                 \"year\": 2020,                 \"month\": 8,                 \"day\": 4,                 \"timezone\": -2147483648,                 \"hour\": -2147483648,                 \"minute\": -2147483648,                 \"second\": -2147483648               }             },             \"acctSvcrRef\": \"ABKREF-125646\",             \"bkTxCd\": {               \"domn\": {                 \"cd\": \"PMNT\",                 \"fmly\": {                   \"cd\": \"RCDT\",                   \"subFmlyCd\": \"XBCT\"                 }               }             },             \"ntryDtls\": [               {                 \"txDtls\": [                   {                     \"refs\": {                       \"acctSvcrRef\": \"ABKREF-125646\",                       \"instrId\": \"asdfqwertest0004\",                       \"endToEndId\": \"pacs008EndToEndId-001\",                       \"uetr\": \"8a562c67-ca16-48ba-b074-65581be6f001\"                     },                     \"amt\": {                       \"value\": 35000,                       \"ccy\": \"EUR\"                     },                     \"cdtDbtInd\": \"CRDT\"                   }                 ]               }             ]           }         ]       }     ]   },   \"appHdr\": {     \"fr\": {       \"fiId\": {         \"finInstnId\": {           \"bicfi\": \"BACALULLXXX\"         }       }     },     \"to\": {       \"fiId\": {         \"finInstnId\": {           \"bicfi\": \"BAERLULUXXX\"         }       }     },     \"bizMsgIdr\": \"cmt053bizmsgidr-001\",     \"msgDefIdr\": \"camt.053.001.08\",     \"bizSvc\": \"swift.cbprplus.02\",     \"creDt\": {       \"year\": 2020,       \"month\": 8,       \"day\": 4,       \"timezone\": 120,       \"hour\": 18,       \"minute\": 0,       \"second\": 0     },     \"namespace\": \"urn:iso:std:iso:20022:tech:xsd:head.001.001.02\"   },   \"type\": \"MX\",   \"@xmlns\": \"urn:iso:std:iso:20022:tech:xsd:camt.053.001.08\",   \"identifier\": \"camt.053.001.08\" }')\n</code></pre>"},{"location":"DBMS/Catatan%20PostgreSQL/psql-json/#query-json-data","title":"Query json data","text":"<pre><code>select * from mx;\n-- return data\n</code></pre> <p>Postgre menyedikan dua operator native untuk meng-query data dalam bentuk JSON.</p> <ol> <li>Operator <code>-&gt;</code> mengembalikan nilai dalam bentuk <code>object</code></li> <li>Operator <code>--&gt;</code> mengembalikan nilai dalam bentuk <code>text</code></li> </ol> <p>Dibawah ini adalah contoh untuk mengambil data json Create Date Time dari pacs.008</p> <pre><code>select jsonmx-&gt; 'bkToCstmrStmt'-&gt; 'grpHdr' -&gt; 'creDtTm' from mx\n\n-- return object type\n{ \"year\": 2020,\"month\": 8,\"day\": 4,\"timezone\": 120,\"hour\": 18,\"minute\": 0,\"second\": 0}\n</code></pre> <p>Sedangkan, contoh dibawah ini adalah mengambil message id dalam bentuk text</p> <pre><code>select jsonmx-&gt; 'bkToCstmrStmt'-&gt; 'grpHdr' -&gt;&gt; 'msgId' from mx\n\n-- return\ncmt053bizmsgidr-001\n</code></pre> <p>Bagaimana untuk mengambil array json ? kita dapat menggunakan nomor index</p> <pre><code>select jsonmx-&gt; 'bkToCstmrStmt'-&gt; 'stmt' -&gt; 0 from mx\n</code></pre>"},{"location":"DBMS/Catatan%20PostgreSQL/psql-json/#postgresql-json-functions","title":"PostgreSQL JSON functions","text":""},{"location":"DBMS/Catatan%20PostgreSQL/psql-json/#json_each","title":"json_each","text":"<p>Function yang berguna untuk menampilkan JSON object terluar dalam bentuk pasangan key dan value. Nilai kembalian fungsi ini adalah <code>object</code>. Jika lebih menginginkan <code>text</code> maka gunakan fungsi <code>json_each_text</code></p> <pre><code>select json_each(jsonmx)  from mx\n-- return\n...\n(type,\"\"\"MX\"\"\")\n(identifier,\"\"\"camt.053.001.08\"\"\")\n...\n</code></pre> <p>informasi lebih lanjut tentang fungsi json pada postgre sql dapat melihat di sini</p>"},{"location":"Deen/","title":"Dengan menyebut nama Allah","text":"<p>\u0628\u0650\u0633\u0652\u0645\u0650 \u0627\u0644\u0644\u064e\u0651\u0647\u0650 \u0627\u0644\u0631\u062d\u0645\u0646 \u0627\u0644\u0631\u064e\u0651\u062d\u0650\u064a\u0645\u0650</p>"},{"location":"Deen/01.23072023/","title":"01.23072023","text":"<p>Lokasi kajian</p> <p>Masjid Al-Istiqomah Perumahan Bukit Indah Pesona Parung, Bogor.</p> <p>Catatan ini diambil pada tanggal 23 Juli 2023. Saya, istri dan ketiga anak saya serta mertua saya (dengan rahmat Allah) menghadiri kajian tersebut. Tema yang dibawakan ustad tentang memudahkan urusan orang lain.</p>"},{"location":"Deen/01.23072023/#memudahkan-urusan-mukmin","title":"Memudahkan urusan Mukmin","text":"<p> Sahih Muslim : 2699</p> <p>Lihat hadist</p> <p>Dari Abu Hurairah Radhiyallahu anhu , Nabi Shallallahu \u2018alaihi wa sallam bersabda, </p> <p>\u201cBarangsiapa yang melapangkan satu kesusahan dunia dari seorang Mukmin, maka All\u00e2h melapangkan darinya satu kesusahan di hari Kiamat. Barangsiapa memudahkan (urusan) orang yang kesulitan (dalam masalah hutang), maka All\u00e2h Azza wa Jalla memudahkan baginya (dari kesulitan) di dunia dan akhirat. Barangsiapa menutupi (aib) seorang Muslim, maka All\u00e2h akan menutup (aib)nya di dunia dan akhirat. All\u00e2h senantiasa menolong seorang hamba selama hamba tersebut menolong saudaranya. Barangsiapa menempuh jalan untuk menuntut ilmu, maka All\u00e2h akan mudahkan baginya jalan menuju Surga. Tidaklah suatu kaum berkumpul di salah satu rumah All\u00e2h (masjid) untuk membaca Kitabullah dan mempelajarinya di antara mereka, melainkan ketenteraman akan turun atas mereka, rahmat meliputi mereka, Malaikat mengelilingi mereka, dan All\u00e2h menyanjung mereka di tengah para Malaikat yang berada di sisi-Nya. Barangsiapa yang diperlambat oleh amalnya (dalam meraih derajat yang tinggi-red), maka garis keturunannya tidak bisa mempercepatnya.\u201d</p>"},{"location":"Deen/01.23072023/#balasan-atas-kebaikan","title":"Balasan atas kebaikan","text":"<p>Dari penggalan hadis berikut <code>Barangsiapa yang melapangkan satu kesusahan dunia dari seorang Mukmin, maka All\u00e2h melapangkan darinya satu kesusahan di hari Kiamat. Barangsiapa memudahkan (urusan) orang yang kesulitan (dalam masalah hutang), maka All\u00e2h Azza wa Jalla memudahkan baginya (dari kesulitan) di dunia dan akhirat...</code> terdapat dua ganjaran yang Allah berikan atas setiap kebaikan yang seorang mukmin lakukan.</p> <p>Pertama, orang yang membantu kesulitan saudaranya seperti meringkan beban yang sedang dihadapinya , mencukupi kebutuhannya maka Allah berjanji akan memberikan keringanan diakhirat nanti. Kedua, orang yang menangguhkan, atau mengikhlaskan utang orang lain pada dirinya maka Allah berikan dua buah ganjaran, yaitu Allah akan memberikan kebaikan didunia dan kebaikan di akhreat.</p> <p>Ustadz pada kajian ini menjelaskan \"mengapa ganjaran bagi seorang mukmin yang memudahkan oranglain dalam hutang mendapatkan ganjara didunia dan diakhret ?\". Karena, orang tersebut melakukan dua buah kebaikan sekaligus, yaitu;</p> <ol> <li>Dia membantu dengan cara meringankan beban saudaranya tersebut yang berhutang. Seperti memberikan masa waktu yang lebih kepada saudaranya yang belumn mampu membayar hutang setelah jatuh tempo.</li> <li>Dia bersabar atas haknya terhadap uang yang dipinjaminya tersebut karena saudaranya belum dapat mengembalikan uang yang dipinjamnya.</li> </ol> <p>Ustadz tersebut juga mengatakan bahwa ulama <sup>1</sup> mengatakan;</p> <p>\"Jika orang yang berhutang dalam kesulitan membayar dan orang tersebut berhutang pada-mu, maka WAJIB  memberikan kelapangan (melonggarkan masa waktu pembayaran hutang) hingga saudaranya tersebut mampu untuk membayar hutang\"</p>"},{"location":"Deen/01.23072023/#tidak-bermudah-dalam-hutang","title":"Tidak bermudah dalam hutang","text":"<p>Maha suci Allah, yang mengetahui hamba-hambaNya. Kita dianjurkan untuk meringakan orang lain yang sedang terlilit hutang. Dengan demikian kita akan Allah berikan kemudahan di dudnia dan di akherat nanti. Namun Allah Azza Wa Jalla melarang hambanya untuk bermudah dalam berhutang. Karena Rasulullah Shallallahu Alaihi Wassalam bersabda;</p> <p>HR. Ibnu Majah no. 1971. Disahihkan Al Albani dalam Shahih Ibnu Majah</p> <p>Lihat hadist</p> <p>Dinarasikan oleh Thawban, budak yang dibebaskan oleh Rasulullah Shallallahu Alaihi Wassalam, bahwa Rasulullah Shallallahu Alaihi Wassalam berkata;</p> <p>\"Barang siapa yang ruhnya terpisah dari jasadnya dan dia terbebas dari tiga hal: kesombongan, ghulul (harta khianat), dan hutang, maka dia akan masuk surga\u201d (HR. Ibnu Majah no. 1971. Disahihkan Al Albani dalam Shahih Ibnu Majah)\"</p> <p>Namun sejatinya hutang bukan berarti diharamkan, karena Rasulullah juga mengijinkan hambanya untuk berhutang. Namun dengan syarat wajib harus melunasi hutangnya tersebut.</p> <p>Ada beberapa dari kita yang dia berhutang, lalu dia memliki harta untuk membayar hutang tersebut, namun dia menunda-nudanya maka akan membahayakan dirinya dihari akhirat nanti (seandainya di mati dalam keadaan masih memiliki hutang).</p> <p>HR. Ibnu Majah no. 2414</p> <p>Lihat hadist</p> <p>\"Barangsiapa yang mati dalam keadaan masih punya hutang, maka kelak (di hari kiamat) tidak ada dinar dan dirham untuk melunasinya. Namun yang ada hanyalah kebaikan atau keburukan (untuk melunasinya)</p> <p>Lalu bagi hambanya yang sudah meninggal dan dia masih memiliki hutang. Maka dia akan menghadap Allah, dan Allah akang menganggapnya sebagai pencuri.</p> <p>HR. Al Baihaqi dalam Syu\u2019abul Iman, no.5561, disahihkan Al Albani dalam Shahih Al Jami\u2019 no. 2720</p> <p>Lihat hadist</p> <p>\u201cSiapa saja yang berhutang dan ia tidak bersungguh-sungguh untuk melunasinya, maka ia akan bertemu Allah sebagai seorang pencuri\"</p> <p>Bahkan Rasulullah Shallallahu Alaihi Wassalam enggan untuk mensolati orang yang masih memiliki hutang</p> <p>Sunan Abi Dawud no. 3343</p> <p>Lihat hadist</p> <p>\"Ada seorang laki-laki di antara kami meninggal dunia, lalu kami memandikannya, menutupinya dengan kapas, dan mengkafaninya Kemudian kami mendatangi Rasulullah Shallallahu \u2018alaihi wasallam dan kami tanyakan, \u2018Apakah baginda akan menyalatkannya?\u2019 Beliau melangkah beberapa langkah kemudian bertanya, \u2018Apakah ia mempunyai hutang?\u2019 Kami menjawab, \u2018Dua dinar.\u2019 Lalu beliau kembali. Maka Abu Qatadah menanggung hutang tersebut.</p> <p>Ketika kami mendatanginya, Abu Qotadah berkata, \u2018Dua dinar itu menjadi tanggunganku.\u2019 Lalu Rasulullah Shallallahu \u2018alaihi wasallam bersabda, \u2018Betul-betul Engkau tanggung hutang mayit sampai lunas?\u2019 Qatadah mengatakan, \u2018Iya betul\u2019. Maka Nabi pun mensalatinya.\"</p> <p>Maka dari itu, janganlah bagi diri kita untuk menunda-nunda dalam membayar hutang atau jangan berhutang dengan niatan tidak akan membayarnya. Karena orang yang tidak membayar hutang adalah sebuah kezhaliman.</p> <p>Bukhari no.2287</p> <p>Lihat hadist</p> <p>\"Penundaan pelunasan hutang oleh orang yang mampu adalah sebuah kezaliman, maka jika hutang kalian ditanggung oleh orang lain yang mampu maka setujuilah\"</p> <p>Bahkan, orang yang mati syahid tertahan karena hutangnya</p> <p>Muslim no.1886</p> <p>Lihat hadist</p> <p>Dari Abdullah bin \u2018Amr Radhiallahu \u2018anhu, Rasulullah Shallallahu \u2018alaihi wasallam bersabda,</p> <p>\"Semua dosa orang yang mati syahid diampuni kecuali hutang\"</p> <p>Akibat dari berhutang juga menimbulkan dosa lainya, yaitu berhutang. Maka dari itu Rasululla Shallallahu Alaihi Wassalam selalu berdoa setelah habis shalat</p> <p> \u0627\u0644\u0644\u0651\u064e\u0647\u064f\u0645\u0651\u064e \u0625\u0650\u0646\u0651\u0650\u064a \u0623\u064e\u0639\u064f\u0648\u0630\u064f \u0628\u0650\u0643\u064e \u0645\u0650\u0646\u0652 \u0639\u064e\u0630\u064e\u0627\u0628\u0650 \u0627\u0644\u0652\u0642\u064e\u0628\u0652\u0631\u0650 \u0648\u064e\u0623\u064e\u0639\u064f\u0648\u0630\u064f \u0628\u0650\u0643\u064e \u0645\u0650\u0646\u0652 \u0641\u0650\u062a\u0652\u0646\u064e\u0629\u0650 \u0627\u0644\u0652\u0645\u064e\u0633\u0650\u064a\u062d\u0650 \u0627\u0644\u062f\u0651\u064e\u062c\u0651\u064e\u0627\u0644\u0650\u060c \u0648\u064e\u0623\u064e\u0639\u064f\u0648\u0630\u064f \u0628\u0650\u0643\u064e \u0645\u0650\u0646\u0652 \u0641\u0650\u062a\u0652\u0646\u064e\u0629\u0650 \u0627\u0644\u0652\u0645\u064e\u062d\u0652\u064a\u064e\u0627 \u0648\u064e\u0641\u0650\u062a\u0652\u0646\u064e\u0629\u0650 \u0627\u0644\u0652\u0645\u064e\u0645\u064e\u0627\u062a\u0650\u060c \u0627\u0644\u0644\u0651\u064e\u0647\u064f\u0645\u0651\u064e \u0625\u0650\u0646\u0651\u0650\u064a \u0623\u064e\u0639\u064f\u0648\u0630\u064f \u0628\u0650\u0643\u064e \u0645\u0650\u0646\u064e \u0627\u0644\u0652\u0645\u064e\u0623\u0652\u062b\u064e\u0645\u0650 \u0648\u064e\u0627\u0644\u0652\u0645\u064e\u063a\u0652\u0631\u064e\u0645\u0650 \u200f</p> <p>Bukhrai no.832</p> <p>Lihat hadist</p> <p>\u201cRasulullah Shallallahu \u2018alaihi wasallam biasa berdoa di dalam salatnya,</p> <p>allahumma inni a\u2019udzubika min \u2018adzabil qobri, wa a\u2019udzubika min fitnatil masihid dajjal, wa a\u2019udzubika min fitnatil mahya, wa fitnatil mamat, allahumma inni a\u2019udzubika minal ma\u2019tsam wal maghram</p> <p>(Ya Allah, aku memohon perlindungan kepada-Mu dari azab kubur. Aku memohon perlindungan kepada-Mu dari fitnah al Masih ad Dajjal. Aku memohon perlindungan kepada-Mu dari fitnah orang yang hidup dan orang yang sudah mati. Aku memohon perlindungan kepada-Mu dari dosa dan hutang).</p> <p>Lalu seseorang bertanya kepada beliau, \u2018Wahai Rasulullah, betapa seringnya Engkau berlindung dari hutang?\u2019 Beliau pun menjawab, \u2018Sesungguhnya seseorang yang biasa berhutang, jika dia berbicara dia akan berdusta, jika dia berjanji dia akan mengingkarinya\u2019\u201d</p>"},{"location":"Deen/01.23072023/#menutupi-aib-oranglain","title":"Menutupi Aib oranglain","text":"<p>Para ulama membagi \"menutupi aib orang lain menjadi 3\"</p> <ol> <li> <p>Menutupi aib orang lain sebagai  tindakan kebaikan: Hukumnya adalah wajib jika kita menutupi kebaikan orang lain untuk kebaikannya. Misalkan ada seseirang yang kita ketahui orang tersebut sangat shaleh, rajin shalat di masjid, rajin datang ke majelis ilmu. Namum, manusia tidak pernah akan terlepas dari kesalahana. Seandainya kesalahan yang dibuat tersebut adalah aib bagi orang tersebut dan kita mengetahuinya. Maka wajib bagi kita untuk menutupi aib orang tersebut.</p> </li> <li> <p>Menutupi aib orang lain sebagai tindakan buruk: Contohnya adalah, ada seseorang yang bertanya kepada kita tentang sifulan misalnya. Orang yg bertanya tersebut ingin menggali informasi pada kita tentang sifulan yang ingin dia nikahkan untuk anaknya. Seandainya aib, perilaku buruknya ini berbahaya bagi anak yang menanyai ini maka wajib bagi kita untuk mengabarkan aib tersebut agar anak dari yang bertanya ini terhinda dari keburukan fulan tersebut.</p> </li> <li> <p>Menutupi aib orang lain sebagai {==tindakan yang tidak diketahui buruk atau baiknya}: pada kasusu ini, ulama mengembalikan kepada hukum asalnya, yitu tidak boleh mengumbar aib orang lain.</p> </li> </ol> <p>Alhamdulillah, catatan ini jauh dari sempurna, dikhususkan untuk saya sendiri dan anak2 saya.</p> <p><code>Muhammad Farras Ma'ruf, Bogor, 23 Juli 2023 14:58 WIB</code></p> <ol> <li> <p>Saya tidak mengatahui siapa ulama tersebut, namun nasihatnya adalah baik\u00a0\u21a9</p> </li> </ol>"},{"location":"Deen/02.15062021/","title":"02.15062021","text":""},{"location":"Deen/02.15062021/#catatan-1","title":"Catatan - 1","text":"<p>Bogor (Parung), 15 Juli 2021 Dicatat : Tania Dwi Haryanti (Bunda Faris)</p> <p>\u0628\u0650\u0633\u0652\u0645\u0650 \u0627\u0644\u0644\u064e\u0651\u0647\u0650 \u0627\u0644\u0631\u064e\u0651\u062d\u0652\u0645\u064e\u0646\u0650 \u0627\u0644\u0631\u064e\u0651\u062d\u0650\u064a\u0645</p> <p>Segalah puji hanya milik Allah Azza Wajalla, yang menghidupkan dan mematikan, yang memberikan segala anugrah dan kenikmatan kepada setiap hambanya.</p> <p>Halaman ini kami buat untuk dirikami sendiri (Farras, Tania dan Faris). Isi dari halaman ini adalah catatan istri (Tania) dari kajian online yang dibawakan oleh Ustad Yazid Jawwas Hafidzahahullah yang berjudul Wabah &amp; Penyakit sebagai ujian dari \u0627\u0644\u0644\u0647\u200e*</p> <p>Catatan ini tidaklah sempurna. Jika ingin mengambil faedah lebih mendalam dapat merujuk pada sumber asli catatan ini.</p>"},{"location":"Deen/02.15062021/#wabah-penyakit-sebagai-ujian-dari","title":"Wabah &amp; Penyakit sebagai ujian dari \u0627\u0644\u0644\u0647\u200e","text":"<p>Penyakit yang \u0627\u0644\u0644\u0647\u200e berikan adalah ujian bagi kita. Apakah kita akan sabar ? Apakah iman kita benar. Ingatlah ketika \u0627\u0644\u0644\u0647\u200e berikan ujian dan cobaan pada kita, maka sebenarnya \u0627\u0644\u0644\u0647\u200e sayang kepada kita, karena \u0627\u0644\u0644\u0647\u200e ingin menghapus dosa kita, \u0627\u0644\u0644\u0647\u200e ingin angkat derajat kita.</p> <p>\u0627\u0644\u0644\u0647\u200e ingin melihat apakah kita bermunjakat kepada \u0627\u0644\u0644\u0647\u200e, betulkah kita meminta kepada \u0627\u0644\u0644\u0647\u200e, sabar atau tidak, dan \u0627\u0644\u0644\u0647\u200e ingin menempatkan ditempat tertinggi di surga. (selama kita sabar dan ridho)</p> <p>Kita dapat mersakan manfaat dari tertimpanya musibah dan penyakit. Imam Ibnul Qayyim berkata, 'kalau tidak karena cobaan dan musibah dunia, niscaya manusia terkena penyakit kesombongan, ujub,bangga diri, dan kerasnya hati. Padahal sifat-sifat ini adalah kehancurnya baginya di dunia dan di akhirat. Diantara rahmat \u0627\u0644\u0644\u0647\u200e yang Maha Kasih &amp; Sayang, kadang manusia tertimpa musibah yang menjadi pelindung baginya dari penyakit. Penyakit hati dan menjaga kemurnian ibadah dia kepada \u0627\u0644\u0644\u0647\u200e serta mengeluarkan dia dari materi-materi yang rusak, yang jelek dan membinasakan. Maha Suci \u0627\u0644\u0644\u0647\u200e yang Maha Kasih &amp; Sayang pada manusia dan cobaan dan ujian Nya.'</p> <p>\u0627\u0644\u0644\u0647 berfirman : <pre><code>\u0645\u064e\u0627\u0653 \u0627\u064e\u0635\u064e\u0627\u0628\u064e \u0645\u0650\u0646\u0652 \u0645\u0651\u064f\u0635\u0650\u064a\u0652\u0628\u064e\u0629\u064d \u0641\u0650\u0649 \u0627\u0644\u0652\u0627\u064e\u0631\u0652\u0636\u0650 \u0648\u064e\u0644\u064e\u0627 \u0641\u0650\u064a\u0652\u0653 \u0627\u064e\u0646\u0652\u0641\u064f\u0633\u0650\u0643\u064f\u0645\u0652 \u0627\u0650\u0644\u0651\u064e\u0627 \u0641\u0650\u064a\u0652 \u0643\u0650\u062a\u0670\u0628\u064d \u0645\u0650\u0651\u0646\u0652 \u0642\u064e\u0628\u0652\u0644\u0650 \u0627\u064e\u0646\u0652 \u0646\u0651\u064e\u0628\u0652\u0631\u064e\u0627\u064e\u0647\u064e\u0627 \u06d7\u0627\u0650\u0646\u0651\u064e \u0630\u0670\u0644\u0650\u0643\u064e \u0639\u064e\u0644\u064e\u0649 \u0627\u0644\u0644\u0651\u0670\u0647\u0650 \u064a\u064e\u0633\u0650\u064a\u0652\u0631\u064c\u06d6(22)\n\n\u0644\u0651\u0650\u0643\u064e\u064a\u0652\u0644\u064e\u0627 \u062a\u064e\u0623\u0652\u0633\u064e\u0648\u0652\u0627 \u0639\u064e\u0644\u0670\u0649 \u0645\u064e\u0627 \u0641\u064e\u0627\u062a\u064e\u0643\u064f\u0645\u0652 \u0648\u064e\u0644\u064e\u0627 \u062a\u064e\u0641\u0652\u0631\u064e\u062d\u064f\u0648\u0652\u0627 \u0628\u0650\u0645\u064e\u0627\u0653 \u0627\u0670\u062a\u0670\u0649\u0643\u064f\u0645\u0652 \u06d7\u0648\u064e\u0627\u0644\u0644\u0651\u0670\u0647\u064f \u0644\u064e\u0627 \u064a\u064f\u062d\u0650\u0628\u0651\u064f \u0643\u064f\u0644\u0651\u064e \u0645\u064f\u062e\u0652\u062a\u064e\u0627\u0644\u064d \u0641\u064e\u062e\u064f\u0648\u0652\u0631\u064d\u06d9 (23)\n</code></pre> Artinya : <pre><code>(22) Setiap bencana yang menimpa di bumi dan yang menimpa dirimu sendiri, semuanya telah tertulis dalam Kitab (Lauh Mahfuzh) sebelum Kami mewujudkannya. Sungguh, yang demikian itu mudah bagi Allah.\n\n(23) Agar kamu tidak bersedih hati terhadap apa yang luput dari kamu, dan jangan pula terlalu gembira terhadap apa yang diberikan-Nya kepadamu. Dan Allah tidak menyukai setiap orang yang sombong dan membanggakan diri.\n</code></pre> <code>{Q.S Al Hadid : 22 - 23}</code></p> <p><pre><code>\u0645\u064e\u0627\u0653 \u0627\u064e\u0635\u064e\u0627\u0628\u064e \u0645\u0650\u0646\u0652 \u0645\u0651\u064f\u0635\u0650\u064a\u0652\u0628\u064e\u0629\u064d \u0627\u0650\u0644\u0651\u064e\u0627 \u0628\u0650\u0627\u0650\u0630\u0652\u0646\u0650 \u0627\u0644\u0644\u0651\u0670\u0647\u0650 \u06d7\u0648\u064e\u0645\u064e\u0646\u0652 \u064a\u0651\u064f\u0624\u0652\u0645\u0650\u0646\u0652\u06e2 \u0628\u0650\u0627\u0644\u0644\u0651\u0670\u0647\u0650 \u064a\u064e\u0647\u0652\u062f\u0650 \u0642\u064e\u0644\u0652\u0628\u064e\u0647\u0657 \u06d7\u0648\u064e\u0627\u0644\u0644\u0651\u0670\u0647\u064f \u0628\u0650\u0643\u064f\u0644\u0651\u0650 \u0634\u064e\u064a\u0652\u0621\u064d \u0639\u064e\u0644\u0650\u064a\u0652\u0645\u064c(11)\n</code></pre> Artinya : <pre><code>(11) Tidak ada sesuatu musibah yang menimpa (seseorang), kecuali dengan izin Allah; dan barangsiapa beriman kepada Allah, niscaya Allah akan memberi petunjuk kepada hatinya. Dan Allah Maha Mengetahui segala sesuatu.\n</code></pre> <code>{Q.S At-Taghobun:11}</code></p> <p>\u0627\u0644\u0644\u0647 sangat sayang kepada mahluknya, melebihi orang tersebut mencintai dirinya sendiri. Jangan suudzhon kepada \u0627\u0644\u0644\u0647 namun berhuznudzhon lah</p> <p>Rasulullah \ufdfa bersabda : 'Sesungguhnya besarnya pahala tergantung besarnya ujian. Dan sesungguhnya apabila \u0627\u0644\u0644\u0647 menyukai seuatu kaum, maka \u0627\u0644\u0644\u0647 akan menguji mereka. Barangsiapa yang ridho maka baginya ridho. Dan barangsiapa murka maka baginya kemurkaan.' <code>(HR. Bukhori &amp; Muslim)</code></p>"},{"location":"Deen/02.15062021/#adab-pada","title":"Adab pada \u0627\u0644\u0644\u0647","text":"<p><pre><code>\u0648\u064e\u0627\u0650\u0630\u064e\u0627 \u0645\u064e\u0631\u0650\u0636\u0652\u062a\u064f \u0641\u064e\u0647\u064f\u0648\u064e \u064a\u064e\u0634\u0652\u0641\u0650\u064a\u0652\u0646\u0650 \u06d9(80)\n</code></pre> Artinya : <pre><code>(80) dan apabila aku sakit, Dialah yang menyembuhkan aku,\n</code></pre> <code>{Q.S Asy-Syu'ara'}</code></p> <p>Yang memberikan sakit hakikatnya adalah \u0627\u0644\u0644\u0647, namun pada ayat ini tidak disebutkan. Dan keseumbahan dinisbatkan pada Allah</p>"},{"location":"Deen/02.15062021/#penjelasan-dari-seorang-tabiin-apabila-dia-terkena-musibah","title":"Penjelasan dari seorang tabi'in apabila dia terkena musibah","text":"<p>Adalah Syuraih Al-Qodi, Ketika ia tertimpa musibah, memuji \u0627\u0644\u0644\u0647 empat kali :</p> <ol> <li>Memuji \u0627\u0644\u0644\u0647 karena tidak tertimpa yang lebih besar.</li> <li>Memuji \u0627\u0644\u0644\u0647 karena dikaruniai kesabaraan saat ditimpa musibah.</li> <li>Memuji \u0627\u0644\u0644\u0647 karena dapat mengucapkan istirja.</li> <li>Memuji \u0627\u0644\u0644\u0647 karena musibah tidak menimpa agam.</li> </ol> <p>Alhamdulillah, akhir dari catata ini, semoga Allah memberikan kita kemampuan untuk dapat selalu menuntu ilmu agama-Nya dan ilmu yang bermanfaat lainnya.</p> <p>Refrensi</p> <ul> <li>Wabah &amp; Penyakit sebagai ujian dari \u0627\u0644\u0644\u0647\u200e</li> </ul>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/01.%20Filtering%20content/","title":"Filter Content","text":"<p>Info</p> <p>Dibawah ini adalah catatan dari platform Hack The Box</p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/01.%20Filtering%20content/#filter-contents","title":"Filter Contents","text":"<p>In the last section, we learned about the redirections we can use to redirect results from one program to another for processing. To read files, we do not necessarily have to use an editor for that. There are two tools called more and less, which are very identical. These are fundamental pagers that allow us to scroll through the file in an interactive view. Let us have a look at some examples. More</p> <pre><code>browntofu@htb[/htb]$ more /etc/passwd\n</code></pre> <p>After we read the content using cat and redirected it to more, the already mentioned pager opens, and we will automatically start at the beginning of the file.</p> <pre><code>root:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\n&lt;SNIP&gt;\n--More--\n</code></pre> <p>With the <code>Q</code> key, we can leave this pager. We will notice that the output remains in the terminal. Less</p> <p>If we now take a look at the tool less, we will notice on the man page that it contains many more features than more.</p> <pre><code>browntofu@htb[/htb]$ less /etc/passwd\n</code></pre> <p>The presentation is almost the same as with more.</p> <pre><code>root:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\n&lt;SNIP&gt;\n:\n</code></pre> <p>When closing less with the [Q] key, we will notice that the output we have seen, unlike more, does not remain in the terminal. Head</p> <p>Sometimes we will only be interested in specific issues either at the beginning of the file or the end. If we only want to get the first lines of the file, we can use the tool head. By default, head prints the first ten lines of the given file or input, if not specified otherwise.</p> <pre><code>browntofu@htb[/htb]$ head /etc/passwd\n\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/01.%20Filtering%20content/#tail","title":"Tail","text":"<p>If we only want to see the last parts of a file or results, we can use the counterpart of head called tail, which returns the last ten lines.</p> <pre><code>browntofu@htb[/htb]$ tail /etc/passwd\n\nmiredo:x:115:65534::/var/run/miredo:/usr/sbin/nologin\nusbmux:x:116:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin\nrtkit:x:117:119:RealtimeKit,,,:/proc:/usr/sbin/nologin\nnm-openvpn:x:118:120:NetworkManager OpenVPN,,,:/var/lib/openvpn/chroot:/usr/sbin/nologin\nnm-openconnect:x:119:121:NetworkManager OpenConnect plugin,,,:/var/lib/NetworkManager:/usr/sbin/nologin\npulse:x:120:122:PulseAudio daemon,,,:/var/run/pulse:/usr/sbin/nologin\nbeef-xss:x:121:124::/var/lib/beef-xss:/usr/sbin/nologin\nlightdm:x:122:125:Light Display Manager:/var/lib/lightdm:/bin/false\ndo-agent:x:998:998::/home/do-agent:/bin/false\nuser6:x:1000:1000:,,,:/home/user6:/bin/bash\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/01.%20Filtering%20content/#sort","title":"Sort","text":"<p>Depending on which results and files are dealt with, they are rarely sorted. Often it is necessary to sort the desired results alphabetically or numerically to get a better overview. For this, we can use a tool called sort.</p> <pre><code>browntofu@htb[/htb]$ cat /etc/passwd | sort\n\n_apt:x:104:65534::/nonexistent:/usr/sbin/nologin\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\ncry0l1t3:x:1001:1001::/home/cry0l1t3:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\ndnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin\ndovecot:x:114:117:Dovecot mail server,,,:/usr/lib/dovecot:/usr/sbin/nologin\ndovenull:x:115:118:Dovecot login user,,,:/nonexistent:/usr/sbin/nologin\nftp:x:113:65534::/srv/ftp:/usr/sbin/nologin\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\nhtb-student:x:1002:1002::/home/htb-student:/bin/bash\n&lt;SNIP&gt;\n</code></pre> <p>As we can see now, the output no longer starts with root but is now sorted alphabetically. Grep</p> <p>More often, we will only search for specific results that contain patterns we have defined. One of the most used tools for this is grep, which offers many different features. Accordingly, we can search for users who have the default shell \"/bin/bash\" set as an example.</p> <pre><code>browntofu@htb[/htb]$ cat /etc/passwd | grep \"/bin/bash\"\n\nroot:x:0:0:root:/root:/bin/bash\nmrb3n:x:1000:1000:mrb3n:/home/mrb3n:/bin/bash\ncry0l1t3:x:1001:1001::/home/cry0l1t3:/bin/bash\nhtb-student:x:1002:1002::/home/htb-student:/bin/bash\n\nAnother possibility is to exclude specific results. For this, the option \"-v\" is used with grep. In the next example, we exclude all users who have disabled the standard shell with the name \"/bin/false\" or \"/usr/bin/nologin\".\n\nbrowntofu@htb[/htb]$ cat /etc/passwd | grep -v \"false\\|nologin\"\n\nroot:x:0:0:root:/root:/bin/bash\nsync:x:4:65534:sync:/bin:/bin/sync\npostgres:x:111:117:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bash\nuser6:x:1000:1000:,,,:/home/user6:/bin/bash\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/01.%20Filtering%20content/#cut","title":"Cut","text":"<p>Specific results with different characters may be separated as delimiters. Here it is handy to know how to remove specific delimiters and show the words on a line in a specified position. One of the tools that can be used for this is cut. Therefore we use the option \"-d\" and set the delimiter to the colon character (:) and define with the option \"-f\" the position in the line we want to output.</p> <pre><code>browntofu@htb[/htb]$ cat /etc/passwd | grep -v \"false\\|nologin\" | cut -d\":\" -f1\n\nroot\nsync\nmrb3n\ncry0l1t3\nhtb-student\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/01.%20Filtering%20content/#tr","title":"Tr","text":"<p>Another possibility to replace certain characters from a line with characters defined by us is the tool tr. As the first option, we define which character we want to replace, and as a second option, we define the character we want to replace it with. In the next example, we replace the colon character with space.</p> <pre><code>browntofu@htb[/htb]$ cat /etc/passwd | grep -v \"false\\|nologin\" | tr \":\" \" \"\n\nroot x 0 0 root /root /bin/bash\nsync x 4 65534 sync /bin /bin/sync\nmrb3n x 1000 1000 mrb3n /home/mrb3n /bin/bash\ncry0l1t3 x 1001 1001  /home/cry0l1t3 /bin/bash\nhtb-student x 1002 1002  /home/htb-student /bin/bash\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/01.%20Filtering%20content/#column","title":"Column","text":"<p>Since such results can often have an unclear representation, the tool column is well suited to display such results in tabular form using the \"-t.\"</p> <pre><code>browntofu@htb[/htb]$ cat /etc/passwd | grep -v \"false\\|nologin\" | tr \":\" \" \" | column -t\n\nroot         x  0     0      root               /root        /bin/bash\nsync         x  4     65534  sync               /bin         /bin/sync\nmrb3n        x  1000  1000   mrb3n              /home/mrb3n  /bin/bash\ncry0l1t3     x  1001  1001   /home/cry0l1t3     /bin/bash\nhtb-student  x  1002  1002   /home/htb-student  /bin/bash\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/01.%20Filtering%20content/#awk","title":"Awk","text":"<p>As we may have noticed, the user \"postgres\" has one row too many. To keep it as simple as possible to sort out such results, the (g)awk programming is beneficial, which allows us to display the first (\\(1) and last (\\)NF) result of the line.</p> <pre><code>browntofu@htb[/htb]$ cat /etc/passwd | grep -v \"false\\|nologin\" | tr \":\" \" \" | awk '{print $1, $NF}'\n\nroot /bin/bash\nsync /bin/sync\nmrb3n /bin/bash\ncry0l1t3 /bin/bash\nhtb-student /bin/bash\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/01.%20Filtering%20content/#sed","title":"Sed","text":"<p>There will come moments when we want to change specific names in the whole file or standard input. One of the tools we can use for this is the stream editor called sed. One of the most common uses of this is substituting text. Here, sed looks for patterns we have defined in the form of regular expressions (regex) and replaces them with another pattern that we have also defined. Let us stick to the last results and say we want to replace the word \"bin\" with \"HTB.\"</p> <p>The \"s\" flag at the beginning stands for the substitute command. Then we specify the pattern we want to replace. After the slash (/), we enter the pattern we want to use as a replacement in the third position. Finally, we use the \"g\" flag, which stands for replacing all matches.</p> <pre><code>browntofu@htb[/htb]$ cat /etc/passwd | grep -v \"false\\|nologin\" | tr \":\" \" \" | awk '{print $1, $NF}' | sed 's/bin/HTB/g'\n\nroot /HTB/bash\nsync /HTB/sync\nmrb3n /HTB/bash\ncry0l1t3 /HTB/bash\nhtb-student /HTB/bash\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/01.%20Filtering%20content/#wc","title":"Wc","text":"<p>Last but not least, it will often be useful to know how many successful matches we have. To avoid counting the lines or characters manually, we can use the tool wc. With the \"-l\" option, we specify that only the lines are counted.</p> <pre><code>browntofu@htb[/htb]$ cat /etc/passwd | grep -v \"false\\|nologin\" | tr \":\" \" \" | awk '{print $1, $NF}' | wc -l\n\n5\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/01.%20Filtering%20content/#exercise","title":"Exercise","text":"<p>Untuk mengeerjakan tugas ini buka module Linux Fundamentals sesction FIlter Content. Spawn target system lalu gunakan openvopn terhadap file openvpn yang didownload. <pre><code>$ sudo openvpn academy-regular.ovpn #(1)!\n</code></pre></p> <ol> <li>Pastikan paka sudoers</li> </ol> <p>Jika sudah ada kata Initialization Sequence Completed diakhir ouput. Buka terminal baru dan ping alamat IP target system yang sudah di spawn. Jika sudah konek, maka masuk kedalam target system menggunakan SSH jika tersedia.</p> <pre><code>ssh username@ip_target\n# Selanjutnya masukan password\n\n# Haisl jika berhasil masuk kedalam ssh\nLast login: Wed Sep 23 22:09:41 2020 from 10.10.14.6\nhtb-student@nixfund:~$ \n</code></pre> Practice 1 <p>How many services are listening on the target system on all interfaces? (Not on localhost and IPv4 only)</p> Answer <p><code>7</code></p> POC <p>Untuk melihat serice yang running gunakan perintah <code>netstat</code> <pre><code>netstat -tulpn | grep LISTEN | grep -v 127 | grep -v tcp6 | wc -l\n</code></pre></p> Practice 2 <p>Determine what user the ProFTPd server is running under. Submit the username as the answer. </p> Answer <p><code>7</code></p> Practice 3 <p>Use cURL from your Pwnbox (not the target machine) to obtain the source code of the \"https://www.inlanefreight.com\" website and filter all unique paths of that domain. Submit the number of these paths as the answer. </p> Answer <p><code>34</code></p> POC <pre><code>curl https://www.inlanefreight.com/ | grep -Po \"https://www.inlanefreight.com/[^'\\\"]*\" | sort -u | wc -l\n</code></pre> <ol> <li> <p><code>curl</code> adalah perintah untuk mengirim request ke alamat URL yang diberikan. </p> </li> <li> <p>hasil dari CUrl di expand kedalam perintah <code>grep</code> menggunakan flag <code>-P</code> dan <code>-o</code> untuk mencari pola regex _\"https://www.inlanefreight.com/[^'\\\"]\"_. <code>-P</code> artinya menggunakan perl regex* dan -o hanya STDOUT matching value.</p> </li> <li> <p>Hasil tersebut di sort menggunakan dengan flag <code>-u</code> untuk mengembalikan nilai unik. Lalu dieskalasi lagi kepada perintah <code>wc</code> dengan flag <code>-l</code> mengeluar jumlah baris.</p> </li> </ol>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/02.%20Regular%20expression/","title":"Regular Expression","text":"<p>Regex (Regular Expression) adalah sebuah seni ekspreis yang digunakan untuk mencari pola pada sebuah text atau file. regex dapat digunakan untuk mencari, mereplace, validasi input, perform search dan menganlisai data dan lainnya. Regex tersedia oleh banyak bahasa pemprogramman dan digunakan untuk berbagai macam hal.</p> <p>Regex dapat terdiri dari kumpulan karakter dan simbol yang melakukan pencarian pola. Sebagai tambahan, regex dapat dibuat dengan pola yang disebut dengan metacharacters. Metacharacters adalah simbole mendefinisikan pola pencarian. Kita dapat menggunakan command seperti <code>grep</code> atau <code>sed</code></p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/02.%20Regular%20expression/#grouping","title":"Grouping","text":"<p>Kita dapat mengelompokan pola pencarian yang diingikan. Dasarnya, regex mengikuti tiga kosep yang berbeda, yang mana dibedakan dengan tiga bracket yang berbeda.</p> Operator Description <code>(a)</code> Round bracket digunakan untuk mengelompokan bagian dari regex. Didalam bracket ini anda dapat mendefinisikan pola lanjutan yang akan diproses secara bersamaan <code>[a-z]</code> Square bracket digunakan untuk mendifinisikan kelas-kelas dari karakter-karakter. Didalamnya anda dapat menspesifikasikan list dari karakter yang akan dicari. <code>{1,10}</code> Curly brakcet digunakan untuk menentukan kuantitas <code>|</code> OR operator mengeluarkan hasil jika satu dari dua ekspresi cocok <code>.*</code> AND operator,menampilkan nilai jika kedua ekspresi cocok <p>OR operator <pre><code>maruffarras@BrownTofu:~$ grep -E \"(my|false)\" /etc/passwd\ntss:x:106:112:TPM software stack,,,:/var/lib/tpm:/bin/false\nwhoopsie:x:116:123::/nonexistent:/bin/false\nspeech-dispatcher:x:118:29:Speech Dispatcher,,,:/run/speech-dispatcher:/bin/false\ngnome-initial-setup:x:124:65534::/run/gnome-initial-setup/:/bin/false\nhplip:x:125:7:HPLIP system user,,,:/run/hplip:/bin/false\ngdm:x:126:132:Gnome Display Manager:/var/lib/gdm3:/bin/false\ndebian-tor:x:128:137::/var/lib/tor:/bin/false\nmysql:x:129:138:MySQL Server,,,:/nonexistent:/bin/false\n</code></pre></p> <p>AND operator <pre><code>maruffarras@BrownTofu:~$ grep -E \"(my.*Ser)\" /etc/passwd\nmysql:x:129:138:MySQL Server,,,:/nonexistent:/bin/false\n</code></pre></p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/03.%20Permission%20management/","title":"Permission Management","text":"<p>pada Linux, permissions atau ijin diberikan kepada users dan groups. Setiap user dapat menjadi anggota dari group yang berbeda-beda dan keanggotaan didalam group-group tersebut memberikan user spesifikasi, ijin tambahan (permissions). Setipa file dan folder milik (dapat diakses) oleh user dan group tertentu.Sehingga, permission untuk user dan group yang terdefinisi pada sebuah file juga menjelaskan kepemilikan pemilikinya. Ketika user membuat sebuah file atau folder baru, mereka akan dimiliki oleh group yang user tersebut ada didalammnya dan user itu sendiri.</p> <p>Ketika user ingin mekases konten dari sebuah direktori pada linux, mereka harus pertama kali menuju ke direktori tersebut yang mana artinya haru menavaigasi ke direktori konten tersebut berada. Hal itu membutuhkan user untuk mengeksekusi permission pada direktori tersebut. Tanpa permission, user tidak dapat mengakses konten dan malah akan ditampilkan pesan error <code>permission Denied</code>.</p> <pre><code>cry0l1t3@htb[/htb]$ ls -l\n\ndrw-rw-r-- 3 cry0l1t3 cry0l1t3   4096 Jan 12 12:30 scripts\n\n\ncry0l1t3@htb[/htb]$ ls -al mydirectory/\n\nls: cannot access 'mydirectory/script.sh': Permission denied\nls: cannot access 'mydirectory/..': Permission denied\nls: cannot access 'mydirectory/subdirectory': Permission denied\nls: cannot access 'mydirectory/.': Permission denied\ntotal 0\nd????????? ? ? ? ?            ? .\nd????????? ? ? ? ?            ? ..\n-????????? ? ? ? ?            ? script.sh\nd????????? ? ? ? ?            ? subdirectory\n</code></pre> <p>Sangat pentin untuk dicatat permission dibuhtuhkan untuk melintasi sebuah direktori, tidak pendulu tingkat akses pada user. Dan, permission pada sebauh direktori tidak dapat membuat user memiliki ijin untuk mengeksekusi atau memodifikasi file atau kontent apapun yang ada dalam direktori tersebut, hanya dapat melintas dan mengakses konten pada direktori tersebut.</p> <p>Untuk mengeksekusi file pada direktori tersebut, user harus memiliki permission pada file terkaint. Sedangkan untuk memodifikasi konten-konten pada direktori tersebut (seperti, create, delete atau me-rename file dan sub direktori didalamnya) user membutuhkan write permission pada direktori tersebut.</p> <p>Seluruh permission system pada linux berdasarkanpada ocatal number system dan ada tiga tipe permission pada sebuah fileatau diretori;</p> <ul> <li><code>r</code> - Read</li> <li><code>w</code> - Write</li> <li><code>x</code> - Execute</li> </ul> <p>Permission dapat diberikan pada owner, group dan other (pengguna lainya).</p> <pre><code>cry0l1t3@htb[/htb]$ ls -l /etc/passwd\n\n- rwx rw- r--   1 root root 1641 May  4 23:42 /etc/passwd\n- --- --- ---   |  |    |    |   |__________|\n|  |   |   |    |  |    |    |        |_ Date\n|  |   |   |    |  |    |    |__________ File Size\n|  |   |   |    |  |    |_______________ Group\n|  |   |   |    |  |____________________ User\n|  |   |   |    |_______________________ Number of hard links\n|  |   |   |_ Permission of others (read)\n|  |   |_____ Permissions of the group (read, write)\n|  |_________ Permissions of the owner (read, write, execute)\n|____________ File type (- = File, d = Directory, l = Link, ... )\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/03.%20Permission%20management/#change-permissions","title":"Change Permissions","text":"<p>Kita dapat memodifikasi permission menggunakan perintah <code>chmod</code>, permission group references (<code>u</code> - owner, <code>g</code> - Group, <code>o</code> - Other, <code>a</code> - All users), dan <code>+</code> untuk menambah <code>-</code> menghapus permission. Dibawha ini saya membuat file dengan nama <code>shell.sh</code></p> <pre><code>maruffarras@BrownTofu:~/learn/learn-ubuntu$ ls -la\ntotal 8\ndrwxrwxr-x 2 maruffarras maruffarras 4096 Mar  7 10:57 .\ndrwxr-xr-x 8 maruffarras maruffarras 4096 Mar  7 10:56 ..\n--w--w---- 1 maruffarras maruffarras    0 Mar  7 10:57 shell.sh\n</code></pre> <p>Katakan kita ingin memberikan read permission untuk semua user.</p> <pre><code>maruffarras@BrownTofu:~/learn/learn-ubuntu$ chmod a+r shell.sh  &amp; ls -la\n[1] 11796\ntotal 8\ndrwxrwxr-x 2 maruffarras maruffarras 4096 Mar  7 10:57 .\ndrwxr-xr-x 8 maruffarras maruffarras 4096 Mar  7 10:56 ..\n-rw-rw-r-- 1 maruffarras maruffarras    0 Mar  7 10:57 shell.sh\n[1]+  Done                    chmod a+r shell.sh\n</code></pre> <p>Contoh lainnya kita ingin memberika execute permission terhadap owner</p> <pre><code>maruffarras@BrownTofu:~/learn/learn-ubuntu$ chmod u+x shell.sh &amp; ls -la \n[1] 11857\ntotal 8\ndrwxrwxr-x 2 maruffarras maruffarras 4096 Mar  7 10:57 .\ndrwxr-xr-x 8 maruffarras maruffarras 4096 Mar  7 10:56 ..\n-rwxrw-r-- 1 maruffarras maruffarras    0 Mar  7 10:57 shell.sh\n[1]+  Done                    chmod u+x shell.sh\n</code></pre> <p>Kita juga dapat menyetel permission menggunakan ocatal value assignment. Katakan kitaingin membuat group hanya bisa read dan execute sedangkan other user hanya bisa read. </p> <pre><code>maruffarras@BrownTofu:~/learn/learn-ubuntu$ chmod 751 shell.sh &amp; ls -la\n[1] 12208\ntotal 8\ndrwxrwxr-x 2 maruffarras maruffarras 4096 Mar  7 10:57 .\ndrwxr-xr-x 8 maruffarras maruffarras 4096 Mar  7 10:56 ..\n-rwxr-x--x 1 maruffarras maruffarras    0 Mar  7 10:57 shell.sh\n[1]+  Done                    chmod 751 shell.sh\n</code></pre> <p>Wow, bingung ? mari kita ulas bagaimana <code>751</code> dapat menyetel permission sesuai dengan permintaa diatas. Dibawah ini adalah penjelasannya</p> <pre><code>-----------------------------------------------------------|\n------------------------------- Owner  | Group   | Other   |\n-----------------------------------------------------------|\nPermission Representation:      r w x  |  r - x  |  r - -  | #(1)! |\n-----------------------------------------------------------|\nBinary Representation:          1 1 1  |  1 0 1  |  1 0 0  | #(2)!\n-----------------------------------------------------------|\nBinary Notation:                4 2 1  |  4 2 1  |  4 2 1  | #(3)!\n-----------------------------------------------------------|\nOctal Value:                      7    |    5    |    4    | #(4)!\n</code></pre> <ol> <li>Penentenua permission pada owner, group dan other</li> <li>Binary (biner), bilang biner 0 jika tidak diberikan akses, dan 1 diberikan akses</li> <li>Merubah bilangan biner kedalam integer</li> <li>Jumlahkan integer</li> </ol> <p>Untuk mengubah owner dan atau group yang terdaftar pada file atau direktori dapat menggunakan perintah <code>chown</code>. Syntax <code>&lt;user&gt;:&lt;group&gt; &lt;file/direktori&gt;</code></p> <p>Pada contoh dibawha ini, kepemiliki file shell.sh akan kita ganti menjadi user root dan group root.</p> <pre><code>maruffarras@BrownTofu:~/learn/learn-ubuntu$ sudo chown root:root shell.sh \n[sudo] password for maruffarras: \nmaruffarras@BrownTofu:~/learn/learn-ubuntu$ ls -la\ntotal 8\ndrwxrwxr-x 2 maruffarras maruffarras 4096 Mar  7 10:57 .\ndrwxr-xr-x 8 maruffarras maruffarras 4096 Mar  7 10:56 ..\n-rwxr-x--x 1 root        root           0 Mar  7 10:57 shell.sh\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/03.%20Permission%20management/#suid-guid","title":"SUID &amp; GUID","text":"<p>Besides assigning direct user and group permissions, we can also configure special permissions for files by setting the Set User ID (SUID) and Set Group ID (GUID) bits. These SUID/GUID bits allow, for example, users to run programs with the rights of another user. Administrators often use this to give their users special rights for certain applications or files. The letter \"s\" is used instead of an \"x\". When executing such a program, the SUID/GUID of the file owner is used.</p> <p>It is often the case that administrators are not familiar with the applications but still assign the SUID/GUID bits, which leads to a high-security risk. Such programs may contain functions that allow the execution of a shell from the pager, such as the application \"journalctl.\"</p> <p>If the administrator sets the SUID bit to \"journalctl,\" any user with access to this application could execute a shell as root. More information about this and other such applications can be found at GTFObins.</p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/03.%20Permission%20management/#sticky-bit","title":"Sticky Bit","text":"<p>Sticky bits are a type of file permission in Linux that can be set on directories. This type of permission provides an extra layer of security when controlling the deletion and renaming of files within a directory. It is typically used on directories that are shared by multiple users to prevent one user from accidentally deleting or renaming files that are important to others.</p> <p>For example, in a shared home directory, where multiple users have access to the same directory, a system administrator can set the sticky bit on the directory to ensure that only the owner of the file, the owner of the directory, or the root user can delete or rename files within the directory. This means that other users cannot delete or rename files within the directory as they do not have the required permissions. This provides an added layer of security to protect important files, as only those with the necessary access can delete or rename files. Setting the sticky bit on a directory ensures that only the owner, the directory owner, or the root user can change the files within the directory.</p> <p>When a sticky bit is set on a directory, it is represented by the letter \u201ct\" in the execute permission of the directory's permissions. For example, if a directory has permissions \u201crwxrwxrwt\", it means that the sticky bit is set, giving the extra level of security so that no one other than the owner or root user can delete or rename the files or folders in the directory. Syntax - chown</p> <p>cry0l1t3@htb[/htb]$ ls -l</p> <p>drw-rw-r-t 3 cry0l1t3 cry0l1t3   4096 Jan 12 12:30 scripts drw-rw-r-T 3 cry0l1t3 cry0l1t3   4096 Jan 12 12:32 reports</p> <p>In this example, we see that both directories have the sticky bit set. However, the reports folder has an uppercase T, and the scripts folder has a lowercase t.</p> <p>If the sticky bit is capitalized (T), then this means that all other users do not have execute (x) permissions and, therefore, cannot see the contents of the folder nor run any programs from it. The lowercase sticky bit (t) is the sticky bit where the execute (x) permissions have been set.</p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/04.%20User%20management/","title":"User Management","text":"<p>User management adalah bagian yang penting dalam Linux administration. Terkadang kita butuh untuk membuat user baru atau menambah user pada group tertentu. Kemungkinan lainya adalah untuk mengeksekusi sebuah perintah dari user lain, karena tidak jarang user hanya memliki masuk kedalam satu spesific group yang memliki permission untuk melihat atau menge-edit spesific file atau direktori. Dibawah ini adalah contoh mengeksekusi perintah dari user lain.</p> <pre><code>maruffarras@BrownTofu:~/learn/learn-ubuntu$ cat /etc/shadow\ncat: /etc/shadow: Permission denied\n</code></pre> <p>Execution as root <pre><code>browntofu@htb[/htb]$ sudo cat /etc/shadow\n\nroot:&lt;SNIP&gt;:18395:0:99999:7:::\ndaemon:*:17737:0:99999:7:::\nbin:*:17737:0:99999:7:::\n&lt;SNIP&gt;\n\n# Equal to\nmaruffarras@BrownTofu:~/learn/learn-ubuntu$ sudo cat /etc/shadow\n</code></pre></p> <p>Dibawah ini adalah daftar command yang berkaitan dengan user management.</p> Command Description sudo Execute command as a different user. su The su utility requests appropriate user credentials via PAM and switches to that user ID (the default user is the superuser). A shell is then executed. useradd Creates a new user or update default new user information. userdel Deletes a user account and related files. usermod Modifies a user account. addgroup Adds a group to the system. delgroup Removes a group from the system. passwd Changes user password."},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/05.Service%20and%20process%20management/","title":"Service and Process Management","text":"<p>In general, there are two types of services: internal, the relevant services that are required at system startup, which for example, perform hardware-related tasks, and services that are installed by the user, which usually include all server services. Such services run in the background without any user interaction. These are also called daemons and are identified by the letter 'd' at the end of the program name, for example, sshd or systemd.</p> <p>Most Linux distributions have now switched to systemd. This daemon is an Init process started first and thus has the process ID (PID) 1. This daemon monitors and takes care of the orderly starting and stopping of other services. All processes have an assigned PID that can be viewed under /proc/ with the corresponding number. Such a process can have a parent process ID (PPID), and if so, it is known as the child process.</p> <p>Besides systemctl we can also use update-rc.d to manage SysV init script links. Let us have a look at some examples. We will use the OpenSSH server in these examples. If we do not have this installed, please install it before proceeding to this section. Systemctl</p> <p>After installing OpenSSH on our VM, we can start the service with the following command.</p> <p><pre><code>browntofu@htb[/htb]$ systemctl start ssh\n</code></pre> After we have started the service, we can now check if it runs without errors. <pre><code>browntofu@htb[/htb]$ systemctl status ssh\n\n\u25cf ssh.service - OpenBSD Secure Shell server\n   Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled)\n   Active: active (running) since Thu 2020-05-14 15:08:23 CEST; 24h ago\n   Main PID: 846 (sshd)\n   Tasks: 1 (limit: 4681)\n   CGroup: /system.slice/ssh.service\n           \u2514\u2500846 /usr/sbin/sshd -D\n\nMai 14 15:08:22 inlane systemd[1]: Starting OpenBSD Secure Shell server...\nMai 14 15:08:23 inlane sshd[846]: Server listening on 0.0.0.0 port 22.\nMai 14 15:08:23 inlane sshd[846]: Server listening on :: port 22.\nMai 14 15:08:23 inlane systemd[1]: Started OpenBSD Secure Shell server.\nMai 14 15:08:30 inlane systemd[1]: Reloading OpenBSD Secure Shell server.\nMai 14 15:08:31 inlane sshd[846]: Received SIGHUP; restarting.\nMai 14 15:08:31 inlane sshd[846]: Server listening on 0.0.0.0 port 22.\nMai 14 15:08:31 inlane sshd[846]: Server listening on :: port 22.\n</code></pre></p> <p>To add OpenSSH to the SysV script to tell the system to run this service after startup, we can link it with the following command:</p> <pre><code>browntofu@htb[/htb]$ systemctl enable ssh\n\nSynchronizing state of ssh.service with SysV service script with /lib/systemd/systemd-sysv-install.\nExecuting: /lib/systemd/systemd-sysv-install enable ssh\n</code></pre> <p>Once we reboot the system, the OpenSSH server will automatically run. We can check this with a tool called ps.</p> <pre><code>browntofu@htb[/htb]$ ps -aux | grep ssh\n\nroot       846  0.0  0.1  72300  5660 ?        Ss   Mai14   0:00 /usr/sbin/sshd -D\n</code></pre> <p>We can also use systemctl to list all services.</p> <pre><code>browntofu@htb[/htb]$ systemctl list-units --type=service\n\nUNIT                                                       LOAD   ACTIVE SUB     DESCRIPTION              \naccounts-daemon.service                                    loaded active running Accounts Service         \nacpid.service                                              loaded active running ACPI event daemon        \napache2.service                                            loaded active running The Apache HTTP Server   \napparmor.service                                           loaded active exited  AppArmor initialization  \napport.service                                             loaded active exited  LSB: automatic crash repor\navahi-daemon.service                                       loaded active running Avahi mDNS/DNS-SD Stack  \nbolt.service                                               loaded active running Thunderbolt system service\n</code></pre> <p>It is quite possible that the services do not start due to an error. To see the problem, we can use the tool journalctl to view the logs.</p> <pre><code>browntofu@htb[/htb]$ journalctl -u ssh.service --no-pager\n\n-- Logs begin at Wed 2020-05-13 17:30:52 CEST, end at Fri 2020-05-15 16:00:14 CEST. --\nMai 13 20:38:44 inlane systemd[1]: Starting OpenBSD Secure Shell server...\nMai 13 20:38:44 inlane sshd[2722]: Server listening on 0.0.0.0 port 22.\nMai 13 20:38:44 inlane sshd[2722]: Server listening on :: port 22.\nMai 13 20:38:44 inlane systemd[1]: Started OpenBSD Secure Shell server.\nMai 13 20:39:06 inlane sshd[3939]: Connection closed by 10.22.2.1 port 36444 [preauth]\nMai 13 20:39:27 inlane sshd[3942]: Accepted password for master from 10.22.2.1 port 36452 ssh2\nMai 13 20:39:27 inlane sshd[3942]: pam_unix(sshd:session): session opened for user master by (uid=0)\nMai 13 20:39:28 inlane sshd[3942]: pam_unix(sshd:session): session closed for user master\nMai 14 02:04:49 inlane sshd[2722]: Received signal 15; terminating.\nMai 14 02:04:49 inlane systemd[1]: Stopping OpenBSD Secure Shell server...\nMai 14 02:04:49 inlane systemd[1]: Stopped OpenBSD Secure Shell server.\n-- Reboot --\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/05.Service%20and%20process%20management/#kill-a-process","title":"Kill a Process","text":"<p>A process can be in the following states:</p> <pre><code>Running\nWaiting (waiting for an event or system resource)\nStopped\nZombie (stopped but still has an entry in the process table).\n</code></pre> <p>Processes can be controlled using kill, pkill, pgrep, and killall. To interact with a process, we must send a signal to it. We can view all signals with the following command:</p> <pre><code>browntofu@htb[/htb]$ kill -l\n\n 1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL       5) SIGTRAP\n 6) SIGABRT      7) SIGBUS       8) SIGFPE       9) SIGKILL     10) SIGUSR1\n11) SIGSEGV     12) SIGUSR2     13) SIGPIPE     14) SIGALRM     15) SIGTERM\n16) SIGSTKFLT   17) SIGCHLD     18) SIGCONT     19) SIGSTOP     20) SIGTSTP\n21) SIGTTIN     22) SIGTTOU     23) SIGURG      24) SIGXCPU     25) SIGXFSZ\n26) SIGVTALRM   27) SIGPROF     28) SIGWINCH    29) SIGIO       30) SIGPWR\n31) SIGSYS      34) SIGRTMIN    35) SIGRTMIN+1  36) SIGRTMIN+2  37) SIGRTMIN+3\n38) SIGRTMIN+4  39) SIGRTMIN+5  40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8\n43) SIGRTMIN+9  44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12 47) SIGRTMIN+13\n48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14 51) SIGRTMAX-13 52) SIGRTMAX-12\n53) SIGRTMAX-11 54) SIGRTMAX-10 55) SIGRTMAX-9  56) SIGRTMAX-8  57) SIGRTMAX-7\n58) SIGRTMAX-6  59) SIGRTMAX-5  60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2\n63) SIGRTMAX-1  64) SIGRTMAX\n</code></pre> <p>The most commonly used are: Signal  Description 1   SIGHUP - This is sent to a process when the terminal that controls it is closed. 2   SIGINT - Sent when a user presses [Ctrl] + C in the controlling terminal to interrupt a process. 3   SIGQUIT - Sent when a user presses [Ctrl] + D to quit. 9   SIGKILL - Immediately kill a process with no clean-up operations. 15  SIGTERM - Program termination. 19  SIGSTOP - Stop the program. It cannot be handled anymore. 20  SIGTSTP - Sent when a user presses [Ctrl] + Z to request for a service to suspend. The user can handle it afterward.</p> <p>For example, if a program were to freeze, we could force to kill it with the following command:</p> <pre><code>browntofu@htb[/htb]$ kill 9 &lt;PID&gt; \n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/05.Service%20and%20process%20management/#background-a-process","title":"Background a Process","text":"<p>Sometimes it will be necessary to put the scan or process we just started in the background to continue using the current session to interact with the system or start other processes. As we have already seen, we can do this with the shortcut [Ctrl + Z]. As mentioned above, we send the SIGTSTP signal to the kernel, which suspends the process.</p> <pre><code>browntofu@htb[/htb]$ ping -c 10 www.hackthebox.eu\n\nbrowntofu@htb[/htb]$ vim tmpfile\n[Ctrl + Z]\n[2]+  Stopped                 vim tmpfile\n</code></pre> <p>Now all background processes can be displayed with the following command.</p> <pre><code>browntofu@htb[/htb]$ jobs\n\n[1]+  Stopped                 ping -c 10 www.hackthebox.eu\n[2]+  Stopped                 vim tmpfile\n</code></pre> <p>The [Ctrl] + Z shortcut suspends the processes, and they will not be executed further. To keep it running in the background, we have to enter the command bg to put the process in the background.</p> <pre><code>browntofu@htb[/htb]$ bg\n\nbrowntofu@htb[/htb]$ \n--- www.hackthebox.eu ping statistics ---\n10 packets transmitted, 0 received, 100% packet loss, time 113482ms\n\n[ENTER]\n[1]+  Exit 1                  ping -c 10 www.hackthebox.eu\n</code></pre> <p>Another option is to automatically set the process with an AND sign (&amp;) at the end of the command.</p> <pre><code>browntofu@htb[/htb]$ ping -c 10 www.hackthebox.eu &amp;\n\n[1] 10825\nPING www.hackthebox.eu (172.67.1.1) 56(84) bytes of data.\n</code></pre> <p>Once the process finishes, we will see the results.</p> <pre><code>browntofu@htb[/htb]$ \n\n--- www.hackthebox.eu ping statistics ---\n10 packets transmitted, 0 received, 100% packet loss, time 9210ms\n\n[ENTER]\n[1]+  Exit 1                  ping -c 10 www.hackthebox.eu\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/05.Service%20and%20process%20management/#foreground-a-process","title":"Foreground a Process","text":"<p>After that, we can use the jobs command to list all background processes. Backgrounded processes do not require user interaction, and we can use the same shell session without waiting until the process finishes first. Once the scan or process finishes its work, we will get notified by the terminal that the process is finished.</p> <pre><code>browntofu@htb[/htb]$ jobs\n\n[1]+  Running                 ping -c 10 www.hackthebox.eu &amp;\n</code></pre> <p>If we want to get the background process into the foreground and interact with it again, we can use the fg  command. <pre><code>browntofu@htb[/htb]$ fg 1\nping -c 10 www.hackthebox.eu\n\n--- www.hackthebox.eu ping statistics ---\n10 packets transmitted, 0 received, 100% packet loss, time 9206ms\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/05.Service%20and%20process%20management/#execute-multiple-commands","title":"Execute Multiple Commands","text":"<p>There are three possibilities to run several commands, one after the other. These are separated by:</p> <pre><code>Semicolon (;)\nDouble ampersand characters (&amp;&amp;)\nPipes (|)\n</code></pre> <p>The difference between them lies in the previous processes' treatment and depends on whether the previous process was completed successfully or with errors. The semicolon (;) is a command separator and executes the commands by ignoring previous commands' results and errors.</p> <pre><code>browntofu@htb[/htb]$ echo '1'; echo '2'; echo '3'\n\n1\n2\n3\n</code></pre> <p>For example, if we execute the same command but replace it in second place, the command ls with a file that does not exist, we get an error, and the third command will be executed nevertheless.</p> <pre><code>browntofu@htb[/htb]$ echo '1'; ls MISSING_FILE; echo '3'\n\n1\nls: cannot access 'MISSING_FILE': No such file or directory\n3\n</code></pre> <p>However, it looks different if we use the double AND characters (&amp;&amp;) to run the commands one after the other. If there is an error in one of the commands, the following ones will not be executed anymore, and the whole process will be stopped.</p> <pre><code>browntofu@htb[/htb]$ echo '1' &amp;&amp; ls MISSING_FILE &amp;&amp; echo '3'\n\n1\nls: cannot access 'MISSING_FILE': No such file or directory\n</code></pre> <p>Pipes (|) depend not only on the correct and error-free operation of the previous processes but also on the previous processes' results.</p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/05.Service%20and%20process%20management/#exercise","title":"Exercise","text":"<p>Untuk mengeerjakan tugas ini buka module Linux Fundamentals sesction FIlter Content. Spawn target system lalu gunakan openvopn terhadap file openvpn yang didownload. <pre><code>$ sudo openvpn academy-regular.ovpn #(1)!\n</code></pre></p> <ol> <li>Pastikan paka sudoers</li> </ol> <p>Jika sudah ada kata Initialization Sequence Completed diakhir ouput. Buka terminal baru dan ping alamat IP target system yang sudah di spawn. Jika sudah konek, maka masuk kedalam target system menggunakan SSH jika tersedia.</p> <pre><code>ssh username@ip_target\n# Selanjutnya masukan password\n\n# Haisl jika berhasil masuk kedalam ssh\nLast login: Wed Sep 23 22:09:41 2020 from 10.10.14.6\nhtb-student@nixfund:~$ \n</code></pre> Practice 1 <p>Use the \"systemctl\" command to list all units of services and submit the unit name with the description \"Load AppArmor profiles managed internally by snapd\" as the answer. </p> Answer <pre><code>snapd.apparmor.service\n</code></pre> POC <pre><code>systemctl list-units --type=service | grep AppArmor\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/06.%20Task%20%20scheduling/","title":"Task Scheduling","text":"<p>Task scheduling adalah sebuah fitur pada sistem linux yang dapat digunakan user membuat sebuah agenda atau mengotomasikan tugas-tugas dalam waktu atau jeda tertentu tanpa harus menjalankan secara manual. Fitur tersebut dapat digunakan pada distro seperti ubuntu, redhat dan solaris. Pada umumnya fitur tersebut digunakan untuk mengupdate software secara otomatis, menjalankan script tertentu, membersihkan database dan otomasi backup. Fitur ini juga dapat digunakan user untuk membuat skedul umum dan tugas berulang. Selain itu, alert juga dapat pasang dan ditampilkan ketika beberapa kejadian terjadi atau untuk mengkontak administrator atau user.</p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/06.%20Task%20%20scheduling/#systemd","title":"Systemd","text":"<p>Systemd adalah sebuah service yang digunakan didalam sistem linux seperti ubuntu, redhat dan solaris untuk memulai proses atau script pada waktu yang ditentukan. Dengat systemd, kita dapat memasang proses atau script untuk berjalan pada waktu yang dispesifikasikan atau dalam interval waktur tertentu dan juga dapat menspesifikasikan kerjadian tertentu dan metrigger (memicu) task agar berjalan. untuk membuat itu ada beberapa langkah yang harus dilakukan sebelum script atau proses secara otomatis dijalankan oleh system. </p> <ul> <li>Membuat timer</li> <li>Membuat service</li> <li>Mengaktifkan timer</li> </ul> <p>Info</p> <p><code>systemctl</code> adalah command yang akan sering dipakai untuk melihat service.</p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/06.%20Task%20%20scheduling/#create-a-timer-and-service","title":"Create a Timer and Service","text":"<p>Untuk membuat sebuah service yang berjalan dalam waktu interval atau waktu tertentu kita harus membuat file script sh, service dan timer. Konsepnya, timer akan dijalankan berdasarkan waktu atau interval yang ditetapkan pada konfigurasi didalam file tersebut lalu mentriger file service tersebut agar berjalan. Direktori yang digunakan untuk mengempatkan service dan timer <code>/etc/systemd/system/</code>.</p> <p>Mari sekarang membuat sebuah service</p> Service<pre><code>[Unit]\nDescription=Ini Timer Gua Untuk Latihan (Service)\n\n[Service]\nUser=maruffarras\nExecStart=/home/maruffarras/learn/learn-ubuntu/update_date.sh\n</code></pre> <p>Keyname <code>user</code> menentukan username  sedangkan <code>ExecStart</code> adalah eksekusi ketika service ini dijalankan. Selanjutnya kita buat sebuah timer yang nantinya digunakan untuk mentriger service diatas.</p> Membuat timer<pre><code>[Unit]\nDescription=Ini Timer Gua Untuk latihan\n\n[Timer]\nOnBootSec=1min\nOnUnitActiveSec=2\nAccuracySec=1us\nUnit=timergua.service\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p><code>OnBootSec</code> adalah waktu dimana timer ajak dijalankan saat sistem dinyalakan. <code>OnUnitActiveSec</code> adalah interval waktu timer dijalankan. <code>AccuracySec</code> adalah settingan untuk menambah presisi interval dalam satuan detik. Dan <code>Unit</code> adalah targer service yang nantikanya ditriger oleh timer. </p> <p>Pada Sesi Install, <code>WantedBy</code> It defines the services that should be started on a normal system startup.</p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/06.%20Task%20%20scheduling/#reload-systemd","title":"Reload Systemd","text":"<p>Setiap perubahan file service, timer atau yang lainnya pada alamat <code>/etc/systemd/system</code> harus menload ulang daemon seperti dibawah ini</p> <pre><code>maruffarras@BrownTofu:/etc/systemd/system$ sudo systemctl daemon-reload\n</code></pre> <p>Setelah diload pastika service (service dan timer pada kasus ini) telah terbentuk menggunakan kode syntax <code>systemctl status &lt;servie name&gt; &lt;another servie&gt;</code> <sup>1</sup></p> <pre><code>maruffarras@BrownTofu:/etc/systemd/system$ sudo systemctl status timergua.*\n\u25cb timergua.service - Ini Timer Gua Untuk Latihan (Service)\n     Loaded: loaded (/etc/systemd/system/timergua.service; enabled; vendor preset: enabled)\n     Active: inactive (dead) since Wed 2023-03-08 15:55:27 WIB; 17h ago\nTriggeredBy: \u25cb timergua.timer\n   Main PID: 83135 (code=exited, status=0/SUCCESS)\n        CPU: 3ms\n\n\u25cb timergua.timer - Ini Timer Gua Untuk latihan\n     Loaded: loaded (/etc/systemd/system/timergua.timer; enabled; vendor preset: enabled)\n     Active: inactive (dead) since Wed 2023-03-08 15:55:28 WIB; 17h ago\n    Trigger: n/a\n   Triggers: \u25cf timergua.service\n</code></pre> <p>Oke selanjutnya kita bisa memulai service tersebut.</p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/06.%20Task%20%20scheduling/#jalankan-service","title":"Jalankan service","text":"<p>Oke pada umumnya, katakan kita ingin menjalankan service mysql atau mssql atau apache, kita menggunakan syntax <code>systemctl start mysql apache2.service mysql.service</code> namun pada kasus ini kita ingin membuat task scheduler. Maka dari itu, alih alih menjalankan <code>*.service</code> kita akan menjalankan timer, dari timer akan mentriger service.</p> <pre><code>maruffarras@BrownTofu:/etc/systemd/system$ sudo systemctl start timergua.timer #(1)!\nmaruffarras@BrownTofu:/etc/systemd/system$ sudo systemctl start timergua.timer #(2)!\n</code></pre> <ol> <li>Untun menjalankan service atau timer manual</li> <li>Untuk menjalankan service atau timer otomatis setiap system dinyalakan.</li> </ol> <p>oke, sekarang mari kita lihat status dari task scheduler timergua.</p> <pre><code>maruffarras@BrownTofu:/etc/systemd/system$ sudo systemctl status timergua.*\n\u25cb timergua.service - Ini Timer Gua Untuk Latihan (Service)\n     Loaded: loaded (/etc/systemd/system/timergua.service; enabled; vendor preset: enabled)\n     Active: inactive (dead) since Thu 2023-03-09 10:06:47 WIB; 1s ago\nTriggeredBy: \u25cf timergua.timer\n    Process: 146362 ExecStart=/home/maruffarras/learn/learn-ubuntu/update_date.sh (code=exited, status=0/SUCCESS)\n   Main PID: 146362 (code=exited, status=0/SUCCESS)\n        CPU: 4ms\n\nMar 09 10:06:47 BrownTofu systemd[1]: Started Ini Timer Gua Untuk Latihan (Service).\nMar 09 10:06:47 BrownTofu update_date.sh[146362]: Sistem path nya /home/maruffarras/learn/learn-ubuntu\nMar 09 10:06:47 BrownTofu update_date.sh[146362]: Jalanin ini lah\nMar 09 10:06:47 BrownTofu systemd[1]: timergua.service: Deactivated successfully.\nMar 09 10:06:49 BrownTofu systemd[1]: Started Ini Timer Gua Untuk Latihan (Service).\nMar 09 10:06:49 BrownTofu update_date.sh[146366]: Sistem path nya /home/maruffarras/learn/learn-ubuntu\nMar 09 10:06:49 BrownTofu update_date.sh[146366]: Jalanin ini lah\nMar 09 10:06:49 BrownTofu systemd[1]: timergua.service: Deactivated successfully.\n\n\u25cf timergua.timer - Ini Timer Gua Untuk latihan\n     Loaded: loaded (/etc/systemd/system/timergua.timer; enabled; vendor preset: enabled)\n     Active: active (waiting) since Thu 2023-03-09 10:04:50 WIB; 1min 59s ago\n    Trigger: Thu 2023-03-09 10:06:51 WIB; 1s left\n   Triggers: \u25cf timergua.service\n\nMar 09 10:04:50 BrownTofu systemd[1]: Started Ini Timer Gua Untuk latihan.\n</code></pre> <p>Alhamdulillah service sudah berjalan.  Highlight diatas adalah log dari service dan timer.</p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/06.%20Task%20%20scheduling/#catatan-tambahan-systemctl","title":"Catatan tambahan systemctl","text":"<p>Dalam menjalankan membuat service, menajalankan, memberhentikan dan lainnya kita menggunakan perintah <code>systemctl</code>. Jadi apa sih itu systemctl ? berdasarkan manual page<sup>2</sup> ubuntu, <code>systemctl</code> adalah sebuah tool yang digunakan untuk mengintropeksi dan mengatur kondisi dari system dan service manager, disebut juga dengan systemd.</p> <p>Untuk melihat daftar semua unit files dari service yang terinstall pada sistem anda dapat menggunakan sntax <code>systemctl list-unit-files [PATTERN]</code>. Jika opsi pattern tidak digunakan akan mengeluarkan semua service yang terinstall dan jika diberikan akan mengeluarkan semua service yg cocok dengan pola tersebut.</p> <pre><code>maruffarras@BrownTofu:~$ sudo systemctl list-unit-files timergua*\nUNIT FILE        STATE   VENDOR PRESET\ntimergua.service enabled enabled      \ntimergua.timer   enabled enabled      \n</code></pre> <p>Jika anda ingin melihat system dan service manager yang hanya sedang berjalan (ada didalam memory) dapat menggunakan <code>systemctl list-units [PATTERN]</code> untuk melihat list timer units menggunakan syntax <code>systemctl list-timers [PATTERN]</code>.</p> <p>Log service menggunakan <code>journalctl</code></p> <p>gunakan fungsi <code>journallctl</code> untuk melihat live log dari service</p> <pre><code>journalctl -f -u &lt;nama_service&gt;\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/06.%20Task%20%20scheduling/#cron","title":"Cron","text":"<p>Cron adalah alatyang dapat digunakan didalam sistem linux untuk membuat sebuah skedul atau mengotomasi proses-proses. toll tersebut membuat  user dan administrato dapat meng-execute tugas-tugas pada waktu tertentun atau pada dalam interval waktu tertentu.</p> <p>Untuk memasang cron daemon, kita harus menyimpan tugas didalam sebuah file yang diesebu dengan crontab dan memberitahu daemon kapan untuk menjalankan tugastersebut. Selanjutnya kita dapat membat sebuah schedule dan mengotomasi tugas-tugas dengan mengkonfigurasi cron daemon. Struktur dari cron terdiri dari komponen berikut.</p> Time Frame Desription Minutes (0-59) Menspesifikasikan dalam menit berapa tugas harus dieksekusi Hours (0-23) menspesifikasikan dalam jam berapa tugas harus dieksekusi Days of month (1-31) Mensepsifikasikan hari berapa dalam satu bulan tugas harus dieksekusi Months (1-12) Menspesifikasikan bulan berapa tugas harus dieksekusi Days of the week (0-7) Menspesifikasikan hari keberapa dalam satu minggu tugas harus dieksekusi <p>Sebagai contoh, conrtab terlihat seperti dibawah ini</p> <pre><code># System Update\n* */6 * * /path/to/update_software.sh #(1)!\n\n# Execute scripts\n0 0 1 * * /path/to/scripts/run_scripts.sh  #(2)!\n\n# Cleanup DB\n0 0 * * 0 /path/to/scripts/clean_database.sh #(3)!\n\n# Backups\n0 0 * * 7 /path/to/scripts/backup.sh #(4)!\n</code></pre> <ol> <li>Akan dijalankan setiap enam jam.</li> <li>Akan dijalankan setiap hari pertama dalam satu bulan pada tengah malam.</li> <li>Akan dijalankan pada setiap hari senin tengah malam</li> <li>Akan dijalankan pada setiap hari ahad tengah malam</li> </ol> <p>Dengan crop memungkin anda untuk menerima notifikasi ketika sebuah tugas berhasil dieksekusi atau gagal. Dan kita juga dapat membuat sebuah logs untuk memonitor tugas-tugas yang dieksekusi.</p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/06.%20Task%20%20scheduling/#membuat-scheduler-dengan-crontab","title":"Membuat scheduler dengan crontab","text":"<p><code>Crontab</code> adalah sebuah program yang digunakan untuk memasang (install), melepas (uninstall) atau daftar tabel yang digunakan untuk menggerakan daemon di vixie cron. setiap user memiliki crontab file masing masing yang terletak di <code>/var/spool/cron/crontabs/&lt;user-name&gt;</code></p> <p>Perintah <code>crontab</code> memliki beberapa opsi.</p> opsi deskripsi <code>-l</code> Menampilkan current crontab dalam bentuk standard ouput, STNDOUT <code>-u</code> Digunakan unutk mensepesifikasikan user dalam membuat file crontab. Jika tidak menspesifikasin user maka akan membuat user current. <code>-r</code> Menghapus crontab dari current user <code>-e</code> Untuk mengedit current crontabe <code>-i</code> Mengeluarkan opsi make sure ketika menghapus current crontabe dengna opsi <code>-r</code> y/n <p>Berbicara mengenai lokasi crontabe file di <code>/var/spool/cron/crontabs/&lt;user-name&gt;</code>. Pengguna sangat tidak disarankan dan tidak iijinkan untuk meng-edit crontab file pada direktori tersebut untuk memastikan hanya user yang diijinkan oleh sistem untuk menambahkan tugas secara periodik pada crontab file dan menulis crontab yang sesuai dengan user (tidak mengubah crontab user lain). Dengan demikian memaksa direktorihanya dapat di tulis oleh crontab group.</p> <p>Info</p> <pre><code>maruffarras@BrownTofu:~/learn/learn-ubuntu$ sudo ls -la /var/spool/cron/crontabs/\ntotal 12\ndrwx-wx--T 2 root        crontab 4096 Mar  8 11:10 .\ndrwxr-xr-x 3 root        root    4096 Okt 13  2021 ..\n-rw------- 1 maruffarras crontab 1139 Mar  8 11:10 maruffarras\n</code></pre> <p>Crontabe file dimiliki oleh current user dan group crontab. Permission read dan write hanya dimiliki oleh owner <code>600</code>.</p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/06.%20Task%20%20scheduling/#mari-membuat-tugas-rutin-dengan-crontab","title":"Mari membuat tugas rutin dengan crontab","text":"<p>Jadi saya ingin membuat task sederhana yang mengupdate sebuah file <code>txt</code> setiap satu menit. Update file tersebut berisikan tanggal hasil dari command <code>date</code>. jadi ada dua langkah, pertama membuat sebuah file dengan ekstensi <code>sh</code> agar dapat dijalankan oleh cron daemon, dan kedua membuat scheduler dengan <code>crontab</code>.</p> ~/learn/learn-ubuntu/update_date.sh<pre><code>export PATHME=~/learn/learn-ubuntu\n\necho \"Sistem path nya $PATHME\"\n\nif ! [ -f $PATHME/date_list.txt ]; then\n    touch date_list.txt\n    echo \"# This is the first line\" &gt; $PATHME/date_list.txt\nelse\n    echo \"Jalanin ini lah\"\n    date &gt;&gt; $PATHME/date_list.txt\nfi\n\nunset PATHME\n</code></pre> <p>Selanjut mari kita membuat scheduler pada crontab file menggunakan perintah <code>crontab -e</code> <sup>3</sup>. Setelah menjalankan perintah tersebut pertama kali akan muncul STDOUT dan anda diperintahkan untuk memberikan STDIN terkait editor yang ingin dipakai untuk mengedit crontab file. Dibawah ini adalah interaktif shell untuk memilih editor.</p> <p><pre><code>Select an editor.  To change later, run 'select-editor'.\n  1. /bin/nano        &lt;---- easiest\n  2. /usr/bin/vim.basic\n  3. /usr/bin/vim.tiny\n  4. /bin/ed\n\nChoose 1-4 [1]: \n</code></pre> Selanjutnya mari buat scheduler agar script dijalankan </p> crontab file current user<pre><code>* * * * * . ~/learn/learn-ubuntu/update_date.sh\n</code></pre> <p>Selanjutnya save file tersebut maka script kita akan dijalankan setiap menit. Dibawha ini adalah isi dari file <code>date_list.txt</code> setelah beberapa menit cron daemon menjalankan script <code>update_date.sh</code></p> <pre><code># This is the first line\nRab 08 Mar 2023 11:04:01  WIB\nRab 08 Mar 2023 11:05:01  WIB\nRab 08 Mar 2023 11:06:01  WIB\n</code></pre> <p>Mengganti text-editor</p> <p>Awal menjalan crontab pertama kali akan muncul interaktif shell untuk memilih text editor. Jika anda ingin menggati pilihan anda gunakan perintah <code>text-editor</code>.</p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/06.%20Task%20%20scheduling/#systemd-and-cron","title":"Systemd  and Cron","text":"<p>Kedua fitur tersebut dapatdigunakan pada sistem linux untuk membuat sebuah skedul atau mengotomasi proses. Yang membedakan adalah cara mengkonfigurasinya. Systemd,anda harus membuat sebuah time dan script service yang memberitahu operating system kapan harus menjalankan tugas, dan disisi lain, cron,  anda harus membuat sebuah crontab yang memberi tahu cron daemon kapan harus menjalankan tugas.</p> <ol> <li> <p>Dapat melihat lebih dari satu service\u00a0\u21a9</p> </li> <li> <p>Anda dapat merujuk ke getting information about command \u21a9</p> </li> <li> <p>Disini tidak menggunakan opsi <code>-u</code>, dengan demikian akan menjadi current user.\u00a0\u21a9</p> </li> </ol>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/07.%20Network%20service/","title":"Network Service","text":"<p>Ketika kita menggunakan linux, kita juga akan sering berhubunga dengan network services. Memliki kompoten pada network service sangat peting. Dalam dunia yang saling terhubung, kita harus memliki pengetahuan dan mampu menghubungkan setiap komputer melalui jaringan, transfer file, menganalisa lalulintas jaringan, dan bagaimana mengkonfigurasi seperti service untuk mengidentifikasi potensi kerentanan pada saat melakukan pnetration testing. Pengetahuan tersebut juga dapat mendongkrak pengetahun tentang network security  sebagaimana yang telah kita pelajari sebelumnya dengan service, cara membuat dan mengkonfigurasinya, systemd </p> <p>Bayangkan kita sedang malkukan penetration testing pada sebuah Linux host dan kita menemukan celah kerentanan dimana user linux tersebut terhubung ke server lain menggunakan FTP server yang tidak di unecnrypted. Dengan demikian kita dapat mendeteksi kredensial dari user dalam bentuk text yang jelas(tidak di uncrypted) </p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/07.%20Network%20service/#ssh","title":"SSH","text":"<p>Secure Shell (SSH) adalah sebuah network protocol yang dapat melakukan transmisi data dan perintah (Command) dengan aman melalui network. Protokol ini banyak digunakan untuk me-remote sytem dengan aman dan mentransfer file dengan aman. Untuk terhubung ke our host atau remote host linux via SSH harus SSH Server service harus tersedia dan running.</p> <p>SSH Server yang paling sering digunakan adalah OpenSSH server. Package tersebut free dan open-source dan implementasi dari protoko SHH yang mampu secara aman mengirim data atau perintah via jaringann.</p> Install OpenSSH<pre><code>maruffarras@BrownTofu:~/Documents/Notes/kertas-pena$ sudo apt install openssh-server\n</code></pre> <p>Untuk mengecek apakah service ssh server sudah berjalan atau tidak gunakan command <code>systemctl</code>, telah di catatan di Task scheduling</p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/07.%20Network%20service/#server-ssh-status","title":"Server ssh status","text":"<pre><code>maruffarras@BrownTofu:~/Documents/Notes/kertas-pena$ systemctl status ssh\n\u25cf ssh.service - OpenBSD Secure Shell server\n     Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled)\n     Active: active (running) since Tue 2023-03-07 08:36:44 WIB; 2 days ago\n       Docs: man:sshd(8)\n             man:sshd_config(5)\n   Main PID: 1068 (sshd)\n      Tasks: 1 (limit: 14180)\n     Memory: 2.2M\n        CPU: 130ms\n     CGroup: /system.slice/ssh.service\n             \u2514\u25001068 sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/07.%20Network%20service/#ssh-loging-in","title":"SSH Loging in","text":"<p>SSH terhubung dan menulis log ke dalam target tertentu yang dispesifikasikan saat login. <code>ssh username@hostname[:port]</code>. port bawaan dari SSH adalah 22, jika port tidak dirubah pada konfigurasi <code>/etc/ssh/sshd_config</code> makatidak perlu menuliskan port saat login ssh.</p> <pre><code>maruffarras@BrownTofu:~$ ssh maruffarras@192.168.1.68\nmaruffarras@192.168.1.68's password: \nWelcome to Ubuntu 21.10 (GNU/Linux 5.13.0-52-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n0 updates can be applied immediately.\n\nLast login: Tue Mar  7 16:45:33 2023 from 192.168.1.19\n</code></pre> <p>setelah anda berhasil login ke target host menggunakan ssh, maka session anda akan terecord oleh target host. Untuk melihat siapa yang sedang login kedalam host gunakan perintah <code>who</code></p> <p><pre><code>maruffarras@BrownTofu:~$ who\nmaruffarras tty2         2023-03-07 08:43 (tty2)\nmaruffarras pts/5        2023-03-09 16:38 (192.168.1.68)\nmaruffarras pts/6        2023-03-09 16:41 (192.168.1.75)\n</code></pre> Contah diatas ada dua mesin yang terhubung ke komputer saya, juga tercatat alamat IPnya. Dikatakn diawal, ssh menulis semua log kedalam target host. Lalu bagaimana untuk melihat log ?</p> <p>Untuk melihat log dari ssh service kita dapat menggunakan command <code>journalctl</code><sup>1</sup>.</p> <pre><code>maruffarras@BrownTofu:$ journalctl -u ssh.service\n</code></pre> <p>OpenSSH dapat dikonfigurasi dan dikostumasi dengan meng-edit file <code>/etc/ssh/sshd_config</code>. Dalam file ini kita dapat mengatur seperti maximum number of concurrent connections, mengatur penggunaan password untuk login atau menggunakan key, pengecheckan key, pengaturan port dan lainnya.</p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/07.%20Network%20service/#nfs","title":"NFS","text":"<p>Netwokr File System adalah sebuah network protokol yang dibuat oleh Sun Microsystem pada tahun 1084 .NFS digunakan untuk meyimpan dan menelola file-file pada remote system seperti kita menyimpannya pada sistem lokal. Protokol tersebut mudah dan efesin dalam memenejemeni file-file lintas jaringan. Sebagai contoh, administrator menggunakan Nfs untuk menyimpan dan mengelola file-file secara terpusat (misalkan linux dan windows) agar memudahkan kolaborasi dan pengelolaan data. Untuk linux ada beberapa NFS server, termasuk NFS-UTILS (Ubuntu), NFS-Ganesha (Solaris), dan OpenNFS (Redhat Linux).</p> <p>Fungsi dari protokol ini selain dari berbagi dan pengelolan data-data secara efesian untuk mereplikasi file systems antara server. Namun juga memliki fitur seperti access control, real-time file transfer, dan dapat diakses oleh banyak pengguna secara simultan. Kita dapat menggunakan service ini seperti FTP (File Transfer Protocol) </p> <p>Pada catatan sesi ini saya hanya mencatat dari sumber Hack The Box section Network Services, untuk melihat catatan saya dari sumber lain yang lebih lengkap tentang NFS dapat merujuk ke additional note</p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/07.%20Network%20service/#instalasi-nfs","title":"Instalasi NFS","text":"<p>Biasanya, pada ubuntu NFS sudah terinstall, namun jika belum maka install package nfs-kernel-server</p> <pre><code>sudo apt install nfs-kernel-server -y\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/07.%20Network%20service/#check-status-nfs-service","title":"Check status NFS service","text":"<p>Untuk melihat status service dari NFS gunakan command <code>systemctl</code></p> <pre><code>maruffarras@BrownTofu:~$ systemctl status nfs-kernel-server.service\n\u25cf nfs-server.service - NFS server and services\n     Loaded: loaded (/lib/systemd/system/nfs-server.service; enabled; vendor preset: enabled)\n     Active: active (exited) since Fri 2023-03-10 11:21:05 WIB; 3h 52min ago\n    Process: 214602 ExecStartPre=/usr/sbin/exportfs -r (code=exited, status=0/SUCCESS)\n    Process: 214603 ExecStart=/usr/sbin/rpc.nfsd $RPCNFSDARGS (code=exited, status=0/SUCCESS)\n   Main PID: 214603 (code=exited, status=0/SUCCESS)\n        CPU: 11ms\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/07.%20Network%20service/#konfigurasi-nfs","title":"Konfigurasi NFS","text":"<p>Kita dapat mengkongurasi NFS melalui file konfigurasi <code>/etc/exports</code>. File ini menspesifikasikan direktori mana yang harus di share dan user atau system mana yang dapat memliki akses ke file sharing tersebut. File tersebut juga dapat mengkonfigurasi kecepatan transfer dan penggunaan encryption. NFS Access Right menentukan siapa yang memliki akses dan direktorimana yang dibagikan. Dibawha ini adalah daftar hak ases yang dikonfigurasi didalam NFS.</p> Permissions Description <code>rw</code> Gives users and systems read and write permissions to the shared directory. <code>ro</code> Gives users and systems read-only access to the shared directory. <code>no_root_squash</code> Prevents the root user on the client from being restricted to the rights of a normal user. <code>root_squash</code> Restricts the rights of the root user on the client to the rights of a normal user. <code>sync</code> Synchronizes the transfer of data to ensure that changes are only transferred after they have been saved on the file system. <code>async</code> Transfers data asynchronously, which makes the transfer faster, but may cause inconsistencies in the file system if changes have not been fully committed."},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/07.%20Network%20service/#membuat-nfs-share","title":"Membuat NFS Share","text":"<p>zz /etc/exports<pre><code># /etc/exports: the access control list for filesystems which may be exported\n#               to NFS clients.  See exports(5).\n#\n# Example for NFSv2 and NFSv3:\n# /srv/homes       hostname1(rw,sync,no_subtree_check) hostname2(ro,sync,no_subtree_check)\n#\n# Example for NFSv4:\n# /srv/nfs4        gss/krb5i(rw,sync,fsid=0,crossmnt,no_subtree_check)\n# /srv/nfs4/homes  gss/krb5i(rw,sync,no_subtree_check)\n#\n\n/home/maruffarras/Arduino/faris_gerbang_manual  192.168.1.27(rw,sync,no_root_squash)\n/home/maruffarras/Arduino/faris_gerbang_manual  172.17.0.2(ro,sync,no_root_squash)\n</code></pre></p> <p>Disini saya membuat dua baris konfigurasi untuk memberikan siap yang mendapatkan akses dan lokasi serta opsi-opsi mengenai hak ases. Disini saya memberikan akses pada '/home/maruffarras/Arduino/faris_gerbang_manual' pada alamat IP <code>192.168.1.27</code> dan <code>172.17.0.2</code>.</p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/07.%20Network%20service/#mount-nfs-share","title":"Mount NFS Share","text":"<p>Oke sekarang saya akan mounting ke ubuntu dokcer saya. Kita menggunakan command <code>mount</code> untuk memasang external sharing folder dari NFS yang baru saja kita buat. Untuk mounting, ada beberapa cara, insyaAllah sesi ini hanya akan menggunakan dua cara. Lebih lanjut tentang mount lihat di additional note</p> <p>Cara pada catatan ini </p> <ol> <li>Menggunakan opsi <code>mount --all</code> untuk memasang berdasarkan konfigurasi pada <code>/etc/fstab</code></li> <li>Sama menggunaka command <code>mount</code> namun langsung dispesifikasikan device dan mount pointnya.</li> </ol> <code>Menggunakan opsi --all</code> <p>Opsi <code>--all</code>  memasang (mounting) semua file system pada setiap baris pada file <code>/etc/fstab</code></p> /etc/fstab<pre><code># UNCONFIGURED FSTAB FOR BASE SYSTEM\n192.168.1.68:/home/maruffarras/Arduino/faris_gerbang_manual /home nfs\n</code></pre> <pre><code>root@ubuntu-2:/home# mount --all\n</code></pre> <code>Mensepsifikasikan langsung pada command mount</code> <pre><code>root@ubuntu-2:/home# mount 192.168.76.110:/home/maruffarras/Arduino/faris_gerbang_manual mount_place\n</code></pre>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/07.%20Network%20service/#daftar-mounting-file-system","title":"Daftar mounting file system","text":"<p>Untuk melihat daftar lokasi mount yang ada pada system gunakan perintah <pre><code>root@ubuntu-2:/home# mount -l\n</code></pre></p> <ol> <li> <p>Untuk mempelajari tentang perintah <code>journalctl</code> dapat menujuke additional note journalctl \u21a9</p> </li> </ol>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/08.%20Network%20Configurations/","title":"Network Configuration","text":"<p>Sebagaimana sebuah penetration tester, keahlian yang wajib untuk dimiliki adalah mampu mengkonfigurasi dan me-managing network pada sistem linux. Keahlian ini berguna seperti menguji environments, mengatur network traffic atau mengidentifikasi dan mengeksploit kerentanan yang ada. </p> <p>Satu dari konfigurasi jaringan yang penting adalah mengkonfigurasi network interfaces . Termasuk mengisi IP addresess, mengkonfigurasi network devices seperti switch, routers dan mennyetek network protocols. Sangat penting untuk memahami juga tentang network protocols seperti TCP/IP, DNS, DHCP, dan FTP. Dan sebagai tambahan, kita juga harus memahami network interface lainnya,termasul wireless dan wired connection serta harus mampu men-troubleshoot masalah konektifitas.</p> <p>Network Access Control adalah komponen terpenting dari network configuration. Sebagai pentester, kita harus mengetahui pentingnya NAC untuk keamanaan jaringan dan teknologi NAC lainnya yg tersedia. Seperti:</p> <ol> <li>Discretionary Access Control (DAC)</li> <li>Mandatory Access Control (MAC)</li> <li>Role-based Access Control (RBAC)</li> </ol> <p>Kita harus mampu memahami NAC enforcement mekanisme dan mengetahui bagaimana mengkonfigurasi Linux network devices untuk NAC, serta termasuk menyetel SELinux policies, mengkonfigurasi AppArmor profiles dan menggunakan tcp wrappersuntuk mengontrol hak akses.</p> <p>Mengawasi trafic jaringan juga bagain yang sangat esensial dari network configuration. Kita harus mengetahu bagaimana cara mengkonfigurasi network monitoring dan logging, serta harus mampu menganlisa network trafic untuk tujuan keamanaan. Alat seperti <code>syslog</code>, <code>rsyslog</code>, <code>ss</code>, <code>lsof</code> dan <code>ELK stack</code> digunakan untuk memonitor network traffice dan mengidentifikasi masalah keamanan.</p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/08.%20Network%20Configurations/#configurin-network-interfaces","title":"Configurin Network Interfaces","text":"<p>Pada ubuntu, kita dapat mengkonfigurasi local network interface menggunakan fungsi <code>ifconfig</code> dan <code>ip</code>. Salah satu cara untuk mendapatkan informasi yang berkitan dengan network interface seperti IP addresses, netmasks dan status yaitu menggunakan perintah <code>ifconfig</code> Dengan mengeksekusi perintah tersebut kita dapat melihat network interfaces yang tersedia dan atribut2nya.</p> <p>Info</p> <p>Perintah <code>ifconfig</code> kadarluasa dan digantikan oleh <code>ip</code>, namun <code>ifconfig</code> masih sering digunakan oleh para ahli jaringan bahkan hacker.</p> <p>Menampilkan informasi dari network interface</p> Menggunakan <code>ifconfig</code>Menggunakan <code>ip</code> <pre><code>root@9f823860ae83:/# ifconfig\neth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500\n        inet 172.17.0.2  netmask 255.255.0.0  broadcast 172.17.255.255\n        ether 02:42:ac:11:00:02  txqueuelen 0  (Ethernet)\n        RX packets 59  bytes 8114 (8.1 KB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 6  bytes 412 (412.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 0  bytes 0 (0.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n</code></pre> <pre><code>root@9f823860ae83:/# ip addr\n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n    valid_lft forever preferred_lft forever\n5: eth0@if6: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default \n    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0\n    valid_lft forever preferred_lft forever\n</code></pre> <p>Untuk perintah <code>ip</code> anda harus menspesifikasikan Objek, karena kita ingin melihat informasi mengenai network interface maka kita menggunakan objek <code>addres</code> atau bisa disngkat menjadi <code>addr</code> </p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/08.%20Network%20Configurations/#activate-network-interface","title":"Activate Network Interface","text":"<p>Untuk mengaktifkan, mematikan serta membuat pengaturan pada network interface juga menggunakan <code>ifconfig</code> dan <code>ip</code>.</p> <p>Mematikan, menyalakan dan pengaturan terhadap network interface</p> Menggunakan <code>ifconfig</code>Meenggunakan <code>ip</code> Menyalakan network interface<pre><code>root@9f823860ae83:/# ifconfig eth0 up\n\nroot@9f823860ae83:/# ifconfig\neth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500 #(1)\n        inet 172.17.0.2  netmask 255.255.0.0  broadcast 172.17.255.255\n        ether 02:42:ac:11:00:02  txqueuelen 0  (Ethernet)\n        RX packets 91  bytes 10932 (10.9 KB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 19  bytes 1150 (1.1 KB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 0  bytes 0 (0.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n</code></pre> <ol> <li>eth0 menyala</li> </ol> Mematikan network interface<pre><code>root@9f823860ae83:/# ifconfig eth0 down\n\n#Check is eth0 is down (1)\nroot@9f823860ae83:/# ifconfig # \nlo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 0  bytes 0 (0.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n</code></pre> <ol> <li>Yes, eth0 mati</li> </ol> Menyalakan network interface<pre><code>root@9f823860ae83:/# ip link set eth0 up\nroot@9f823860ae83:/# ip addr # Check status network interface\n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n    valid_lft forever preferred_lft forever\n5: eth0@if6: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default  #(1)\n    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0\n    valid_lft forever preferred_lft forever\n</code></pre> <ol> <li>State UP artinya network interface eth0 sedang running</li> </ol> Mematikan network interface<pre><code>root@9f823860ae83:/# ip link set eth0 down\nroot@9f823860ae83:/# ip addr # Check status network interface\n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n    valid_lft forever preferred_lft forever\n5: eth0@if6: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noqueue state DOWN group default #(1)\n    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0\n    valid_lft forever preferred_lft forever\n</code></pre> <ol> <li>State DOWN artinya network interface eth0 sedang tidak running.</li> </ol>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/08.%20Network%20Configurations/#mengisi-ip-address-pada-network-interface","title":"Mengisi IP address pada network interface","text":"Menggunakan <code>ifconfig</code>Menggunakan <code>ip</code> <pre><code>root@9f823860ae83:/# ifconfig eth0 172.17.0.27    \n</code></pre> <p>Untuk menggunakan perintah <code>ip</code> kita tidak dapat merubah ip address pada device secara langsung, kita harus membuat add serta menghapus del network interface yang lama.</p> Delete existing network interface<pre><code>root@9f823860ae83:/# ip addr add 172.17.0.13/16 broadcast 172.17.255.255 dev eth0\n</code></pre> <p>Sebagai catatan, sebernya untuk broadcast akan diisi secara otomatis karena akan ditentukan oleh IP Address dan Subnetmask, nama karena saya menggunakan docker, entah mengapa agar bisa terkoneksi dari mesin lain harus mensepsifikasikan broadcast <sup>2</sup></p> <p>Menggati ip address menggunakan <code>ifconfig</code> dan <code>ip</code> tidak akan bertahan jika system di reboot, artinya akan di set ulang setiap sistem dimuat ulang.<sup>1</sup></p> <p>Lihat resolvectl untuk melihat dns dari sebuah network interface</p> <ol> <li> <p>Sumber how to use linux \u21a9</p> </li> <li> <p>Sumber serverfault.com \u21a9</p> </li> </ol>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/99.%20Additional%20notes/","title":"Additional note","text":""},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/99.%20Additional%20notes/#command-journalctl","title":"Command journalctl","text":"<p>Disini saya membuat simulasi dengan service ssh.</p> <pre><code>maruffarras@BrownTofu:$ journalctl -u ssh.service\n</code></pre> <p>Diatas saya menggunakan opsi <code>-u</code> untuk memberikan spesifikasi <code>units</code> (Service unit). Hasil dari command ini adalah seluruh log terkait dengan unit yang dispesifikasikan dan dimuat pada halaman yang sama seperti menggunakan command <code>less</code>. </p> <p>Lalu bagaimana jika anda ingin melihat hanya dalam rentang waktu tertentu ? </p> <p>Kita bisa menggunakan opsi <code>-S</code> (since) dan <code>-U</code> (until). sesuai dengan artinya, since akan mengambil log dari tanggal dan waktu yang ditetapkan pada opsi <code>-S</code> hingga terakhir, dan until mengambil log awal hinggal tanggal dan waktu yang ditetaip di opsi <code>-U</code>. Sedangkan jika kedua dipakai makan akan menampilkan log dalam jarak tanggal dan waktu <code>since - until</code>. format yang digunakan pada opsi tersebut adalah \"yyyy-mm-dd hh:mm:ss\". Jika kita hanya  menggunakan \"yyyy-mm-dd\" tanpa spesifikasi waktu maka akan dianggap 00:00:00. </p> <pre><code>maruffarras@BrownTofu:~$ journalctl -u ssh.service --since \"2023-03-09\"\n-- Journal begins at Sun 2022-04-03 09:34:13 WIB, ends at Fri 2023-03-10 09:33:03 WIB. --\nMar 09 16:38:16 BrownTofu sshd[185575]: Invalid user maruffaras from 192.168.1.68 port 44696\nMar 09 16:38:24 BrownTofu sshd[185575]: pam_unix(sshd:auth): check pass; user unknown\nMar 09 16:38:24 BrownTofu sshd[185575]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rho&gt;\nMar 09 16:38:26 BrownTofu sshd[185575]: Failed password for invalid user maruffaras from 192.168.1.68 port 44696 ssh2\n... # truncate\n</code></pre> <p>Kalimat dalam bentuk string seperti <code>yesterday</code>, <code>today</code> dan <code>tomorrow</code> juga dapat digunakan.</p> <pre><code>maruffarras@BrownTofu:~$ journalctl -u ssh.service --since \"today\"\n-- Journal begins at Sun 2022-04-03 09:34:13 WIB, ends at Fri 2023-03-10 09:38:08 WIB. --\nMar 10 09:38:08 BrownTofu sshd[200923]: Accepted password for maruffarras from 192.168.1.44 port 50076 ssh2\nMar 10 09:38:08 BrownTofu sshd[200923]: pam_unix(sshd:session): session opened for user maruffarras by (uid=0)\n</code></pre> <p>Kita juga bisa menggunakan karakter <code>+</code>, <code>-</code> diikuti dengan pharsing time span syntax dari waktu now (current date and time). Dibawah ini adalah daftar Parsing time span;</p> <ul> <li> <p>usec, us, \u00b5s</p> </li> <li> <p>msec, ms</p> </li> <li> <p>seconds, second, sec, s</p> </li> <li> <p>minutes, minute, min, m</p> </li> <li> <p>hours, hour, hr, h</p> </li> <li> <p>days, day, d</p> </li> <li> <p>weeks, week, w</p> </li> <li> <p>months, month, M (defined as 30.44 days)</p> </li> <li> <p>years, year, y (defined as 365.25 days)</p> </li> </ul> <pre><code>maruffarras@BrownTofu:~$ journalctl -u ssh.service --since -1d #(1)!\nmaruffarras@BrownTofu:~$ journalctl -u ssh.service --since -1h #(2)!\nmaruffarras@BrownTofu:~$ journalctl -u ssh.service --since -1m #(3)!\nmaruffarras@BrownTofu:~$ journalctl -u ssh.service --since -1M #(4)!\n</code></pre> <ol> <li>Satu hari yang lalu</li> <li>Satu jam yang lalu</li> <li>Satu menit yang lalu</li> <li>Satu bulan uang lalu</li> </ol> <p>Jika ingin melihat log secara live, gunakan opsi <code>-f</code> atau <code>--follow</code></p> <pre><code>maruffarras@BrownTofu:~$ journalctl -u ssh.service -f --since \"now\"\n</code></pre> <p>Saya menambahkan opsi <code>--since</code> dengan nilai now  agar live log yang menampilkan log dimulai dari waktu saya menajalankan script tersebut. </p>"},{"location":"Hack%20The%20Box/Catatan%20Linux%20HTB/99.%20Additional%20notes/#network-file-system","title":"Network File System","text":"<p>Perintah <code>mount</code> memasang file system ke hiererarki system's name space (alamat mount point) yang diberikan. Jadi <code>/etc/fstab</code> akan digunakan oleh perintah <code>mount</code> sebagai petunjuk file system mana yang akan dipasang. Setipa baris pada <code>/etc/fstab</code> menggambarkan satu file system, mount point, dan opsi-opsi untuk moint point tersebut.</p> <p>Setiap baris dari <code>/etc/fstab</code> mensepsifikasikan <code>filesystem</code> server name dan alamat direktori dari eksternal server yang akan dimount, <code>mount point</code> direktori lokal tenpat mount point,<code>type</code> tipe dari file system yang akan dipasang,<code>option</code> daftar opsi yang mengatur bagaimana filesystem di mount dan bagaimana NFS client berprilaku ketika mengakses mount point. Sedangkan opsi kelima <code>dump</code>, dan keenam <code>pass</code> tidak digunakan oleh NFS, maka dari itu bisa tidak diisi atau diisi dengan nilai 0. Syntax</p> <pre><code>server:path   /mountpoint   fstype   option,option,...   0 0\n</code></pre> <p>Sebelumnya kita telah mempeljari cara membuat sebuah task scheduler dimana kita membuat <code>service</code> dan <code>timer</code> dialamat <code>/etc/systemd/system</code>. Namun untuk nfs kernel terdapat pada <code>/lib/systemd/system/</code>.</p> Units file Network File System<pre><code>maruffarras@BrownTofu:~$ ls /lib/systemd/system/ | grep nfs\nnfs-blkmap.service\nnfs-client.target\nnfs-common.service\nnfs-config.service\nnfs-idmapd.service\nnfs-kernel-server.service\nnfs-mountd.service\nnfs-server.service\nnfs-utils.service\nproc-fs-nfsd.mount\n</code></pre>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/01.%20Network%20Structure/","title":"Networking Structure","text":""},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/01.%20Network%20Structure/#network-type","title":"Network Type","text":"<p>Beberapa terminologi pada tipe-tipe dari jaringan.</p> Network Type Definition Wide Area Network Internet Local Area Network Home atau office network (Internal Network) Wireless Local Area Network Internal Network yang diakses melalui WiFi Virtual Private Network Menghubungkan beberapa jaringan pada satu LAN"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/01.%20Network%20Structure/#wide-area-network","title":"Wide Area Network","text":"<p>Wan adalah salah satu alamat yang secara umum digunakan untuk mengakses internet. WAN adalah kumpulan dari LAN yang saling terhubung bersamaan.</p>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/01.%20Network%20Structure/#local-area-network-wireless-local-area-network","title":"Local Area Network &amp; Wireless Local Area Network","text":"<p>LAN biasanya diisi dengan alamat IP yang debentuk untuk penggunaan local (10.10.10/8, 172.16.0.0/12, 192.168.0.0/16). Tidak ada yang membedakan antara LAN dan WLAN hanya saja dengan WLAN tapat terhubung tanpa menggunakan kabel.</p>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/01.%20Network%20Structure/#virtual-private-network","title":"Virtual Private Network","text":"<p>Ada tiga tipe utama dari Virtual Private Network, semuanya memliki tujuan yang sama yaitu membuat pengguna seperti terhubung dengan jaringan yang berbeda.</p> <ul> <li> <p>Site To Site VPN     Keduanya, antara client dan server adalah Network Divice, biasanya router atau firewalls. Kedua device tersebut berbagi jangkauan jaringan (network range). Biasanya VPN digunakan untuk menggabungkan beberapa jaringan perusahaan melalui internet, membuat beberapa lokasi dapat terhubung seperti mereka dalam satu lokasi, local network.</p> </li> <li> <p>Remote Acces VPN     Jenis VPN ini melibatkan komputer pada sisi client membuat sebuah virtual interface yang berprilaku seperti didalam client network. Dalam menganalisa VPN ini yang harus di perhatikan adalah routing table yang terbuat ketika masuk kedalam VPN ini. Jika VPN hanya membuat route pada jaringan yang spesifik saja (misalkan: 10.10.10.0/24), maka disebut dengan Split-Tunnel VPN, artinya koneksi internet tidak keluar dari jaringan VPN.</p> <p>Info</p> <p>Untuk mengetahui perbedaan  antara Split-Tunnel VPN dengan Full-Tunnel VPN baca lebih lanjut additional notes</p> </li> <li> <p>SSL VPN     Tipe VPN ini akan stream aplikasi atau seluruh sesi dekstop di webbrowser. Seperti Pwnbox pada HackTheBox</p> </li> </ul>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/01.%20Network%20Structure/#proxies","title":"Proxies","text":"<p>Banyak orang memliki opini yang berbeda tentang apa itu proxy:</p> <ul> <li>Security professional menggunaakn HTTP Proxies (BurpSuite) atau pivoting dengan SOCKS/SSH Proxy (Chisel, ptunnel, sshuttle) </li> <li>Web Developers menggunakan proxies seperit Cloudflare atau ModSecurity untuk menghadang lalulintas yang mencurigakan.</li> <li>Orang umum menganggap proxy digunakan untuk mengaburkan lokasi mereka dan mengakases jaringan menggunakan negara lain.</li> <li>Orang hukum sering mengaggap penggunakan proxy selalu terkait dengan aktifitas ilegal</li> </ul> <p>Namun semuanya tidak benar,jadi proxy adalah mesin atau service yang duduk di tengan jaringan (middle of connection) dan berprilaku sebagai mendiator.  Mediator ini dapat menginspect konten dari lalu lintas. Tanpa adanya kemampuan mediator tersebut, device secara teknik hanya sebuah gateway, bukan proxy. Dan perlu diingat, proxy duduk dilayer 7, application.</p>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/01.%20Network%20Structure/#tipe-dari-proxy","title":"Tipe dari proxy","text":"<code>Dedicated Proxy / Forward Proxy</code> Forward proxy (bisa disebut dengan porxy apa adanya) adalah ketika client membuat request ke komputer, dan komputer tersebut membawa request ke tujuannya. Sebagai contoh, pada sebuah jaringan perusahaan, komputer yang memliki data sensitif tidak dapat akses langsung ke internet. Untuk mengakases website, mereka harus melalui proxy (atau web filter). Hal ini menjadi garis pertahanan yang kuat untuk melawan malware, karena tidak hanya malware tersebuts harus melewati web filter, namun dia juga harus menjadi proxy aware <sup>1</sup> atau menggunakan non-traditional C2 (sebuah cara agar malware mendapatkan informasi tugas). Jika organisasi hanya memanfaatkan FireFox, kemungkinan proxy-aware malware hampir tidak mungkin. Web Browsers seperti Internet Explorer,Edget atau Chrome bawaanya semua web browser tersebut mengikuti aturan System Proxy. Jadi, jika malware memanfaatkan WinSock (Native Windows API), maka memunkinkan bagi malware menjadi proxy aware tanpa ada kode tambahan. Firefox tidak menggunakan WinSocks, namun libcurl yang membuat FireFox menggunakan kode yang sama pada OS apapun. Artinya malware harus menarik proxy setting pada firefox, yang mana malware jarang melakukannya. (Lebih aman FireFox dibandingkan web browser yang disebutkan diatas) Jika cara tersebut tidak bisa, malware akan memanfaatkan DNS sebagai mekanisme C2 <sup>2</sup>, namun jika organisasi yang diserang menggunakan System Monitoring (Sysmon <sup>3</sup>) dengan memonitor DNS maka traffic mencurigakan tersebut akan cepat tertangkap. Contoh lain forward proxy adalah Burp Suite, yang sering digunakan oleh para security untuk melakukan forward HTTP request. <code>Reverse Proxy</code> Reverse Proxy adalah kebalikan dari forward proxy. Jadi forward proxy didesain untuk menyaring outgoing request sedangkan reverse proxy didesain untuk menyaring incoming request. Banyak oragnaisi menggunakan CloudFlare untuk menahan sertangan DDOS. Dengan menggunakan CloudFlare, organisasi memliki sesuatu untuk menyaring traffice yang dikirim ke webserver mereka. Pentester akan mengkonfigurasi reserver proxy pada infected endpoint. Endpoint tersebut akan mendengar setiap request dari port dan mengirim client yang terhubung ke port tersebut ke attacker melalui infected endpoint. Ini berguna untuk mem-bypass firewalls dan menghindari logging. Reverse proxy lainnya adalah ModSecurity, sebuah Web Application Firewall (WAF). WAF ini akan menginspect setiap request dan jika request berbahaya makan akan mem-block request tersebut. Sebenarnya CloudFlare bisa melalukukan demikian, namun CloudFlare harus disetting agar men-decrypt HTTPS trafic yang mana banyak organisasi tidak ingingkan. <ol> <li> <p>Baca tentang proxy aware \u21a9</p> </li> <li> <p>Baca tentang mekanisme C2 \u21a9</p> </li> <li> <p>Baca tentang Sysmon \u21a9</p> </li> <li> <p>Baca tentang VPN split tunneling \u21a9</p> </li> </ol>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/01.%20Update/","title":"01. Update","text":"<p>Subnet cheatseet</p>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/02.%20Networking%20workflow/","title":"Networking Workflow","text":""},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/02.%20Networking%20workflow/#networking-model","title":"Networking Model","text":"<p>Networking model menjabarkan komunikasi dan transfer data antar host, diantaranya adalah OSI model dan TCP/IP model.</p> <p></p> <p>Osi model adalah sebuah model refrensei yang digunakan untuk menjabarkan dan mendifinisikan komunikasi antar sistem. Model refrensi ini memiliki 7 layer yang terpisah, dan setiap layer memliki tugas yang terpisah pula.</p> <p>TCP/IP adalah sebuah istilah generik  untuk protokol jaringan. Protokol tersebut bertanggung jawab untuk melakukan switching dan meng-traposrt packet of data pada internet. Seluruh internet bersandar pada protocl familiy. Jadi TCP/IP bukan hanya merujuk pada TCP atau  IP namun menyeluruh ke seluruh protocol familiy. Seperti ICMP (Internet Control Message Protocol), UDP (User Datagrame Protocol). Protocol family menyediakan fungsi yang dibutuhkan untuk melakukan transport dan switching paket data di jaringan private atau public.</p>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/02.%20Networking%20workflow/#osi-vs-tcpip","title":"OSI vs TCP/IP","text":"<p>TCP/IP adalah protokol komunikasi yang membuat setiap host terhubung ke internet. Protokol tersebut merujuk pada Transmission Control Protocol yang digunakan didalam atau oleh aplikasi di internet. Dilain sisi, OSI adalah aturan yang harus diikuti yang menyajikan arahan umum bagaimana setiap mesin saling dapat berkomunikasi walaupun beda manufaktur. Dan OSI lebih ke komunikasi gateway.</p>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/02.%20Networking%20workflow/#packet-transfers","title":"Packet Transfers","text":"<p>Pada sistem yang berlayar, setiap device didalam sebuah layer bertukar data dalam sebuah format yang disebut dengan Protocol Data Unit (PDU). Contohnya, ketika kita ingin berselancar pada sebuah website di komputer, remote server software pertama kali akan me-request data ke application layer. Selanjutnya di proses dari lapis ke lapis, setiap lapis melakukan fungsinya masing-masing. Selanjutnya data ditrasnfer melalui networks physical layer hingga sampaike server atau mesin lainnya yang menerima request tersebut. Data di alirkan melalui setip lapisanlagi, dengan setiap lapis melakukan operasi tersebut hingga software yang melakukan request menerima respon data.</p> <p></p> <p>Saat transmisi, data khusus yang disebut dengan header selalu ditambahkan ke PDU pada layer diatasnya yang berguna untuk mengatur dan mengidentifikasi packet. Proses tersebut disebut dengan encapsulation. Header dan data PDU menjadi satu dan diteruskan ke layer selanjutnya. Proses encasuplation tersebut berlanjut hingga ke physical layer atau network layer dimana data dikirim (transmitted) ke penerima (receiver). </p> <p>Lalu penerima (receiver) melalukan sebaliknya, yaitu dengan membongkar data dalam setiap layer dengan dengan header information hingga akhirnya application layer menggunakan data yang telah dibongkat tersebut. Proses ini terus berlanjut hingga data dikirim dan diterima.</p> <p></p> <p>Untuk penetration tester,  kedua refrensi model ini, OSI dan TCP/IP sangat berguna, dengan TCP/IP kita dapat dengan mudah memahami seluruh koneksi. Dan dengan OSI layer kita dapat memecah setiap layer dan menganlisa setiap layer tersebut. INi sering terjadi ketika kita dapat listen dan men intercept traffic jaringan.</p>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/02.%20Networking%20workflow/#osi-model","title":"OSI Model","text":"<p>Tujuan mendefinisikan standard OSI untuk membuat refrensi model yang membuat komunikasi antar sistem, mesin dan teknologi yang berbeda dapat dilakukan.</p> Layer Function 7.Application Among other things, this layer controls the input and output of data and provides the application functions. 6.Presentation The presentation layer's task is to transfer the system-dependent presentation of data into a form independent of the application. 5.Session The session layer controls the logical connection between two systems and prevents, for example, connection breakdowns or other problems. 4.Transport Layer 4 is used for end-to-end control of the transferred data. The Transport Layer can detect and avoid congestion situations and segment data streams. 3.Network On the networking layer, connections are established in circuit-switched networks, and data packets are forwarded in packet-switched networks. Data is transmitted over the entire network from the sender to the receiver. 2.Data Link The central task of layer 2 is to enable reliable and error-free transmissions on the respective medium. For this purpose, the bitstreams from layer 1 are divided into blocks or frames. 1.Physical The transmission techniques used are, for example, electrical signals, optical signals, or electromagnetic waves. Through layer 1, the transmission takes place on wired or wireless transmission lines. <p>Layer 2-4 adalah transport oriented dan layer 5-7 application oriented. Jika dus sistem berkomunikasi, semua 7 layer dari OSI model setidaknya berjalan 2 kali. Ketika sebuah aplikasi mengirim sebuah pake ke sistem lain, sistem berkerja dari layer 7 ke satu sedangkan sistem yang menerima akan membongkar packet yang diterima dari layer 1 ke layer 7.</p>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/02.%20Networking%20workflow/#tcpip-model","title":"TCP/IP Model","text":"<p>The TCP/IP model is also a layered reference model, often referred to as the Internet Protocol Suite.</p> Layer Function 4.Application The Application Layer allows applications to access the other layers' services and defines the protocols applications use to exchange data. 3.Transport The Transport Layer is responsible for providing (TCP) session and (UDP) datagram services for the Application Layer. 2.Internet The Internet Layer is responsible for host addressing, packaging, and routing functions. 1.Link The Link layer is responsible for placing the TCP/IP packets on the network medium and receiving corresponding packets from the network medium. TCP/IP is designed to work independently of the network access method, frame format, and medium. <p>Dengnan TCP/IP, setiap aplikasi dapat mengirim dan bertukar data melalui jaringan dan aplikasi tidak perlu tahu dimama receiver berlokasi. IP memastikan data packet sampai ke tujuannya dan TCP mengatur pengiriman data dan memastikan koneksi antara data dan aplikasi.</p> <p>Dibawah ini adalah tabel yang menjelaskan tugas penting dari TCP/IP</p> Task Protocol Description Logical Addressing IP Banyaknya host yang berada dalam jaringan berbeda, maka diperlukannya network topology dan logical addressing. Menggunakan TCP/IP, IP bertanggung jawab pada logical addressing networks dan nodes. Data packets hanya sampai ke tempat yang seharusnya. Method yang digunakan adalah <code>network classes</code>, <code>subnetting</code>, dan <code>CIDR</code> (Classless Inter-Domain Routing) Routing IP Setiap data packet, node selanjutnya ditentuka pada setiap node saat berjalan dari sender ke receiver. Dengan cara ini, sebuah data packet di routed (jalurkan) ke receiver walaupun lokasi receiver tidak diketahui oleh sender Error &amp; Control Flow TCP Sender dan receiver secara rutin saling berkomunikasi melalui virtual connection. Karena itu control message dikirim secara terus menerus untuk menguji apakah koneksi masih tersedia atau tidak. Application Support TCP TCP and UDP ports form a software abstraction to distinguish specific applications and their communication links. Name Resolution DNS DNS provides name resolution through Fully Qualified Domain Names (FQDN) in IP addresses, enabling us to reach the desired host with the specified name on the internet."},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/03.%20Addressing/","title":"Addressing","text":""},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/03.%20Addressing/#subnetmask","title":"Subnetmask","text":""},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/03.%20Addressing/#cara-membuat-subnet","title":"Cara membuat subnet","text":"Details octet 1 octet 2 octet 3 octet 4 Decimal IP4 00001010 11001000 00010100 000 | 00000 10.200.20.0/27 Subnetmask 11111111 11111111 11111111 111 | 00000 255.255.255.224 <p>Kita dapati subnetmask kita adalah 255.255.255.224 sekarang kita bisa mengetahui informasi sebagai berikut</p> <ul> <li>Berapa banyak subnet ?         224 dalam bit adalah 11100000, ada 3 bits untuk subnetting dan ada 5 bits untuk host. dengan demikian terdapat 8 subnet hasil dari \\(2^3\\)</li> <li>Berapa banyak host persubnet ?         Ada 5 bits untuk host 11100000, sehingga, total host per subnet adalah $(2^5) - 2 $, 30. Dua diataranya adalah untuk subnet address dan broadcast address</li> <li> <p>Berata total valid subnet ?         Nilai valid subnet adalah \\(256-224\\) 32 yang digunakan sebagai nilai tambahan dari 0 hingga 254. yaitu 0,32,64,96,128,160,192,224</p> Detail Subnet 1 Subnet 2 Subnet 3 Subnet 4 Subnet 5 Subnet 6 Subnet 7 Subnet 8 Valid subnet 0 32 64 96 128 160 192 224 </li> <li> <p>Berapa broadcast address untuk setiap subnet?</p> Detail Subnet 1 Subnet 2 Subnet 3 Subnet 4 Subnet 5 Subnet 6 Subnet 7 Subnet 8 Valid subnet 0 32 64 96 128 160 192 224 Network Address 10.200.20.0 10.200.20.32 10.200.20.64 10.200.20.96 10.200.20.128 10.200.20.160 10.200.20.192 10.200.20.224 Broadcast 10.200.20.31 10.200.20.63 10.200.20.95 10.200.20.127 10.200.20.159 10.200.20.191 10.200.20.223 10.200.20.255 <p>And remember, the broadcast address of the last subnet is always 255.</p> </li> <li> <p>Berapa valid host untuk setiap subnet ?     Rentang valid host adalah nilai yang beradapada rentang subnet dan broadcast, misalkan subnet 4 pada tabel diatas, maka valid hostnya adalah 95-126</p> Detail Subnet 1 Subnet 2 Subnet 3 Subnet 4 Subnet 5 Subnet 6 Subnet 7 Subnet 8 Valid subnet 0 32 64 96 128 160 192 224 Network Address 10.200.20.0 10.200.20.32 10.200.20.64 10.200.20.96 10.200.20.128 10.200.20.160 10.200.20.192 10.200.20.224 First Host 10.200.20.1 10.200.20.33 10.200.20.65 10.200.20.97 10.200.20.129 10.200.20.161 10.200.20.193 10.200.20.223 Last Host 10.200.20.30 10.200.20.62 10.200.20.94 10.200.20.126 10.200.20.158 10.200.20.190 10.200.20.222 10.200.20.254 Broadcast 10.200.20.31 10.200.20.63 10.200.20.95 10.200.20.127 10.200.20.159 10.200.20.191 10.200.20.223 10.200.20.255 </li> </ul>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/03.%20Addressing/#practice-example-1","title":"Practice Example 1","text":"<p>#2C: 255.255.255.192 (/26) In this second example, we\u2019re going to subnet the network address 192.168.10.0 using the subnet mask 255.255.255.192.</p> Details octet 1 octet 2 octet 3 octet 4 Decimal Subnetmask 11111111 11111111 11111111 11 | 000000 255.255.255.192 <p>Kita dapat ketahui terdapat 2bit network untuk subnet dan 6 bit host untuk setiap subnet.</p> <ul> <li>Berapa banyak subnet ?     Ada 2 bits host, total subnet tersedia \\(2^2\\), 4</li> <li>Banyak host per subnet ?     Ada 6 bit host, total host persubnet \\(2^6 - 2\\), 30</li> <li>Nilai subnet, 256 - 192 = 64 incremental. 0, 64,128, 192</li> <li>Broadcast per subnet, 63, 127, 191, 255</li> <li>First Host per subnet 1, 65, 129, 193</li> <li>Last Host per subnet 62, 126, 190, 254</li> </ul> <p>Dibawah ini adalah tabel rangkuman diatas.</p> Detail Subnet 1 Subnet 2 Subnet 3 Subnet 4 Valid subnet 0 64 128 192 Network Address 192.168.10.0 192.168.10.64 192.168.10.128 192.168.10.192 First Host 192.168.10.1 192.168.10.65 192.168.10.129 192.168.10.193 Last Host 192.168.10.62 192.168.10.126 192.168.10.190 192.168.10.254 Broadcast 192.168.10.63 192.168.10.127 192.168.10.191 192.168.10.255"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/03.%20Addressing/#quiz","title":"Quiz","text":"<p>question</p> <p>Submit the decimal representation of the subnet mask from the following CIDR: 10.200.20.0/27 </p> <p>Lihat tabel kolom decimal pada table di section cara membuat subnetmask</p> Jawaban <p>255.255.255.224</p> <p>question</p> <p>Submit the broadcast address of the following CIDR: 10.200.20.0/27</p> <p>Lihat tabel kolom decimal pada table di section cara membuat subnetmask</p> Jawaban <p>10.200.20.31</p> <p>question</p> <p>Split the network 10.200.20.0/27 into 4 subnets and submit the network address of the 3rd subnet as the answer.</p> <p>Lihat tabel kolom decimal pada table di section cara membuat subnetmask, dan perhatikan total host persubnet (sebelum dikurangi dengan network address dan broadcast), lalu dibagi dengan 4.</p> Jawaban <p>Total host persubnet adalah \\(256-224\\), 32, dibagi dengan 4 subnet, sehingga total hostnya adalah 8 host, dimana Classless Inter-Domain Routingnya adalah 256 - 8, 248, </p> Octet 1 Octet 2 Octet 3 Octet 4 CIDR 11111111 11111111 11111111 11111000 /29 <p>Sekarang kita dapat mengetahui;</p> <ul> <li>Total subnet, \\(2^5\\). Ada 64 subnet</li> <li>Daftar subnet 0, 8, 16, 24, ..., 255</li> </ul> <p>Sehingga kita bisa mengetauhi network address subnet ke 3, yaitu 10.200.20.16</p> <p>question</p> <p>Split the network 10.200.20.0/27 into 4 subnets and submit the broadcast address of the 2nd subnet as the answer.</p> Jawaban <p>Ingat, broadcast address adalah \\((subnet diatasnya) - 1\\), subnet ke-3 adalah 16, maka broadcast ke-2 adalah 15. 10.200.20.15.</p>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/99.%20Additional%20notes/","title":"Additional Notes","text":"<ul> <li>Split tunneling</li> <li>Proxy aware</li> <li>Command &amp; Control</li> </ul>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/99.%20Additional%20notes/#apa-itu-vpn-split-tunneling","title":"Apa itu VPN split tunneling","text":"<p>Info</p> <p>Resource : https://cybernews.com/what-is-vpn/split-tunneling/</p> <p>Split tunneling adalah fitur dari VPN yang membagi internet traffic dan mengirim sebagian traffic tersebut melalui encrypted virtual private network tunnel, dan memnagi sisanya pada tunnel yang terpisah dalam open network. Biasanya, split tunnling membuat kita dapat memilih aplikasi mana yang diamankan lalu lintasnya melalui VPN dan aplikasi mana yang terhubung dengan cara yang normal.</p>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/99.%20Additional%20notes/#bagaimana-cara-kerja-vpn-split-tunneling","title":"Bagaimana cara kerja VPN-Split tunneling","text":"<p>Bawaanya, mesin kita mungkin hanya memliki satu koneksi tunggal ke internet (WAN) dimana data tersebut dikirim dan diterima. Namun, ketika menggunakan VPN, makan VPN akan membuat sebuah jaringan yang aman (secure connection) antara mesin dan VPN server. Selanjutnya VPN server yang akan mengakses keinternet. Sehingga setuap bit data yang dikirim dan diterima akan melalui VPN server dahulu.</p> <p></p> <p>Dilain sisi membuat lalulintas data menjadi lebih aman namun juga membuat lebih lambat karena semuanya harus melalui VPN server terlebih dahulu.</p> <p>Split tunelling berkerja dengan membuat dua koneksi pada waktu yang bersamaan (two connections at the same time), koneksi aman VPN dan koneksi terbuka ke internet. Sehingga data terenkripsi dengan aman tanpa harus memperlambat internet.</p>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/99.%20Additional%20notes/#macam-macam-split-tunneling","title":"Macam-macam split tunneling","text":"<ol> <li> <p>URL-based split tunneling     Tipe ini membuat kita dapat memilih URL mana yang kita ingin buat aman dengan cara mengencrypt melalui VPN. Biasanya menggunakan VPN pada ekstention browser.</p> </li> <li> <p>App-based split tunneling     Sama dengan URL, bedanya kita dapat memliki aplikasi mana yang lalulintasnya ingin diarahkan ke VPN server sedangkan yang lainnya melalui jaringan yang terbuka.</p> </li> <li> <p>Inverse split tunneling     Berbeda dengan dua tipe diatas, tipe ini berkerja kebalikannya. Dua tipe diatas bawaanya semua URL dan aplikasi melalui jaringan terbuka dan kita memilikih URL dan applikasi mana yang ingin diarahkan ke VPN server. Tipe ini justru bawaanya melalui VPN server dan kita memiliki URL dan applikasi mana yang ingin melalui jaringan terbuka.</p> </li> </ol>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/99.%20Additional%20notes/#pros-dan-cons-penggunaan-split-tunneling","title":"Pros dan Cons penggunaan split tunneling","text":"<code>Pros</code> <ol> <li>Meningkatkan kecepatan internet jika dibandingkan dengan full tunneling</li> <li>Membuat anda dapat mengakses dua jaringan dalam waktu yang bersamaan, jadi anda dapat mengakses corporate network atau foreign network namun juga tetap bisa mengakses local network. Jadi anda tidak perlu mematikan dan menyalakan VPN untuk melakukan, download dengan kecepatan tinggi, stream foreign films dan masih mendapatkan pencarian lokal dari google search (tidak mengikuti daerah vpn), dan tetap dapat mengakses lokal kenoksi seperti printer bersamaan dengan tetap menjaga prifacy pada jaringan internet.</li> </ol> <code>Cons</code> <ol> <li>Split tunneling melewatin pengukuran keamanan oleh VPN pada sebagian koneksi yang terbuka sehingga memberi sebagian aktifitas online anda rentan terhadap hacker.</li> <li>Membutuhkan waktu untuk mengatur split tunneling, karena harus memliki URL dan aplikasi mana yang ingin diarahkan ke VPN server.</li> <li>Tidak semua VPN menyediakan fitur split tunnel VPN dan tidak semua fitur ini dapat berjalan disemua operating system.</li> </ol>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/99.%20Additional%20notes/#apakah-vpn-split-tunneling-aman","title":"Apakah VPN split tunneling aman ?","text":"<p>Split tunneling lebih aman daripada tidak menggunakan sama sekali. Namun mengarahkan semua lalu lintas jaringan ke VPN server jelas lebih aman dari pada hanya sebagian saja.</p>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/99.%20Additional%20notes/#resiko-split-tunneling","title":"Resiko split tunneling","text":"<ul> <li>Melewati pengukuran keamanan, termasuk porxy server yang dibentuk untuk membuat lalulintas aman.</li> <li>Jika tidak diatur dengan benar maka akan memberikan ruang untuk hacker mengambil informasi berharga yangmana juga tidak disembunyikan oleh ISP yang kita gunakan.</li> <li>Membahayakan keamanan sistem perushaan jika pegawai didalamnya menggunakan less secure network (jaringan yang kurang aman)</li> <li>Pegawai dapat mem-bypass ijin pada jaringan perusahaan, artinya mereka dapat mengakses situs yang diblock atau mengunduh hal yang berbahaya.</li> <li>Pegawai IT dapat kehilangan monitor atas apa yang dilakukan pegawai lainya terhadap aktivatis mereka pada internet.</li> </ul>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/99.%20Additional%20notes/#kapan-harus-menggunakan-split-tunneling","title":"Kapan harus menggunakan split tunneling","text":"<p>Anda dapat menggunakan split tunneling jika anda ingin mengamamkan sebagian trafik jaringan dan dilain sisi tidak ingin kehilangkan kecepatan internet.</p>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/99.%20Additional%20notes/#proxy-aware","title":"Proxy Aware","text":"<p>Proxy aware secara umum artinya sebuah sistem atau aplikasi yang didesain untuk bekerja dengan atau melewati proxy server</p> <p>Proxy server adalah penengah antara client (seperti web browser) dan sebuah server (seperti website). Ketika client mengirim request ke server, request tersebut pertama kali akan masuk kedalam proxy server, yang mana akan dilanjutkan request tersebut ke server. Server akan memberikan responds ke proxy server, yang mana juga akan dikirim respone tersebut ke client.</p> <p>Sistem atau aplikasi dikatakan proxy aware jika dibentuk dan dapat berkerja dengan benar ketika diakses melalui proxy server. Artinya, sistem dan aplikasi tersebut dapat dengan benar menangani request dan respone yang dikirim melauai proxy server dan juga dapat dikonfigurasi untuk menggunakan spesifik pengaturan yang dibutuhkan.</p> <p>Sebagai contoh, sebuah web browser dikatakan proxy aware jika dapat dikonfigurasi untuk menggunakan proxy server dan port tertentu untuk semua lalu lintas internet, yang membuat aplikasi tersebut dapat mengakases website yang mungkin di block oleh firewall.</p> <p>Kesimpulan</p> <p>Jadi kesimpulannya adalah proxy aware adalah sebauh sistem atau aplikasi yang dapat berkerjasama dengan proxy server.</p>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/99.%20Additional%20notes/#command-and-control","title":"Command and Control","text":""},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/99.%20Additional%20notes/#sumber-1","title":"Sumber 1","text":"<p>resource</p> <p>Learning Malware Analysis oleh Monnappa KA publisher Packt Publishing</p> <p>Command and Control atau disebut dengan C2 merujuk pada bagaimana attacker berkomunikasi dan mengontrol sistem yang telah terinfeksi. Setelah sistem terinfeksi, banyak malware yang tertanam berkomunikasi dengan C2 server miliki attacker agar dapat mengirim sebuah command, mengdonwload komponen tertentu atau mengambil informasi berharaga dari sistem yang telah terinfeksi.</p> <p>Untuk mendapatkan C2, musuh menggunakan berbagaimana macam teknik dan protokol, dahulu banyak yang menggunakan Internet Relay Chat (IRC). Namun untuk saat ini kebanyakan menggunakan HTTP/htTPS. karena dengan menggunakan protokol tersebtu, penyerang dapat mem-bypass filrewalls/network-based detection system dan menggabungkan command dengan traffic web yang sah. Terkadang malware juga menggunakan P2P untuk komunikasi C2. Bahkan ada beberapa malware menggunakan DNS tunneling untuk komunikasi C2. </p>"},{"location":"Hack%20The%20Box/Introduction%20to%20Networking/99.%20Additional%20notes/#sumber-2","title":"Sumber 2","text":"<p>Info</p> <p>Sumber : https://www.varonis.com/blog/what-is-c2</p> <p>Seranga siber tidak hanya sebatas berhasil masuk kedalam dan menginfkesi sistem, namun tetap mengikat sistem yang telah terinfeksi sehingga pelaku serangan tetap mampu berkomunikasi dengan sistem tersebut, dan memiliki potensi mengambil data yang sensitive. Untuk mencapai itu, attacker menggunakan mekanis C2, command and control.</p> <p>C2 adalah sekumpulkan alat yang digunakan oleh attacker untuk memaintain komunikasi terhadap device yang terinfeksi atas tindak lanjut eksploitasi awal. Mekanisme yang digunakan sangat bervariasi, namun secara umum C2 terdiri dari satu atau saluran komunkasi tersembuyi (channel communication) antara device yang ada pada organisasi dan platform yang digunakan oleh attacker. channel communication digunakan oleh attacker untuk mengirimkan command, mendonwload payload lainnya dan mencuru data sensitif.</p> <p>C2 memiliki berbagai macam bentuk. MITTRE ATT&amp;CK framework membuat 16 daftar command and control teknik. Teknik yang paling umum digunakan adalah mencampurkan C2 dengan traffic yang legal yang mungkin sering digunakan oleh organisasi seperit, HTTP/HTTPS, DNS. Attacker juga dapat menggunakan aksi lain untuk menyamarkan C&amp;C callbacks seperti menggunakan encryption atau data encoding yang tidak biasa.</p> <p>Platform C2 yang paling sering digunakan oleh kriminal dan pentester adalah <code>CobaltStrike</code>, <code>Convenant</code>, <code>PowerShell Empire</code> dan <code>Armitge</code>. </p>"},{"location":"Hack%20The%20Box/Sql%20Injection/01.%20Index/","title":"Preface Sql Injection","text":"<p>Info</p> <p>Dibawah ini adalah catatan dari platform Hack The Box pada module SQL Injection Fundamentals</p> <p>Sebelum masuk ke bagian catatan ini setidaknya pahami salah satu database yang paling banyak digunakan, yaitu Mysql</p> <p>Catatan selanjutnya esensial dari SQL Injection.</p>"},{"location":"Hack%20The%20Box/Sql%20Injection/01.%20Index/#what-is-an-injection","title":"What is an Injection?","text":"<p>Sanitasi merujuk kepada menghilangkan karakter spesial nilai masukan dengan maksud mematahkan percobaan injeksi. </p> <p>Injeksi terjadi ketika sebuah aplikasi salah menafsirkan nilai masukan dari user sebagai sebuah kode dari pada sebuah string, dan mengubah flow code serta mengeksekusi kode tersebut. Injeks bisa terjadi ketika menggunakan escape karakter seperti ++'++ diikut dengan kode yang akan dieksekusi, seperti kode JavaScript atau SQL. Jika nilai masukan tersebut tidak disanitasi makan sangat mungkin terjadi kode injek tersebut diekskusi dan berjalan,</p>"},{"location":"Hack%20The%20Box/Sql%20Injection/01.%20Index/#sql-injection","title":"SQL Injection","text":"<p>SQL Injeksi terjadi jika nilai masukan dari user tidak difilter dan disanitasi dengan baik sehingga diekesekusi oleh SQL.</p> PHP<pre><code>$searchInput =  $_POST['findUser'];\n$query = \"select * from logins where username like '%$searchInput'\";\n$result = $conn-&gt;query($query);\n</code></pre> <p>Kode php diatas menerima nilai masukan dari user melalui method POST yang mana niai tersebut digunakan untuk mencari data pata tabel <code>logins</code> dengan nama <code>username</code> mirip atau sama dengan nilai masukan dari user. Katakan nila masukan dari user adalah <code>farras</code>. Sehingga query yang akan dijalankan oleh SQL seperti dibawah ini.</p> SQL Query<pre><code>SELECT * FROM logins WHERE username LIKE '$farras';\n</code></pre> <p>Karena tidak ada sanitasi pada kode PHP kita dapat menggunakan escape karakter dan menginjeksi kode. katakan kita membuat sebuah perintah untuk meng-drop tabel user menggunakan nilai masukan user <code>farras'; DROP TABLE users;--</code> sehingga SQL query yang akan dijalankan seperti dibawah ini.</p> SQL Query<pre><code>SELECT * FROM logins WHERE username LIKE '$farras'; DRIOP TABLE users;-- ' \n</code></pre> <p>Query diatas saya menambahkan <code>--</code> seagain komen agar karakter <code>'</code> tidak menyebabkan error pada SQL. Nanti juga akan dibahas tentang komen pada SQL</p> <p>Warning</p> <p>Query tepat diatas saya menuliskan query lain setelah semi collon <code>;</code>. Query tersebut tidak akan dijalankan oleh MysQl, namun dijalankan oleh PostgreSql dan MSSQL. InsyaAllah di catatan selanjutnya akan dipaparkan injeksi pada MySql.</p>"},{"location":"Hack%20The%20Box/Sql%20Injection/01.%20Index/#types-of-sql-injections","title":"Types of SQL Injections","text":"<pre><code>graph\n  A[Type SQL Injection] --&gt; B[In-band];\n  A --&gt; C[Blind];\n  A --&gt; D[Out-of-band];\n  B --&gt; E[Union Based];\n  B --&gt; F[Error Based];\n  C --&gt; G[Boolean Based];\n  C --&gt; H[Time Based];\n  D --&gt; I[Out-of-band];</code></pre> <p>In-band SQL Injection, nilai keluaran dari injeksi terpampang pada front end dan kita dapat langsung membaca hasil dari injeksi. Tipe ini ada dua tipe lagi;</p> <ol> <li> <p><code>Unin Based</code>     Kita dapat mengeksekusi lokasi tepat seperti <code>column</code> yang mana kitadapat baca, sehingga query akan langsung ditampilkan di lokasi tersebut.</p> </li> <li> <p><code>Error Based</code>     Hasil error dari PHP atau SQL yang didapatkan ketika meng-injeksi dapat digunakan untuk payload selanjutnya atau menguji sql injeksi lain melalui hasil dari error tersebut.</p> </li> </ol> <p>Blind, berbeda dengan In-band, SQL injection blind ini tidak tampil pada fron end. Maka dari itu injeksi ini memanfaatkan logic untuk mendapatkan karakter demi karakter. Tipe ini ada dua, yaitu <code>Boolean Based</code> dan <code>Time Based</code>.</p> <p>Out-of-band injection, pada kasus tersebut nilai keluara tidak ditampilkan, akan tetapi kita bisa mengarahkan hasil output tersebut ke remote location seperti, DNS misalnya, dan mencoba mengakses lokasi tersebut.</p> <p>Pada catatan selanjutnya pada HTB hanya dipelajarin tentang In-band injection</p>"},{"location":"Hack%20The%20Box/Sql%20Injection/02.%20Subverting%20query%20logic/","title":"Subverting Query Logic","text":"<p>Katakan kita ingin mem-bypass login page menggunakan SQL Injection</p> <p></p> <p>Query untuk login yang umum kita telah ketahui adalah seperti dibawah ini</p> <pre><code>SELECT * FROM logins WHERE username='admin' AND password = 'p@ssw0rd';\n</code></pre>"},{"location":"Hack%20The%20Box/Sql%20Injection/02.%20Subverting%20query%20logic/#sqli-discovery","title":"SQLi Discovery","text":"<p>Sebelum kita mencoba untuk menembus logika pada web aplikasi dan mencoba untuk menerobos autentikasi, perta kita harus menguji apakah form login tersebut rentan terhadap SQL injection atau tidak. Untuk itu kita dapat mencoba menggunakan beberapa payloads dibawah ini.</p> Payload URL Encoded <code>'</code> <code>%27</code> <code>\"</code> <code>%22</code> <code>#</code> <code>%23</code> <code>;</code> <code>%3B</code> <code>)</code> <code>%29</code> <p>Note</p> <p>Pada kasus tertentu, kita mungking harus menggunakan versi URL encoded ketika mengirim payload. Sebagai contoh ketika kita mengirim payload langsung pada URL,HTTP GET request.</p> <p>Mari kita coba kirim payload menggunakan karakter <code>'</code>, sehingga query yang akan dijalankan Sql adalah</p> <pre><code>SELECT * FROM logins WHERE username=''' AND password = '';\n</code></pre> <p>POC</p> Sent payloadRespone payload <p></p> <p></p> <p>Berdasrkan hasil payload diatas dapat kita simpulkan form login tersebut rentan terhadap SQL injection.</p>"},{"location":"Hack%20The%20Box/Sql%20Injection/02.%20Subverting%20query%20logic/#or-injection","title":"OR Injection","text":"<p>Agar berhasil masuk dengan mem-bypass login form, kita harus memaskan nilai masukan pada form yang mana harus mengeluarkan hasil True pada query. Kita bisa menggunakan statement OR. Katakan kita mamasukan payload <code>admin' OR 1 = '1</code> sehingga query nya menjadi</p> <pre><code>SELECT * FROM logins WHERE username='admin' OR 1 = '1' AND password = '';\n</code></pre> <p>Satement <code>AND</code> lebih dahulu di eksekusi, selanjutnya statement <code>OR</code>. Karena logic <code>1 = '1'</code> berniali true maka hasil dari query tersebut selalu bernilai <code>True</code> walaupun nilai password tidak kita ketahui atau kita isi dengan nilai asal.</p> <p>POC</p> Sent payloadRespone payload <p></p> <p></p>"},{"location":"Hack%20The%20Box/Sql%20Injection/02.%20Subverting%20query%20logic/#quiz","title":"Quiz","text":"<p>question</p> <p>Try to log in as the user 'tom'. What is the flag value shown after you successfully log in? </p> <p>Janga lupa untuk menggunakan <code>Openvpn</code> dan spawn target di HTB</p> Jawaban <p>Ingat kita telah mengetahui sql query (namun pada real life kita tidak mengetahui query login atau query yang mau kita injek seperti apa) login form tersebut;</p> <pre><code>SELECT * FROM logins WHERE username='' AND password = '';\n</code></pre> <p>Kita bisa menggunaka pyload <code>tom' OR 1 = '1</code> yang membuat query menjadi</p> <pre><code>SELECT * FROM logins WHERE username='tom' OR 1 = '1' AND password = '';\n</code></pre> <p>Oke akhirnya kita mendapatkan flag </p> <pre><code>202a1d1a8b195d5e9a57e434cc16000c\n</code></pre>"},{"location":"Hack%20The%20Box/Sql%20Injection/03.%20Using%20comments/","title":"Using Comments","text":"<p>Sebelumnya kita telah berhasil menembus form login menggunakan logika OR sehingga selalu menghasilkan nilai true walaupun kita tidak mengetahui password dari user. kita memanfaatkan logika AND yang dijalankan terlebih dahulu dibandingkan dengan OR statement. Namun bagaimana jika query dari form login yang digunakan seperti ini,</p> <pre><code>SELECT * FROM logins WHERE (username='username' AND id &gt; 1) AND password = 'password';\n</code></pre> <p>Katakan kita menggunakan payload yang sama dengan sebelumnya, yaitu <code>admin' OR 1 = '1</code>, sehingga full quernya,</p> <pre><code>SELECT * FROM logins WHERE (username='admin' OR 1 = '1' AND id &gt; 1) AND password = 'password';\n</code></pre> <p>Opss, logika yang ada didalam paranthesis akan dijalanakn lebih dahulu, lalu di sandingkan lagi dengan logika <code>AND</code> setelahnya. Sehingga tetap saja kita harus mengetahui password dari user. </p> <p>Oke, kita bisa menggunakan komen yang disediakan oleh SQL, termasuk MySql, Postgre Sql, dan atau MSSQL.</p>"},{"location":"Hack%20The%20Box/Sql%20Injection/03.%20Using%20comments/#comments","title":"Comments","text":"<p>Kita dapat menggunakan dua tipe baris komen dengan MySQL <code>--</code> dan <code>#</code>, dan tambahan in-line comment <code>/**/</code> (komen ini tidak biasa digunakan oleh SQL injections).</p> <p>Khusus untuk koment <code>--</code> pastikan setalh dash ke dua haris diberi spasi tambahan menjadi <code>--</code> dan terkadang baiknya kita tambahkan dash setelah spasi agar kita pastikan sudah ada spash setelah dua dash, <code>-- -</code>. Dan terkadang ketika di URL encoded menjadi <code>--+</code>.</p> <p>Jika kita menggunakan <code>#</code> dapalam payload di URL, karakter sharp tersebut dianggap tag pada URL, sehingga jika menggunakan payload para URL untuk injeksi url gunakan <code>%23</code> yang mana akan di encode menjadi <code>#</code>.</p>"},{"location":"Hack%20The%20Box/Sql%20Injection/03.%20Using%20comments/#bypass-using-comment","title":"Bypass using comment","text":"<p>Oke, mari kita manfaatkan komen pada payload pada query yang kita lakukan diatas, <code>admin' OR 1 = '1');-- -</code>, sehingga full querynya menjadi</p> <pre><code>SELECT * FROM logins WHERE (username='admin' OR 1 = '1');-- -' AND id &gt; 1) AND password = 'password';\n</code></pre> <p>POC</p> Sent payloadRespone payload <p></p> <p></p>"},{"location":"Hack%20The%20Box/Sql%20Injection/03.%20Using%20comments/#quiz","title":"Quiz","text":"<p>question</p> <p>Login as the user with the id 5 to get the flag. </p> <p>Janga lupa untuk menggunakan <code>Openvpn</code> dan spawn target di HTB</p> Jawaban <p>Ingat kita telah mengetahui sql query (namun pada real life kita tidak mengetahui query login atau query yang mau kita injek seperti apa) login form tersebut;</p> <pre><code>SELECT * FROM logins WHERE (username='username' AND id &gt; 1) AND password = 'password';\n</code></pre> <p>Kita bisa menggunaka payload <code>1' OR id = '5' AND 1 = '1');-- -</code> yang membuat query menjadi</p> <pre><code>SELECT * FROM logins WHERE (username='1' OR id = '5' AND 1 = '1');-- -' AND id &gt; 1) AND password = 'password';\n</code></pre> <p>Oke akhirnya kita mendapatkan flag </p> <pre><code>cdad9ecdf6f14b45ff5c4de32909caec\n</code></pre>"},{"location":"Hack%20The%20Box/Sql%20Injection/04.%20Union%20clause/","title":"Union Clause","text":"<p>Sebelum membaca catatan selanjutnya, pastikan anda memahami UNION pada SQL, sekarang baru tersedia UNION untuk MySql, di how to use union join.</p>"},{"location":"Hack%20The%20Box/Sql%20Injection/04.%20Union%20clause/#quiz","title":"Quiz","text":"<p>question</p> <p>Connect to the above MySQL server with the 'mysql' tool, and find the number of records returned when doing a 'Union' of all records in the 'employees' table and all records in the 'departments' table. </p> <p><code>Authenticate to [IP_IS_HERE] with user \"root\" and password \"password\"</code></p> <p>Janga lupa untuk menggunakan <code>Openvpn</code> dan spawn target di HTB</p> Jawaban <p>Buka terminal anda, atau gunakan SQL generic tool atau MySql workbench. Namun pada catatan ini saya menggunakan terminal. Setelah menjalankan taget pada HTB akan muncul alamat IP serta portnya. Gunakan parameter tersebut untuk masuk.</p> <pre><code>maruffarras@BrownTofu:~$ mysql -u root -p -P 31298 -h 46.101.9.98\nmysql&gt;  #(1)!\n</code></pre> <ol> <li>Prompt mysql adalah <code>mysql&gt;</code></li> </ol> <p>Jika berhasil masuk maka akan muncul prompt mysql. Jalankan query dibawah ini untuk mengetahui jawaban dari pertanyaan quiz.</p> <p><pre><code>select count(*) from employees union select count(*) from departments;\n+----------+\n| count(*) |\n+----------+\n|      654 |\n|        9 |\n+----------+\n2 rows in set (0,19 sec)\n</code></pre> Total ada 663 record</p>"},{"location":"Hack%20The%20Box/Sql%20Injection/05.%20Union%20Injection/","title":"Union Injection","text":"<p>Dalam menggunakans alah satu time in-bind injecion ini, kita harus memastikan letak dari nilai select ditempatkan dimana. Kita bisa mencoba menggunakan query singakat untuk mengetahuinya.</p> <p>POC</p> Sent payload <pre><code>a' UNION SELECT 1,2,3 -- -\n</code></pre> <p></p> <p>Opps, ternyata ada perbedaan antara jumlah kolom yang di select antara dua statement select. kita bisa mencoba jumlah select hingga menampilkan hasil injeksi query.</p> <p>POC</p> Sent payload <pre><code>a' UNION SELECT 1,2,3,4 -- -\n</code></pre> <p></p> <p>Kita juga dapat menggunakan global variabel pada kolom select untuk mengetahui informasi tertentu melalui global variable yang ditanam pada Uninon injection.</p> <p>POC</p> Sent payload <pre><code>a' UNION SELECT 1,@@version,@@version_compile_os ,4 -- -\n</code></pre> <p></p>"},{"location":"Hack%20The%20Box/Sql%20Injection/05.%20Union%20Injection/#quiz","title":"Quiz","text":"<p>question</p> <p>Use a Union injection to get the result of 'user()' </p> <p>Janga lupa untuk menggunakan <code>Openvpn</code> dan spawn target di HTB</p> Jawaban <pre><code>a' UNION SELECT 1,2,user(),4 -- -\n</code></pre> <p></p> <p>Jawabannya, root@localhost</p>"},{"location":"Hack%20The%20Box/Sql%20Injection/07.%20Mitigation/","title":"Mitigating SQL Injection","text":"<p>Telah dicatata dibab sebelumnya tentang sql injection, mengapa terjadi dan bagaimana kita dapat mengeksploit mereka. Dan kita juga harus paham bagaimana menghindaran kerentanan pada kode kita sehingga dapat menghindari sql injection.</p> <p>Ada beberapa cara yang bisa dilakukan untuk menghindari sql injectin.</p> <ol> <li>Sanitasi input</li> <li>Input validation</li> <li>User Privileges</li> <li>Web Application Firewall</li> <li>Parameterized Queries</li> </ol> <p>Oke alhamdulillah catatan ini sudah selesain </p>"},{"location":"Hacking/Index/","title":"Preface Hacking","text":"<p>Bismillah pada catatan ini saya menuliskan setiap ilmu yang saya dapat dari buku dan internet guna mendalami ilmu saya tentang cyber security. Pada bagian catatan ini saya membuat dua bab besar, </p> <p>Pertama adalah catatan tentang <code>security</code> secara umum namun dalam dan </p> <p>Kedua tentang <code>tools</code> yang berfokus bagaimana cara menggunakan tools security tersebut.</p>"},{"location":"Hacking/Comptia%20Security%20%2B/01_index/","title":"Preface","text":"<p>Bismillah, buka yang diapaki pada catatan ini adalah Comptia Security +, Certification Study Guide | Fourth Edition</p>"},{"location":"Hacking/Comptia%20Security%20%2B/02.%20Introduction%20to%20Security%20Termonoligy/","title":"Introduction to Security Terminology","text":""},{"location":"Hacking/Comptia%20Security%20%2B/02.%20Introduction%20to%20Security%20Termonoligy/#tujuan-dari-keamanan-informasi-information-security","title":"Tujuan dari Keamanan Informasi (Information Security)","text":"<p>Sebagai ahli keamanan informasi, kita bertugas untuk mencapai inti utama dari keamanan informasi. Tujuan intinya adalah, kerahasiaan (Confidentiality), keutuhan (Integrity), dan ketersediaan (Availbility), kita singkat menjadi CIA.</p>"},{"location":"Hacking/Comptia%20Security%20%2B/02.%20Introduction%20to%20Security%20Termonoligy/#confidentiality","title":"Confidentiality","text":"<p>Salah satu tujuan dari keamanan informasi adalah memastikan hanya orang yang memiliki otoritas yang dapat mengakses informasi atau membaca informasi. Ada beberapa teknologi yang dapat digunakan untuk meraihnya, seperti permission dan encryption.</p>"},{"location":"Hacking/Comptia%20Security%20%2B/02.%20Introduction%20to%20Security%20Termonoligy/#accsess-control-permission","title":"Accsess Control Permission","text":"<p>Network Administrtor mengamankan informasi dengan cara memberikan batasan hak akses pada file-file atau folder kepada user atau group tertentu, istilah ini disebut dengan building accsess control list.</p> <p></p>"},{"location":"Hacking/Comptia%20Security%20%2B/02.%20Introduction%20to%20Security%20Termonoligy/#encryption","title":"Encryption","text":"<p>Mengatur file permission pada sebuah data tidaklah cukup untuk mengamankan data. Mengapa ? karena banyak perusahan menyimpan data pada sebuah server, dimana user yang memiliki otoritas dapat mengakses file tersebut. file permission memastikan bahwa hanya user yang tertentu yang dapat mendownload file tersebut melalui jaringan. Akan tetapi file permission tidak dapat membuat file tersebut tidak dapat dibaca ketika proses transmitting file dari server ke client. Disinilah fungsi encryption, dimana informasi dari file yang dikirim melaui network akan dirubah menjadi format yang tidak dapat dibaca hingga informasi tersebut sampai pada user yang memiliki otoritas dan dijadikan format yang dapat dibaca seperti semula, disebut dengan decryption.</p> <p>Kita dapat meng-enkripsi file dalam dua tingakatan, <code>enkripsi file pada storage</code>, kedua adalah <code>meng-engkripsi file pada saat transit</code>. Salah satu manfaat yang kita dapat dalam ekripsi file pada storage adalah, ketika seorang hacker dapat mengakses akses secara fisik pada sistem, hacker dapat mem-bypass file permission pada file tertentu, akan tetapi file tersebut tidak akan dapat dibaca, karena dalam bentuk unreadable format, encrypted. </p> <p>Ketika kita meng-enkripsi file saat transit dari satu lokasi ke lokasi yang lain, artinya kita meng-enkrip communication channel antara dua sistem. Walaupun ada man in the middle attack, maka actor tersebut tetap tidak dapat membaca informasi yang di encrypt tersebut pada saat berlangsungnya proses transit.</p>"},{"location":"Hacking/Comptia%20Security%20%2B/02.%20Introduction%20to%20Security%20Termonoligy/#steganography","title":"Steganography","text":"<p>Selain encryption, ada cara lain untuk membuat file tetap tersembunyi. Yaitu menggunakan steganography. Apa itu steganography ? itu adalah sebuah metode meyembunyikan informasi pada sebuah area yang tidak terlihat didalam file lain. Sebagai contoh, kita dapat menyembunyikan file text kedalam file grafis. Informasi tersebut di-embed kedalam file grafis menggunakan program serta pharase atau password yang digunakan kembali untuk meng-ekstrak informasi dari file covernya.</p> <p>Note</p> <p>Berikut adalah catatan tentang tools yang dapat digunakan untuk menyembunyikan file text kedalam images. How to use steghide</p>"},{"location":"Hacking/Comptia%20Security%20%2B/02.%20Introduction%20to%20Security%20Termonoligy/#integrity","title":"Integrity","text":"<p>Konsep dari integratitas adalah kita memastikan data yang dikirim dari sebuah titik ke titik yang lain, informasi yang diterima tetap sama, tidak ada informasi yang berubah. Atau dengan katalain memastikan data tersebut tidak berubah selama proses pemindahan data.</p>"},{"location":"Hacking/Comptia%20Security%20%2B/02.%20Introduction%20to%20Security%20Termonoligy/#hashing","title":"Hashing","text":"<p>Untuk memastikan data integrity ketika berkomunikasi melalui jaringan, sistem yang mengirim informasi tersebut menjalankan sebuah matematika algoritma yang kita kenal dengan hashing algorithhm yang menghasilkan hash value. Hash value tersebut akan dikirimkan bersama data. Pada tempat yang menerima data dan hash value juga melakukan proses yang sama untuk mendapatkan hash value dari data yang diterima, lalu hash value dibandingkan, jika nilainya sama maka tidak terjadi perubahan data saat proses trasmisi berlangsung.</p> <p></p> <p>Keutuhan sebuah data bukan hanya pada saat proses perpindahan data namun termasuk data yang berada dalam penyimpanan. Pada lingkungan yang sangat aman, kita ingin memastikan bahwa data yang baru saja disimpan oleh user tidak dapat berubah, dalam kata lain utuh, hingga user tersebut membuka kembali file tersebut. Untuk memastikan keutuhan sebuah data kita dapat menggunakan hash program yang menghitung nilai hash pada saat pertama kali file tersebut disimpan dan dibandingkan dengan nilai hash pada saat file tersebut dibuka kembali. Jika nilai tersebut tidak sama maka terjadi perubahan data pada file tersebut.</p> <p>Data integrity digunakan untuk beberapa skenario, seperti saat kita mendownload file diinternet dimana seringkali penyedia file tersebut biasanya menampilkan nilai hash pada web agar setelah proses download selesai kita dapat menyandingkan nilai hash yang tersedia pada web dengan nilai hash setelah file tersebut ada pada komputer kita. Jika tidak sama maka terjadi alter saaat proses transit data, dan jika itu terjadi jangan pernah untuk membuka atau meng-eksekusi file tersebut.</p> <p>Tip</p> <p>Sangat penting untuk megimplementasi pembatasan hak akses untuk menjamin keutuhan data dimana kita memegang hak akses penuh untuk mengatur user yang dapat merubah data.</p>"},{"location":"Hacking/Comptia%20Security%20%2B/02.%20Introduction%20to%20Security%20Termonoligy/#availibility","title":"Availibility","text":"<p>Ketersediaan adalah konsep selanjutnya dari keamanan informasi. Konsep ini memastikan user dapat mengakses file jika diinginkan. Kita dapat menggunakan beberapa teknik untuk menjami ketersediaan informasi.</p> <ol> <li>Backups, pastikan melakukan backup informas penting secara berkala, sehingga ketika terjadi data corrupt  kita dapat me-restore nya dari backup.</li> <li> <p>Fault Tolerance, kita dapat mengimplementasi data redudancy solution untuk memastikan ketersediaan data. Karena, jika driver utama rusak, maka driver yang lainnya dapat digunakan karena memliki salinannya. Menggunakan lebih dari stau driver secara bersamaan disebut dengan RAID (Redudant Array of Independent Disk).</p> Another Resources <p>Untuk bacaan lebih lanjut dapat melihat daftar dibawah ini;</p> <ul> <li>Wikipedia</li> <li>Techtarget</li> <li>Youtube - What is Raid 0,1,5, and 10</li> <li>Youtube - Raid levels</li> </ul> <p>Berbicara tentang tingkatan RAID, hanya RAID level 1 yang menjamin fault tolerance, dimana RAID level 0 hanya bertujuan untuk meningkatkan performa komputer.</p> </li> <li> <p>Cluestering, untuk menjamin ketersedian service seperti webserver, database sever, atau email server, kita dapat menggunakan solusi high-availibility seperti clustering. Clustering membuat kita dapat menggunakan lebih dari satu server yang seolah-olah satu server yang berjalan. Manfaatnya, katakan jika salah satu web server mati, maka server yang lainnya akan mengambil tugas tersebut secara cepat sehingga seolah-olah tidak terjadi masalah seperti downtime didepan layar user.</p> </li> <li> <p>Patching, membuat sistem tetap up to date dengan cara selalu update service atau security patch, biasa disebut dengan patching. Patching sistem mengurangi celah keamanan pada sistem dan menurunkan kemungkinan sistem diserang.</p> </li> </ol>"},{"location":"Hacking/Comptia%20Security%20%2B/02.%20Introduction%20to%20Security%20Termonoligy/#accountablity","title":"Accountablity","text":"<p>Beberapa tahun terakhir menunjukan bahwa huruf A pada CIA dapat merepresentasikan Availibility serta Accountability. Accountability (dapat dipertanggung jawabkan) disini memastikan bahwa user bertanggung jawab atas aksi yang dilakukannya. Sebagai contoh, katakan secara tidak sengaja atau sengaja user menghapus sebuah file, sebuah record atas aksi tersebut harus ada untuk pertanggung jawaban aksinya.</p> <p>Untuk mengimplementasi accountability kita dapat dengan cara mengimplementasi fitur auditing dan loging pada sistem, routers, firewall atau aplikasi. Konsepnya, jika kita mencatat semua aksi, dapat kita sebut logging, suatu saat, ketika dibutuhkan, kita dapat dengan mudah mengetahui siapa yang menyebabkan suatu kejadi terjadi. Dengan demikian kita dapat menahan user tersebut dan kita mintai keterangan dan pertanggung jawaban atas aksinya.</p> <p>Berikut adalah beberapa metode yang dapat kita gunakan untuk menerapkan accountability pada sebuah organisasi, seperti; log files, audit files, Firewalls and Proxy Servers, application logging</p>"},{"location":"Hacking/Comptia%20Security%20%2B/02.%20Introduction%20to%20Security%20Termonoligy/#latihan","title":"Latihan","text":"Pertanyaan <p>A. You have configured auditing on your SQL server so that if a user deletes a customer record, the information is recorded in the audit log (1)</p> <p>B. You have configured BitLocker To Go on a USB drive for Bob to be able to store files on the USB drive in an encrypted format. (2)</p> <p>C. Sue has configured the e-mail server in a server cluster with another server so that if one of the servers fails, the other server can handle the workload. (3)</p> <p>D. You place the current budget spreadsheet on the company intranet server so that employees can download the file. You publish the hash value of the file on the web site as well. (4)</p> <p>E. Critical tasks are divided into different jobs, with each person performing one of the different jobs. (5)</p> <ol> <li>Accountability</li> <li>Confidentiality</li> <li>Availibility</li> <li>Integrity</li> <li>Accountability</li> </ol>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/01.%20Index/","title":"Preface","text":"<p>Sumber catatan iniadalah Python Etichal Hacking from Scratch oleh ALi Sahad Fawar.</p> <p> Agar bisa berhasil di bidan security, wajib dan harus mengusasi computer system  dan computer network.</p> <p>Detailnya, harus menguasai ;</p> <ol> <li>Linux</li> <li>Databases</li> <li>Hardware dan Memory Access</li> <li>Reverse Engineering</li> <li>Cryptography</li> <li>Neworking 7   Analytic Skill</li> </ol> <p>Selain itu juga wajib untuk menguasai teknologi web;</p> <ol> <li>HTTP/HTTPS</li> <li>PHP, Python, Go, JS, dsb.</li> <li>MySql</li> <li>JavaScript</li> </ol>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/02.%20Type%20of%20hacker/","title":"Types of hackers","text":""},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/02.%20Type%20of%20hacker/#white-hat-hackers","title":"White hat hackers","text":"<p> Tujuannya adalah untuk melindungi bisnis dan aset dari sebuah organisasi dari serangan luar </p> <p>White hat hackers atau biasanya disebut dengan cybersecurity experts atau penetration testers yang tujuannya adalah menguji keamanan dari sistem informasi. White hat hacker menggunakan alat dan teknologi yang sama dalam masuk secara paksa kedalam sistem. Yang membedakannya adalah niat, tujuannya. Tujuannya adalah memperkuat ketahanan sistem dan melindungi sistem tersebut dari serangan luar.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/02.%20Type%20of%20hacker/#black-hat-hackers","title":"Black hat hackers","text":"<p> Tujuannya adalah menyerusuk sistem dengan tujuan yang jahat.</p> <p>Black hat hacker bisanya identik dengan kriminal yang memliki motivasi untuk mengambil uang atau menyebabkan kerusakan ke seseorang ataupun institusi. Black hat hacker selalu berusahan menyembunyikan identitasnya. Biasanya meraka menggunakan pseudonyms untuk mengidentifikasi dirinya. Black hat hacker sangat sulit untuk deteksi pada sebuah sistem kecuali memang mereka sengaja menampilkan dirinya. Seringkali dan banyak dari black hat hacker tetap mempertahankan remote access ke target sistem tanpa pemilik sistem mengetahuinya </p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/02.%20Type%20of%20hacker/#gray-hat-hackers","title":"Gray hat hackers","text":"<p> Memliki motivasi kesenangan atau pembuktian diri.</p> <p>The real world is not binary and neither are hackers. Gray hat refers to hackers that operate in somewhat muddy territory. They have the same skillset as white hat or black hat hackers; however, their motivation is usually not financial. Gray hat hackers like to play around with systems just for the sake of fun and enjoyment. Most of the time, they are harmless and even expose the system vulnerabilities to the people responsible. They break into the system just because they can.</p> <p>Gray hat hackers also like to snoop around systems testing their strengths, and once they discover potential weaknesses, they usually notify the administrators and offer their services for correcting the issues with a service fee. This is a way for them to make money. The legality of this practice is questionable; however, for some, this is a way to earn a handsome amount of money.</p> <p>As mentioned earlier, the boundary between gray hat hackers and black hat hackers is quite fuzzy. You should be very careful with it. A single mistake or miscalculation can cause significant issues. There is also the danger of gray hat hackers eventually crossing into black hat category.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/02.%20Type%20of%20hacker/#nation-state-hackers","title":"Nation-state hackers","text":"<p> : Attacking the cyber assets of an enemy.</p> <p>With the increased dependence of countries on computer-based systems, the need to both protect and attack cyber systems is becoming extremely  important. With conventional means of warfare becoming more and more potent and limited in nature, the use of cyber warfare is gaining significance. Nation-state hackers is a term used for a team of hackers focused on damaging the cyber assets of an opposing country.</p> <p>Take the example of the Stuxnet virus, which infected the Iranian nuclear facilities. Stuxnet was a very complicated malware that infected the Supervisory Control and Data Acquisition (SCADA) systems. SCADA systems are used for the monitoring and control of large-scale industrial systems. The virus exploited a vulnerability in the programmable logic controllers (PLCs) used in the facility. The malware was very discreet and only became active if the target system was the Iranian nuclear facility. Even though it infected a large chunk of computer systems, it mostly remained dormant and only activated itself when it reached its intended target. According to most researchers, the complexity of the attack indicated that it was not the job of some criminal organization but a team of highly specialized programmers requiring months of development. These types of resources are often only at the disposal of national-level hackers. Stuxnet took control of the centrifuge speed control signals and starting spinning centrifuges at such high speeds that it eventually led to a breakdown. Stuxnet also intercepted speed status messages going to the SCADA systems so it would make it seem like centrifuges were operating at normal speeds while in reality, they were spinning at far higher speeds. This made Stuxnet very hard to detect and it stayed undetected for quite some time, hampering the nuclear progress in the facility, before finally being detected in 2010.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/02.%20Type%20of%20hacker/#corporate-spies","title":"Corporate spies","text":"<p> : To get a competitive edge.</p> <p>A lot of business value of companies lies in the intellectual property (IP) they own. This intellectual property sometimes defines the worth of a company. In recent years, companies have been subject to corporate attacks, where attempts have been made to steal their intellectual property. With increased competitiveness in the business world, corporate espionage is becoming a daily occurrence. Companies are subject to attacks from corporate hackers, who aim to steal sensitive information, including intellectual property, business plans, patents, financial data, and customer data, to gain a competitive edge. These attacks can come from competitors directly or they can hire professional hackers for this purpose.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/02.%20Type%20of%20hacker/#hacktivists","title":"Hacktivists","text":"<p> : To make a political/social statement.</p> <p>Hacktivist is a term combining the words activist and hacker. These types of attacks are usually carried out in order to make a political statement. The aim of these hackers is to make a call for social change or to bring attention to some issue. In contrast to black hat</p> <p>hackers, who try to be as discreet as possible, hacktivists try to gain maximum attention while hiding their real identity. Their goal is to spread their message to the masses. In the majority of hacktivism cases, there is no financial motivation for the hackers. They use the same tools and techniques as other hackers. Hacktivism is the digital equivalent of a political protest. With changing political dynamics, politics is making inroads into the digital space and hacktivism provides a pathway for some people to make their statement.</p> <p>Hacktivists use different methods to attract attention. Sometimes they disrupt services, for example, carrying out a DoS attack on a company or government website. Other times, they gain access to critical and sensitive information and leak this classified information to the public, causing significant embarrassment for the government or company. One of the major leaks in recent years is the WikiLeaks fiasco. One thing that should be noted here is that from a legal perspective, there is no difference between hacktivism and black hat hacking. Even if you are participating in some activity for a noble cause and you get caught, you will be tried for the same crimes as a black hat hacker. Therefore, a lot of hackers tend to stay anonymous and use pseudonyms for their activism.</p> <p>One of the most famous hacking organizations associated with hacktivism is Anonymous.They have allegedly carried out numerous attacks against different governmental organizations to state their sympathy to a cause or opposition to certain legislation. Anonymous calls itself a decentralized organization with people coming together to support a common cause. They have often been dubbed as freedom fighters and the Robin Hood of the digital paradigm. The decentralized nature of this collective means that it has become very hard to crack down on it.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/02.%20Type%20of%20hacker/#script-kiddies","title":"Script kiddies","text":"<p>In cybersecurity spaces, the term script kiddie refers to beginner hackers who do not have in-depth knowledge about cybersecurity or hacking in general. They often tend to use prebuilt tools for hacking purposes much like a black box approach. They don't essentially know how the hacking tool works internally but they just use it. Script kiddies sometimes lack programming knowledge to build their own tools and rely on existing tools for hacking purposes. The term script kiddie comes from the fact that they use pre-built scripts or programs to carry out attacks. Script kiddies often acquire a hacking tool such as a reverse shell and deploy it by watching internet tutorials. Their goal is not to learn the process but the final objective, which is to take control of the target system. As long as the tool works, they are not interested in how it works.</p> <p>A common mistake often made by cybersecurity professionals is to not take script kiddies seriously. A well-deployed attack even from a script kiddie can cause huge damage to the assets. For an attacker to carry out a successful attack, they do not have to know every detail of the script they are using. Just the right angle of attack is sufficient to carry out a successful attack. There are a huge number of tools available online both free and paid that could help someone to carry out attacks. There are hacking organizations that make these tools especially to sell them to script kiddies for carrying out attacks. So, do not think that someone with little knowledge about developing tools is not a threat. In fact, they are as much of a threat as an experienced hacker. The success of an attack depends on both the attacker as well as the tools used.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/03.%20Career%20in%20cyber%20security/","title":"Careers in cybersecurity","text":""},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/03.%20Career%20in%20cyber%20security/#system-security-administration","title":"System Security Administration","text":"<p>Just like a system administrator whose job is to maintain and administer systems in an organization, the goal of a system security administrator is to focus on the administration of the system's security. Their job is to perform daily security tasks, such as system monitoring and backup management.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/03.%20Career%20in%20cyber%20security/#security-architect","title":"Security architect","text":"<p>Networks are one of the most important aspects of modern computer systems and more often than not, they are the entry point for attackers into an organization, thus managing, maintaining, and securing the network is extremely important for organizations. The job of the security architect includes problem reporting, breach analysis, and so on.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/03.%20Career%20in%20cyber%20security/#penetration-tester","title":"Penetration tester","text":"<p>As mentioned earlier, the goal of a penetration tester is to test the strength of an organization's defenses. In simple words, the goal of a penetration tester is to hack into the system and gain unauthorized access. The job of a penetration tester also includes detecting system vulnerabilities. Sometimes, penetration testers also work in incident response teams to defend against real threats. Penetration testers are often tasked with designing their own tools focused on the organization's requirements. Most of this book will follow the rough footsteps to become a penetration tester. A penetration tester is one of the highest-paid jobs in cybersecurity and requires a lot of skill.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/03.%20Career%20in%20cyber%20security/#forensic-analyst","title":"Forensic analyst","text":"<p>As the name indicates, the job of a computer forensic analyst is to evaluate the digital assets and review the evidence in the case of a system breach. Their tasks include securing digital and physical proofs after a breach to be used in the analysis as well as to be potentially used in court against hackers. Forensic computer analysts must be sensitive to the security concerns of their employers or clients and follow closely all the privacy procedures when dealing with financial and personal information.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/03.%20Career%20in%20cyber%20security/#chief-information-security-officer","title":"Chief information security officer","text":"<p>The chief information security officer (CISO) is usually an executive position. The CISO's job is to oversee the planning, coordinating, and directing of the system, network, and data security needs of the organization. Their job is to ensure security compliance, evaluate the threat landscape, and devise policies and controls to ensure the safety of the organization.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/04.%20Type%20of%20attacks/","title":"Types of attacks","text":"<p>There are several different types of cyber-attacks depending on how they are executed. The nature of these attacks can vary depending on various factors such as the intentions of the attacker and the tools that are used for the attack. More often than not, the purpose of these attacks is to either gain complete control of the system, to steal sensitive information, or both.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/04.%20Type%20of%20attacks/#system-controls","title":"System controls","text":"<p>Attacks would often like to take charge of the victim's computer and play around with it. This could either mean rendering the system useless for the victim or making a stealth attempt to gain access without the victim knowing about it. A very famous set of attacks in this category are called remote access tool attacks. These attacks provide the attacker with complete or near-complete control of the victim's PC remotely. We have already discussed forward and reverse shells, which are used for these purposes quite frequently.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/04.%20Type%20of%20attacks/#social-engineering","title":"Social engineering","text":"<p>In simple terms, social engineering means manipulating or tricking someone into giving you the information. you can simply trick the person into giving you information to carry out a cyber-attack.</p> <p>There are two fundamental aspects of cybersecurity: 1. technical aspect 2. human aspect</p> <p>security system is as good as its weakest link. The weakest link in the security of the system is people No system is secure if you have the key to breaking it.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/04.%20Type%20of%20attacks/#baiting","title":"Baiting","text":"<p>Baiting simply means luring the target to bait and then waiting for the target to make a mistake. For example, hackers often drop USB drives filled with malware near the offices of organizations and wait until some employee gets curious and plugs the USB into their computer. Once they do so, the rest of the job is done by the malware.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/04.%20Type%20of%20attacks/#phishing","title":"Phishing","text":"<p>Phishing is an attack technique in which attackers impersonate someone the target trusts. Usually, they try to take advantage of people's interests. Usually, they try to take advantage of people's interests. For example, if someone is a football fan, they are more likely to open an email or a link related to the topic of football and thus provide the attacker with a means to attack the victim. A common example of this attack is clone websites hosted by the attacker. An attacker would send a fake link to the target that resembles a website known to the target. However, the website will be hosted by the attacker and instead of going to the real website, the target will be directed to this website. These cloned websites look very similar to the original ones and if you are not careful, it is very hard to distinguish. Since this cloned website is operated by the hacker, any data that the user enters goes to the hacker. A good way to detect these fake websites is to check the website name along with the protocol. A real website will mostly operate on the https protocol.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/05.%20Protection/","title":"Protection","text":"<p>Info</p> <p>Semua kode yang ada pada catatan ini dapat di unduh dari repo https://github.com/muhammadfarras/Python-Etichal-Hacking-From-Scratch</p> <p>Sebelum melakukan reconainsasce, atau pengumpulan informasi, kita harus memastikan identitas kita terlindungi. Karena jika tidak, maka kita akan mudah untuk dilacak. Indentitas kita saat mengumpulkan informasi dapat dilacak dengan beberapa parameter, namn yang paling sering adalah dengan melacak IP address dan MAC address.</p> <ol> <li> <p>Mask the IP adress     Untuk menopengi ip public, kita dapat menggunakan jasa Virtual Private Network. Penting untuk diingat, jangan terlalu mempercayakan trafic kita ke penyedia jasa VPN. Dari pandangan keamanan, menggunakan VPN sama saja memindahkan trafik kita secara penuh <sup>2</sup> dari Internet Service Provider (ISP) ke perusahaan lain yang menyediakan VPN service. Bahkan, berhati-hatilah dalam menggunakan VPN service yang GRATISAN. Karena banyak dari penyedia VPN gratisan tersebut memasukan malware atau  menggunakan resource mesin kita untuk tujuan lain seperti, bitcoin mining. Bahkan ada beberapa VPN membocorkan domain name server (DNS), sebuah server yang digunakan untuk memetakan nama wesbite ke IP address, walaupun dengan alibi menggunakan itu untuk menopengi IP address kita.</p> </li> <li> <p>Spoofing MAC address     Bagaimanapun, ketika kita melakukan scanning pada local network, kita dapat terlacak dari MAC address (Media Access Control) kita. Mesin kita memliki Network Interface Card (NIC), yang digunakan untuk berkomunikasi dengan komputer lain. Didalam NIC terdapat MAC address. InsyaAllah pada setelah inis kita akan menggati identitas MAC address sehingga dapat mengelabui mesin lain termasuk Instrusion Detection System (IDS) ketika kita berkomunikasi dengan mesin lain.</p> </li> </ol>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/05.%20Protection/#transforming-mac-address","title":"Transforming MAC address","text":"<p>Kita akan menggunakan command <code>ifconfig</code>  untuk mengubah MAC address. Bawaanya command ini sudah terinstall ketika menginstall Operatign System, namun jika belum anda harus menginstall package net-tools pada mesin anda.</p> <pre><code>sudo apt install net-tools\n</code></pre> <p>Setelah berhasil menginstall package net-tools, anda dapat melihat MAC address anda menggunakan perintah tersebut.</p> <pre><code>ifconfig\n# Result\ndocker0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500\n        inet 172.17.0.1  netmask 255.255.0.0  broadcast 172.17.255.255\n        ether 02:42:8e:a9:07:be  txqueuelen 0  (Ethernet)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 0  bytes 0 (0.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\neth0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500\n        ether 28:d2:44:ba:92:dd  txqueuelen 1000  (Ethernet)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 0  bytes 0 (0.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 268  bytes 21440 (20.9 KiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 268  bytes 21440 (20.9 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nwlan0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500\n        inet 192.168.1.16  netmask 255.255.255.0  broadcast 192.168.1.255\n        inet6 fe80::cb9f:4295:f581:e7ff  prefixlen 64  scopeid 0x20&lt;link&gt;\n        ether 18:cf:5e:ea:3e:01  txqueuelen 1000  (Ethernet)\n        RX packets 233896  bytes 331772750 (316.4 MiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 99376  bytes 10940300 (10.4 MiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n</code></pre> <p>Ada empat nilai disini, namun kita hanya fokus kebeberapa saja, <code>eth0</code>, <code>wlan0</code>, dam <code>lo</code>. <code>eth0</code> adalah nama dari Network Interface Card (NIC), dimana <code>lo</code> adalah loopback adapter, dan <code>wlan0</code> adalah WIFI LAN.</p> <p>Untuk mengganti MAC addres interface wifi lan kita, harus dipastikan interface tersebut tidak hidup.Sehingga kita harus mematikannya terlebih dahulu sebelum menggantinya. Untuk mematikan intrafe tersebtu anda dapat menggunakan perintah dibawah ini.</p> <pre><code>sudo ifconfig wlan0 down \n</code></pre> <p>Untuk mengganti MAC addres anda dapat menggunakn perintah dibawah ini</p> <p>To change the MAC address, you can run the following command. Let's say you want your new MAC address to be 00:11:22:33:44:55 . Here, you can do the following:</p> <pre><code>sudo ifconfig wlan0 hw ether 12:bb:34:cc:56:ff\n</code></pre> <p>Selanjutnya aktifkan lagi interface <code>wlan0</code> </p> <pre><code>sudo ifconfig wlan0 up\n</code></pre> <p>Sekarang mari kita lihat MAC addres dari interface <code>wlan0</code></p> <pre><code>wlan0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500\n        inet 192.168.1.77  netmask 255.255.255.0  broadcast 192.168.1.255\n        ether 12:bb:34:cc:56:ff  txqueuelen 1000  (Ethernet) # (1)!\n        RX packets 337967  bytes 331974737 (316.5 MiB)\n        RX errors 0  dropped 1  overruns 0  frame 0\n        TX packets 63154  bytes 14786090 (14.1 MiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n</code></pre> <ol> <li>ether dari interface <code>wlan0</code> berubah menjadi 123456:ff</li> </ol> <p>Dapat kita lihat MAC address berhasil berubah. sekarang, jika jika kita ingin scan sesutu pada jaringan, MAC address ini yang akan ditampilkan dari pada MAC address asli kita.</p> <p>Bukti MAC kita sekarang telah menipu adalah dengan melihat traffic ARP<sup>1</sup> menggunakan perintah <code>tcpdump</code> untuk melihat trafik ARP respone dan request yang terjadi pada mesin kita.</p> <pre><code>sudo tcpdump -i wlan0 arp\n\n# Hasil\ntcpdump: verbose output suppressed, use -v[v]... for full protocol decode\nlistening on wlan0, link-type EN10MB (Ethernet), snapshot length 262144 bytes\n00:03:11.261658 ARP, Request who-has 192.168.1.1 tell 192.168.1.84, length 28\n00:03:11.859366 ARP, Request who-has 192.168.1.53 tell 192.168.1.1, length 46\n00:03:12.577446 ARP, Request who-has 192.168.1.77 tell 192.168.1.1, length 46\n00:03:12.577452 ARP, Reply 192.168.1.77 is-at 12:bb:34:cc:56:ff (oui Unknown), length 28\n00:03:12.814945 ARP, Request who-has 192.168.1.53 tell 192.168.1.1, length 46\n00:03:13.820591 ARP, Request who-has 192.168.1.53 tell 192.168.1.1, length 46\n</code></pre> <p>Tip</p> <p>Penggunaan <code>ifconfig</code> karadluasa walaupun masih banyak dari praktisi jaringan dan keamanan yang menggunakan.Perintah <code>IP</code> adalah alternatif dan pengganti penggunaan <code>ifconfig</code>. Lihat catatan tentang perintah ifconfig dan IP</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/05.%20Protection/#creating-python-script","title":"Creating python script","text":"<p>Python memliki pustaka bawaan yang dapat digunakan untuk menjalankan system command menggunakan <code>subprocess</code>. Library ini dapat berinteraksi dengan OS terkait.</p> <p>Untuk menjalankan command, <code>subprocess</code> memliki method <code>run</code>. Menggunakan method ini kita dapat mengeksekusi system commands pada OS. katakan kita ingin melihat informasi network interface wlan0, maka perintahnya adalah; </p> <p>Kode untuk menampilkan informasi interface <code>wlan0</code></p> <pre><code>import subprocess\n\nsubprocess.run(\n    ['ifconfig wlan0'], \n    shell=True)\n</code></pre> Output <pre><code>wlan0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500\n    inet 192.168.1.77  netmask 255.255.255.0  broadcast 192.168.1.255\n    ether 12:bb:34:cc:56:ff  txqueuelen 1000  (Ethernet)\n    RX packets 422366  bytes 384440053 (366.6 MiB)\n    RX errors 0  dropped 1  overruns 0  frame 0\n    TX packets 79664  bytes 19800255 (18.8 MiB)\n    TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nCompletedProcess(args='ifconfig wlan0', returncode=0)\n</code></pre> <p>Fungsi ini memiliki parameter wajib yang berisikan perintah, command. Parameter opsional lainnya, <code>shell=True</code>, artinya kita ingin menampilkan nilai keluaran dari perintah tersebut pada console. Dan perlu diingat, setiap command yang ada pada parameter perintah tersebut pada dasarnya sama dengan jika kita menulis pada terminal langsung. Maka dari itu, perintah yang memerlukan root privilege juga mewajibkan kode python tersebut dijalankan dengan root user atau group sudo user pula.</p> <p>Python version warning</p> <p>Fungsi <code>run</code> pada modul subprocess baru ada pada versi python 3.5 keatas. python doc</p> <p>now we can use python to change our MAC address, here is the full code to achive that goal.</p> <p>change-mac.py</p> <pre><code># change-mac.py\nimport subprocess\n\n# Set the interface\ninterface = 'wlan0'\n\n# Set the new MAC address\nnew_macaddress = '12:34:56:78:90:01'\n\n# First information about running script\nprint(\"Change MAC addres of interface \\x1b[1;32;1m%s\\x1b[0m to \\x1b[1;31;1m%s\\x1b[0m\"%(interface, new_macaddress))\n\n# Shutdown the interface\nprint ('shutdown the interface \\x1b[1;31;1m%s\\x1b[0m' %(interface))\nsubprocess.run(['ifconfig',interface, 'down'])\n\n# Change MAC addr\nprint ('\\x1b[1;32;1m%s\\x1b[0m'%('Changing process'))\nsubprocess.run( ['ifconfig', interface, 'hw', 'ether', new_macaddress])\nprint ('MAC address change to \\x1b[1;32;1m%s\\x1b[0m'%(new_macaddress))\n\n# Turnin up interface\nsubprocess.run([\"ifconfig\", interface, \"up\"])\nprint(\"network interfaced turned \\x1b[1;32;1m%s\\x1b[0m\"%(\"On\"))\n\ntry:\n    while True:\n            pass\nexcept KeyboardInterrupt:\n    print(\"\\nStarting to change the real MAC address\")\n\n    print(\"Get the real MAC address \",end=\"\")\n\n\n    realone = subprocess.run([\"ethtool -P wlan0 | awk '{print $3}'\"], shell=True, capture_output=True).stdout.decode().replace(\"\\n\",\"\")\n\n    print(\"\\nThe Real MAC Address \\x1b[1;31;1m%s\\x1b[0m\"%realone)\n\n    print(\"Turn down wlan interface\")\n\n    subprocess.run([\"ifconfig\",interface,\"down\"])\n\n    print(\"\\tWLAN is Down\")\n\n    print(\"Change MAC address\")\n\n    subprocess.run (\"ifconfig wlan0 hw ether \"+realone, shell=True)\n\n    print(\"\\t Done\")\n\n    print(\"Turnin on interface again\")\n\n    subprocess.run([\"ifconfig wlan0 up\"], shell=True)\n</code></pre> <p>After that you will see that your MAC address are change to <code>12:34:56:78:90:01</code> <code>18\\:cf\\:5e\\:ea\\:3e\\:01</code></p> <pre><code>ifconfig wlan0\nwlan0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500\n        ether 18:cf:5e:ea:3e:01  txqueuelen 1000  (Ethernet)\n        RX packets 642027  bytes 516313066 (492.3 MiB)\n        RX errors 0  dropped 3  overruns 0  frame 0\n        TX packets 132437  bytes 30581725 (29.1 MiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n</code></pre> <p>Untuk mengembalina ethernet anda, ada dapat menggunakan perintah ethtool, fungsi tersebut akan menampilkan alamat permanen dari MAC addres anda. script lengkapnya dibawah ini</p> <pre><code>sudo ifconfig wlan0 hw ether $(ethtool -P wlan0 | awk '{print $3}')\n</code></pre> <p>Namun untuk kode <code>change-mac.py</code> sudah ada script untuk mengembalikan MAC address aslinya</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/05.%20Protection/#summary","title":"Summary","text":"<p>In this chapter, we learned about the basics of networking and how we can protect ourselves on a local network by spoofing our MAC address for scanning purposes. This chapter helped us get a deeper insight into the networking aspects of the computer system, as well as how we can use Python to protect and mask our identity in a local network</p> <ol> <li> <p>devices in a network periodically send ARP responses to other devices in a network to let them know of their current IP and MAC addresses.\u00a0\u21a9</p> </li> <li> <p>Maksud mempercayakan semua trafik ini berkaitan dengan full tunnel VPN. Untuk catatan tentang VPN dapaat melihat ke Virtual Private Network dan untuk Split tunneling VPN \u21a9</p> </li> </ol>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/06.%20Network%20scanning/","title":"Network Scanning","text":""},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/06.%20Network%20scanning/#introduction-to-networking","title":"Introduction to networking","text":"<p>Lihat sini untuk catatan;</p> <ul> <li>HTB networking</li> </ul>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/06.%20Network%20scanning/#data-representation-in-digital-system","title":"Data representation in digital system","text":"<p>Pertama, kita harus memahami bagaimana sebuah sistem saling mengirim dan menerima data pada jaringan. Setiap bagian dari data pada sebuah sistem disimpan dalam bentuk bilangan biner, sehingga didenfinisikan dengan binary logic level. Bilangan biner terdiri dari 0 atau satu (bisa juga disebut dengan <code>high</code> atau <code>low</code>). Bukan hanya text yang didefinisikan dengan binary logc level, namun poto, video, rekaman suara atau apapun yang disimpan pada kompter juga menggunakan logic level tersebut.</p> <p>Mungkin anda bingung bagaimana tipe data yang berbeda direpresentasikan menggunakan logic levels. Mari kita lihat bagaimana logic level tersebut berkerja. Katakan anda ingin mengirim pesan text \"Hello\" keteman anda. Untuk mengirim pesan tersebut, kita harus mengubahnya kedalam pesan yang dipahami oleh komputer (komputer hanya mengetahui bilangan biner). Maka dari itu, kita harus meng-ecode pesan tersebut kedalam binary logic level. </p> <p>Info</p> <p>High dan low sama dengan 1 dan 0. Penggunaan istilah tersebut juga digunakan pada eletronika, seperti arduino</p> <p>Sekarag mari kita lihat pesan kita, kalimat <code>hello</code> terdiri dari 5 kata sedangkan komputer hanya mengetahui dua logic level (0 atau 1). Maka, untuk meng-ecoding pesan tersebut, sebuah sistem dibuat dengan nama ASCII (America Standad Code for Information Interchange). Menggunaan skema kode tersebut, kita dapat merepresentasikan huruf romawi termasuk beberapa simbol atau angka.</p> <p>Setiap huruf setara dengan 8 bits, atau 1 byte. Dibawah ini adalah encoding dari huruf kedalam bilangan biner.</p> <ul> <li>H = 01001000 =&gt; 64+8 = 72 =&gt; According to ASCII table, 72 is H</li> <li>E = 01000101</li> <li>L = 01101100</li> <li>L = 01101100</li> <li>O = 01101111</li> </ul> <p>Sekarang kita memliki stream of data yang dapat kita kirim mengunakan sistem digital apapun itu bentuknya.</p> <p>Info</p> <p>Real systems also use other encodings, such as Unicode and byte representation, to send complex data.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/06.%20Network%20scanning/#data-encapsulation","title":"Data Encapsulation","text":"<p>In the preceding section, we said that we want to send a Hello message to someone in our local network. Let's call this message our data:</p> <p></p> <p>Now, in order for it to successfully reach the other computer, the packet must know its exact destination, similar to how a postal delivery system works.</p> <p>In digital systems, you have IP addresses, MAC addresses, and source and destination ports.</p> <p>Let's say you write your message in your browser application and your friend is also waiting for your message in their browser. In order to successfully send the message to the exact same process in the destination computer, the IP protocol will add a new header to your message.</p> <p></p> <p>From the topmost layer, the application header is added. Picture above shows how data is encapsulated in the TCP/IP stack before it is sent over the network.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/06.%20Network%20scanning/#the-packet-delivery-process","title":"The packet delivery process","text":"<p>The packet delivery process depends on whether the destination device is located in the same local network or not. If the device is located in the same subnet, we can directly use the Ethernet addresses to send the data.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/06.%20Network%20scanning/#tcp-header","title":"TCP header","text":"<p>The TCP header has the fields shown in the following diagram:</p> <p></p> <p>In this header, we are only concerned with the source and destination ports. </p> <ul> <li> <p>The sourceport relates to the process in your local machine associated with the message you want to send. It is usually randomly generated from the sending side</p> </li> <li> <p>The destination port is where the packet should go. It defined by the message.</p> </li> </ul> <p>For example : when you request an HTTPS website, your PC generates request packets with the destination port number set to 443 . In our case, if we are sending the Hello message to a browser application working on HTTPS, the source port field in the sending packet will be randomly selected and the destination would be 443 . Once the TCP header is added to the data, it is called the TCP segment.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/06.%20Network%20scanning/#ip-header","title":"IP header","text":"<p>Here, the fields that we are interested in are the source IP and destination IP. This defines where your packet will go and where it is originating from. Once the IP header is added, it is called an IP datagram.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/06.%20Network%20scanning/#ethernet-header","title":"Ethernet Header","text":"<p>The Ethernet header helps the data to navigate in the local network. The most important fields here are the source and destination MAC addresses. As the name implies, the source MAC address will be your MAC address and the destination will be the MAC address of the recipient in the local network:</p> <p></p> <p>Once an Ethernet header is added, it is now called an Ethernet frame.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/07.%20Introduction%20to%20scapy/","title":"Introduction to Scapy","text":"<p>untuk membat sebuah network scanner, insyaAllah kita akan menggunakan pustaka jaringan dari python, yaitu scapy. Pustaka tersebut didesain untuk send, sniff, dissect, dan meng-edit network packets. Scapy adalah alat yang sangat powerfull yang dapa memanipulasi packet jaringan.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/07.%20Introduction%20to%20scapy/#understanding-how-scapy-works","title":"Understanding how Scapy works","text":"<p>Pada bagian catatan ini, insyaAllah kita akan membuat sebuah request PING sederhata ke sebuah website. Ping request biasanay digunakan untuk menguji apakah device tertentu tersedia atau tidak. Request tersebut menggunakan ICMP application layer protocol. untuk menggunakan package tersebut maka kita harus mengimport dari pustaka scapy seperti snipshet dibawah ini.</p> <p>Code</p> import scapy<pre><code>from scapy.all import * #(1)!\n</code></pre> <ol> <li><code>*</code>, disini saya mengimport semua method dari pustaka scapy, namun baiknya hanya mengimport method yang digunakan saja.</li> </ol>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/07.%20Introduction%20to%20scapy/#reate-ip-layer-packet","title":"reate IP Layer Packet","text":"<p>Untuk mengirim ping request, pertama kitaharus membuat sebuah <code>IP layer packet</code>, yang mana pada layer tersebut kita akan memasang <code>source</code> dan <code>destination</code> IP address. Sebelum itu, kita harus meng-import method <code>IP</code> dari pustaka scapy.</p> <p>Code</p> import method IP<pre><code>from scapy.all import IP\n</code></pre> <p>Ingat, IP layer yang kita buat diatas masih berupa layer packet saja, namun belum dikirim. Untuk mengirim dan menerima packet kita harus menggunakan method <code>sr1</code>.</p> <p>Code</p> import sr1<pre><code>from scapy.all import sr1\n</code></pre> <p>Selanjutnya, insyaAllah kita akan mendefinisikan IP address tujuan. Kita ingin membuat ping reqeust ke www.vensys.co.id. Kita dapat secara manual menuliskan IP address, namun bisa juga langsung menuliskan Fully qualified domain name (FLQD) karena scapy akan secara otomatis merubahnya ke dalam IP address.</p> <p>Baik, sekarang kita akan membuat IP layer packet dan menampilkan nya untuk melihat isi dari packet tersebut</p> <p>Code</p> create ip layer pakcet, and display the packet<pre><code>dst_src = {\"dst\":\"www.vensys.co.id\", \"src\":\"192.168.1.80\"}\n\nip_layer = IP(**dst_src)\n\nprint(ip_layer.show())\n</code></pre> Output Output packet<pre><code>###[ IP ]### \nversion   = 4\nihl       = None\ntos       = 0x0\nlen       = None\nid        = 1\nflags     = \nfrag      = 0\nttl       = 64\nproto     = hopopt\nchksum    = None\nsrc       = 192.168.1.80\ndst       = Net(\"www.vensys.co.id/32\")\n\\options   \\\n</code></pre> <p>Kode diatas kita membat sebuah IP layer packet dan menampilkan konten dari paket tersebut.</p> <p>Note: paket tersebut belum dikirim.</p> <p>Lihatlah <code>src</code> dan <code>dst</code>. Pada destination (<code>dst</code>) adalah instance dari <code>Net()</code>, yang mana, scapy akan menangain translasi dari FQDN ke IP addressnya. Coba perhatikan hasil ouput IP layer tersebut, maka akan mirip dengan struktur IP layer pada ip header.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/07.%20Introduction%20to%20scapy/#send-icmp-internet-control-message-protocol-request","title":"Send ICMP (Internet Control Message Protocol) request","text":"<p>Selanjutnya, untuk mengirim ICMP request, kita dapat menggunakan class untuk membuat sebuah instance seperti dibawah ini:</p> <p>Code</p> Membuat instance ICMP<pre><code>icmp_req = ICMP(id=100)\n</code></pre> <p><code>id=100</code> membantu protocol untuk melacak packets. Untuk melihat field-field yang ada pada request ICMP menggunakan method <code>show()</code>.</p> <p>Code</p> Melihat field request ICMP<pre><code>print(icmp_req.show())\n</code></pre> Output field2 request ICMP<pre><code>icmp_req = ICMP(id=100)\nicmp_req.show()\n###[ ICMP ]### \ntype      = echo-request\ncode      = 0\nchksum    = None\nid        = 0x64\nseq       = 0x0\nunused    = ''\n</code></pre> <p>Dari output diatas, kita dapat melihat tipe packet adalah echo-request, yang mana digunakan untuk menguji ketersedian konektivitas.</p>"},{"location":"Hacking/Python%20Etichal%20Hacking%20from%20Scratch/07.%20Introduction%20to%20scapy/#combine-ip-layer-and-icmp-request","title":"Combine IP layer and ICMP request","text":"<p>Dari diskusi sebelumnya, kitatelah ketahui, <code>application layer</code> duduk diatas dari <code>IP layer</code> <sup>1</sup>, dan alhamdulillah kita telah membuat dua layer. Sekarang kita akan menjadikan dua layer tersebut (IP layer, ICMP request layer) menjadi satu packet yang nantinya akan kita kirim melalui network.</p> <p>Untuk menggabungkan layer-layer menjadi satu buah packet tunggal gunakan operator slash, <code>/</code> yang diawali dengan layer yang palin bawah terlebih dahulu. IP layer lebih rendah dari pada Application layer (ICMP request)</p> <p>Code</p> Combine to layer into one packet<pre><code>packet = ip_layer / icmp_req\nprint(packet.show())\n</code></pre> <p>Fungsi <code>show()</code> akan menampilkan daftar field dari packet hasil kombinasi IP layer dan ICMP request layer. </p> Output Field pada gabungan packet<pre><code>###[ IP ]### \nversion   = 4\nihl       = None\ntos       = 0x0\nlen       = None\nid        = 1\nflags     = \nfrag      = 0\nttl       = 64\nproto     = icmp\nchksum    = None\nsrc       = 192.168.1.80\ndst       = Net(\"www.google.com/32\")\n\\options   \\\n###[ ICMP ]### \n    type      = echo-request\n    code      = 0\n    chksum    = None\n    id        = 0x64\n    seq       = 0x0\n    unused    = ''\n</code></pre> <p>Sekarang kita bisa mengirim packet tersebut. Untuk mengirimnya, kita dapat menggunakan method <code>sr1</code></p> <p>Code</p> sent packet<pre><code>response = sr1(packet, iface = 'eth0')\n\nif response:\n    print (response.show())\n</code></pre> <p>Respone nya akan seperti dibawah ini;</p> Output Respone ICML requst<pre><code>Begin emission:\nFinished sending 1 packets.\n.*\nReceived 2 packets, got 1 answers, remaining 0 packets\n###[ IP ]### \nversion   = 4\nihl       = 5\ntos       = 0x0\nlen       = 28\nid        = 29076\nflags     = \nfrag      = 0\nttl       = 56\nproto     = icmp\nchksum    = 0xf24c\nsrc       = 202.52.146.211\ndst       = 192.168.1.80\n\\options   \\\n###[ ICMP ]### \n    type      = echo-reply\n    code      = 0\n    chksum    = 0x0\n    id        = 0x0\n    seq       = 0x0\n    unused    = ''\n</code></pre> <p>Dapat anda lihat pada sesi ICMP Respone diatas, tipe dari respone tersebut adalah <code>echo-reply</code> dan pada sesi IP field <code>src</code> dan <code>dst</code> adalah kebalikan dari <code>scr</code> dan <code>dst</code> dari request packet yang baru saja kita kirim.</p> <p>Info</p> <p>Yang menjadikan Scapy sangat powerill adalah, scapy mampu membuat raw_packets, yang mana artinya kita dapat membuat sebuah packet dengan informasi yang salah dan tidak ada mekaniska pengujian pada protokol yang digunakan. Kita dapat mengganti <code>src</code> dan memasukan packet lain, dan pada kasus tertentuk, komputer tujuan tidak mengetahio komputer mana yang membuat packet ini (idle scan). Karena inilah kita dapat spoof packet.</p> <ol> <li> <p>Lihat pada OSI layer di networking model dan pada bagian data encapsulation \u21a9</p> </li> </ol>"},{"location":"Hacking/Tools/Ghunt/01_index/","title":"Apa itu <code>Ghunt</code>","text":"<p>Berdasarkan dari sumber resminya Ghunt, GHunt (v2) is an offensive Google framework, designed to evolve efficiently. It's currently focused on OSINT</p>"},{"location":"Hacking/Tools/Ghunt/01_index/#how-it-works-and-how-to-use-it","title":"How it works and how to use it","text":"<p>Pada dasarnya, Ghunt ini web scrapper, tugasnya adalah mengumpulkan data melalui website, untuk Ghunt tentunya paltform google. Diantaranya Google Calender, Game dari Google Play, dan Maps. Untuk cara installasi kunjungi github diatas, disana tertera bagaimana cara meng-installnya.</p>"},{"location":"Hacking/Tools/Ghunt/01_index/#step-1-login","title":"Step 1, Login","text":"<p>Untuk bisa menggunakan Ghunt kita harus login menggunakan akun google. Untuk mulai menggunakan ghunt kita jalankan perintah berikut. </p> <pre><code>ghunt login\n</code></pre> <p>Example</p> <pre><code>ghunt login\n\n .d8888b.  888    888                   888    \nd88P  Y88b 888    888                   888    \n888    888 888    888                   888    \n888        8888888888 888  888 88888b.  888888 \n888  88888 888    888 888  888 888 \"88b 888    \n888    888 888    888 888  888 888  888 888    \nY88b  d88P 888    888 Y88b 888 888  888 Y88b.  \n \"Y8888P88 888    888  \"Y88888 888  888  \"Y888 v2\n\n         By: mxrch (\ud83d\udc26 @mxrchreborn)\n   Support my work on GitHub Sponsors ! \ud83d\udc96\n\n\n      &gt; GHunt 2.1.3 (BlackHat Edition) &lt;         \n\n\ud83c\udf89 You are up to date !\n\n[-] No stored session found.\n\nYou can facilitate configuring GHunt by using the GHunt Companion extension on Firefox, Chrome, Edge and Opera here :\n=&gt; https://github.com/mxrch/ghunt_companion\n\n[1] (Companion) Put GHunt on listening mode (currently not compatible with docker)\n[2] (Companion) Paste base64-encoded authentication\n[3] Enter the oauth_token (stats with \"oauth2_4/\")\n[4] Enter the master token (starts with \"aas_et/\")\n</code></pre> <p>Ada beberapa method yang bisa kita gunakan, namun pada catatan ini saya menggunakan nomor , menggunakan base64-encode authentication. Untuk itu kita akan menggunakan plugin Google Companion, pada plugin tersebut kita dapat memasukan credential yang jika valid dan terautentikasi akan tampil base64-encode authentication value tersebut.</p> <p></p> <p></p> <p>Setelah itu kita dapat memasukan base64-encode kedalam terminal</p> <p></p> <p>Jika base64 tersebut valid, maka ghunt akan menyimpan key tersebut dialamat <code>~/.malfrats/ghunt/creds.m !</code></p>"},{"location":"Hacking/Tools/Ghunt/01_index/#next-step-read-the-help-or-manual-and-play-with-ghunt","title":"Next Step, read the help or manual and play with ghunt","text":"<p>Jelas, pertama kali argumen yang akan kita gunakan adalah <code>-h</code>, untuk melihat mengetahui bagaimana cara menggunakan ghunt dan opsi argumen apa saja yang tersedia. Untuk itu kita dapat menajalankan perintah <code>ghunt -h</code>, selanjutnya akan tampil informasi yang kita butuhkan.</p> <p>Syntax sederhana untuk mencari informasi melalui email dan menyimpan hasilnya adalah sebagai berikut</p> <pre><code>hunt email maruffarras@gmail.com --json ghunt_result.json\n</code></pre>"},{"location":"Hacking/Tools/Gitfive/01.%20Index/","title":"Reconaisance using gitfive","text":"<p>Info</p> <p>Untuk installasi gitfive dapat melihat ke dokumentasi resmi di gitfive</p>"},{"location":"Hacking/Tools/Gitfive/01.%20Index/#gitfive","title":"Gitfive ?","text":"<p>Git5 adalah sebuah tool OSINT untuk menginestigasi profile github seseorang. Git5 ini membutuhkan akses login ke github kita (baiknya menggunakan akun kedua, bukan akun utama kita) untuk melakukan investigasi.</p>"},{"location":"Hacking/Tools/Gitfive/01.%20Index/#workflow","title":"Workflow ?","text":"<p>Hmmm pembuat git5 memberikan gambaran bagaimana git5 ini berkerja di work flow git5</p>"},{"location":"Hacking/Tools/Gitfive/01.%20Index/#how-to-use","title":"How to use ?","text":"<p>Git5 membutuhkan akun anda untuk menjalankan workflow diata, serta membutuhkan akses personal access tokens (classic)<sup>1</sup>.</p>"},{"location":"Hacking/Tools/Gitfive/01.%20Index/#gets-your-personal-access-token","title":"gets your personal access token","text":"<p>Buka menu <code>setting</code> - <code>Developer Settings</code> - <code>Personal Access Tokens</code> - <code>Token (classic)</code> lalu click generate access token. Lalu muncul beberapa form, diantaran, Notes, Expartion dan Scope. Khusus untuk Git5 membutuhkan scope, diantaranya;</p> <ol> <li>repo</li> <li>delete_repo</li> </ol> <p>Jika sudah maka tekan tombol generate token. Jika token sudah tergenerate, copy dan simpan token tersebut untuk kita gunakan saat login git5.</p> <p></p>"},{"location":"Hacking/Tools/Gitfive/01.%20Index/#login","title":"Login","text":"<p>Jalankan gitfive dengan argumen <code>login</code>. Makan akan muncul interatif terminal yang memerintahkan anda mengisi username, password dan token github yang baru saja kita dapat pada catatan diatas.</p> <pre><code>gitfive login\n</code></pre> <p></p> <p>JIka sudah berhasil masuk, credential dan session akan disimpan di <code>~/.malfrats/gitfive/creds.m</code> dan <code>~/.malfrats/gitfive/session.m</code></p>"},{"location":"Hacking/Tools/Gitfive/01.%20Index/#start-investigation","title":"Start investigation ?","text":"<p>Untuk menginvestigasi, gitfive menyedia argumen user, email dan emails. Kita bisa menggunaka username dari github account atau menggunakan email serta daftar email yang kita berikan.</p> <pre><code>gitfive user [github-user] --json hasil-investigasi.json\n</code></pre> <p>parameter <code>--json</code> digunakan untuk menyimpan hasil investigas dalam file json. </p> <ol> <li> <p>Personal access tokens (classic) function like ordinary OAuth access tokens. They can be used instead of a password for Git over HTTPS, or can be used to authenticate to the API over Basic Authentication.\u00a0\u21a9</p> </li> </ol>"},{"location":"Hacking/Tools/Steghide/","title":"How to use <code>steghide</code>","text":"<p><code>Steghide</code> dapat menyisipkan/embed sekaligus meng-ekstrak file embed kedalam file cover. Dibawah ini adalah <code>tree</code> dari direktori saya yang akan kita gunakan untuk mencoba command <code>steghide</code></p> <pre><code>.\n\u251c\u2500\u2500 embeded\n\u251c\u2500\u2500 image.jpg\n\u2514\u2500\u2500 secret-word.txt\n</code></pre> <p><code>image.jpg</code> adalah cover file, dan <code>secret-word.txt</code> adalah file yang akan kita embed kedalam <code>image.jpg</code>. Untuk melakukan proses tersebut kita menggunakan command dibawah ini</p> <pre><code>steghide embed -ef secret-word.txt -cf image.jpg -sf embeded/picture-for-you.jpg -p keytoopen\n</code></pre> command Description steghide command untuk menjalankan proses steghanography embed argumen untuk meng-embed file, <code>extract</code> untuk sebaliknya -ef  opsi nama file yang akan di embed -cf  file cover dari file yang diembed -sf  file yang telah berhasil diembed -p  frasa yang digunakan untuk meng-ekstrak embeded file <p>Setelah menjalankan command diatas maka, file dengan nama <code>/embeded/picture-for-you.jpg</code> akan terbentuk</p> <pre><code>.\n\u251c\u2500\u2500 embeded\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 picture-for-you.jpg\n\u251c\u2500\u2500 image.jpg\n\u2514\u2500\u2500 secret-word.txt\n</code></pre>"},{"location":"Hacking/Tools/Steghide/#how-to-extract","title":"How to extract","text":"<p>Mirip dengan cara diatas, yang berbeda adalah argumen yang diberikan adalah <code>extract</code></p> <p><pre><code>steghide extract -sf picture-for-you.jpg -p keytoopen    \nwrote extracted data to \"secret-word.txt\".\n</code></pre> Embed file akan terbentuk setelah proses extract selesai dilakukan</p> <pre><code>.\n\u251c\u2500\u2500 embeded\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 picture-for-you.jpg\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 secret-word.txt\n\u251c\u2500\u2500 image.jpg\n\u2514\u2500\u2500 secret-word.txt\n</code></pre> <pre><code>cat secret-word.txt\nHello tania, I'm realy-realy loving you                                      \n</code></pre>"},{"location":"My%20Magister/","title":"preface","text":"<p>Bismillah this is preface</p>"},{"location":"My%20Magister/2_Second_semester/Advance%20Inteligent%20System/03_tiga/1_neural_network/","title":"Arificial Neural Network (Part of Deep Learning)","text":"<p>Bogor, 27 September 2025 (Kelas gerah ehh)</p> <p>Sumber</p> <ul> <li>Pengantar Statistika dan Analisis Data PPT, Universitas Pamulang, DR. Tukiyat, M.SI.</li> <li>Descriptive Statistics - Muhammed Shayib</li> </ul> pretest <p>on Develope</p> <p>Neural network pertama kali muncul pada tahun 1980, pada tahun 2010 kembali tenar dengan nama baru Deep Learning, dengan aritektur baru dan keberhasilan dalam pemecahan masalah klasifikasi foto dan video, pemodelan speech and text. Banyak yg percaya bahwa keberhasilan dicapai karena ketersediaan data training yang lebih banyak dibandingan dengan pada tahun 1980.</p> <p>InsyaAllah pada pertemuan ini akan membahas dasar <code>Neural Network</code> dan <code>Deep Learning</code>. Lalu mendalam ke pemecahan masalah yang lebih spesifik, misalkana untuk klasifikasi gambar menggunakan <code>Convulutional Neural Network (CNNs)</code> dan <code>Recurrent Neural Networks (RNNs)</code> untuk deret waktu dan semisalnya.</p>"},{"location":"My%20Magister/2_Second_semester/Advance%20Inteligent%20System/03_tiga/1_neural_network/#single-layer-neural-network","title":"Single Layer Neural Network","text":"<p>Neural Network menerima parameter dalam bentuk vektor (deret angka dengan satu lapis) $ X = (X_1, X_2, X_3, ..., X_p) $ dan menghasilkan sebuah non linear function yang mana fungsi tersebut mengeluarkan hasil prediksi dari, \\(Y\\).</p> <p>Pada pelajaran data mining kita telah membuat model prediksi nonlinear menggunakan KNN,Decission Tree dan lainnya. Yang membedakan Neural Network dengan dengan metode-metede tersebut adalah struktur dari model neural network.</p> <p>Single layer Neuran Network dan Sandingan saraf alami dan buatan</p> Single Layer Neural NetworkJaring Neural buatan dengan Alami <p></p> <p></p> <p>Gambar diatas adalah feed forward Neural Network untuk pemodelan kuantitatif menggunakan 4 prediktor (variabel independen). Terminologi Neural Network \\(X_1, X_2, X_3, X_4\\) disebut dengan <code>input layer</code>. Garis yang terhubung mengindikasi bahwa setiap input layer diberikan ke setiap <code>hidden layer</code> \\(K\\). Bentuk matematikn Neural Network adalah sebagai berikut;</p> \\[ f(X) =  \\]"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/01_satu/01_introduction_to_statistics/","title":"Introduction to Statistics","text":"<p>Bogor, 08 September 2025 (Bogor dengan hawa gerahnya)</p> <p>Sumber</p> <ul> <li>Pengantar Statistika dan Analisis Data PPT, Universitas Pamulang, DR. Tukiyat, M.SI.</li> <li>Introduction to Modern Statistics</li> </ul> pretest <p>Satu</p> <p>Apa yang dimaksud dengan statistik deskriptif?</p> <ul> <li>(A) Metode yang digunakan untuk menggambarkan dan meringkas data secara visual atau numerik.</li> <li>(B) Cabang statistik yang digunakan untuk membuat inferensi tentang populasi berdasarkan sampel.</li> <li>(C) Teknik yang digunakan untuk membuat inferensi atau kesimpulan dari data sampel ke populasi.</li> <li>(D) Teknik yang digunakan untuk menguji hipotesis statistik.</li> <li>(E) Metode untuk menentukan hubungan sebab-akibat antara variabel.</li> </ul> Jawaban <p>Metode yang digunakan untuk menggambarkan dan meringkas data secara visual atau numerik</p> <p>Karena statistik deskriptif hanya berfokus pada pengolahan, penyajian, dan peringkasan data dalam bentuk tabel, grafik, diagram, rata-rata, median, modus, varians, standar deviasi, dll. Statistik ini tidak membuat inferensi atau generalisasi ke populasi, hanya mendeskripsikan data yang ada.</p> <p>Dua</p> <p>Berikut ini yang bukan merupakan ukuran pemusatan dalam statistik adalah</p> <ul> <li>(A) Ganjil</li> <li>(B) Mean</li> <li>(C) Modus</li> <li>(D) Varians</li> <li>(E) Median</li> </ul> <p>Jawaban</p> <p>Mean, Median, dan Modus \u2192 termasuk ukuran pemusatan (measures of central tendency), yang menggambarkan titik tengah atau nilai yang mewakili data.</p> <p>Varians \u2192 termasuk ukuran penyebaran (measures of dispersion), yang menunjukkan seberapa jauh data tersebar dari rata-rata.</p> <p>Tiga</p> <p>Apa tujuan utama dari analisa regresi dalam statistik ?</p> <ul> <li>(A) Menentukan apakah suatu variabel memiliki hubungan kausal dengan variabel lain</li> <li>(B) Memprediksi nilai suatu variabel berdasarkan variabel lain</li> <li>(C) Menyajikan data dalam bentuk grafik</li> <li>(D) Mengelompokkan data ke dalam kategori tertentu</li> <li>(E) Menguji hipotesis tentang perbedaan antara kelompok.</li> </ul> Jawaban <p>analisis regresi digunakan untuk, Mengetahui hubungan antara variabel independen (X) dan variabel dependen (Y) dab Membuat model prediksi nilai Y berdasarkan X.</p> <p>Empat</p> <p>Dalam distribusi normal, sekitar berapa persen data berada dalam rentang \u00b11 standar deviasi dari mean?</p> <ul> <li>(A) 68%</li> <li>(B) 95%</li> <li>(C) 50%</li> <li>(D) 40%</li> <li>(E) 99%</li> </ul> Jawaban <p>Dalam distribusi normal berlaku Empirical Rule (Aturan 68-95-99,7):</p> <ul> <li>standar deviasi dari mean \u2192 sekitar 68% data</li> <li>standar deviasi dari mean \u2192 sekitar 95% data</li> <li>standar deviasi dari mean \u2192 sekitar 99,7% data</li> </ul> <p>Lima</p> <p>Apa yang dimaksud dengan data kuantitatif?</p> <ul> <li>(A) Data yang berbentuk kategori atau label</li> <li>(B) Data yang berasal dari wawancara dan observasi kualitatif</li> <li>(C) Data yang hanya dapat dikategorikan tetapi tidak memiliki urutan</li> <li>(D) Data yang berbentuk angka dan dapat dihitung atau diukur</li> <li>(E) Data yang berbentuk narasi, teks, atau gambar.</li> </ul> Jawaban <p>Data kuantitatif \u2192 berupa angka, bisa diukur, dihitung, dan dianalisis dengan operasi matematika/statistik (contoh: tinggi badan, umur, pendapatan).</p> <p>Data kualitatif \u2192 berupa kategori, label, atau deskripsi (contoh: jenis kelamin, warna mata, pekerjaan).</p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/01_satu/01_introduction_to_statistics/#pengantar-statistika-dan-data-analisis","title":"Pengantar Statistika dan Data Analisis","text":"<p>Pada catatan ini insyaAllah akan dibahas beberapa pokok bahasan;</p> <ol> <li>Data</li> <li>Terminologi statistik</li> <li>Statistika vs Statistik</li> <li>Pengolahan Data</li> <li>Penyajian Data</li> </ol>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/01_satu/01_introduction_to_statistics/#data","title":"Data","text":"<p><code>Data</code> adalah sekumpulan fakta, kejadian atau peristiwa yang terjadi didalam atau diluar organisasi dalam bentuk angka, huruf,simbol, ataupun kombinasinya.</p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/01_satu/01_introduction_to_statistics/#tipe-tipe-data","title":"Tipe-tipe data","text":"<p>Berdasarkan sumber pengumpulan</p> <p><code>Data primer</code>, data yang diperoleh atau dikumpulkan oleh orang yang melakukan penelitian atau yang bersangkutan yang memerlukannya.</p> <p><code>Data Sekunder</code>, data yang diperolah dari sumber-sumber yang telah ada.</p> <p>Berdasarkan pengumpulan</p> <p><code>Data Observasi</code> data atau informasi yang dihasilkan dengan cara mengamati secara langsung subjek atau fenomena yang diteliti baik melalui partisipasi peneliti dalam kegiatan atau hanya sebagai pengamat luar.</p> <p><code>Studi literatur</code> adalah data sekunder yang diambil dari berbagai pustaka, seperti jurnal ilmiah, makalah seminar, buku, dan karya ilmiah yang relevan dengan penelitian. </p> <p><code>Kuisoner</code> adalah data yang dihasilkan secara langsung dari subjek penelitian melalui daftar  pertanyaan yang telah disusun sesuai tujuan penelitian. </p> <p><code>Wawancara</code> adalah data yang dihasilan secara langsung dari subjek penelitian dengan memberikan pertanyaan yang relevan dengan penelitian dan secara langsung didapatkan dari hasil wawancara.</p> <p>Berdasarkan banyak data</p> <p><code>Sensus</code> data yang dikumpulkan dari setiap unit dalam suatu populasi, bukan hanya sebagian (sampel) yang bertujuan untuk mendapatkan hasil yang lengkap mengenai krakteristik populasi tersebut dalam waktu tertentu.</p> <p><code>sample</code> data yang diharapkan menggambarkan karakteristik dari sebuah populasi.</p> <p>Skala Pengukuran</p> <p><code>Data Nominal</code> data yang diberikan kepada objek tapi tidak menggambarkan kedudukan objek tersebut, hanya sebagai label.</p> <p><code>Data Ordinal</code> data yang disusun menurut besarannya.</p> <p><code>Data interval</code> data yang kategorinya diberikan berdasarkan jarak tertentu.</p> <p><code>Data rasio</code> data yang memliki sifat nominal, ordinal dan interval. Angka yang pada data ini menggambarkan ukuran sebenarnya.</p> <p>Berdasarkan sifat</p> <p><code>Data kualitatif</code> data yang tidak berbentuk bilangan, namun dalam pengelolaanya akan dirubah kedalam bentuk bilangan yang diberikan label.</p> <p><code>Data kuantitatif</code> data yang berbentuk bilangan.</p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/01_satu/01_introduction_to_statistics/#terminologi-dasar","title":"Terminologi dasar","text":"<p>Statistik adalah cabang dari Matematika yang mengubah data kedalam informasi yang berguna bagi pengambil keputusan. Statistik secara garis besar terbagi menjadi 2 bagian;</p> <p>Statistik Deskriptif</p> <p>bagian ilmu statistik yang mengdeskripsikan data kedalam bentuk informasi yang mudah dicerna, seperti menghitung median, modus, rata2, variand, dsb. Pada statistik ini kita juga akan serin menjumpai berbagai macam bagan dan diagram.</p> <pre><code>graph LR\n    A[Statistik Deskriptif] --&gt; B[Frekuensi Distribusi];\n    A --&gt; C[Pemusatan central tedency];\n    A --&gt; D[Penyebaran Dispertion];\n    C --&gt; E[Mean, Median, Mode];\n    D --&gt; F[Range, Variance, Standard Deviation];</code></pre> <p>Statistik Inferensial</p> <p>Ilmu statistik yang membuat sebuah kesimpulan pada populasi berdasarkan hasil penghitungan statistik pada sample.</p> <p></p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/01_satu/01_introduction_to_statistics/#prosedure-pengujian-hipotesa","title":"Prosedure pengujian Hipotesa","text":"<pre><code>stateDiagram-v2\n\n    classDef badBadEvent fill:#f00,color:white,font-weight:bold,stroke-width:2px\n\n    s1 : Menentukan hipotesa awal\n    note right of s1\n        Hipotesan nol Ho dan Hipotesa Alternatif H1\n    end note\n    s2 : Menentukan taraf nyata\n    note left of s2\n        Probabilitas menolak Hipotesa\n    end note\n    s3 : Menentukan uji statistik\n    note right of s3\n        Alat uji statistik, uji Z, t, F, X2 dan lain-lain\n    end note\n    s4 : Menentukan daerah keputusan\n    note left of s4\n        Daerah dimana hipotesa nol diterima atau ditolak\n    end note\n    s5 : Mengambil keputusan\n    sOke : Hipotesa diterima\n    sTidak : Hipotesa ditolak\n    [*] --&gt; s1\n    s1 --&gt; s2\n    s2 --&gt; s3\n    s3 --&gt; s4\n    s4 --&gt; s5\n    s5 --&gt; sOke\n    s5 --&gt; sTidak:::badBadEvent</code></pre>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/01_satu/01_introduction_to_statistics/#apa-manfaat-dari-statistik","title":"Apa manfaat dari statistik","text":"<p>Menggunakan statistik kita dapat mengetahui hubungan antar variable, variabel independen dan vari dependend, dimana varial dependen dipengaruhi oleh variabel independen, sehingga kita dapat membuat peralaman secara kita mengetahui fungsi pengaruh variabel2 tersebut dan membuat keputusan atas peralaman.</p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/01_satu/01_introduction_to_statistics/#data-analisis","title":"Data analisis","text":"<p>Data analisis adalah proses pengumupulan data, pemodelan, dan analisa data menggunakan berbagai metode statistik. praktik bekerja dengan data untuk mengumpulkan informasi yang berguna yang mana informasi tersebut dapat digunakan untuk pengambilan keputusan.</p> <p>Alur pengolahan data</p> <pre><code>graph LR\n    A[Mengunpulkan fakta] --&gt; B[Peroses pengambilan data];\n    B --&gt; C[Proses analisis data];\n    C --&gt; D[Deksripsi hasil pengolahan data];</code></pre>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/01_satu/01_introduction_to_statistics/#5-tipe-analisis","title":"5 Tipe Analisis","text":"<p>Analisa Deskriptif</p> <p>Analisa yang memberikan deksripsi yang terjadi pada masa lalu atau mendeskrpisikan objek dengan narasi ssuai dengan data yang tersedia dan membantu bisnis untuk mengetahui kinerjanya dengan memberikan konteks untuk membantu pemangku kepentingan menafsirkan informasi.</p> <p>Analisa Diagnostik</p> <p>Memprediksi apa yang paling mungkin terjadi dimasa depan dan memberikan pengetahuan/wawasan yang dapat ditindaklanjuti berdasarkan informasi tersebut.</p> <p>Analisa Predikif</p> <p>Mengambil hasil analisa deksriptif, dan menganalisa lebih lanjut untuk mengetahui informasi mengapa sesuatu terjadi dimasa lalu.</p> <p>Analisa Preskriptif</p> <p>Memberikan informasi mengenai tindakan yang akan memanfaatn prediksi dan membantu tindakan yang mungkin untuk memberikan solusi.</p> <p>Muhammad Farras Ma'ruf, di Parung, Bogor. 2025-09-24</p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/02_dua/01_distribusi_frekuensi/","title":"Distribusi Frekuensi","text":"<p>Bogor, 24 September 2025 (Mooo nasi padang....)</p> <p>Sumber</p> <ul> <li>Pengantar Statistika dan Analisis Data PPT, Universitas Pamulang, DR. Tukiyat, M.SI.</li> <li>Descriptive Statistics - Muhammed Shayib</li> </ul> pretest <p>Satu</p> <p>Apa yang dimaksud dengan distribusi frekuensi dalam statistik?</p> <ul> <li>(A) Ukuran tendensi sentral dari suatu kumpulan data</li> <li>(B) Proses mengurutkan data dari terkecil ke terbesar</li> <li>(C) Grafik yang menggambarkan hubungan antara dua variabel</li> <li>(D) Penyajian data dalam bentuk tabel yang menunjukkan frekuensi kemunculan setiap kategori atau kelas data</li> <li>(E) Teknik untuk menghitung rata-rata dari sekelompok data</li> </ul> Jawaban <p>Penyajian data dalam bentuk tabel yang menunjukkan frekuensi kemunculan setiap kategori atau kelas data</p> <p>Distribusi frekuensi dalam statistik digunakan untuk merangkum data, sehingga kita bisa melihat berapa kali suatu nilai atau kelompok nilai muncul dalam kumpulan data. Biasanya disajikan dalam bentuk tabel distribusi frekuensi atau divisualisasikan dengan histogram, poligon frekuensi, maupun ogive.</p> <p>dua</p> <p>Berikut ini yang termasuk penyajian data dalam bentuk tabel adalah\u2026</p> <ul> <li>(A) Tabel distribusi frekuensi</li> <li>(B) Diagram lingkaran</li> <li>(C) Diagram lingkaran</li> <li>(D) Histogram</li> <li>(E) Diagram batang</li> </ul> Jawaban <p>Tabel distribusi frekuensi</p> <p>Karena tabel distribusi frekuensi merupakan penyajian data dalam bentuk tabel, sedangkan diagram batang, histogram, dan diagram lingkaran adalah bentuk penyajian data dalam bentuk grafik/diagram visual.</p> <p>tiga</p> <p>Dalam tabel distribusi frekuensi, interval kelas digunakan untuk\u2026</p> <ul> <li>(A) Menghitung rata-rata dari data yang ada</li> <li>(B) Mengubah data kuantitatif menjadi data kualitatif</li> <li>(C) Mengelompokkan data ke dalam beberapa rentang nilai</li> <li>(D) Menentukan hubungan antar variabel</li> <li>(E) Menentukan median dari data.</li> </ul> Jawaban <p>Mengelompokkan data ke dalam beberapa rentang nilai</p> <p>Interval kelas pada tabel distribusi frekuensi berfungsi untuk membagi data yang banyak dan bervariasi menjadi kelompok-kelompok (rentang nilai) agar lebih mudah dibaca, dianalisis, dan dibandingkan.</p> <p>Contoh: Data nilai ujian 100 siswa \u2192 dikelompokkan ke dalam interval kelas:</p> <ul> <li>0\u20139</li> <li>10\u201319</li> <li>20\u201329</li> <li>\u2026 dan seterusnya.</li> </ul> <p>Dengan begitu, kita bisa langsung tahu berapa banyak siswa dalam setiap rentang nilai.</p> <p>empat</p> <p>Apa kegunaan utama dari histogram dalam statistik?</p> <ul> <li>(A) Untuk menampilkan distribusi data dalam bentuk diagram batang yang bersebelahan</li> <li>(B) Untuk membandingkan data dari beberapa kategori</li> <li>(C) Untuk menunjukkan hubungan antara dua variabel</li> <li>(D) Untuk menunjukkan proporsi dari masing-masing kategori data</li> <li>(E) Menunjukkan tren data dari waktu ke waktu</li> </ul> Jawaban <p>Untuk menampilkan distribusi data dalam bentuk diagram batang yang bersebelahan</p> <p>Histogram digunakan untuk menggambarkan distribusi frekuensi data kuantitatif. Batang-batangnya saling bersebelahan (tanpa jarak) karena mewakili interval kelas yang kontinu.</p> <p>Contoh penggunaan: menampilkan distribusi nilai ujian, tinggi badan, berat badan, atau data kuantitatif lainnya.</p> <p>lima</p> <p>Apa perbedaan utama antara diagram batang dan histogram?</p> <ul> <li>(A) Histogram digunakan untuk data kuantitatif dengan interval kelas, sedangkan diagram batang untuk data kategori</li> <li>(B) Histogram digunakan untuk data kualitatif, sedangkan diagram batang untuk data kuantitatif</li> <li>(C) Tidak ada perbedaan signifikan antara diagram batang dan histogram.</li> <li>(D) Diagram batang memiliki batang yang bersebelahan, sedangkan histogram memiliki celah di antara batangnya</li> <li>(E) Tidak ada perbedaan antara histogram dan diagram batang</li> </ul> Jawaban <p>Histogram digunakan untuk data kuantitatif dengan interval kelas, sedangkan diagram batang untuk data kategori    </p> <ul> <li> <p>Histogram \u2192 dipakai untuk data kuantitatif (angka), biasanya dibagi dalam interval kelas (misalnya 0\u201310, 11\u201320, dst). Batang-batangnya berdempetan tanpa celah karena datanya bersifat kontinu.</p> </li> <li> <p>Diagram batang \u2192 dipakai untuk data kategorik (misalnya jenis hobi, fakultas, warna favorit). Batangnya biasanya terpisah dengan jarak karena tiap kategori berdiri sendiri.</p> </li> </ul>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/02_dua/01_distribusi_frekuensi/#distribusi-frekuensi_1","title":"Distribusi Frekuensi","text":"<p>Merupakan table yang memuat ringkasan data dan menunjukan frekuensi/banyaknya data dalam rentang kelas tertentu. Manfaat dari table ini untuk mendapatkan informasi lebih dalam tentang data terutama banyaknya data paka kelompok kelas tertentu. Misalkan _\"berapa mahasiswa yang mencapai nilai Kategori A pada ujian statistik yang retang nilainya 90-100-\".</p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/02_dua/01_distribusi_frekuensi/#membuat-distribusi-frekuensi","title":"Membuat distribusi frekuensi","text":"<p>Untuk membuat distribusi frekuensi terdari dari 3 langka;</p> <ol> <li>Mentukan kelas (interval atau kategori dari data kualitatif)</li> <li>Mengklopkan data dengan kelas (memasukan data pada rentang-rentang yang telah didtetapkan)</li> <li>Menghitung berapa banyak data pada setiap kelas.</li> </ol>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/02_dua/01_distribusi_frekuensi/#menetapkan-kelas","title":"Menetapkan kelas","text":"<p>Penentuan kelas sangatlah penting. Membuat kelas yang terlalu kecil atau besar akan menghaburkan data. Umumnya, dalam menentukan banyak kelas yang optimal ada formula yang digunakan, diantaranya;</p> \\[k = \\sqrt{n}\\] \\[atau\\] \\[k = 1 + 3.33 \\log n\\] <p>Dimana <code>n</code> adalah banyak data. Tidak diragukan bahwa nilai <code>k</code> atau banyaknya kelas adalah bilangan bulat, sehingga kita harus membulatkan bilangan ke atas atau ke bawah.</p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/02_dua/01_distribusi_frekuensi/#langkah-langkah-perhitungan-dan-pembuatan-table-dan-diagram","title":"Langkah-langkah perhitungan dan pembuatan table dan diagram","text":"<p>Please visit this sections </p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/02_dua/assets/241012050065_farras_statistik_dan_data_analisis/","title":"Menyiapkan data acak","text":"In\u00a0[1]: Copied! <pre>data = [\n    79, 49, 48, 74, 81, 98, 87, 80, 80, 84, 90, 70, 91, 93, 82, 78,\n    70, 71, 92, 38, 56, 81, 74, 73, 68, 72, 85, 51, 65, 93, 83, 86,\n    90, 35, 83, 73, 74, 43, 86, 88, 92, 93, 76, 71, 90, 72, 67, 75,\n    80, 91, 61, 72, 97, 91, 88, 81, 70, 74, 99, 95, 80, 59, 71, 77,\n    63, 60, 83, 82, 60, 67, 89, 63, 76, 63, 88, 70, 66, 88, 79, 75\n]\n</pre> data = [     79, 49, 48, 74, 81, 98, 87, 80, 80, 84, 90, 70, 91, 93, 82, 78,     70, 71, 92, 38, 56, 81, 74, 73, 68, 72, 85, 51, 65, 93, 83, 86,     90, 35, 83, 73, 74, 43, 86, 88, 92, 93, 76, 71, 90, 72, 67, 75,     80, 91, 61, 72, 97, 91, 88, 81, 70, 74, 99, 95, 80, 59, 71, 77,     63, 60, 83, 82, 60, 67, 89, 63, 76, 63, 88, 70, 66, 88, 79, 75 ] In\u00a0[2]: Copied! <pre>data_terkecil = min(data)\ndata_terbesar = max(data)\n\nprint(f\"\"\"\nNilai terkecil : {data_terkecil}\nNilai terbesar : {data_terbesar}\n\"\"\")\n</pre> data_terkecil = min(data) data_terbesar = max(data)  print(f\"\"\" Nilai terkecil : {data_terkecil} Nilai terbesar : {data_terbesar} \"\"\") <pre>\nNilai terkecil : 35\nNilai terbesar : 99\n\n</pre> In\u00a0[3]: Copied! <pre>import math as m\n\ndef sturges(banyak_data):\n    return round((1 + (3.3 * m.log10(banyak_data))))\n</pre> import math as m  def sturges(banyak_data):     return round((1 + (3.3 * m.log10(banyak_data)))) In\u00a0[4]: Copied! <pre>banyak_kelas = sturges(len(data))\n\nprint(f\"\"\"\nBanyak data : {len(data)}\nBanyak kelas : {banyak_kelas}\n\"\"\")\n</pre> banyak_kelas = sturges(len(data))  print(f\"\"\" Banyak data : {len(data)} Banyak kelas : {banyak_kelas} \"\"\") <pre>\nBanyak data : 80\nBanyak kelas : 7\n\n</pre> In\u00a0[5]: Copied! <pre>panjang_interval = m.ceil((data_terbesar - data_terkecil) / banyak_kelas)\nprint(f\"\"\"\nInterval per kelas : {panjang_interval}\n\"\"\")\n</pre> panjang_interval = m.ceil((data_terbesar - data_terkecil) / banyak_kelas) print(f\"\"\" Interval per kelas : {panjang_interval} \"\"\") <pre>\nInterval per kelas : 10\n\n</pre> In\u00a0[6]: Copied! <pre>from pandas import DataFrame as df\nimport pandas as pd\n\n# Membuat list interval\ninterval_kolom = [f\"{(30 ) + ((a*panjang_interval))} - {(30 + (panjang_interval*a)) + panjang_interval-1}\" for a in range (banyak_kelas)]\nbatas_bawah_n = [(30 ) + ((a*panjang_interval)) for a in range (banyak_kelas)]\nbatas_atas_n = [(30 + (panjang_interval*a)) + panjang_interval-1 for a in range (banyak_kelas)]\n\n# Transform into data frame\nmain_df = df({\"interval\":interval_kolom, \"batas_bawah\":batas_bawah_n,\"batas_atas\":batas_atas_n})\nmain_df\n</pre> from pandas import DataFrame as df import pandas as pd  # Membuat list interval interval_kolom = [f\"{(30 ) + ((a*panjang_interval))} - {(30 + (panjang_interval*a)) + panjang_interval-1}\" for a in range (banyak_kelas)] batas_bawah_n = [(30 ) + ((a*panjang_interval)) for a in range (banyak_kelas)] batas_atas_n = [(30 + (panjang_interval*a)) + panjang_interval-1 for a in range (banyak_kelas)]  # Transform into data frame main_df = df({\"interval\":interval_kolom, \"batas_bawah\":batas_bawah_n,\"batas_atas\":batas_atas_n}) main_df Out[6]: interval batas_bawah batas_atas 0 30 - 39 30 39 1 40 - 49 40 49 2 50 - 59 50 59 3 60 - 69 60 69 4 70 - 79 70 79 5 80 - 89 80 89 6 90 - 99 90 99 In\u00a0[7]: Copied! <pre>import numpy as np\npd.set_option(\"display.max_colwidth\", None) \ndata_np = np.array(data)\n</pre> import numpy as np pd.set_option(\"display.max_colwidth\", None)  data_np = np.array(data) In\u00a0[8]: Copied! <pre>main_df['frekuensi'] = [np.count_nonzero((data_np &gt;= series.batas_bawah) &amp; (data_np &lt;= series.batas_atas)) for _,series in main_df.iterrows()]\n\ndisplay(main_df)\n</pre> main_df['frekuensi'] = [np.count_nonzero((data_np &gt;= series.batas_bawah) &amp; (data_np &lt;= series.batas_atas)) for _,series in main_df.iterrows()]  display(main_df) interval batas_bawah batas_atas frekuensi 0 30 - 39 30 39 2 1 40 - 49 40 49 3 2 50 - 59 50 59 3 3 60 - 69 60 69 11 4 70 - 79 70 79 24 5 80 - 89 80 89 22 6 90 - 99 90 99 15 In\u00a0[9]: Copied! <pre>main_df[\"frekuensi_lebih_dari\"] = [np.count_nonzero(data_np&gt; series.batas_bawah) for _,series in main_df.iterrows()]\nmain_df[\"frekuensi_kurang_dari\"] = [np.count_nonzero(data_np&lt; series.batas_bawah) for _,series in main_df.iterrows()]\n# main_df[\"frekuensi_kurang_dari_data\"] = [np.sort(data_np[data_np&lt;main_df.loc[n].batas_bawah.item()]) for n in range (banyak_kelas)]\n</pre> main_df[\"frekuensi_lebih_dari\"] = [np.count_nonzero(data_np&gt; series.batas_bawah) for _,series in main_df.iterrows()] main_df[\"frekuensi_kurang_dari\"] = [np.count_nonzero(data_np&lt; series.batas_bawah) for _,series in main_df.iterrows()] # main_df[\"frekuensi_kurang_dari_data\"] = [np.sort(data_np[data_np In\u00a0[10]: Copied! <pre>main_df\n</pre> main_df Out[10]: interval batas_bawah batas_atas frekuensi frekuensi_lebih_dari frekuensi_kurang_dari 0 30 - 39 30 39 2 80 0 1 40 - 49 40 49 3 78 2 2 50 - 59 50 59 3 75 5 3 60 - 69 60 69 11 70 8 4 70 - 79 70 79 24 57 19 5 80 - 89 80 89 22 33 43 6 90 - 99 90 99 15 12 65 In\u00a0[11]: Copied! <pre># check apakah frekuensi batas bawah lebih kecil adri \nlast_series_main_df = main_df.iloc[-1]\nif last_series_main_df.frekuensi_kurang_dari.item() &lt; len(data):\n    \n    # Jik ternyata data akhir kurang dari batas akhir tidak \n    last_index = main_df.index[-1] \n\n    batas_bawah_additional = last_series_main_df.batas_bawah.item() + panjang_interval # batas bawah terakhir ditambah banyak interval\n\n    frekuensi_kurang_dari_additional = np.count_nonzero(data_np &lt; batas_bawah_additional)\n    frekuensi_lebih_dari_additional = np.count_nonzero(data_np &gt; batas_bawah_additional)\n    \n    main_df.loc[last_index+1] = ['',batas_bawah_additional,0,0,frekuensi_lebih_dari_additional,frekuensi_kurang_dari_additional]\nelse :\n    print(\"already sama masse\")\n</pre> # check apakah frekuensi batas bawah lebih kecil adri  last_series_main_df = main_df.iloc[-1] if last_series_main_df.frekuensi_kurang_dari.item() &lt; len(data):          # Jik ternyata data akhir kurang dari batas akhir tidak      last_index = main_df.index[-1]       batas_bawah_additional = last_series_main_df.batas_bawah.item() + panjang_interval # batas bawah terakhir ditambah banyak interval      frekuensi_kurang_dari_additional = np.count_nonzero(data_np &lt; batas_bawah_additional)     frekuensi_lebih_dari_additional = np.count_nonzero(data_np &gt; batas_bawah_additional)          main_df.loc[last_index+1] = ['',batas_bawah_additional,0,0,frekuensi_lebih_dari_additional,frekuensi_kurang_dari_additional] else :     print(\"already sama masse\") In\u00a0[12]: Copied! <pre>main_df\n</pre> main_df Out[12]: interval batas_bawah batas_atas frekuensi frekuensi_lebih_dari frekuensi_kurang_dari 0 30 - 39 30 39 2 80 0 1 40 - 49 40 49 3 78 2 2 50 - 59 50 59 3 75 5 3 60 - 69 60 69 11 70 8 4 70 - 79 70 79 24 57 19 5 80 - 89 80 89 22 33 43 6 90 - 99 90 99 15 12 65 7 100 0 0 0 80 In\u00a0[13]: Copied! <pre>main_df['persen_kumulatif_lebih_dari'] = (main_df.frekuensi_lebih_dari / len(data))\nmain_df['persen_kumulatif_kurang_dari'] = (main_df.frekuensi_kurang_dari / len(data))\n</pre> main_df['persen_kumulatif_lebih_dari'] = (main_df.frekuensi_lebih_dari / len(data)) main_df['persen_kumulatif_kurang_dari'] = (main_df.frekuensi_kurang_dari / len(data)) In\u00a0[14]: Copied! <pre>main_df\n</pre> main_df Out[14]: interval batas_bawah batas_atas frekuensi frekuensi_lebih_dari frekuensi_kurang_dari persen_kumulatif_lebih_dari persen_kumulatif_kurang_dari 0 30 - 39 30 39 2 80 0 1.0000 0.0000 1 40 - 49 40 49 3 78 2 0.9750 0.0250 2 50 - 59 50 59 3 75 5 0.9375 0.0625 3 60 - 69 60 69 11 70 8 0.8750 0.1000 4 70 - 79 70 79 24 57 19 0.7125 0.2375 5 80 - 89 80 89 22 33 43 0.4125 0.5375 6 90 - 99 90 99 15 12 65 0.1500 0.8125 7 100 0 0 0 80 0.0000 1.0000 In\u00a0[15]: Copied! <pre>import matplotlib.pyplot as plt\nimport seaborn as sns\nimport mplcursors\n</pre> import matplotlib.pyplot as plt import seaborn as sns import mplcursors In\u00a0[16]: Copied! <pre>sns.histplot(data, bins=main_df.batas_bawah.to_numpy(), kde=True, color=\"green\")\nplt.title('Histogram')\nplt.xlabel('Rentang nilai')\nplt.ylabel('Frekuensi')\nmplcursors.cursor(hover=True)\nplt.show(sns)\n</pre> sns.histplot(data, bins=main_df.batas_bawah.to_numpy(), kde=True, color=\"green\") plt.title('Histogram') plt.xlabel('Rentang nilai') plt.ylabel('Frekuensi') mplcursors.cursor(hover=True) plt.show(sns) In\u00a0[18]: Copied! <pre>plt.title(\"OGIF Frekuensi\")\nax = sns.lineplot(data=main_df, x=\"batas_bawah\",y=\"frekuensi_kurang_dari\",marker=\"o\", dashes=False)\nsns.lineplot(data=main_df[:-1], x=\"batas_atas\",y=\"frekuensi_lebih_dari\",marker=\"o\")\nplt.show(sns)\n</pre> plt.title(\"OGIF Frekuensi\") ax = sns.lineplot(data=main_df, x=\"batas_bawah\",y=\"frekuensi_kurang_dari\",marker=\"o\", dashes=False) sns.lineplot(data=main_df[:-1], x=\"batas_atas\",y=\"frekuensi_lebih_dari\",marker=\"o\") plt.show(sns)"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/02_dua/assets/241012050065_farras_statistik_dan_data_analisis/#menyiapkan-data-acak","title":"Menyiapkan data acak\u00b6","text":""},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/02_dua/assets/241012050065_farras_statistik_dan_data_analisis/#langkah-membuat-table-distribusi","title":"Langkah membuat table distribusi\u00b6","text":"<ol> <li>Mencari data terkecil dan terbesar</li> </ol>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/02_dua/assets/241012050065_farras_statistik_dan_data_analisis/#mencari-data-terkecil-dan-terbesar","title":"Mencari data terkecil dan terbesar\u00b6","text":"<p>Kita dapat menggunakan global function fungsi bawaan python, yaitu <code>min()</code> dan <code>max()</code></p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/02_dua/assets/241012050065_farras_statistik_dan_data_analisis/#mencari-banyak-kelas","title":"Mencari banyak kelas\u00b6","text":"<p>Untuk mencari banyak kelas kita dapat menggunakan sturge''s rule</p> <p>$k = 1 + (3.322log (n) )$</p> <p>dimana :</p> <ul> <li>$K$ adalah banyak kelas</li> <li>$n$ banyak data</li> </ul> <p>Untuk membuat fungsi sturges, kita perlu memuat (import) modul <code>math</code> agar dapat mengakses fungsi `math.log</p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/02_dua/assets/241012050065_farras_statistik_dan_data_analisis/#mencari-panjang-kelas-interval","title":"Mencari panjang kelas / interval\u00b6","text":"<p>Interval, dapat kita simbolkan dengan $p$, didapat dengan cara membagi selisih nilai terbesar dengan nilai terkecil lalu dibagi dengan banyak kelas.</p> <p>$$p = \\frac{(N_{max} - N_{min})}{k}$$</p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/02_dua/assets/241012050065_farras_statistik_dan_data_analisis/#menetapkan-batas-bawah-dan-atas-dari-kelas-pertama","title":"Menetapkan batas bawah dan atas dari kelas pertama\u00b6","text":"<p>Dengan mengetahui nilai terkecil dan terbesar dari kumpulan bilangan $N$ serta panjang kelas $7$ dan interval $10$, kita dapat mengambil batas bawah interval kelas pertama dengan nilai 30. Mengapa, agar interval setiap kelas terlihat lebih rapih, dengan syarat penetapan 30 batas kelas bawah dalam 7 kelas dapat memenuhi kumpulan bilangan $N$. Batas tampung lebih besar dari selisih nilai maksimal dikurang nilai minimal.</p> <p>$(k \\cdot p \\geq N_{max} - N_{min}) \\to  7 \\cdot 10 \\geq 99 - 35 \\to 70 \\geq 64$</p> Kelas Interval 1 30 - 39 2 40 - 49 3 50 - 59 4 60 - 69 5 70 - 79 6 80 - 89 7 90 - 99 <p>Untuk membuat table, kita dapat menggunakan Dataframe, module dari <code>pandas</code></p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/02_dua/assets/241012050065_farras_statistik_dan_data_analisis/#membuat-dataframe","title":"Membuat dataframe\u00b6","text":""},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/02_dua/assets/241012050065_farras_statistik_dan_data_analisis/#menambahkan-frekuensi-nilai-dari-data-asli","title":"menambahkan frekuensi nilai dari data asli\u00b6","text":"<p>Penggunaan count if untuk menentukan banyaknya frekuensi dari setiap kelas.</p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/02_dua/assets/241012050065_farras_statistik_dan_data_analisis/#membuat-kolom-frekuensi-kumulatif-lebih-dari-dan-kurang-dari","title":"Membuat kolom frekuensi kumulatif lebih dari dan kurang dari\u00b6","text":""},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/02_dua/assets/241012050065_farras_statistik_dan_data_analisis/#additional-move-karena-kurang-informasi-terkait-nila-frekuensi-kurang-dari-akibat-kekurangan-1-baris-maka-kita-perlu-menambahkan-row-baru","title":"Additional move, karena kurang informasi terkait nila frekuensi kurang dari akibat kekurangan 1 baris, maka kita perlu menambahkan row baru\u00b6","text":""},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/02_dua/assets/241012050065_farras_statistik_dan_data_analisis/#persen-kumulatif-kurang-dari-dab-lebih-dari","title":"Persen kumulatif kurang dari dab lebih dari\u00b6","text":""},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/02_dua/assets/241012050065_farras_statistik_dan_data_analisis/#membuat-histogram","title":"Membuat histogram\u00b6","text":""},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/02_dua/assets/241012050065_farras_statistik_dan_data_analisis/#membuat-ogif-frekuensi","title":"Membuat OGIF Frekuensi\u00b6","text":""},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/03_tiga/01_ukuran_penyebaran_pemusatan_data/","title":"Ukuran penyebaran dan pemusatan data","text":"<p>Bogor, 30 September 2025 (Rumah baru, cerita baru, dan keberkahaan baru...)</p> <p>Sumber</p> <ul> <li>Pengantar Statistika dan Analisis Data PPT, Universitas Pamulang, DR. Tukiyat, M.SI.</li> <li>Statistik Deksriptif for IT, Sudaryono, Asep Saefullah, dan Untung Rahardja</li> </ul> pretest <p>There is no pretest</p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/03_tiga/01_ukuran_penyebaran_pemusatan_data/#definisi-ukuran-pemusatan","title":"Definisi ukuran pemusatan","text":"<p>Dalam beberapa hal, ahli statisktik mengaggap rata-rata merupakan nilai yang cukup representatif bagi penggambaran nilai-nilai yang terdapat dalam data yang bersangkutan. Penilaian terhadap rata-rata berhubungan erat dengan dispersi atau variasi datanya dari mana rata-rata tersebut itu dihitung.</p> <p>Ukuran kencendrungan memusat merupa suatu bilangan yang menunjukan tendensi (kencdrungan) memusatnya bilangan-bilangan dalam suatu distribusi.Ukuran tersebut dapat digunakan untuk merangkum data dan mendeskripsikan suatu kelompok variabel dengan cara mencari suatu angka (indeks) yang dapat mewakili seluruh kelompok tersebut. Rata-rata (Average) nilai yang mewakili himpunan. Nilai rata-rata cendrung terletak di tengah suatu kelompok data yang disusun menurut besar kecilnya nilai. Dengan kata lain ia mempunyai kencendrungan memusat</p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/03_tiga/01_ukuran_penyebaran_pemusatan_data/#mean","title":"Mean","text":"<p>Untuk menghitung nilai rata-rata dari himpunan dalam bentul table frekuensi kita harus;</p> <ol> <li>Mencari nilai tengah dari setiap kelas \\(X\\).</li> <li>menghitung frekuensi dari setiap kelas \\(f\\)</li> <li>\\(f \\times x\\)</li> </ol> <p>Ketika sudah dapat informasi diatas kita dapat menghitung rata-rata nilai dari himpunan table frekuensi dengan cara membagi jumlah perkalian nilia tengah dari setiap kelas dan frekuensi dengan banyak frekuensi nilai.</p> \\[ \\overline{X}=\\frac{\\sum{fx}}{N} \\] <p>Case</p> Interval Nilai \\(f\\) (Frekuensi) 33 - 39 2 26 - 32 8 19 - 25 19 12-18 20 5 - 11 11 Jawaban <p>Rata-rata nilai dari himpunan distirbusi frekuensi datas adalah 18.5</p> <p>Jawaban dapat dilihat di sini</p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/03_tiga/01_ukuran_penyebaran_pemusatan_data/#median","title":"Median","text":"<p>Jika ada himpunan data yang diurutkan dari bilangan terkecil hingga terbesar lalu dibagi menjadi dua kelompok; separuh masuk kedalam kelompok rendah dan sebagian masuk kedalam kelompok tinggi. Makak titik tengah yang memisahkan kedua kelompok tersebut disebut dengan median. Untuk memngetahui nilai tengah bergantung pada banyaknya data <code>n</code>, apakah ganjil atau genap.</p> <p>contoh</p> <p>Data Ganjil</p> <p>1,4,6,8,9, maka nilai tengahanya dapat kita ketetahui dengan \\(\\frac{n}{2} + 0.5\\). Contoh ini kita dapat index ke-3, maka nilai tengahanya adalah <code>6</code>. </p> <p>Data Genap</p> <p>1,4,6,8,9,10 maka nilai tengahanya dapat kita ketetahui dengan \\(\\frac{n}{2} + 0.5\\).  Contoh ini kita dapat index 3.5, , sehingga kita perlu mendapatkan nilai tengah antara index 3 dan index 4, sehingga nilai tengah adalah \\(\\frac{4+8}{2}\\), yaitu <code>7</code>.</p> <p>Untuk menghitung median dari data frekuensi berkelompok kita dapat menggunakan persammaan dibawah ini</p> \\[ {Median = B_{b} + (\\frac{\\frac{N}{2} - fk_{b}}{f_{d}}) \\times i} \\] <p>\\(B_{b}\\) = Batas bawah nyata dari interval yang mengandung median \\(Fk_{b}\\) = Frekuensi kumulatif dibawah interval yang mengandung median \\(f_{d}\\) = Frekuensi inteval yang mengandung nilai median \\(i\\) = Lebar interval \\(N\\) = Jumlah frekuensi dalam distribusi</p> <p>Case</p> Interval Nilai \\(f\\) (Frekuensi) 33 - 39 2 26 - 32 8 19 - 25 19 12-18 20 5 - 11 11 <p>Hitunglah nilai media dari data diatas</p> Jawaban <p>Nilai media dari himpunan distribusi frekuensi diatas adalah 16.67</p> <p>Jawaban dapat dilihat di sini</p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/03_tiga/assets/1_average_distribusi_frekuensi/","title":"1 rata-rata distribusi frekuensi","text":"In\u00a0[1]: Copied! <pre>import numpy as np\nimport pandas as pd\n</pre> import numpy as np import pandas as pd In\u00a0[2]: Copied! <pre>lower_bond = [33,26,19,12,5]\nupper_bond = [39,32,25,18,11]\nfrekuensi = [2,8,19,20,11] \n\ndata_frekuensi = pd.DataFrame({'lower_bond':lower_bond, 'upper_bond':upper_bond, 'frekuensi':frekuensi})\ndata_frekuensi\n</pre> lower_bond = [33,26,19,12,5] upper_bond = [39,32,25,18,11] frekuensi = [2,8,19,20,11]   data_frekuensi = pd.DataFrame({'lower_bond':lower_bond, 'upper_bond':upper_bond, 'frekuensi':frekuensi}) data_frekuensi Out[2]: lower_bond upper_bond frekuensi 0 33 39 2 1 26 32 8 2 19 25 19 3 12 18 20 4 5 11 11 In\u00a0[3]: Copied! <pre>data_frekuensi['midle_value'] = np.array((data_frekuensi.lower_bond + data_frekuensi.upper_bond)/2, dtype=np.int64)\ndata_frekuensi\n</pre> data_frekuensi['midle_value'] = np.array((data_frekuensi.lower_bond + data_frekuensi.upper_bond)/2, dtype=np.int64) data_frekuensi Out[3]: lower_bond upper_bond frekuensi midle_value 0 33 39 2 36 1 26 32 8 29 2 19 25 19 22 3 12 18 20 15 4 5 11 11 8 In\u00a0[4]: Copied! <pre>data_frekuensi['fX'] = data_frekuensi.frekuensi * data_frekuensi.midle_value\ndata_frekuensi\n</pre> data_frekuensi['fX'] = data_frekuensi.frekuensi * data_frekuensi.midle_value data_frekuensi Out[4]: lower_bond upper_bond frekuensi midle_value fX 0 33 39 2 36 72 1 26 32 8 29 232 2 19 25 19 22 418 3 12 18 20 15 300 4 5 11 11 8 88 In\u00a0[5]: Copied! <pre>average = sum(data_frekuensi.fX) / sum (frekuensi)\naverage\n</pre> average = sum(data_frekuensi.fX) / sum (frekuensi) average Out[5]: <pre>18.5</pre> <p>Kita mendapati nilai rata-rata pada hipmunan distribusi frekuensi di atas adalah 18.5</p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/03_tiga/assets/1_average_distribusi_frekuensi/#setup-midle-value-in-class","title":"Setup midle value in class\u00b6","text":""},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/03_tiga/assets/1_average_distribusi_frekuensi/#setup-f-x","title":"Setup f . X\u00b6","text":""},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/03_tiga/assets/1_average_distribusi_frekuensi/#masukan-ke-rumus-mean-untuk-data-table-frekuensi","title":"Masukan ke rumus mean untuk data table frekuensi\u00b6","text":""},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/03_tiga/assets/2_median_data_kelompok/","title":"1 median distribusi frekuensi","text":"In\u00a0[1]: Copied! <pre>import pandas as pd\nimport numpy as np\n</pre> import pandas as pd import numpy as np In\u00a0[2]: Copied! <pre>lower_bond = np.asarray([3,8,13,18,23,28] )\nupper_bond = lower_bond + 4\nfrekuensi = [3,6,3,4,2,5]\n\npd_data = pd.DataFrame({\"lower_bond\":lower_bond, \"upper_bond\":upper_bond, \"frekuensi\":frekuensi})\npd_data\n</pre> lower_bond = np.asarray([3,8,13,18,23,28] ) upper_bond = lower_bond + 4 frekuensi = [3,6,3,4,2,5]  pd_data = pd.DataFrame({\"lower_bond\":lower_bond, \"upper_bond\":upper_bond, \"frekuensi\":frekuensi}) pd_data Out[2]: lower_bond upper_bond frekuensi 0 3 7 3 1 8 12 6 2 13 17 3 3 18 22 4 4 23 27 2 5 28 32 5 <p>Pertama kita harus mengetahui pada kelas berapa kemungkinan nila median tersebut. Kita dapat mengetahuinya dengan cara membagi 2 jumlah frekuensi lalu menetapkan inverval kemungkinan nila tengah bearada.</p> In\u00a0[3]: Copied! <pre>## Membuat frekuensi kumulatifabs\nfrekuensi_kumulatif = [sum(pd_data.frekuensi[0:a+1]) for a,b in enumerate(pd_data.frekuensi)]\n\n\nfrekuensi_kumulatif\n</pre> ## Membuat frekuensi kumulatifabs frekuensi_kumulatif = [sum(pd_data.frekuensi[0:a+1]) for a,b in enumerate(pd_data.frekuensi)]   frekuensi_kumulatif Out[3]: <pre>[3, 9, 12, 16, 18, 23]</pre> In\u00a0[4]: Copied! <pre>pd_data[\"frekuensi_kumulatif\"] = frekuensi_kumulatif\npd_data\n</pre> pd_data[\"frekuensi_kumulatif\"] = frekuensi_kumulatif pd_data Out[4]: lower_bond upper_bond frekuensi frekuensi_kumulatif 0 3 7 3 3 1 8 12 6 9 2 13 17 3 12 3 18 22 4 16 4 23 27 2 18 5 28 32 5 23 In\u00a0[5]: Copied! <pre>print(f'Nilai tengahan kemungkinan ada di interval = {pd_data.frekuensi_kumulatif[-1:]/2 }')\n</pre> print(f'Nilai tengahan kemungkinan ada di interval = {pd_data.frekuensi_kumulatif[-1:]/2 }') <pre>Nilai tengahan kemungkinan ada di interval = 5    11.5\nName: frekuensi_kumulatif, dtype: float64\n</pre> <p>Kita dapati bahwa nilai tengah berada pata 11.5, jika merujuk pada table distrbusi frekuensi nilai tersebut terletaj pada rentang nilai <code>13-17</code>. Atau pada data frame pada index ke 2</p> In\u00a0[6]: Copied! <pre>color = \"lightgreen\"\npd_data.style.map(lambda _: f\"background-color: {color}\",\n                  subset=(pd_data.index[2],))\n</pre> color = \"lightgreen\" pd_data.style.map(lambda _: f\"background-color: {color}\",                   subset=(pd_data.index[2],)) Out[6]: lower_bond upper_bond frekuensi frekuensi_kumulatif 0 3 7 3 3 1 8 12 6 9 2 13 17 3 12 3 18 22 4 16 4 23 27 2 18 5 28 32 5 23 In\u00a0[7]: Copied! <pre>batas_bawah_kelas_median = pd_data.lower_bond[2]\nn_per_2 = pd_data.frekuensi_kumulatif[-1:].iloc[0]/2\ninterval = (pd_data.upper_bond[2] - pd_data.lower_bond[2]) +1\nfrekuensi_cum_before_current_median_class = pd_data.frekuensi_kumulatif[1]\nfrekuens_on_current_medial_class = pd_data.frekuensi[2]\n\nprint(batas_bawah_kelas_median)\nprint(n_per_2)\nprint(interval)\nprint(frekuensi_cum_before_current_median_class)\nprint(frekuens_on_current_medial_class)\n</pre> batas_bawah_kelas_median = pd_data.lower_bond[2] n_per_2 = pd_data.frekuensi_kumulatif[-1:].iloc[0]/2 interval = (pd_data.upper_bond[2] - pd_data.lower_bond[2]) +1 frekuensi_cum_before_current_median_class = pd_data.frekuensi_kumulatif[1] frekuens_on_current_medial_class = pd_data.frekuensi[2]  print(batas_bawah_kelas_median) print(n_per_2) print(interval) print(frekuensi_cum_before_current_median_class) print(frekuens_on_current_medial_class) <pre>13\n11.5\n5\n9\n3\n</pre> <p>$$ Median = 12.5 + (\\frac{\\frac{23}{2} - 9}{3}) \\times 5 $$</p> In\u00a0[8]: Copied! <pre>median = (batas_bawah_kelas_median-0.5) + (((n_per_2 - frekuensi_cum_before_current_median_class)/frekuens_on_current_medial_class) * interval)\nmedian\n</pre> median = (batas_bawah_kelas_median-0.5) + (((n_per_2 - frekuensi_cum_before_current_median_class)/frekuens_on_current_medial_class) * interval) median Out[8]: <pre>np.float64(16.666666666666668)</pre> <p>Kita mendapati bahwa nilai tengah berada pada pada kelas <code>13-17</code> dengan titik yg lebih tepat pada <code>16.67</code></p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/03_tiga/assets/2_median_data_kelompok/#memasukan-nilai-nilai-kedalam-fungsi-median","title":"Memasukan nilai-nilai kedalam fungsi median\u00b6","text":"<p>$$ Median = B_{b} + (\\frac{\\frac{N}{2} - fk_{b}}{f_{d}}) \\times i $$</p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/04_empat/01_kemungkinan_diskrit/","title":"Distribusi Probabilitas Diskrit","text":"<p>Bogor, 27 September 2025 (Mooo nasi padang....)</p> <p>Sumber</p> <ul> <li>Pengantar Statistika dan Analisis Data PPT, Universitas Pamulang, DR. Tukiyat, M.SI.</li> <li>Descriptive Statistics - Muhammed Shayib</li> </ul> pretest <p>on Develope</p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/04_empat/01_kemungkinan_diskrit/#pengenalan","title":"Pengenalan","text":"<p>Mari kita awali dengan beberapa istilah</p> <p>Eksperimen Acak</p> <p>proses mengukur atau mengobservasi yang mana hasil keluaran dari sebuah proses tersebut tidak dapat sebenarnya diprediksi.</p> <p>Sample Space</p> <p>\\(S\\) adalah jumlah dari keluaran Eksperimen acak, jumlah dari sekumpulan semua kemungkinan yang keluar dari eksperimen acak.</p> <p>Setiap percobaan memliki probabilitas (kemungkinan) terjadi. Misalkan, melempar koin sekali percobaan adalah sebuah eksperimen acak. <code>Sample space</code> nya adalah <code>{Kepala, Buntu}</code>.</p> <p>Variabel Acak</p> <p>adalah nilai asli yg menggambarkan hasil dari eksperimen acak.</p> <p>Misalkan, eksperimen acak dengan sample space \\(S\\), \\(X(s) = x\\) dimana \\(s \\epsilon S\\) (s elemen dari S) dan \\(x\\) adalah hasil variabel acak dan fungsi \\(X(s) adalah variable acak\\). </p> <p>Diksrit variable acak</p> <p>Adalah sebuah variabel acaka yang tak terhingga atau dapat dihitung dengan angka. Sebagai contoh, seberapa banyak teman yg kita kenal, seberapa banyak pintu didalam rumah.</p> <p>Pada kasus diskrit, variabel acak akan memiliki nilai probabilitas tertentu. Fungsi yang mengatur pribabilitas ini disebut dengan <code>Mass Function</code> atau PMF, pada nilai tertentu dari diskrit variabel acak, akan memberikan kemungkinan dari variabel acak, misalkan \\(P (X = x) = P(x)\\)</p> <p>Probablity Mass Function</p> <p>Untuk <code>$P(X)</code> menjadi Probability Mass Function, pada diskrit variabel acak harus memenyhi syarat berikut</p> <ul> <li>\\(P(X) \\ge 0\\) untuk semua nilai dari diskrit variable acak \\(X\\).</li> <li>\\(\\sum_{\"all values of x\"} P(X) = 1\\)</li> </ul> <p>Atau dengan kata lain jumlah kemungkinan dari hasil keluaraNn pada percobaan probabilitas harus sama dengan 1. Selain PMF terdapat konsep lain, yaitu Cumulative Distribution Function (CDF)</p> <p>Cumulative Distribution Function</p> <p>On develop</p>"},{"location":"My%20Magister/2_Second_semester/Statistika%20dan%20Data%20Analisis/04_empat/01_kemungkinan_diskrit/#ekspetasi-dan-variansi-variabel-acak","title":"Ekspetasi dan variansi variabel acak","text":""},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/01.%20Kesatu/","title":"Kompleksitas Algoritma","text":""},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/01.%20Kesatu/#apa-itu-algoritma","title":"Apa itu Algoritma","text":"<p>Kumpulan dari aturan atau sebuah instruksi yang diikuti sata proses kalkulias atau operasi pemecahan masalah  atau sebuah prosedur pemecahan masalah matematika dengan beberapa langkah yang terbatas yang seringkali melibatkan operasi berulang (rekursif).</p> <p></p> <p>Pemecahan sebuah masalah dapat diselesaikan dengan banyak algoritma, sebagai contoh, pengurutan bilangan terbesar memliki puluhan cara dalam penyelesaiannya. Hal yang lebih sederhana lagi, dalam membuat mie instan, ada beberapa cara membuatnya, yg membedakan adalah banyak langkah dan waktu yang dimakan hingga mie instan tersebut siap disajikan.</p> <p>Selain hasil yang harus benar, sifat efisien pada algoritma juga sangat penting. Efesiensi sebuah algortima pemprograman lebih spesifiknya biasanya diukur dengan 2 hal, waktu (times) dan ruang. Waktu disini adalah jumlah yang dibutuhkan sebuah algoritma untuk menyelesaikan operasinya dan Ruang (space) memori penyimpanan yg berguna untuk menyimpan banyak langkah-langkah dalam pemecahan masalah.</p> <p>Kebutuhan times dan space suatu algoritma bergantung pada jumlah input masukan, bisanya kita simbolkan inputan masukan dengan (n). Semakin baik algoritma ditandakan dengan meningkatnya <code>n</code> namun tidak diikut dengan peningkatakan yg tajam pada time dan space yang dibutuhkan.</p> <p>Note</p> <p>Lihat udemy tentang algortima</p> <p>Kurva nilai input terhadap waktu pada sebuah algoritma</p> <p></p> <p>Pada gambar diatas, dapat kita lihat kurva dengan tanda panah warna biru menggambarkan algoritma yang paling baik, karena penambahan nilai masukan tidak meningkatkan waktu yang dibutuhkan secara signifikan. Yang mana berbanding terbalik dengan kurva dengan tanda panah warna merah.</p>"},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/01.%20Kesatu/#diskusi","title":"Diskusi","text":"<p>Question</p> <p>Berikan contoh algoritma perbandingan algoritma yang baik dan yang kurang baik dalam pencarian data dalam database</p> <p>Answer</p> <p>Berikut adalah kode python </p> <pre><code>import random\nfrom time import time\n\n# Set random seed\nrandom.seed(42)\n\nrandomDataRange = 100_000_000\nnDataList = 10_000_000\n\narrayRandom = []\nprint(\"Prepare random sorted list\")\nfor a in range(randomDataRange):\n    if len(arrayRandom) &gt; 0:\n\n        # print(\"Value randomg {:d} value Before {:d}\".format(random.randint(arrayRandom[-1],nDataList),arrayRandom[-1]))\n        # print()\n        # # check wheter data is equi or not,\n        value = random.randint(arrayRandom[-1],nDataList) if arrayRandom[-1] &gt; random.randint(arrayRandom[-1],nDataList) else random.randint(arrayRandom[-1],(nDataList:=nDataList+100))\n        arrayRandom.append(value)\n    else:\n\n        arrayRandom.append(random.randint(0,nDataList))\n\n\nrandomValueExistInList = arrayRandom[random.randint(0, len(arrayRandom)-1)]\nprint(\"Banyak Data {:,}\".format(len(arrayRandom)))\nprint(\"Nilai dicari {:d}\".format(randomValueExistInList))\nprint(\"-\"*5)\n\ndef linearSarch(array, value):\n    for a in array:\n        if a == value:\n            return a\n\n    return -1\n\n\ndef binary_search(arr, target):\n    left, right = 0, len(arr) - 1\n\n    while left &lt;= right:\n        mid = (left + right) // 2\n        if arr[mid] == target:\n            return mid  # Target found, return index\n        elif arr[mid] &lt; target:\n            left = mid + 1  # Search in the right half\n        else:\n            right = mid - 1  # Search in the left half\n\n    return -1  # Target not found\n\n\n# Waktu sekarang\nprint(\"Linear Search\")\nnow = time()\nprint(\"Hasil \",linearSarch(arrayRandom, randomValueExistInList))\nprint(\"Estimasi Waktu : {:.10f} \".format(time() - now))\n\nprint(\"\")\nprint(\"Binary Search\")\nnow2 = time()\nprint(\"Hasil \",arrayRandom[binary_search(arrayRandom, randomValueExistInList)])\nprint(\"Estimasi Waktu : {:.10f} \".format(time() - now2))\n</code></pre>"},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/02.%20Kedua/","title":"Brute Force Algorithm dan Exhaustive Search","text":""},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/02.%20Kedua/#time-complexity","title":"Time Complexity","text":"<p>Record the start time and record the end time and get the running time. Tidak cara baik untuk mengitung, karena hardware yang berbeda-beda ketika mengimplementasi algoritma tersebut, sehingga bukan cara yg tepat untuk mengukur kemampuan algoritma.Maka kita membutuhkan cara yang lebih objektif, yaitu dengan, melihaat banyak langkah yang dilakukan oleh sebuah algoritma dalam menyelesaikan operasinya, inilah yang disebut dengan Time Complexity</p> <p>Akan sangat berguna bagi kita jika dapat membandingkan antara performa dari beberapa algoritma untuk mengetahui algoritma mana yang lebih baik. Salah satu cara yang terlintas pertama kali bagi kebanyakan orang adalah dengan cara mencatatan waktu awal proses ketika algoritma berjalan dan waktu ketika proses tersebut berakhir, lalu kita menghitung selisih antara waktu tersebut sehingga menghasilkan waktu yang dipakai oleh algoritma untuk menyelesaikan operasinya. Namun, hal tersebut kurang tepat, karena terpengaruhi oleh variabel lain, yaitu hardware yang digunakan. Bisa jadi algoritma yang paling tidak efesien yang dijalankan pada kompter dengan ram tinggi dan CPU terbaik akan menghasilkan waktu singkat. Maka dari itu kita membutuhkan cara lain yang lebih objektif untuk mengukur performa algoritma. Yaitu dengan cara melihat sebarapa banyak langka yang dilakukan oleh sebuah algoritma dalam menyelesaikan operasinya. Inilah yang disebut dengan Time Complexity.</p> <p>Lalu menyangkut dengan pentingnya, Time Complexity menjadi patokan yang tidak kalah penting dengan hasil keluaran dari sebuah algoritma, didukung diera big data, pengolahan data pada sebuah proses memnjadi hal yang tidak disepelekan. Maka dari itu menghitung komplesitas waktu sebuah algoritma dalam pengembangan sebuah program menjadi hal yang tidak boleh dikesampingkan.</p> <p>https://www.udemy.com/course/data-structures-and-algorithms-deep-dive-using-java/learn/lecture/8435752#notes</p>"},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/02.%20Kedua/#big-on-notation","title":"Big On Notation","text":"Big-O Desc of time \\(O(1)\\) Constant \\(O(Log n)\\) log n \\(O(n)\\) Linear \\(O(n log n)\\) n log-star n \\(O(n^2)\\) Quandratic"},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/02.%20Kedua/#big-o-big-tetha-big-mega","title":"Big-O, Big-Tetha, Big-Mega","text":"<p>Big-O Notation : Merepresentasikan batas atas dari waktu yang dihabiskan oleh sebuah algoritma dalam menjalankan operasinya. Maka dari itu notasi ini menggambarkan kompleksitas kemungkinan terburuk dari sebuah algoritma</p> <p>Omega Notation : Merepresentasikan batas bawah dari waktu yang dihabiskan oleh sebuah algoritma dalam menjalankan operasinya. Maka dari itu notasi ini menggambarkan kompleksitas kemungkinan terbaik dari sebuah algoritma</p> <p>Theta Notation : Merepresentasikan batas atas dan bawah dari waktu yang dihabiskan oleh sebuah algoritma dalam menjalankan operasinya. Maka dari itu notasi ini menggambarkan kompleksitas rata-rata dari sebuah algoritma</p> <p>Dari 3 notasi diatas dalam menghitung secara objektif waktu yg ditempuh sebuah algoritma, maka Big-O adalah yang paling banyak digunakan untuk menganlisa sebuah algoritma karena menghitung kemungkinan terburuk lebih menjamin dibandingkan dengan the best atau average skenarion.</p> <p>https://www.programiz.com/dsa/asymptotic-notations</p>"},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/02.%20Kedua/#space-complexity","title":"Space Complexity","text":"<p>Kompleksitas ruang sebuaha algortima adalah jumlah ruang yang dibutuhkan sebuah algoritma berdsarakan besaran nilai masukan. Kompleksitas ruang ini termasuk didalamnya adalah Auxiliary space dan ruang yang digunakan oleh nilai inputan.</p> <p>Komplesitas ruang konsep yang berjalan bersamaan dengan komplesitas waktu, jika kita membuat sebuah array dengan ukuran n, maka ruang yang dibutuhkan adalah O(n), lalu jika nested array atau dua dimensi array maka membutuhkan O(n^2).</p> <p>Saya menyingung Auxiliary space, berbeda pada setiap bahasa pemprograman dalam ruang digunakan, namun secara umumr adalah ekstra space, tempat penyimpanan sementara yang digunakan oleh sebuah algoritma. Jika di java ada istilah heap dst.</p> <p>https://www.geeksforgeeks.org/g-fact-86/ https://stackoverflow.com/a/22234095/11021522</p>"},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/02.%20Kedua/#brute-force","title":"Brute Force","text":"<p>Adalah salah algoritma paling sederhana dalam sebuah pemecahan masalah. Sebagaimana artinya, metode ini adalah cara yang kasar dan memaksa, dimana bisa kita katakan dengan istiliah algoritma Just Do It. Seperti sebuah angka dalam sebuah kumpulan data, maka metode ini akan melihat kesemua data dan mengebalikan hasilnya jika match. Namun dibalik itu semua, metode ini sangat jelas, mudah dimengerti dan sangat sederhana. Biasanya metode Brute Force membutuhkan langkah \\(O(n)\\), atau langkahnya sebanyak dengan jumlah data.</p>"},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/02.%20Kedua/#kekuatan","title":"kekuatan","text":"<ol> <li>wide capability, Metode Brute Force dapat digunakan hampir disemua masalah.</li> <li>Sederhana dan mudah dimengerti.</li> </ol>"},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/02.%20Kedua/#kelemahan","title":"Kelemahan","text":"<ol> <li>Memerlukan waktu dan ruang yang lebih besar dibandingkan algoritma yang lebih cerdas.</li> </ol>"},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/02.%20Kedua/#contoh","title":"Contoh","text":"<p>Mencari Elemen Terbesar</p> <pre><code>langkah = 0\ndef elemenTerbesar(list = [] ):\n\n    global langkah\n\n    nilai_terbesar = 0\n    for a in list:\n        # Get number of steps\n        langkah+=1\n\n        if a &gt; nilai_terbesar:\n            nilai_terbesar = a\n\n    return nilai_terbesar\n\nprint(f'Nilai terbesar {elemenTerbesar(range(0,50,3))}')\nprint(f'Number of step {langkah}')\n</code></pre> <p>Faktorial</p> <pre><code>langkah = 1\ndef faktorial(number=1):\n    global langkah\n    result  = number\n    for a in range(1, number):\n        langkah+=1\n        result = result * a\n\n    return result\n\n\nn = 4\nprint(f'Faktorial {n} adalah {faktorial(n)}') # 24\nprint(f'Number of step {langkah}') # 4\n</code></pre> <p>Atau kita bisa menggunakan recursive function, more detail lihat disini</p> <pre><code>def recursive(x):\n    if x in range (0,1):\n        return 1\n\n    return recursive(x-1) * x\n\nprint(recursive(3))\n</code></pre>"},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/02.%20Kedua/04.%20Offline/","title":"Komplexitas algortima","text":"<p>Deret Geomteri</p>"},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/03.%20Ketiga/","title":"Pekan ketiga","text":""},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/03.%20Ketiga/#diskusi","title":"Diskusi","text":"<p>pertanyaan</p> <ol> <li>Jelaskan konsep dasar algoritma Brute Force</li> <li>Jelaskan kelebihan dan kekurangan algoritma Brute Force</li> <li>Berikan contoh penerapan algoritma brute force untuk menyelesaikan berbagai masalah.</li> </ol> <p>Jawaban</p> <ol> <li>Brute force adalah algortima yang sederhana yang mana algortima ini secara sistematis mencoba semua opsi hingga masalah yang dipecahkan algoritma ini terjawab atau ditemukan. Menurut saya, algortima brute force ini secara umum banyak digunakan karena penggunaan dan pendefinisian-nya sangat mudah namun sangat tidak efesien untuk pemecahan algoritma pada data dengan skala yang besar.</li> </ol> <pre><code>class SampleCode:\n\n    data = [{'user_name':'farras','password':'123456'},{'user_name':'tania','password':'0864'}\n    ,{'user_name':'faris','password':'5678'},{'user_name':'noah','password':'1357'}\n    ,{'user_name':'Hilyah','password':'2468'}]\n\n    def brute_force(self, username, password):\n        print(f\"Input {username} : {password}\")\n\n        # Brutoforce disini, mencoba semua kemungkinan\n        for it in self.data:\n            print (f'Apakah sama dengan {it[\"user_name\"]} dan password {it[\"password\"]}')\n            if it['user_name'] == username and it['password']==password:\n                return 'Match'\n\n        return 'Not Match'\n\nsample_code = SampleCode()\nprint(sample_code.brute_force('noah','1357'))\n\n# Output\n# Input noah : 1357\n# Apakah sama dengan farras dan password 123456\n# Apakah sama dengan tania dan password 0864\n# Apakah sama dengan faris dan password 5678\n# Apakah sama dengan noah dan password 1357\n# Match\n</code></pre>"},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/05.%20Kelima/","title":"Jelaskan prinsip kerja algoritma divide and conquer.","text":"<p>Prinsip Kerja Algoritma Divide and Conquer:</p> <p>Algoritma divide and conquer (membagi dan menaklukkan) adalah pendekatan pemecahan masalah yang sangat efektif, terutama untuk masalah yang besar dan kompleks. Prinsip dasar dari algoritma ini adalah:</p> <p>Pembagian Masalah:</p> <p>Masalah besar dibagi menjadi sub-masalah yang lebih kecil. Sub-masalah ini harus cukup sederhana sehingga mereka dapat diselesaikan secara langsung atau dengan lebih mudah.</p> <p>Penyelesaian Sub-masalah:</p> <p>Setelah masalah dibagi, sub-masalah tersebut diselesaikan secara rekursif. Ini berarti setiap sub-masalah mungkin akan dibagi lagi menjadi sub-masalah yang lebih kecil hingga mencapai ukuran yang cukup kecil untuk diselesaikan dengan cara langsung.</p> <p>Penggabungan Hasil:</p> <p>Setelah sub-masalah diselesaikan, hasil dari sub-masalah ini digabungkan untuk membentuk solusi dari masalah awal. Penggabungan ini biasanya memerlukan beberapa langkah komputasi, tergantung pada bagaimana sub-masalahnya terkait satu sama lain.</p> <p>Contoh Algoritma Divide and Conquer: Merge Sort:</p> <p>Pembagian: Membagi array menjadi dua bagian yang lebih kecil.</p> <p>Penyelesaian: Menerapkan merge sort secara rekursif pada kedua bagian.</p> <p>Penggabungan: Menggabungkan dua bagian yang telah disortir menjadi array yang terurut.</p> <p>Quick Sort:</p> <p>Pembagian: Memilih elemen pivot dan membagi array menjadi dua bagian: satu dengan elemen yang lebih kecil dari pivot dan satu lagi dengan elemen yang lebih besar.</p> <p>Penyelesaian: Menerapkan quick sort pada dua bagian tersebut.</p> <p>Penggabungan: Penggabungan terjadi secara implisit setelah rekursi selesai karena array sudah terurut tanpa perlu penggabungan eksplisit (seperti pada merge sort).</p> <p>Binary Search:</p> <p>Pembagian: Membagi array menjadi dua bagian berdasarkan nilai tengah dan membandingkan elemen yang dicari dengan nilai tengah tersebut.</p> <p>Penyelesaian: Jika elemen yang dicari lebih kecil atau lebih besar dari nilai tengah, kita mencari pada salah satu bagian yang lebih kecil.</p> <p>Penggabungan: Tidak ada penggabungan yang diperlukan karena pencarian hanya melibatkan pembagian array dan mencari elemen secara langsung.</p> <p>Kelebihan dan Kekurangan: Kelebihan:</p> <p>Mengurangi masalah besar menjadi lebih kecil, sehingga memudahkan pemecahan masalah secara rekursif.</p> <p>Banyak algoritma divide and conquer memiliki kompleksitas waktu yang efisien (misalnya O(n log n) untuk Merge Sort dan Quick Sort).</p> <p>Kekurangan:</p> <p>Algoritma rekursif sering kali menggunakan memori tambahan karena setiap panggilan rekursif menyimpan keadaan sementara dalam tumpukan.</p> <p>Tidak semua masalah dapat dipecahkan secara efisien dengan pendekatan ini.</p> <p>Penerapan Umum: Sorting: Merge Sort, Quick Sort.</p> <p>Searching: Binary Search.</p> <p>Matematika: Penghitungan cepat (misalnya, mengalikan matriks atau menghitung eksponen besar).</p> <p>Geometri Komputasi: Pembagian masalah geometri menjadi sub-masalah yang lebih kecil, seperti dalam algoritma Convex Hull.</p> <p>Secara keseluruhan, algoritma divide and conquer adalah salah satu teknik yang sangat efisien untuk menyelesaikan berbagai masalah yang besar dengan membaginya menjadi bagian-bagian kecil yang lebih mudah ditangani. Prinsip ini banyak digunakan dalam pemrograman rekursif, dan membantu dalam mengurangi kompleksitas waktu untuk banyak masalah, dibandingkan dengan metode lain seperti brute force.</p>"},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/05.%20Kelima/#offline","title":"Offline","text":""},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/05.%20Kelima/#algoritma-devide-dan-conquer","title":"Algoritma Devide dan Conquer","text":"<ul> <li> <p>Dvivide dan Conquer dulunya adalah strategi miiter yang dikenal dengan nama divide ut impires (Poloitik adu domba).</p> </li> <li> <p>Divide : Membagi masalah menjadi beberapa rupa masalah yang memiliki kemiripan dengan masalah semula namun berukuran lebih kecil.</p> </li> <li>Conquer : Memecahkan masing-masing upa-masalah secara rekursif</li> <li>Combine : Menggabubgkan solusi masning-masing upa-masalah sehingga membentuk solusi masalah semula.</li> </ul>"},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/05.%20Kelima/#objek-permasalahan","title":"Objek permasalahan","text":"<p>Masukan atau instances yang berukuran <code>n</code> seperti :</p> <ul> <li>table</li> <li>matriks</li> <li>eksponen</li> </ul> <p>```</p>"},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/06.%20Keenam/","title":"Index","text":""},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/06.%20Keenam/#pretest","title":"Pretest","text":"<ol> <li>Apa yang dimaksud dengan algoritma Greedy?</li> </ol> <p>A.</p> <p>B) Algoritma yang selalu memilih langkah terbaik saat ini tanpa mempertimbangkan konsekuensi di masa depan</p> <p>B.</p> <p>C) Algoritma yang mengutamakan efisiensi ruang dibandingkan waktu</p> <p>C.</p> <p>A) Algoritma yang mencoba semua kemungkinan solusi secara brute force</p> <p>D.</p> <p>E) Algoritma yang selalu menghasilkan solusi optimal</p> <p>E.</p> <p>D) Algoritma yang hanya bekerja pada struktur data berbasis pohon</p> <p>ChatGPT said: Jawaban yang benar adalah:</p> <p>B) Algoritma yang selalu memilih langkah terbaik saat ini tanpa mempertimbangkan konsekuensi di masa depan</p> <p>Penjelasan: Algoritma Greedy (serakah) adalah algoritma yang membuat pilihan terbaik yang tersedia pada setiap langkah dengan harapan bahwa pilihan lokal tersebut akan menghasilkan solusi global yang optimal. Namun, algoritma ini tidak selalu menjamin solusi optimal, tergantung pada masalahnya. Algoritma ini tidak mencoba semua kemungkinan dan tidak mempertimbangkan efek jangka panjang dari pilihannya.</p> <p>Kalau kamu butuh contoh penerapannya, seperti dalam Greedy pada algoritma Huffman Coding atau algoritma Dijkstra (dengan syarat tertentu), tinggal bilang aja!</p> <p>You said: 2. . Dalam penerapan algoritma Greedy pada game, apa yang menjadi prinsip utama dalam pengambilan keputusan?</p> <p>A.</p> <p>E) Menggunakan metode backtracking untuk memperbaiki kesalahan</p> <p>B.</p> <p>C) Memilih solusi lokal terbaik di setiap langkah dengan harapan mendapatkan solusi global terbaik</p> <p>C.</p> <p>B) Menggunakan rekursi untuk mencari solusi terbaik</p> <p>D.</p> <p>A) Mempertimbangkan semua kemungkinan solusi sebelum memilih</p> <p>E.</p> <p>D) Menjalankan program secara paralel untuk menemukan solusi tercepat</p> <p>ChatGPT said: Jawaban yang benar adalah:</p> <p>C) Memilih solusi lokal terbaik di setiap langkah dengan harapan mendapatkan solusi global terbaik</p> <p>Penjelasan: Prinsip utama dalam algoritma Greedy, termasuk dalam penerapannya di game, adalah memilih solusi lokal terbaik (langkah terbaik saat ini) dengan harapan bahwa keputusan-keputusan tersebut akan membawa pada solusi global terbaik. Ini membuat Greedy sangat cepat dan efisien, meskipun tidak selalu menghasilkan solusi optimal dalam semua kasus.</p> <p>Pilihan lainnya seperti backtracking, rekursi, dan eksplorasi paralel lebih berkaitan dengan teknik seperti brute force, divide and conquer, atau dynamic programming.</p> <p>You said: . Algoritma Greedy dapat digunakan dalam game berbasis strategi, misalnya:</p> <p>A.</p> <p>E) Menjalankan simulasi Monte Carlo untuk menentukan strategi terbaik</p> <p>B.</p> <p>C) Mengimplementasikan algoritma brute force dalam game catur</p> <p>C.</p> <p>A) Menentukan rute terpendek dalam game navigasi</p> <p>D.</p> <p>D) Menggunakan pemrograman dinamis untuk menyelesaikan teka-teki</p> <p>E.</p> <p>B) Menggunakan backtracking dalam puzzle Sudoku</p> <p>ChatGPT said: Jawaban yang benar adalah:</p> <p>C) Menentukan rute terpendek dalam game navigasi</p> <p>Penjelasan: Dalam game berbasis strategi, algoritma Greedy sering digunakan untuk menentukan rute terpendek atau pengambilan keputusan cepat berdasarkan kondisi saat ini. Misalnya, dalam game navigasi atau permainan petualangan, karakter bisa memilih jalur yang terlihat paling menguntungkan pada setiap langkah.</p> <p>Algoritma seperti Greedy Best-First Search adalah contoh penerapan dalam penentuan rute. Meskipun tidak selalu memberikan solusi optimal seperti A*, pendekatannya cepat dan efisien, cocok untuk kebutuhan real-time di banyak game.</p> <p>Pilihan lain seperti brute force, backtracking, atau pemrograman dinamis bukanlah karakteristik dari pendekatan Greedy.</p> <p>You said: . Manakah dari berikut ini yang merupakan kelemahan utama dari algoritma Greedy?</p> <p>A.</p> <p>C) Menggunakan terlalu banyak memori</p> <p>B.</p> <p>E) Selalu lebih lambat daripada algoritma lain</p> <p>C.</p> <p>A) Selalu menghasilkan solusi optimal</p> <p>D.</p> <p>D) Tidak dapat digunakan dalam masalah optimasi</p> <p>E.</p> <p>B) Tidak selalu menghasilkan solusi optimal dalam beberapa kasus</p> <p>ChatGPT said: Jawaban yang benar adalah:</p> <p>E) B) Tidak selalu menghasilkan solusi optimal dalam beberapa kasus</p> <p>Penjelasan: Kelemahan utama dari algoritma Greedy adalah bahwa ia tidak selalu menghasilkan solusi optimal, terutama jika masalah yang dihadapi tidak memiliki struktur optimal subproblem atau tidak memenuhi properti greedy-choice. Artinya, pilihan lokal terbaik di setiap langkah belum tentu mengarah ke solusi global terbaik.</p> <p>Pilihan lain:</p> <p>C) Menggunakan terlalu banyak memori \u2192 justru Greedy biasanya hemat memori.</p> <p>E) Selalu lebih lambat \u2192 salah, Greedy biasanya lebih cepat karena tidak mengevaluasi semua kemungkinan.</p> <p>A) Selalu menghasilkan solusi optimal \u2192 ini justru pernyataan yang keliru, bukan kelemahan.</p> <p>D) Tidak dapat digunakan dalam masalah optimasi \u2192 salah, justru Greedy adalah salah satu pendekatan dalam masalah optimasi tertentu.</p> <p>Kalau mau, aku bisa kasih contoh nyata biar lebih jelas.</p> <p>You said: 5. Dalam konteks game, algoritma Greedy cocok digunakan untuk menyelesaikan masalah:</p> <p>A.</p> <p>D) Penyelesaian puzzle berbasis backtracking</p> <p>B.</p> <p>E) Pemrosesan data dalam game berbasis kecerdasan buatan</p> <p>C.</p> <p>C) Pemrograman dinamis dalam strategi pertempuran</p> <p>D.</p> <p>B) Penyelesaian game berbasis simulasi fisika</p> <p>E.</p> <p>A) Pencarian jalur terpendek</p> <p>ChatGPT said: Jawaban yang benar adalah:</p> <p>E) A) Pencarian jalur terpendek</p> <p>Penjelasan: Dalam konteks game, algoritma Greedy sangat cocok untuk masalah pencarian jalur terpendek, terutama saat keputusan harus dibuat cepat berdasarkan informasi lokal (seperti posisi musuh, rintangan, atau tujuan).</p> <p>Contoh nyata adalah:</p> <p>Greedy Best-First Search dalam pencarian jalan di game strategi atau game maze.</p> <p>Pemilihan power-up atau item terdekat berdasarkan nilai maksimal saat ini.</p> <p>Pilihan lainnya seperti backtracking, pemrograman dinamis, atau simulasi fisika tidak sejalan dengan prinsip Greedy, karena melibatkan pendekatan yang lebih kompleks dan global, bukan hanya keputusan lokal terbaik.</p>"},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/06.%20Keenam/#diskusi","title":"Diskusi","text":"<ol> <li> <p>Prinsip Kerja Pemrograman Dinamik Pemrograman dinamik (Dynamic Programming/DP) menyelesaikan masalah dengan membaginya menjadi submasalah yang lebih kecil, menyimpan hasilnya (memoisasi), dan menggunakan hasil tersebut untuk menghindari perhitungan ulang. Cocok untuk masalah yang memiliki overlapping subproblems dan optimal substructure.</p> </li> <li> <p>Kompleksitas Waktu dan Ruang Waktu: Lebih efisien daripada brute force karena submasalah dihitung satu kali. Umumnya O(n) atau O(n\u00b2) tergantung masalah.</p> </li> </ol> <p>Ruang: Bergantung pada penyimpanan hasil submasalah, biasanya O(n). Namun bisa dioptimalkan jadi O(1) dengan teknik tabulasi dan space optimization.</p> <ol> <li>Contoh Penerapan Fibonacci (menghindari perhitungan berulang)</li> </ol> <p>Knapsack Problem (maksimalkan nilai dalam kapasitas tertentu)</p> <p>Edit Distance (mengukur kemiripan dua string)</p> <p>Longest Common Subsequence (LCS)</p>"},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/06.%20Keenam/#posttest","title":"Posttest","text":"<p>Mengapa algoritma Greedy tidak selalu memberikan solusi optimal dalam semua masalah?</p> <p>A.</p> <p>Karena hanya berfokus pada solusi terbaik saat ini tanpa mempertimbangkan konsekuensi jangka panjang</p> <p>B.</p> <p>Karena membutuhkan komputasi yang sangat kompleks</p> <p>C.</p> <p>Karena selalu mempertimbangkan seluruh kemungkinan solusi</p> <p>D.</p> <p>Karena bergantung pada struktur data yang digunakan</p> <p>E.</p> <p>Karena hanya digunakan dalam masalah matematika</p> <p>ChatGPT said: Jawaban yang benar adalah:</p> <p>A. Karena hanya berfokus pada solusi terbaik saat ini tanpa mempertimbangkan konsekuensi jangka panjang</p> <p>Penjelasan: Algoritma Greedy memilih langkah yang tampak terbaik pada saat itu (lokal optimal), tanpa memikirkan apakah keputusan tersebut akan membawa pada solusi global yang optimal. Ini bisa menyebabkan hasil akhir yang suboptimal, terutama jika masalah tersebut tidak memenuhi greedy-choice property atau optimal substructure.</p> <p>Pilihan lain tidak tepat karena:</p> <p>B \u2192 Greedy justru dikenal sederhana dan cepat.</p> <p>C \u2192 Itu ciri brute force, bukan Greedy.</p> <p>D \u2192 Greedy tidak tergantung penuh pada struktur data tertentu.</p> <p>E \u2192 Greedy digunakan luas, bukan hanya dalam matematika.</p> <p>Dalam permainan berbasis strategi, algoritma Greedy sering digunakan untuk:</p> <p>A.</p> <p>Mengimplementasikan kecerdasan buatan berbasis pembelajaran mesin</p> <p>B.</p> <p>Memastikan game berjalan tanpa bug</p> <p>C.</p> <p>Menggunakan pemrograman dinamis untuk mencari solusi terbaik</p> <p>D.</p> <p>Memprediksi pergerakan lawan dalam permainan catur</p> <p>E.</p> <p>Menentukan langkah optimal di setiap giliran permainan</p> <p>ChatGPT said: Jawaban yang benar adalah:</p> <p>E. Menentukan langkah optimal di setiap giliran permainan</p> <p>Penjelasan: Dalam game strategi, algoritma Greedy sering digunakan untuk memilih langkah terbaik yang tersedia pada saat itu, tanpa memperhitungkan dampaknya di masa depan. Ini membuat Greedy cocok untuk pengambilan keputusan cepat dalam setiap giliran, seperti menyerang musuh terlemah atau mengambil item terdekat.</p> <p>Pilihan lain:</p> <p>A \u2192 Itu lebih ke ranah machine learning, bukan Greedy.</p> <p>B \u2192 Terkait pengujian/debugging, bukan algoritma.</p> <p>C \u2192 Pemrograman dinamis berbeda prinsip dengan Greedy.</p> <p>D \u2192 Prediksi pergerakan biasanya melibatkan tree search atau minimax, bukan Greedy.</p> <p>Algoritma Dijkstra adalah salah satu contoh algoritma Greedy yang digunakan untuk:</p> <p>A.</p> <p>Menentukan urutan eksekusi tugas dalam sistem operasi</p> <p>B.</p> <p>Mencari jalur terpendek dalam sebuah graf</p> <p>C.</p> <p>Menggunakan pemrograman dinamis dalam optimasi inventaris</p> <p>D.</p> <p>Menganalisis kemungkinan langkah dalam permainan kartu</p> <p>E.</p> <p>Menyelesaikan teka-teki Sudoku</p> <p>ChatGPT said: Jawaban yang benar adalah:</p> <p>B. Mencari jalur terpendek dalam sebuah graf</p> <p>Penjelasan: Algoritma Dijkstra adalah contoh algoritma Greedy yang digunakan untuk mencari jalur terpendek dari satu simpul ke simpul lainnya dalam sebuah graf berbobot non-negatif. Pada setiap langkah, algoritma ini memilih simpul dengan jarak terpendek yang belum dikunjungi \u2014 keputusan lokal terbaik yang mendekati solusi global.</p> <p>Pilihan lain tidak tepat karena:</p> <p>A \u2192 Penjadwalan tugas biasanya menggunakan algoritma lain seperti round-robin atau priority scheduling.</p> <p>C \u2192 Itu lebih cocok untuk pemrograman dinamis.</p> <p>D dan E \u2192 Lebih ke backtracking atau pencarian ruang status, bukan Greedy.</p> <p>Mau aku tunjukin ilustrasi cara kerja Dijkstra juga?</p> <p>Manakah dari berikut ini yang merupakan contoh implementasi algoritma Greedy dalam game?</p> <p>A.</p> <p>Menggunakan simulasi Monte Carlo dalam strategi permainan</p> <p>B.</p> <p>Menggunakan pemrograman dinamis untuk perhitungan skor optimal</p> <p>C.</p> <p>Menyelesaikan game catur dengan backtracking</p> <p>D.</p> <p>Menganalisis pola permainan menggunakan pembelajaran mesin</p> <p>E.</p> <p>Pemilihan jalur tercepat dalam game pacuan mobil</p> <p>Jawaban yang benar adalah:</p> <p>E. Pemilihan jalur tercepat dalam game pacuan mobil</p>"},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/06.%20Keenam/#penjelasan","title":"Penjelasan:","text":"<p>Algoritma Greedy dalam game sering digunakan untuk memilih jalur tercepat atau terbaik secara lokal, seperti dalam game pacuan mobil, di mana kendaraan memilih jalur yang terlihat paling menguntungkan saat itu. Ini adalah contoh nyata penerapan prinsip Greedy: keputusan cepat dan efisien berbasis kondisi saat ini.</p> <p>Pilihan lain: - A \u2192 Monte Carlo lebih ke simulasi dan statistik. - B \u2192 Pemrograman dinamis, bukan Greedy. - C \u2192 Backtracking, bukan pendekatan Greedy. - D \u2192 Pembelajaran mesin (machine learning), beda ranah.</p> <p>Mau daftar lebih banyak contoh game yang pakai Greedy?</p> <p>Algoritma Greedy lebih cocok digunakan untuk menyelesaikan masalah yang memiliki:</p> <p>A.</p> <p>Kompleksitas tinggi yang memerlukan eksplorasi seluruh solusi</p> <p>B.</p> <p>Struktur keputusan berbasis rekursi</p> <p>C.</p> <p>Kebutuhan untuk mencari solusi terbaik dengan pendekatan backtracking</p> <p>D.</p> <p>Sifat optimalitas lokal yang menghasilkan solusi global optimal</p> <p>E.</p> <p>Struktur data berbasis graf yang memerlukan pencarian menyeluruh</p> <p>Jawaban yang benar adalah:</p> <p>D. Sifat optimalitas lokal yang menghasilkan solusi global optimal</p>"},{"location":"My%20Magister/First%20Semester/Algoritma%20Analisis/06.%20Keenam/#penjelasan_1","title":"Penjelasan:","text":"<p>Algoritma Greedy lebih cocok digunakan untuk masalah yang memiliki sifat optimalitas lokal, yaitu masalah di mana pilihan terbaik pada setiap langkah lokal (pilihan terbaik saat ini) akan menghasilkan solusi yang optimal secara global. Greedy memanfaatkan prinsip ini untuk menemukan solusi secara cepat tanpa mengevaluasi semua kemungkinan.</p> <p>Pilihan lain: - A \u2192 Kompleksitas tinggi biasanya membutuhkan algoritma lain seperti brute force atau pemrograman dinamis. - B \u2192 Greedy tidak selalu berbasis rekursi. - C \u2192 Backtracking adalah teknik yang berbeda dari Greedy. - E \u2192 Untuk masalah graf yang memerlukan pencarian menyeluruh, lebih sering digunakan algoritma seperti DFS atau BFS, bukan Greedy.</p> <p>Kalau ada contoh lainnya yang perlu dibahas, tinggal bilang ya!</p>"},{"location":"My%20Magister/First%20Semester/Data%20Mining/01.%20Pertama/","title":"Advance Intelligence System","text":"<p>Kecerdasan terkait Reasoning, Learning dan Adaptivity.</p> <p>Dalam sumber lain, Inteligent system adalah sistem berteknologi canggih yang dapat memahami dan menanggapi lingkungan disekitarnya. <sup>1</sup></p> <p>Bernada sama dari sumber lain yang saya baca, Intelligent system adalah sistem komputer canggih yang dapat mengumpulkan (Gathering), menganalisa (Analyze) , &amp; dan menanggapi(Respond) data yang dikumpulkan yang bersumber dari lingkungan sekitarnya. Sistem tersebut dapat bekerja dan berkomunikasi dengan agent lain seperti pengguna atau sistem lainnya. Selain itu sistem ini juga dapat belajar dari pengalaman (experience) dan beradaptasi berdasarakan data yang diperoleh.<sup>2</sup></p>"},{"location":"My%20Magister/First%20Semester/Data%20Mining/01.%20Pertama/#diskusi","title":"Diskusi","text":"<p>Diskusi</p> <p>Peran Data Mining dalam Tata Kelola Teknologi Informasi</p> <p>DR. Ir AGUNG BUDI SUSANTO MM</p> <p>Perkembangan Data pada Abad Informsi sekarang sangat cepat dan telah berkembang menjadi Big Data, dengan perkembangan dat tersebut, peran data mining menjadi sangat penting, Jelaskan peran data mining dalam mengolah data menjasi Informasi  lalu menjadi Insights, dan Wisdom\u2026.apa pengaruhnya konsep Tata Kelola system Data, beriak pendapat di forum diskusi </p> <p>Answer</p> <p>Melihat sejarah perkembangan teknologi yang diawali dengan yang kita ketahui industry 1.0 penggunakan dan pembuatan sacara masal peralatan produksi mekanik dengan bantuan tenaga uap, lalu berlahi ke industry 2.0 yang sudah beralih dari tenaga uap menjadi penggunaan listrik, seperti produksi perakitan produk tertentu namun masih menggunakan banyak pekerja dalam perakitan, lalu ke industry 3.0 semua produksi dilakuakn secara otomasi namun sistem masih menyeluruh diatur oleh sebuah operator. Lalu masuklah kepada level industry 4.0 dimana sistem sudah hampir tidak melibatkan manusia dalam operasinya, sistem tersebut dapat belajar dan beradaptasi sendiri.</p> <p>Intelligent system, adalah sistem komputer canggih yang dapat mengumpulkan (Gathering), menganalisa (Analyze) , &amp; dan menanggapi(Respond) data yang dikumpulkan yang bersumber dari lingkungan sekitarnya. Sistem tersebut dapat bekerja dan berkomunikasi dengan agent lain seperti pengguna atau sistem lainnya. Selain itu sistem ini juga dapat belajar dari pengalaman (experience) dan beradaptasi berdasarakan data yang diperoleh. </p> <p>Lalu peran dari Data Mining pada Intelligent System tersebut, data mining berperan dalam menemukan sebuah pola antara element data yang sangat banyak dan berantakan yang mana mengarah pada sebuah hasil untuk mendapatkan manfaat tertentu. Pada konteks ini sistem inteligent dapat belajar dari pola yang ditemukan tersebut.</p> <p>Diluar dari Inteligent System, hasil dari pada data mining dapat digunakan dalam pengambilan keputusan. Contohnya, data mining dapat menghasilkan misalkan, prilaku konsumen, memprediksi trend, mengidentifikasi kecurangan bahkan dapat mengungkapkan hubungan antar data yang belum pernah ditemukan. Sebagai contoh ternyata ada relasi antara lokasi rumah yang banyak dicari konsumen dengan jumalh anak yang mereka miliki yang mana sebelumnya relasi ini tidak pernah terpkirikan.</p> <p>Lalu apa pengaruhnya konsep data kelola data. Sebagai mana yang saya sebutkan diatas, \"data mining bertujuan untuk menemukan sebuah pola dari element data yang sangat banyak\". Tidak semua data dapat langsung dikelola lalu dengan hasilnya diambil sebuah keputusan. Keakuratan sebauh data adalah hal yang sangat mempengaruhi hasil dari data mining, sehingga sudah jelas sangat bahwa tata kelola sistem data sangat berpengaruh terhadap hasil dari data mining.</p> <ol> <li> <p>https://www.unr.edu/cse/undergraduates/prospective-students/what-are-intelligent-systems#:~:text=Intelligent%20systems%20are%20technologically%20advanced,to%20Amazon's%20personalized%20shopping%20suggestions. \u21a9</p> </li> <li> <p>https://www.techtarget.com/whatis/definition/intelligent-system \u21a9</p> </li> </ol>"},{"location":"My%20Magister/First%20Semester/Data%20Mining/01.%20Pertama/01.%20Offline/","title":"01. Offline","text":""},{"location":"My%20Magister/First%20Semester/Data%20Mining/01.%20Pertama/01.%20Offline/#what-is-data-mining","title":"What is Data Mining","text":"<p>Sebuah proses menemukan hubungan antara data yang sebelumnya tidak terlihat </p> <p>Konsep Algoritma Struktur Data Tekkin Manfaat LLM (LLama Langauage Model) Deepseek</p> <p>Sumber Dataset pelatihan * yahoo finance untuk mengambil data set yang berguna untuk pelarihan ML * Kaggle * UCI</p> <p>mengumpulkan jurnal perish ;';f</p>"},{"location":"My%20Magister/First%20Semester/Data%20Mining/02.%20Kedua/index.md/","title":"Linear Regresion (General Linear Model)","text":"<p>Source Source Two Find Least Of Square</p>"},{"location":"My%20Magister/First%20Semester/Data%20Mining/02.%20Kedua/index.md/#main-idea","title":"Main Idea","text":"<p>Notes</p> <p></p> <p>Ada 3 hal yang perlu dipahami deari Linar Regression</p> <ol> <li>Least Square untuk mencocokan garis pada sebuah data</li> <li>Kalkulasi R Square (\\(R^2\\)), tujuan untuk mengetahui seberapa bagus tebakan yang dihasilkan.</li> <li>Terakhir kita mengkalkulasi nilai <code>p</code> dari \\(R^2\\)</li> </ol>"},{"location":"My%20Magister/First%20Semester/Data%20Mining/02.%20Kedua/index.md/#least-square","title":"Least Square","text":"<p>Adalah sebuah metode statistik untuk menemukan garis yang palik cocok dalam bentuk persamaan \\(y=mx+b\\) dari data yang diberikan;</p> <p>Slope</p> \\[m = \\frac{n\\sum_{}{}{xy} - (\\sum_{}{}{x} \\sum_{}{}{y})}{n\\sum_{}{}{x^2}-(\\sum_{}{}{}x)^2}\\] <p>Intercept</p> \\[b = \\frac{\\sum_{}{}{y} - m \\sum_{}{}{y}}{n}\\] Simbol Deskripsi <code>y</code> Guest value of Least Square <code>m</code> Slope atau garis miring <code>b</code> Intercept dari <code>y</code> ketika nilai dari <code>x</code> adalah 0 (Menghilangkan seluruh absolute error)"},{"location":"My%20Magister/First%20Semester/Data%20Mining/02.%20Kedua/index.md/#tujuan-metode","title":"Tujuan Metode","text":"<p>Tujuannya adalah mengurangi jumlah kuadrat kesalahan (Mean Square of Error) hingga sekecil mungkin.</p> <p>Rumus Mean Absoule Error</p> \\[MSE = \\sum_{}{}\\frac{(y-p)^2}{b}\\]"},{"location":"My%20Magister/First%20Semester/Data%20Mining/02.%20Kedua/index.md/#limitasi","title":"Limitasi","text":"<p>Walapun Least of Square dipertimbangkan menjadi metode yang terbaik untuk menemukan garis yang paling cocok, namun metode tersebut memliki beberapa kekurangan;</p> <ol> <li>Metode ini hanya menunjukan hubungan antara dua buah variable. Semua penyebab lainnya dan efeknya tidak dipertimbangkan.</li> <li>Metode tersebut tidak dapat diandalkan untuk data yang tidak terdistribusi.</li> <li>Metode ini sangat rentan dan sensitif terhadap data outliers, data yang sangat signifikan perbedaanya dengan data yang lain.</li> </ol>"},{"location":"My%20Magister/First%20Semester/Data%20Mining/02.%20Kedua/index.md/#r-square-coefficient-of-determination","title":"R Square, coefficient of determination","text":"<p>\\(R^2\\) atau biasa disebut dengan R Square atau Coeffecient of Determintaion adalah metode statistik yang memliki tujuan untuk prediksi hasil keluaran atau menguji hipotesa pada dasar informasi yang berkaitan tersebut.</p> <p>R2 menentukan sebarapa bagus hasil yang diamation direplikasi oleh sebuah model, berdasarakan proporso dari total varian yang dijelaskan oleh mode.</p> <p>Ada beberapa definisi dari \\(R^2\\) dan terkadang memliki arti yang sama. Pada Linear Regression (yang mengandung intercept <code>b</code>), R Square adalah kuandrat dari korelasi koofesien (r), antara hasil yang diobservasi dan nilai keluaran yang diamatin. Jika \\(R^2\\) ditambahkan, maka \\(R^2\\) adalah kuadrat dari koofesien dari beberapa korelasi. Koofensiansi biasanya ditentukan dengan rentang nilai dari 0 hingga 1.</p> <p>Rumus \\(R^2\\)</p> \\[SS_{res} = \\sum_i{(y_i - f_i)^2}\\] \\[SS_{tot} = \\sum_i{(y_i - \\bar x)^2}\\] \\[R^2 = 1 - \\frac{SS_{res}}{SS_{tot}}\\]"},{"location":"My%20Magister/First%20Semester/Data%20Mining/02.%20Kedua/index.md/#orange-3-tugas","title":"Orange 3 Tugas","text":"<ul> <li>Edit Domain</li> </ul>"},{"location":"My%20Magister/First%20Semester/Data%20Mining/02.%20Kedua/index.md/#using-python","title":"Using python","text":"<p>https://www.digitalocean.com/community/tutorials/multiple-linear-regression-python</p>"},{"location":"My%20Magister/First%20Semester/Data%20Mining/03.%20Ketiga/","title":"Logistic Regression","text":"<p>Bismillah, sumber catatan ini ada beberapa diantaranya</p> <ol> <li>Data Camp : Logistic Regression</li> <li>Practical Statistics for Data Scientists, Peter Brauce, Andrew Brauce, dan Peter Gedeck</li> </ol>"},{"location":"My%20Magister/First%20Semester/Data%20Mining/03.%20Ketiga/#pengertian","title":"Pengertian","text":"<p>Tujuan dalam menganalisa menggunakan model Logistic Regression mirip dengan model regresi statistik yang lainya, yaitu menemukan garis yang paling cocok, sehingga dengan demikian model tersebut dapat mendeskripsikan hubungan antara dependent variable atau response dan independent variabel atau bisa disebu sebagai prediktor.</p> <p>Lalu yang membedakan antara logistic regression dengan linear regression adalah hasil keluaran dari variabel logistic regression yang mana dalam bentuk binary (0 atau 1, iya atau tidak, bagus atau buruk). Selain dari hasil keluaran, perbedaan model tersebut terlihat dari belum model dan asumsinya. Linear Regression mencari kecocokan dengan least Square dan kualitas model tersebut diukur dengan RMSE, MAE dan \\(R^2\\). Sedangkan pada Logistic Regresion menggunakan MLE (Maximum Likelihood Estimation).</p> <p></p>"},{"location":"My%20Magister/First%20Semester/Data%20Mining/03.%20Ketiga/#uji-performa","title":"Uji performa","text":""},{"location":"My%20Magister/First%20Semester/Data%20Mining/03.%20Ketiga/#receiver-operator-characteristic-roc","title":"Receiver Operator Characteristic (ROC)","text":"<p>Kurva ROC dibangun dengan memploting true posirive rate TPR dengan False Positive Rate FPR. <code>TPR</code> adalah proporsi dari observasi yang diprediksi true positive berdasarkan seluruh observasi positif \\(TP/(TP+FN)\\). Sedangkan <code>FPR</code> adalah proporsi dari obeservasi yang diprediksi false positive berdasarkan seluruh observasi, \\(FP/(TP+FN)\\).</p> <p>Contoh, pada pengujian medis, true positive rate adalah tingkat nilai true positive yang mana pasien secara benar teridentifikasi berdasarkan hasil uji coba dinyatakan postive pada penyakit ditanyakan tersebut.</p> <p>A discrete classifier that returns only the predicted class gives a single point on the ROC space. But for probabilistic classifiers, which give a probability or score that reflects the degree to which an instance belongs to one class rather than another, we can create a curve by varying the threshold for the score. Note that many discrete classifiers can be converted to a scoring classifier by \u2018looking inside\u2019 their instance statistics. For example, a decision tree determines the class of a leaf node from the proportion of instances at the node.</p> <p>source</p> <p>source : Quest Stat</p> <p>Source : More Explained</p> <p>Why TPR, FPR dan Tresshold differeint with the data given</p> <p>Logistic Regression : Data Tab Youtube</p> <p>Logistic Regression : Data Tab Note</p>"},{"location":"My%20Magister/First%20Semester/Data%20Mining/04.%20Keempat/","title":"Decission Trees","text":""},{"location":"My%20Magister/First%20Semester/Data%20Mining/04.%20Keempat/#pretest","title":"Pretest","text":"<p>Pertanyaan 1</p> <p>Apa tujuan utama dari algoritma decision tree dalam klasifikasi?</p> <p>A. Untuk membagi data ke dalam kategori-kategori berdasarkan aturan yang mudah dipahami B. Untuk memprediksi nilai kontinu berdasarkan variabel input C. Untuk menganalisis data dalam bentuk grafik D. Untuk mengelompokkan data ke dalam beberapa kategori berdasarkan nilai numerik E. Untuk mengidentifikasi hubungan linier antara variabel</p> Jawaban <p>A. Untuk membagi data ke dalam kategori-kategori berdasarkan aturan yang mudah dipahami</p> <p>Pertanyaan 2</p> <p>Bagaimana cara kerja algoritma decision tree?</p> <p>A. Dengan membuat grafik visualisasi untuk setiap data B. Dengan membuat prediksi berdasarkan rata-rata nilai data C. Dengan menggunakan probabilitas untuk setiap nilai dalam dataset  D. Dengan membagi data berdasarkan kriteria yang membagi dataset menjadi dua grup yang lebih homogen E. Dengan menghitung nilai kesalahan dan memperbaikinya di setiap iterasi</p> Jawaban <p>D. Dengan membagi data berdasarkan kriteria yang membagi dataset menjadi dua grup yang lebih homogen.</p> <p>Pertanyaan 3</p> <p>Manakah yang bukan merupakan keuntungan dari penggunaan decision tree?</p> <p>A. Dapat menangani data yang bersifat numerik dan kategorikal B. Dapat menangani missing values dalam dataset C. Tidak memerlukan persiapan data atau pemrosesan sebelumnya D. Mudah untuk dipahami dan diinterpretasikan E. Mudah untuk digunakan dalam pemodelan regresi dan klasifikasi</p> Jawaban <p>C. Tidak memerlukan persiapan data atau pemrosesan sebelumnya</p> <p>Pertanyaan 4</p> <p>Apa yang dimaksud dengan \"overfitting\" dalam konteks decision tree?</p> <p>A. Model gagal menghasilkan output yang valid B. Model tidak mampu mengklasifikasikan data dengan benar C. Model terlalu sederhana sehingga tidak dapat menangkap pola dalam data D. Model tidak menggunakan cukup fitur dalam proses pembuatan keputusan E. Model mempelajari detail yang sangat spesifik pada data pelatihan, sehingga kurang dapat generalisasi ke data baru</p> Jawaban <p>E. Model mempelajari detail yang sangat spesifik pada data pelatihan, sehingga kurang dapat generalisasi ke data baru</p> <p>Pertanyaan 5</p> <p>Metrik evaluasi yang digunakan untuk mengukur kualitas model decision tree adalah:</p> <p>A. Koefisien determinasi (R\u00b2) B. Mean Squared Error (MSE) C. Akurasi dan F1-Score D. Akurasi dan Precision E. Koefisien regresi</p> Jawaban <p>C. Akurasi dan F1-Score</p>"},{"location":"My%20Magister/First%20Semester/Data%20Mining/04.%20Keempat/#decission-tree","title":"Decission Tree","text":""},{"location":"My%20Magister/First%20Semester/Data%20Mining/04.%20Keempat/#cost-complexity-prunning","title":"Cost Complexity Prunning","text":"<p>CCP adalah sebuah teknik yang digunakan pada algoritma Decission Tree untuk menghindari terjadinya overfitting dan meningkatkan peluang membuat model yang lebih umum. Teknin ini melibatkan 2 langkah;</p> <ol> <li> <p>Mengembangkan node tree hingga titik maksimal, tree dikembangkan terus hingga semua leave menjadi murni (Hanya ada satu pilahan pada setiap leave) atau hingga branch tidak bisa dikembangkan lagi sehingga tree memiliki banyak isntance.</p> </li> <li> <p>Memangkasnya, selanjutnya memangkas kembali cabang-cabang yang tidak menghasilkan nilai prediksi yang signifika terhadap variabel tujuan. Prunning mempertimbangkan nilai ganti antara complexitas dari tree dan klasifikasi akurasi</p> </li> </ol> <p>https://scikit-learn.org/stable/auto_examples/tree/plot_cost_complexity_pruning.html#sphx-glr-auto-examples-tree-plot-cost-complexity-pruning-py</p>"},{"location":"My%20Magister/First%20Semester/Data%20Mining/04.%20Keempat/#source","title":"Source","text":"<pre><code>* [Decission Tree Sklearn](https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html)\n* [DT, good visualisation data even from looking for noise data](https://www.kaggle.com/code/hesankazemnia/mobile-price-classification-dt-rf-svm/notebook)\n* [Data diskrit dan kontinu](https://it.telkomuniversity.ac.id/data-diskrit-vs-data-kontinu/)\n* [Train Accuracy 100% and Test Accuracy less than that, it is posible as overfitting](https://stats.stackexchange.com/a/278931)\n* [More about overfitting](https://datascience.stackexchange.com/a/74686)\n</code></pre>"},{"location":"My%20Magister/First%20Semester/Data%20Mining/05.%20Kelima/","title":"Index","text":"<ol> <li>Tujuan utama dari algoritma Na\u00efve Bayes dalam klasifikasi: \u2705 Jawaban: D. Mengklasifikasikan teks ke dalam kategori berdasarkan probabilitas \ud83d\udd0d Penjelasan: Na\u00efve Bayes digunakan untuk mengklasifikasikan teks (misalnya spam atau bukan spam) berdasarkan probabilitas kemunculan kata-kata dalam teks tersebut. Algoritma Na\u00efve Bayes adalah metode klasifikasi yang berbasis pada teori probabilitas Bayes dengan asumsi independensi antar fitur (karena itu disebut \u201cna\u00efve\u201d). Tujuan utamanya adalah untuk mengklasifikasikan data (sering kali teks) ke dalam kategori tertentu berdasarkan probabilitas kemunculan fitur-fitur dalam data tersebut.</li> </ol> <p>Misalnya, dalam klasifikasi email sebagai spam atau bukan spam, Na\u00efve Bayes menghitung probabilitas bahwa sebuah email tergolong spam berdasarkan kata-kata yang muncul di dalamnya.</p> <ol> <li>Prinsip dasar dari algoritma Na\u00efve Bayes: \u2705 Jawaban: A. Asumsi bahwa fitur dalam data bersifat independen satu sama lain \ud83d\udd0d Penjelasan: Na\u00efve Bayes mengasumsikan bahwa fitur (kata-kata) saling independen secara bersyarat, yang membuat perhitungannya sederhana dan cepat.</li> </ol> <p>Penjelasan: Prinsip dasar dari algoritma Na\u00efve Bayes adalah asumsi independensi bersyarat antar fitur. Artinya, algoritma ini mengasumsikan bahwa keberadaan (atau nilai) suatu fitur tidak bergantung pada fitur lain, dengan syarat kelas tertentu sudah diketahui.</p> <p>Contoh sederhananya: dalam klasifikasi email, jika ada dua kata seperti \u201cgratis\u201d dan \u201cpromo\u201d, Na\u00efve Bayes menganggap kemunculan kata \u201cgratis\u201d tidak terpengaruh oleh kemunculan kata \u201cpromo\u201d, meskipun dalam kenyataannya mungkin saja keduanya sering muncul bersamaan di email spam. Ini yang disebut \u201cna\u00efve\u201d (naif), karena menyederhanakan kenyataan.</p> <p>Tapi justru karena kesederhanaan inilah, Na\u00efve Bayes sering efektif dan sangat cepat, terutama dalam masalah klasifikasi teks.</p> <ol> <li>Fitur yang sering digunakan dalam Na\u00efve Bayes untuk klasifikasi teks: \u2705 Jawaban: E. Kata-kata dalam teks \ud83d\udd0d Penjelasan: Kata-kata (tokens) dalam teks digunakan sebagai fitur utama dalam model Na\u00efve Bayes, biasanya melalui pendekatan Bag of Words.</li> </ol> <p>Penjelasan: Dalam klasifikasi teks menggunakan algoritma Na\u00efve Bayes, fitur yang paling sering digunakan adalah kata-kata dalam teks (biasa disebut features atau tokens). Pendekatan umum yang digunakan adalah Bag of Words (BoW), di mana setiap kata dalam korpus dianggap sebagai fitur, dan setiap dokumen (misalnya email, artikel, tweet) direpresentasikan sebagai vektor jumlah atau keberadaan kata-kata tersebut.</p> <p>Contoh: Kalau kamu punya kalimat \"Saya suka kopi\", maka kata \"saya\", \"suka\", dan \"kopi\" masing-masing menjadi fitur. Kemudian Na\u00efve Bayes menghitung probabilitas sebuah dokumen termasuk ke dalam kategori tertentu (misalnya \"positif\" atau \"negatif\") berdasarkan frekuensi atau keberadaan kata-kata tersebut.</p> <p>Kalau kamu mau, aku bisa tunjukin contoh kecil bagaimana teks diubah jadi fitur buat Na\u00efve Bayes. Mau?</p> <ol> <li>Keuntungan dari menggunakan Na\u00efve Bayes dalam klasifikasi teks: \u2705 Jawaban: B. Dapat menangani teks yang sangat besar dengan cepat \ud83d\udd0d Penjelasan: Na\u00efve Bayes bekerja efisien dan cepat, bahkan pada dataset besar dan berdimensi tinggi seperti teks.</li> </ol> <p>Penjelasan: Salah satu keuntungan utama Na\u00efve Bayes dalam klasifikasi teks adalah:</p> <p>Cepat dan efisien, bahkan saat digunakan pada dataset yang besar dan berdimensi tinggi, seperti dokumen teks dengan ribuan kata unik.</p> <p>Mudah diimplementasikan dan tidak membutuhkan sumber daya komputasi besar, cocok untuk aplikasi real-time seperti filtering email spam, analisis sentimen, dll.</p> <p>Mari bahas pilihan lain dengan cepat:</p> <p>A. Salah \u2013 Na\u00efve Bayes bisa digunakan untuk data non-numerik, seperti teks.</p> <p>C. Salah \u2013 Justru Na\u00efve Bayes bisa bekerja baik meskipun dengan data pelatihan yang relatif sedikit.</p> <p>D. Salah \u2013 Na\u00efve Bayes itu termasuk algoritma yang sederhana dan mudah dipahami.</p> <p>E. Salah \u2013 Na\u00efve Bayes bekerja baik pada data berdimensi tinggi, seperti teks (di mana setiap kata bisa jadi fitur).</p> <ol> <li>Tahap penerapan Na\u00efve Bayes terhadap dataset teks: \u2705 Jawaban: B. Setiap kata atau token diubah menjadi fitur yang dapat dihitung probabilitasnya \ud83d\udd0d Penjelasan: Teks diubah menjadi fitur (kata-kata) yang dapat digunakan untuk menghitung probabilitas kelas pada model klasifikasi.</li> </ol> <p>Penjelasan: Dalam penerapan Na\u00efve Bayes untuk klasifikasi teks, langkah pentingnya adalah mengubah teks menjadi representasi fitur. Biasanya, ini dilakukan dengan:</p> <p>Tokenisasi \u2013 memecah teks menjadi kata-kata (tokens).</p> <p>Representasi fitur \u2013 setiap kata dianggap sebagai fitur.</p> <p>Menghitung frekuensi atau keberadaan kata dalam dokumen.</p> <p>Menghitung probabilitas setiap kata muncul dalam kelas tertentu berdasarkan data pelatihan.</p> <p>Misalnya, jika kamu punya dokumen:</p> <p>\"Kopi enak dan hangat\"</p> <p>Maka fitur bisa berupa: {kopi, enak, dan, hangat} Na\u00efve Bayes akan menghitung probabilitas dokumen termasuk dalam suatu kelas (misalnya \u201cpositif\u201d atau \u201cnetral\u201d) berdasarkan kata-kata tersebut.</p> <p>Jadi bukan asal-asalan hitung, tapi pakai pendekatan probabilistik yang cerdas</p>"},{"location":"My%20Magister/First%20Semester/Data%20Mining/05.%20Kelima/#naive-bayes","title":"Naive Bayes","text":"<p>Sebelum kita mempelajarin <code>Multinomial Naive Bayes</code> kita harus memahami dahulu apa itu <code>Naive Bayes</code>. Untuk pengetahuan, ada versi dari <code>Naive Bayes</code> yang juga biasa digunakan, yaitu <code>Gaussian Naive Bayes Classification</code>.</p> <p>Source Stat quest</p>"},{"location":"My%20Magister/First%20Semester/Data%20Mining/06.%20Keenam/","title":"Index","text":""},{"location":"My%20Magister/First%20Semester/Data%20Mining/06.%20Keenam/#k-nearest-neighbour","title":"K-Nearest Neighbour","text":"<p>Bismillah</p>"},{"location":"My%20Magister/First%20Semester/Data%20Mining/06.%20Keenam/#source","title":"Source","text":"<ul> <li>https://www.youtube.com/watch?v=CQveSaMyEwM</li> </ul>"},{"location":"My%20Magister/First%20Semester/Data%20Mining/06.%20Keenam/#notes","title":"Notes","text":"<ul> <li>Untuk menemukan nilai <code>K</code> terbaik kita dapat menggunakan Grid Search CV atau K Fold Cross Validation.</li> </ul>"},{"location":"My%20Magister/First%20Semester/Modelling%20and%20Optimization/01.%20Pertama/","title":"Statistik","text":"<p>Statistik adalah disipilin ilmu yang mengumpulkan data, menganalisa data dan menafsirkan data secara sistematis.</p>"},{"location":"My%20Magister/First%20Semester/Modelling%20and%20Optimization/01.%20Pertama/#type-of-statistic","title":"Type of Statistic","text":"<p>https://www.geeksforgeeks.org/introduction-of-statistics-and-its-types/#descriptive-statistics</p>"},{"location":"My%20Magister/First%20Semester/Modelling%20and%20Optimization/01.%20Pertama/#stastical-modelling","title":"Stastical modelling","text":"<p>Statistical modelling adalah sebuah metode dalam mentransformasi sampel menjadi sebuah prediksi populasi dengan menggunakan berbagai macam model statistik. <sup>1</sup></p> <p>Dengan menerapkan model statistik pada data mentah, kita dapat membuat sebuah visualisasi yang komprehensif dan menemukan korelasi antar variabel serta dapat dijadikan sebuah prediksi.</p>"},{"location":"My%20Magister/First%20Semester/Modelling%20and%20Optimization/01.%20Pertama/#optimazation","title":"Optimazation","text":"<p>Source</p> <ol> <li> <p>https://www.simplilearn.com/tutorials/statistics-tutorial/what-is-statistical-modeling#:~:text=Statistical%20modeling%20is%20an%20elaborate,random%20variables%20in%20this%20process. \u21a9</p> </li> </ol>"},{"location":"My%20Magister/First%20Semester/Modelling%20and%20Optimization/Review%20Jurnal/","title":"Daftar link dan jurnal","text":"Link Judul Level https://jurnal.ranahresearch.com/index.php/R2J/article/view/1279 Optimalisasi Keuntungan pada Usaha Mikro Kecil dan Menengah (UMKM) Pempek Cik Lin Menggunakan Model Integer Linear Programming dan Software Lingo S4 https://www.bayesian.lppmbinabangsa.id/index.php/home/article/view/11 OPTIMASI BIAYA PENGIRIMAN ALAT TANGKAP IKAN MENGGUNAKAN METODE NORTH WEST CORNER (NWC) DAN SOFTWARE LINGO S6 https://www.taguchi.lppmbinabangsa.id/index.php/home/article/view/4 IMPLEMENTASI METODE NORTH WEST CORNER DAN PROGRAM LINGO PADA PENGIRIMAN BARANG DI PT. NUSHEL JAYA MANDIRI (UMAMA SCRAF) S5 https://ojs.stiami.ac.id/index.php/logistik/article/view/2410 Freight Train Scheduling using Integer Linear Programming: A case study of cement distribution S4 https://e-journal.trisakti.ac.id/index.php/tekin/article/view/19959 Improving Service Quality with the SERVQUAL Method and Linear Programming Optimization at a Transportation Provider Company S3"},{"location":"My%20Magister/First%20Semester/Network/02.%20Kedua/","title":"Kedua","text":"<p>https://www.geeksforgeeks.org/paging-in-operating-system/</p> <p>https://www.lenovo.com/us/en/glossary/page-fault/?orgRef=https%253A%252F%252Fwww.google.com%252F</p> <p>https://www.geeksforgeeks.org/difference-between-multitasking-and-multiprocessing/</p> <p>https://www.geeksforgeeks.org/process-in-operating-system/</p>"},{"location":"My%20Magister/First%20Semester/Network/02.%20Kedua/#diskusi","title":"Diskusi","text":"<ol> <li>OS : Adalah perangkat lunak sistem yang mengatur perangkat lunak, perangkat keras dan menyedikan beberapa service yang program komputer. Kalau bisa saya katakan OS adalah penengah antara perangkat keras dan user dimana OS memastikan aplikasi berjalan secara efektif dan aman. OS umumnya ada di berbagai macam platfom Komputer, Smartphone seperti Android yg berdiri di Unix dan ada sekarang seperti ubuntu dan kali linux, serta ada di dalam mini computer seperti arduino.</li> </ol>"},{"location":"My%20Magister/First%20Semester/Network/03.%20Ketiga/","title":"Control Processing Unit dan Graphical Processing Unit","text":""},{"location":"My%20Magister/First%20Semester/Network/03.%20Ketiga/#persamaan-cpu-dan-gpu","title":"Persamaan CPU dan GPU","text":"<code>Unit Pemprosesan (_Porcessor_)</code> <ul> <li>Baik CPU (Central Processing Unit) dan GPU (Graphical Processing Unit) adalah unit pemprosesan yang dirancang untuk melakukan kalkulasi dan mengeksekusi instruksi.</li> </ul> <code>Memiliki Core Inti</code> <ul> <li>Keduanya memiliki jumlah core, walaupun jumlah core dari keduanya berbeda-beda.</li> </ul> <code>Berfungsi untuk komputasi</code> <ul> <li>Keduanya digunakan untuk menjalankan komputasi, baik itu general purpose (CPU) dan pararel processing (GPU).</li> </ul> <code>Memiliki Memory Controller</code> <ul> <li>CPU dan GPU, keduanya mengelola memori untuk menyimpan dan memproses data.</li> </ul>"},{"location":"My%20Magister/First%20Semester/Network/03.%20Ketiga/#perbedaan-cpu-dan-gpu","title":"Perbedaan CPU dan GPU","text":"Aspek CPU GPU Fungsi Utama Mengelola dan mengeksekusi instruksi umum (general-purpose processing) Mengelola komputasi <code>pararel</code> (Grafis, video, AI, Scientific Computing) Jumlah Core Lebih sedikit, biasanya antara 4 core - 16 Core Memiliki banyak core, hingga ribuan core Arsitektur Core Kompleks, mampu menangani bergai instruksi Sederhana, dimaksimalkan untuk kalkulasi pararel Kecepatan Clock Tingg (2 ~ 4 GHZ) Lebih rendah dibandingkan dengan CPU (1 ~ 2 GHZ) Komputasi Pararel Terbatas pada multithreading Sangat kuat untuk komputasi pararel (multi threading). <code>SIMD</code>, Single Instruction Multiple Data Tugas Utama Menjalankan Operating System, aplikasi umum, kontrol Input/Output Rendering Grafis, Machine Learning, Kriptogradi, dan simulasi Latency dan Respons Rendah (Respone cepat untuk tugas single thread) Tinggi (Respone cepat untuk tugas multi thread)"},{"location":"My%20Magister/First%20Semester/Network/03.%20Ketiga/#cara-kerja-cpu","title":"Cara Kerja CPU","text":"<ol> <li><code>Fetch</code> - Mengambil instruksi dari memori (RAM).</li> <li><code>Decode</code> - mengubah instruksi menjadi sinyak yang bisa dipahami oleh <code>unit controll CPU</code>.</li> <li><code>Execute</code> - Melakukan perhitungan atau instruksi di ALU (Arithmetic Logic Unit).</li> <li><code>Writeback</code> - Menyimpan hasil eksekusi ke memori atau register.</li> <li><code>Control &amp; Scheduling</code> - CPU memiliki control unit yg bertugas untuk ;     a. Mengatur jalannya proses     b. Mengatur interrupt     c. Multitasking dengan sistem operasi</li> </ol>"},{"location":"My%20Magister/First%20Semester/Network/03.%20Ketiga/#kelebihan-cpu","title":"Kelebihan CPU","text":"<ul> <li>Fleksibel, dapat menjalankan berbagai jenis perintah.</li> <li>Cocok untuk task yang membutuhkan instruksi berurutan.</li> <li>Cepat dalam mengakses memori utama.</li> </ul>"},{"location":"My%20Magister/First%20Semester/Network/03.%20Ketiga/#cara-kerja-gpu","title":"Cara Kerja GPU","text":"<ol> <li><code>Masive Parallelism</code> - GPU memliki ratusan hingga ribuan core yang bekerja secara pararel.</li> <li><code>Single Instruction Multiple Data (SIMD) Model</code> - Menjalankan instruksi yang sama secara bersamaan pada banyak data (Rendering, Grafis).</li> <li><code>Pipelining &amp; Batch Processing</code> - memproses data dalam batch besar dengan pipeline yang dioptimalkan.</li> <li><code>Specialized Memory Access</code> - GPU memiliki memori sendiri, yaitu VRAM, yang dapat diakses lebih cepat oleh core-core-nya.</li> </ol>"},{"location":"My%20Magister/First%20Semester/Network/03.%20Ketiga/#kelebihan-gpu","title":"Kelebihan GPU","text":"<ul> <li>Sangat efesien untuk komputasi data besar secara pararel (Data Training, Deep Learning)</li> <li>Lebih tinggi througout dari pada CPU untuk tugas-tugas yang dilakukan pararel.</li> </ul>"},{"location":"My%20Magister/First%20Semester/Network/10.%20Kesepuluh/","title":"Index","text":""},{"location":"My%20Magister/First%20Semester/Network/10.%20Kesepuluh/#source","title":"source","text":"<ul> <li>https://www.geeksforgeeks.org/difference-between-distance-vector-routing-and-link-state-routing/</li> </ul> <p>Link State</p> <p>Berbeda dengan Distance Vector Routing yang hanya memperbaharui table routing yang secara langsung terkoneksi, Link State lebih dinamis, dimana setiap router me-maintain sendiri pengetahuan dari seluruh jaringan dibandingkan hanya berbagi informasi kepada router yg terhubung. Karena penggunan alogirtma tersebutlah LinkState lebih cocok digunakan untuk jaringan yang besar dan kompleks.</p>"},{"location":"Others/Research%20Design/1_research_approach/","title":"Pendekatan Penelitian","text":"<p>Pendekatan penelitian atau biasa disebut dengan metodelogi penelitin adalah serangkaian prosedur yang mencangkup langkah-langkah dari sebuah asumsi ke metode pengumpulan data, analisa dan interpretasi.</p>"},{"location":"Others/Research%20Design/1_research_approach/#tiga-tipe-pendekatan-penelitain","title":"Tiga tipe pendekatan penelitain","text":"<p>Secara garis besar ada 3 pendekatan penelitian, <code>penelitian kualitatif</code>, <code>penelitian kuantitatif</code>, dan <code>campuran</code>. Seringkali kita mendengar bahwa penelitian kualitatif menghasilkan kalimat yang menggambarkan kualitas, misalkan; baik, lebih baik atau tidak baik. Sedangkan penelitian kuantitatif menghasil angka dibandingkan kalimat.</p> <p>Cara yang lebih lengkap untuk mengetahui perbedaan dari keduanya adalah dengan melihat asumsi filosofi dasar yang dibawa peneliti dalam penelitian, misalkan;</p> <ul> <li>Strategi penelitian yang digunakan, cnth : eksperimen kuantitatif atau studi kasus kualitatif.</li> <li>Metode yang digunakan contoh, mengumpulkan data kuantitatif dari instrumen yang ada atau mengumpulkan data kualitatif melalui observasi.</li> </ul>"},{"location":"Others/Research%20Design/1_research_approach/#penelitian-kualitatif","title":"Penelitian Kualitatif","text":"<p>Adalah sebuah pendekatan yang mengeksplorasi dan memahami apa yang menjadi penyebab masalah yang terjadi pada objek yang dimaksud. Data yang digunakan pada penelitian ini biasanya didapatkan dari jawaban banyak partisipan (pengisian angket, wawancara, dsb), selanjutnya peneliti membuat gambaran arti dari data tersebut. Hasil penelitian kualiatif dibuat dalam bentuk laporan penelitian, namun dengan strukturnya yang lebih fleksibel.</p>"},{"location":"Others/Research%20Design/1_research_approach/#penelitian-kauntitatif","title":"Penelitian Kauntitatif","text":"<p>Adalah sebuah pedekatan untuk menguji teoi dengan membandingkan hubungan antara beberapa variabel atau membandingkan antar kelompok. Variable tersebut dapat diukur sehingga data dapat dianalisa menggunakan prosedur statistik.</p>"},{"location":"Others/Research%20Design/1_research_approach/#tiga-komponen-utama-dalam-pendekatan-penelitian","title":"Tiga komponen utama dalam pendekatan penelitian","text":"<p>Pendakatan penelitian yang luas adalah rencana atau usulan melakukan penelitian yang melibatkan persimpangan dari filosofi, desain penelitian dan metode yang spesifik.</p> <p></p>"},{"location":"Others/Research%20Design/1_research_approach/#filosofi-filsafat-penelitain-worldview","title":"Filosofi filsafat penelitain (worldview)","text":"<p>Sangat disarankan bagi individu yang sedang menyiapkan perencanaan atau usulan penelitian menjelaskan gagasan filosofi yang lebih luas berdasarkan yang mereka anut. Karena informasi tersebut (gagasan filosofi) akan membantu dalam menerangkan mengapa mereka memilih pendekatan kuantitatf, kualitatif atau campuran pada penelitian mereka.</p> <p>Info</p> <p>worldview = pondasi filosofis yang menjelaskan cara melihat pengetahuan, alasan memilihnya, dan dampaknya pada desain penelitian. (a basic set of beliefs that guide action)</p> <p>Saat menulis <code>cara pandang</code>, <code>kerangka keyakinan</code>, atau <code>filsafat penelitian</code> harus memasukan bagian yang mengarah pada isi berikut;</p> <ul> <li>Cara pandang, kerangka keyakinan atau filsafat penelitian yang digunakan oleh peneliti.</li> <li>Definisi ide dasar dari cara pandang tersebut.</li> <li>Kerangka keyakinan digambarkan pada pengalaman penelitian, pelatihaan atau budaya lingkungan.</li> <li>Bagimana cara pandang membentuk pendekatan penelitian mereka.</li> </ul> <p>Info</p> <p>Kata wordview sebagaimana yang saya tulis diatas disebut dengan <code>podansi filosofi</code>, <code>cara pandang</code>, <code>kerangkan keyakinan</code>, atau <code>filsafat penelitian</code>, penulis buku ini menyebutkan bahasa lain yang diambil dari penulis buku yang lain sepert <code>metlit</code>, <code>paradigma</code>. Namun penulis buku ini lebih condong pada penggunakan worldview karena mebawa perspektif global.</p> <p>Seorang peneliti mengembangkan cara pandang berdasarkan orientasi disiplin ilmu mereka, komunitas penelitian, pengarah atau mentor, pengalaman penelitian sebelumnya, dan pengalaman budaya., Faktor tersebutlah yang mendorong kuat pendekatan penelitian yang digunakan pada penelitian mereka. Jadi sangat penting untuk memasukan pandangan penelitian. Karena dengan demikian, pembaca dapat memahami dengan baik terhadap penelitian untuk mengetahui bias (penyajian bahan yang dipenuhi dengan prasangka) dan pendirian yang digunakan oleh peneliti.</p>"},{"location":"Others/Research%20Design/1_research_approach/#empat-pandangan-penelitian","title":"Empat pandangan penelitian","text":"Rangkuman empat pandangan penelitian Worldview Pandangan Utama Fokus Penelitian (Generative AI) Metode yang Umum Dipakai Contoh Penulisan dalam Proposal Postpositivist Realitas dianggap objektif dan bisa diukur Menguji performa generative AI secara kuantitatif, misalnya akurasi, kualitas output, atau efisiensi model Eksperimen, survei kuantitatif, uji statistik (misalnya BLEU score, FID, dsb.) \u201cPenelitian ini menggunakan worldview postpositivist, dengan eksperimen terkontrol untuk mengukur akurasi dan kualitas teks yang dihasilkan oleh model generative AI.\u201d Constructivist Realitas bersifat subjektif, dipengaruhi oleh konteks sosial dan pengalaman Memahami bagaimana pengguna memaknai dan merasakan penggunaan generative AI dalam kehidupan sehari-hari (misalnya di pendidikan, seni, atau pekerjaan) Wawancara, observasi, analisis kualitatif \u201cPenelitian ini menggunakan worldview konstruktivis, dengan wawancara mendalam untuk menggali pengalaman guru dalam memanfaatkan generative AI sebagai alat bantu pembelajaran.\u201d Pragmatic Metode dipilih sesuai kebutuhan, fokus pada solusi praktis Menggabungkan evaluasi performa teknis dan dampak sosial penggunaan generative AI Mixed methods: uji kuantitatif + wawancara/observasi \u201cPenelitian ini menggunakan worldview pragmatis, dengan kombinasi uji performa teknis model AI dan survei pengguna untuk memahami manfaat dan tantangan penerapannya.\u201d Transformative Penelitian untuk perubahan sosial, keberpihakan pada kelompok tertentu Meneliti bagaimana generative AI dapat memberdayakan atau justru merugikan kelompok marjinal (misalnya bias gender/ras dalam output AI) Pendekatan kritis, partisipatoris, studi kasus komunitas \u201cPenelitian ini menggunakan worldview transformative, dengan fokus pada analisis bias dalam generative AI dan bagaimana teknologi ini dapat didesain lebih inklusif bagi kelompok minoritas.\u201d"},{"location":"Others/SFTP%20%26%20SSH/","title":"Installing FSTP & SSH Windows","text":"<p>Sumber :</p> <ul> <li>winscp</li> <li>microsoft</li> </ul>"},{"location":"Others/SFTP%20%26%20SSH/#petunjuk-kali-ini-saya-menggunakan-windows-11","title":"Petunjuk kali ini saya menggunakan Windows 11","text":""},{"location":"Others/SFTP%20%26%20SSH/#using-command-line","title":"Using Command Line","text":"<ol> <li> <p>Informasi instalasi Open SSH client dan server</p> <p>Syntax</p> <pre><code>Get-WindowsCapability -Online | Where-Object Name -like 'OpenSSH*'\n\n# Output belum terinstall\n# Name  : OpenSSH.Client~~~~0.0.1.0\n# State : NotPresent\n# Name  : OpenSSH.Server~~~~0.0.1.0\n# State : NotPresent\n\n# Output jika sudah terinstall\n# Name  : OpenSSH.Client~~~~0.0.1.0\n# State : Installed\n# Name  : OpenSSH.Server~~~~0.0.1.0\n# State : Installed\n</code></pre> </li> <li> <p>Instal client dan server open ssh</p> <p>Syntax</p> <pre><code># Install the OpenSSH Client\nAdd-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0\n\n# Install the OpenSSH Server\nAdd-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0\n</code></pre> </li> <li> <p>Memulai service SSH</p> <p>syntax</p> <pre><code># Start the sshd service\nStart-Service sshd\n\n# OPTIONAL but recommended:\nSet-Service -Name sshd -StartupType 'Automatic'\n\n# Confirm the Firewall rule is configured. It should be created automatically by setup. Run the following to verify\nif (!(Get-NetFirewallRule -Name \"OpenSSH-Server-In-TCP\" -ErrorAction SilentlyContinue | Select-Object Name, Enabled)) {\n    Write-Output \"Firewall Rule 'OpenSSH-Server-In-TCP' does not exist, creating it...\"\n    New-NetFirewallRule -Name 'OpenSSH-Server-In-TCP' -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22\n} else {\n    Write-Output \"Firewall rule 'OpenSSH-Server-In-TCP' has been created and exists.\"\n}\n\n# Untuk menguji apakah service sudah running \nGet-Service sshd\n</code></pre> </li> <li> <p>Mematikan service     !!! info \"Syntax\"</p> <pre><code>```PowerShell\nStop-Service sshd\n```\n</code></pre> </li> </ol>"},{"location":"Others/SFTP%20%26%20SSH/#using-gui","title":"Using GUI","text":"<ol> <li> <p>Untuk menginstall OpenSSH. Buka settings/system/Optional System.</p> <p>Picture</p> <p></p> </li> <li> <p>Selanjutnya pilih view Optionals, lalu cari keyword OpenSSH, lalau tekan install.</p> <p>Picture</p> <p></p> </li> </ol>"},{"location":"Others/SFTP%20%26%20SSH/#installed-folder-dan-konfigurasi","title":"Installed folder dan konfigurasi","text":"<p>Binary data terinnstall di <code>%WINDIR%\\System32\\OpenSSH</code>. Sedangkan untuk konfigurasi file (sshd_config) dan hosts-keys terinstall di <code>%ProgramData%\\ssh</code></p>"},{"location":"Others/SFTP%20%26%20SSH/#setup-chroot-direktori","title":"Setup chroot direktori","text":"<p>Buka <code>%ProgramData%\\ssh\\sshd_config</code>. Lalu uncomment dan berikan nilai sebagai berikut <code>ChrootDirectory \"D:\\Demo\\SFTP-Interface\"</code></p>"},{"location":"Others/Server/load_balancing/","title":"Load balancing","text":"<p>Load balancing sama dengan reserve proxy. Untuk baca lebih lanjut setup apache dengan tomcat dua instance baca disini</p> <p>https://stackoverflow.com/questions/6018428/sticky-session-with-apache-web-server-and-tomcat-servers</p> <p>https://www.theserverside.com/blog/Coffee-Talk-Java-News-Stories-and-Opinions/How-to-configure-Apache-as-a-reverse-proxy-example</p>"},{"location":"Programming%20Language/Java/","title":"Preface Java","text":""},{"location":"Programming%20Language/Java/#books","title":"Books","text":"<p>Sumber buku berjudul Learn SQL Database Programming yang ditulis oleh Josephine Bush dan dipublish oleh Packt Publishing.</p>"},{"location":"Programming%20Language/Java/#why-this-books","title":"Why this books ?","text":"<p>Dari beberapa buku java yang saya pernah baca, menurut hemat saya buku ini yang paling lengkap menyajikan java untuk para pemula dengan contoh yang berfokus pada apa java itu sendiri.</p>"},{"location":"Programming%20Language/Java/01.%20Strings/","title":"Strings","text":"<p>Info</p> <p>Semua file yang ada pada contoh pada catatan ini ada pada package <code>Ch3/J3_6_Strings</code></p> <p>Secara konsep, <code>String</code> pada java adalah kumpulan dari karakter-karakter Unicode. Contohnya adalah kalimat<code>Java\\u212</code> terdiri dari lima karakter unicode, <code>J</code>, <code>a</code>, <code>v</code>, <code>a</code> dan <code>\u2122</code>. Java tidak memiliki tipe String pada bawaanya (built-in), akan tetapi, Java Standard Library yang mengandung class yang sudah terdefinisi (disebut dengan predefined class) disebut dengan class Strings, (atau selanjutnya jika cukup katakan <code>String</code>). Setiap kalimat yang diawali dan akhir dengan quoted <code>\"</code> adalah instance dari class Strings.  </p> <p>Check tipe data dari sebuah instance menggunakan operator <code>instanceof</code></p> J1_isntanceof.java <pre><code>public class kertas {\n    public static void main(String[] args) {\n        String greets = \"Greets\";\n        System.out.println(greets instanceof String); // True\n    }\n}\n</code></pre> Output<pre><code>true\n</code></pre>"},{"location":"Programming%20Language/Java/01.%20Strings/#substring","title":"Substring","text":"<p>Kita dapat mengambil sebagian kalimat dari  string yang panjang pada class String menggunakan method <code>substring()</code>.</p> <p>Substring</p> J2_substring.javaJ3_substring_2.java <p><pre><code>package J3_6_Strings;\n\npublic class J2_substring {\n    public static void main(String[] args) {\n        String greets = \"Assalamualaikum\";\n        String g = greets.substring(5); //(1)!\n        System.out.println(g);\n    }\n}\n</code></pre> 1.  Mengambil karakter ke 5 hingga habis</p> Output<pre><code>amualaikum\n</code></pre> <pre><code>package J3_6_Strings;\n\npublic class J3_substring_2 {\n    public static void main(String[] args) {\n        String greets = \"Assalamualaikum\";\n        String g = greets.substring(5,8); //(1)! Mengambil karakter ke 5 hingga ke 8\n        System.out.println(g);\n    }\n}\n</code></pre> <ol> <li>Mengambil karakter ke 5 hingga ke 8</li> </ol> Output<pre><code>amu\n</code></pre>"},{"location":"Programming%20Language/Java/01.%20Strings/#concatenation","title":"Concatenation","text":"<p>Java, like most programming languages, allows you to use (concatenate) two strings. + to jo</p> <p>Concate using pluss operator <code>+</code></p> J_4_concatenating.java <pre><code>package J3_6_Strings;\n\npublic class J_4_concatenating {\n    public static void main(String[] args) {\n        String firstName = \"Muhammad\";\n        String lastName = \"Farras\";\n        String fullName = firstName + lastName;\n        System.out.println(fullName);\n    }\n}\n        ```\n\n```{.java title=\"Output\"}\nMuhammadFarras\n</code></pre> <p>Ketika kita menggabungkan sebuah kalimat dengan nilai yang bukan bertipe String, maka java akan mengkonversinya kedalam string.</p> <p>Convertion when concatenating values</p> J_5_concatenating_2.java <pre><code>package J3_6_Strings;\n\npublic class J_5_concatenating_2 {\n    public static void main(String[] args) {\n        int value = 78;\n        String desc = value + \" adalah sebuah nilai yang cukup\"; //(1)!\n        System.out.println(desc);\n    }\n}\n</code></pre> <ol> <li>Variable <code>value</code> yang bertipe <code>int</code> akan dikonversi java kedalam bentuk <code>String</code>.</li> </ol> Output<pre><code>78 adalah sebuah nilai yang cukup\n</code></pre> <p>Java juga menyedikan fitur yang kita butuhkan seandainya kita ingin menggabungkan beberapa kalimat yang terpisah pada variabel menjadi satu kalimat utuh, java menyediakan static fungsi <code>join</code>. Method ini dapat menggabungkan string pada variable yang terpisah atau string yang ditampung pada sebuah array.</p> <p>Concate multiple Strings</p> J_5_concatenating_3_join.javaJ_5_concatenating_3_join_2.java <pre><code>package J3_6_Strings;\n\npublic class J_5_concatenating_3_join {\n    public static void main(String[] args) {\n        String firstName = \"Tania\";\n        String middleName = \"Dwi\";\n        String lastName = \"Haryanti\";\n        String fullName = String.join(\" \",firstName,middleName, lastName);\n        System.out.println(fullName);\n    }\n}\n</code></pre> Output<pre><code>Tania Dwi Haryanti\n</code></pre> <pre><code>package J3_6_Strings;\n\npublic class J_5_concatenating_3_join_2 {\n    public static void main(String[] args) {\n        String[] name = {\"Tania\",\"Dwi\",\"Haryanti\"};\n        String fullName = String.join(\" \",name);\n        System.out.println(fullName);\n    }\n}\n</code></pre> Output<pre><code>Tania Dwi Haryanti\n</code></pre> <p>Semenjak java 11, java memiliki method <code>repeate</code> untuk membuat perulangan string.</p> <p>Perulangan string</p> J_5_concatenating_repeat.java <p>Method repeat pada instance String baru ditambahkan pada java 11, maka dari itu untuk memastikan code berjalan dengan benar saya membuat validasi terkait versi java. Kode dibawah akan berjalan setidaknya versi java adalah versi 11.</p> <p>Saya menggunakan library tambahan <code>org.apache.commons</code>. Anda harus meng-import library tersebut sesuai dengan package anda, seperti maven, gradle atau bahkan mengimport secara manual.</p> <pre><code>package J3_6_Strings;\nimport org.apache.commons.lang3.JavaVersion;\nimport org.apache.commons.lang3.SystemUtils;\npublic class J_5_concatenating_repeat {\n    public static void main(String[] args) {\n        if (SystemUtils.isJavaVersionAtLeast(JavaVersion.JAVA_11)){\n            String java = \"Java\";\n            System.out.println(java.repeat(3));\n        }\n        else {\n            System.out.println(\"Doesn't have repeat\");\n        }\n    }\n}\n</code></pre> Output<pre><code>JavaJavaJava\n</code></pre>"},{"location":"Programming%20Language/Java/01.%20Strings/#string-are-immutable","title":"String are immutable","text":"<p>Di Java, class <code>String</code> tidak memiliki method yang membuat kita dapat mengganti karakter pada sebuah String yang ada. Namun kita dapat mencari cara lain, yaitu dengan menggunakan substring dan diconcatenate dengan karakter yg ingin ditambahkan.</p> <p>How to modify String</p> J_6_string_is_immutable.java <p>Mengubah kalimat <code>hello</code> menjadi <code>help!!!</code></p> <pre><code>package J3_6_Strings;\n\npublic class J_6_string_is_immutable {\n    public static void main(String[] args) {\n        String greets = \"Hello\";\n        greets = greets.substring(0,3)+\"p!!!\";\n        System.out.println(greets);\n    }\n}\n</code></pre> Output<pre><code>Help!!!\n</code></pre> <p>Pada baris ke-6, kita melaukan deklarasi lagi pada variable <code>greets</code> dengan substring dan concatenate karakter yang diinginkan sehingga menjadi kalimat help!!!.</p> <p>Karena kita tidak dapat merubah karakter-karakter secara individu didalam java (maksudnya bukan mendeklarasi ulang) merujuk pada dokumentasi tentang objek dari class <code>String</code> yang dikatakan class tersebut immutable* (nilai tidak dapat berubah). Seperti contoh diatas, kalimat <code>\"Hello\"</code> akan selalu mengandung code-unit dengan karakter yang berurut <code>H</code>,<code>e</code>,<code>l</code>,<code>l</code>,<code>o</code>. Kita tidak dapat mengganti nilai tersebut, namun sebagaimana yang telah kita coba diatas, kita dapat mengganti konten dari variable yang menampung string tersebut dengan membuat variable tersebut merujuk ke string yang berbeda. </p> <p>Namun pertanyaannya adalah, bukankah cara tersebu sangat ribet ? bukannya akan lebih mudah jika mengganti kode unit daripada membuat ulang string baru ?. Jawabannya bisa iya bisa tidak. Akan tetapi, tidak efesien membuat string baru yang menampung concatenation (sebagaimana contoh diatas). Namun, sifat string yang immutable ini memiliki keuntungan, yaitu: compiler dapat mengatur string yang dapat berbagi.</p> <p>Untuk memahami bagimana hal itu berkerjak, bayangkan beberapa string duduk di sebuah kolom-kolom. Variabel yang menampung string menempati titik disalah satu kolom. Jika kita menyalin (copy) sebuah variable yang berisi string, keduanya, original dan copy-an nya berbagi karakter yang sama.</p>"},{"location":"Programming%20Language/Java/01.%20Strings/#testing-string-for-equality","title":"Testing string for equality","text":"<p>Untuk menguji apakah dua buah string sama atau tidak, gunakan method <code>s.equals(t)</code>. Fungsi tersebut me-return <code>true</code> jika kedua buah string, <code>s</code> dan <code>t</code> ekual, <code>false</code> sebaliknya. Variable <code>s</code> dan <code>t</code> dapat variabel yang menampung String atau string literals (ex, string dari proses substring atau concenate).</p> <p><code>equals</code></p> J_7_string_test_equals.java <pre><code>package J3_6_Strings;\n\npublic class J_7_string_test_equals {\n    public static void main(String[] args) {\n        String greets = \"Hello\";\n        String gree = \"Hel\";\n\n        System.out.println((gree+\"lo\").equals(greets));\n        System.out.println((gree+\"lo\") == greets);\n    }\n}\n</code></pre> Output<pre><code>true\nfalse\n</code></pre> <p>Untuk menguji apakah kedua string indetik tanpa memperhatikan upper/lowercase, maka gunakan fungsi <code>equalsIgnoreCase</code> To test whether two strings are identical except for the upper/lowercase letter distinction, use the equalsIgnoreCase method.</p> <p>equalsIgnoreCase</p> J_8_string_test_equalsignorecase.java <pre><code>package J3_6_Strings;\n\npublic class J_8_string_test_equalsignorecase {\n    public static void main(String[] args) {\n        System.out.println(\"Farras\".equalsIgnoreCase(\"farras\"));\n    }\n}\n</code></pre> Output<pre><code>true\n</code></pre> <p>Jangan gunakan <code>==</code> operator untuk menguji apakah dua string sama atau tidak. karena operatir tersebut hanya menghasilkan nilai true atau flase jika string tersebut berada dilokasi yang sama.</p>"},{"location":"Programming%20Language/Java/01.%20Strings/#empty-and-null-string","title":"Empty and null string","text":"<p>String kosong, <code>\"\"</code> adalah string dengan pangjag kosong. Kita dapat menggunakan method <code>length()</code> untuk mengetahui panjang dari sebuah string</p> <p>Check length of string</p> J_9_empty_string.java <pre><code>package J3_6_Strings;\n\npublic class J_9_empty_string {\n    public static void main(String[] args) {\n        String emptyString = \"\";\n        System.out.println(emptyString.length());\n    }\n}\n</code></pre> Output<pre><code>0\n</code></pre> <p>String yang kosong adalah salah satu dari Java Object yang menampung string dengan pangjang nol dan kontent kosong. Namun, variabel yang menampung string juga dapat menampung special value yang disebut dengan <code>null</code> yang mengindikasi bahwa tidak ada objek yang berasosiasi dengan variabel tersebut.</p> <p>Code</p> Example 1 <pre><code>package J3_6_Strings;\n\npublic class J_10_variable_string_null {\n    public static void main(String[] args) {\n        String nullVar = null;\n        System.out.println( (nullVar == null)?\"Isinya null\":\"tidak null\");\n    }\n}\n</code></pre> Output<pre><code>Isinya null\n</code></pre> <p>Seringkali kita butuh menguji apakah variable string kosong atau null. Maka kita harus mengetest string variable null terlebih dahulu baru panjang dari string. Karena jika menguji panjang string baru menguji null dapat menyebabkan munculnya exception <code>NullPointerException</code>.</p> <p>Check empty and null string</p> J_11_string_check_null_and_length.javaJ_11_string_check_null_and_length_err.java | Error <pre><code>package J3_6_Strings;\n\npublic class J_11_string_check_null_and_length {\n    public static void main(String[] args) {\n        String stringNull = null;\n        String stringDesc = \"This is not null\";\n\n        checkNullAndEmpty(stringNull);\n        checkNullAndEmpty(stringDesc);\n    }\n    public static void checkNullAndEmpty(String text){\n        System.out.println(text != null &amp;&amp; text.length()&gt;0?\n                text\n                :\"Variable null atau kosong\");\n    }\n}\n</code></pre> Output<pre><code>Variable null atau kosong\nThis is not null\n</code></pre> <pre><code>// Rasie NullPointerException, karena menguji length terlebih dahulu jika variable yang diuji mengandung nilai NUll\npackage J3_6_Strings;\n\npublic class J_11_string_check_null_and_length_err {\n    public static void main(String[] args) {\n        String stringNull = null;\n        String stringDesc = \"This is not null\";\n\n        checkEmptyAndNull(stringNull); // (1)! will raise and NullPointerException\n        checkEmptyAndNull(stringDesc);\n    }\n    public static void checkEmptyAndNull(String text){\n        System.out.println(text.length() &gt;0 &amp;&amp; text != null? //(2)!\n                text\n                :\"Variable null atau kosong\");\n    }\n}\n</code></pre> <ol> <li>Tempat timbulnya null pointer exception</li> <li>Menguji <code>length</code> terlabih dahulu dibandingkan menguji null</li> </ol> Output<pre><code>Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke \"String.length()\" because \"text\" is null\nat J3_6_Strings.J_11_string_check_null_and_length_err.checkEmptyAndNull(J_11_string_check_null_and_length_err.java:13)\nat J3_6_Strings.J_11_string_check_null_and_length_err.main(J_11_string_check_null_and_length_err.java:9)\n</code></pre> <p>Berbicara tentang <code>NullPointerException</code>, ini adalah bug yang paling sulit untuk ditemukan, bagusnya, java menyediakan static method <code>Objects.requireNonNull</code> yang dapat menampung nilai yang diuji dan pesan yang timbul jika muncul exception <code>NullPointerException</code>. Dengan demikian kita dapat mengeluarkan excepiton lebih awal (disebut dengan behavior fail-fast) dan lebih detail posisi exception tersebut dibandingkan dengan tidak menggunakan method tersebut. </p> <p>Code</p> J_12_object_require_non_nulls.java <pre><code>package J3_6_Strings;\nimport java.util.Objects; // (1)!\n\npublic class J_12_object_require_non_nulls {\n    public static void main(String[] args) {\n        String posiblyNull = null;\n        checkEmptyAndNull(posiblyNull);\n    }\n    public static void checkEmptyAndNull(String text){\n        String nonNull = Objects.requireNonNull(text,\"Nilai tidak boleh null\"); //(2)!\n        System.out.println((nonNull.length()&gt;0?text:\"Variable null atau kosong\"));\n    }\n}\n</code></pre> <ol> <li>Import <code>java.util.Objects</code> untuk menggunakan method <code>requireNonNull</code></li> <li>Menspesifikasikan pesan error dan variable mana yang tidak boleh menampung nilai Null.</li> </ol> Output<pre><code>Exception in thread \"main\" java.lang.NullPointerException: Nilai tidak boleh null //(1)!\n    at java.base/java.util.Objects.requireNonNull(Objects.java:233)\n    at J3_6_Strings.J_12_object_require_non_nulls.checkEmptyAndNull(J_12_object_require_non_nulls.java:10)\n    at J3_6_Strings.J_12_object_require_non_nulls.main(J_12_object_require_non_nulls.java:7)\n</code></pre> <ol> <li>Pesan error lebih jelas ditambah dengan pesa costume yang dibuat.</li> </ol>"},{"location":"Programming%20Language/Java/01.%20Strings/#building-string","title":"Building String","text":"<p>Terkadang, kita butuh untuk membuat string dari banyak string pendek lainnya, seperti keystrokes atau kalimat dari sebuah file. Pembuatan string dari gabungan string yang pendek2 tersebut sangat tidak efesien jika kita menggunakan string concatenation (menggunakan <code>+</code> operator). Karena, setiap kita concatenate sebuah string, String objek baru akan terbuat dan karena itu akan lebih memakan waktu dan menghabis memeory. Maka dari itu, penggunakan class <code>StringBuilder</code> untuk menghindari pemborosan tersebut.</p> <p>Secara umum dalam membuat String menggunakan StringBuilder adalah; 1.  Membuat isntance dari class StringBuilder 2.  Menambahkan kalimat-kalimat untuk menjadi String yang diinginkan 3.  Mengkonversinya menjadi satu buah objek String. (konversi ke objek String)</p> <p>Dibawah contoh kita membuat sebuah kalimat dari kumpulan-kumpulan string.</p> <p>Code</p> J_13_stringbuilder.java <pre><code>package J3_6_Strings;\n\npublic class J_13_stringbuilder {\n    public static void main(String[] args) {\n        // Stringbuilder 1\n        StringBuilder catatanKaki = new StringBuilder();\n        catatanKaki.append(\"Ditulis oleh : Muhammad Farras Ma'ruf\\n\");\n        catatanKaki.append(\"-\".repeat(30));\n\n        // Stringbuilder 2\n        StringBuilder isiPesan = new StringBuilder(); // Inisiasi\n        isiPesan.append(\"Bismillah. Dengan menyebut nama Allah\\n\");\n        isiPesan.append(\"Suret ke : \");\n        isiPesan.append(2); // append int\n        isiPesan.append(\"\\nBertakwalah kepada Allah, tuhan satu-satunya \" +\n                \"yang berhak untuk disembah\\n\");\n\n        // Append another instance StringBuilder\n        isiPesan.append(catatanKaki);\n        System.out.println(isiPesan.toString());\n    }\n}\n</code></pre> Output<pre><code>Bismillah. Dengan menyebut nama Allah\nSuret ke : 2    \nBertakwalah kepada Allah, tuhan satu-satunya yang berhak untuk disembah\nDitulis oleh : Muhammad Farras Ma'ruf\n------------------------------\n</code></pre> <p>Info</p> <p>Selain <code>StribgBuilder</code> terdapat <code>StringBuffer</code> tidak se-efisein kawannya. Namun, <code>StringBuffer</code> dapat digunakan pada threads ganda untuk menambahkan atau menghapus karakter pada String. Jadi, jika perubahan String anda dilakukan pada single tread (umumnya seperti ini) sangat disarankan gunakan saja `#!java StringBilder. Pembahasan tentang thread insyaAllah akan ada saat catatan concurrency.</p>"},{"location":"Programming%20Language/Java/01.%20Strings/#text-blocks","title":"Text blocks","text":"<p>Pada java 15, Java memperkenalkan. Fitur ini lebih mudah digunakan dari pada string-literal. Karena, dengan menggunakan text blocks kita tidak perlu memikirkan escape code untuk tujuan tertentu, misal <code>\\n</code> untuk membuat barus baru pada string literal.</p> <p>Code</p> J_14_text_blocks.java <pre><code>package J3_6_Strings;\n\npublic class J_14_text_blocks {\n    public static void main(String[] args) {\n        String kalimat = \"\"\"\n                Bismillah\n                Apa kabar kalian ?\n                \"\"\";\n        System.out.println(kalimat);\n\n        String kalimatDua = \"\"\"\n                Alhamdulillah \\ \n                baik, kalau kamu ?\n                \"\"\"; //(1)!\n        System.out.println(kalimatDua);\n    }\n}\n</code></pre> <ol> <li><code>\\</code> digunakan pada IDE untuk membuat baris baru namun tidak untuk compiler</li> </ol> Output<pre><code>Bismillah\nApa kabar kalian ?\n</code></pre>"},{"location":"Programming%20Language/Java/02.%20Input%20and%20Output/","title":"Input and Output","text":"<p>Info</p> <p>Semua file yang ada pada contoh pada catatan ini ada pada package <code>Ch3/J3_7_InputOutput</code></p>"},{"location":"Programming%20Language/Java/02.%20Input%20and%20Output/#reading-input","title":"Reading Input","text":"<p>Membaca dari \"standard input stream\" <code>Syste,.in</code> cukup mudah. Untuk membaca console input kita harus membuat inisasi dari class <code>Scanner</code> yang diberi dengan nilai <code>System.in</code></p> <p>Code</p> J_1_Scanner_sysin.java <pre><code>package Ch3.J3_7_InputOutput;\n\nimport java.util.Scanner;\n\npublic class J_1_Scanner_sysin {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Whats is your name ? \");\n        String name = scanner.nextLine();\n        System.out.print(\"Your ages ? \");\n        int age = scanner.nextInt();\n        System.out.println(String.format(\"Name is %s with age %d\",name,age));\n    }\n}\n</code></pre> Output<pre><code>Whats is your name ? Muhammad Farras Ma'ruf\nYour ages ? 27\nName is Muhammad Farras Ma'ruf with age 27\n</code></pre> <p>Info</p> <p>Class <code>Scanner</code> tidak cocok untuk membaca sebuah passwod dari console karena nilai masukan akan tampil dilayar. Maka dari itu anda dapat menggunakan class <code>Console</code>.</p> <p>Code</p> Example.java <pre><code>package Ch3.J3_7_InputOutput;\nimport java.io.Console;\n\npublic class J_2_Console {\n    public static void main(String[] args) {\n        Console cs = System.console();\n        System.out.println(cs);\n        String userName = cs.readLine(\"Type username : \");\n        char[] password = cs.readPassword(\"Type password : \");\n\n        System.out.println(String.format(\"Username %d dengan password %d\",\n                userName,password.toString()));\n    }\n}\n</code></pre>"},{"location":"Programming%20Language/Java/02.%20Input%20and%20Output/#formating-output","title":"Formating output","text":"<p>Kita dapat mengatur format dari sebuah nilai yang dihasilkan oleh Java. Ada 3 acara; 1.  Jika anda ingin meng-print formated value ke console gunakan <code>System.out.printf</code> 2.  ALternatif lain, tanpa harus langsung menampilkan di console dapat menggunakan static method <code>String.format()</code>. 3.  Mulai dari java 15, anda dapat menggunakan method <code>formetted</code> 4.  Anda juga dapat menggunakan method <code>formatted</code> pada (text block)[01. Strings/#text-blocks]</p> <p>Code</p> J_3_format_output_printf.javaJ_3_format_output_StringFormat.javaJ_3_format_output_formatted.javaJ_3_format_output_textblock.java <pre><code>package Ch3.J3_7_InputOutput;\n\npublic class J_3_format_output_printf {\n    public static void main(String[] args) {\n        String product = \"Laptop\";\n        double price = 14700000d;\n        double discount = .271295;\n\n        System.out.printf(\"Produk : %s\\n\" +\n                \"Harga : %,.0f\\n\" +\n                \"Price after discount : %,.2f\\n\",product,price,(price*(1-discount)));\n    }\n}\n</code></pre> Output<pre><code>Produk : Laptop\nHarga : 14,700,000\nPrice after discount : 10,711,963.50\n</code></pre> <pre><code>package Ch3.J3_7_InputOutput;\n\npublic class J_3_format_output_StringFormat {\n    public static void main(String[] args) {\n        String product = \"Laptop\";\n        double price = 14700000d;\n        double discount = .271295;\n        String value = String.format(\"Produk : %s\\n\" +\n                \"Harga : %,.0f\\n\" +\n                \"Price after discount : %,.2f\\n\",product,price,(price*(1-discount)));\n        System.out.printf(value);\n    }\n}\n</code></pre> Output<pre><code>Produk : Laptop\nHarga : 14,700,000\nPrice after discount : 10,711,963.50\n</code></pre> <pre><code>package Ch3.J3_7_InputOutput;\n\npublic class J_3_format_output_formatted {\n    public static void main(String[] args) {\n        String product = \"Laptop\";\n        double price = 14700000d;\n        double discount = .271295;\n\n        String value2 = (\"Produk : %s \\n\" +\n                \"Harga : %,.0f \\n\" +\n                \"Price after discount : %,.2f\\n\").formatted(product,price,(price*(1-discount)));\n        System.out.println(value2);\n    }\n}\n</code></pre> Output<pre><code>Produk : Laptop\nHarga : 14,700,000\nPrice after discount : 10,711,963.50\n</code></pre> <pre><code>package Ch3.J3_7_InputOutput;\n\npublic class J_3_format_output_textblock {\n    public static void main(String[] args) {\n        String product = \"Laptop\";\n        double price = 14700000d;\n        double discount = .271295;\n\n        String value2 = (\"\"\"\n                \"Produk : %s\n                \"Harga : %,.0f\n                \"Price after discount : %,.2f\"\"\").formatted(product,price,(price*(1-discount)));\n        System.out.println(value2);\n    }\n}\n</code></pre> Output<pre><code>Produk : Laptop\nHarga : 14,700,000\nPrice after discount : 10,711,963.50\n</code></pre> <p>Dibawah ini adalah daftar convertion characters yang dapat digunakan untuk memformat value;</p> Convertion Characters Type Example <code>d</code> Decimal Integer 159 <code>x</code> atau <code>X</code> Hexadecimal integer gf <code>o</code> Octal integer 237 <code>f</code> atau <code>F</code> Fixed-point Floating-point 15.9 <code>e</code> atau <code>E</code> Exponential floating-point 159.e+01 <code>g</code> atau <code>G</code> General floating-point _ <code>a</code> atau <code>A</code> Hexadecimal floating-point 0x1.fccdp3 <code>s</code> atau <code>S</code> String Hello <code>c</code> atau <code>C</code> Character H <code>b</code> atau <code>B</code> Boolean true <code>h</code> atau <code>H</code> Hash code 42625b2 <code>tx</code> Legacy date and time _ <code>%</code> Percent symbol % <code>n</code> Line seperator _ <p>Kita juga dapat menggunakan flags. Sebenarnya kita sudah menggunakan pada contoh diatas, dimana kita menggunakan seperator (<code>,</code>) dam decimal point (<code>.</code>). Untuk lebih memahami lagi, contoh dibawah ini saya akan menggunakan flags, comma (<code>,</code>), titik (<code>.</code>) dan parenthis (<code>(</code>) agar format yang ditampilkan memenuhi kriteria berikut; 1. Seperator satuan 2.  Tanda desimal diiku dengan dua angka saja 3.  Untuk negatif value diberi tanda kurung</p> <p>Code</p> J_3_format_output_using_flags.java <pre><code>package Ch3.J3_7_InputOutput;\n\npublic class J_3_format_output_using_flags {\n    public static void main(String[] args) {\n        float negNumber = (-400000/3);\n        float posNumber = (20000/2);\n\n        System.out.printf(\"\"\"\n                This is negative number : %,(.2f\n                This is positive number : %,(.2f\n                \"\"\", negNumber, posNumber);\n    }\n}\n</code></pre> Output<pre><code>This is negative number : (133,333.00)\nThis is positive number : 10,000.00\n</code></pre> <p>Dibawah ini adalah daftar flags dan fungsinya</p> Flag Purpose <code>+</code> Memberikan tanda <code>+</code> dan <code>-</code> pada angka Space Memberikan space untuk positive number <code>0</code> Menambah awalan zero <code>.</code> Left-justifies field <code>(</code> Memberikan angka positif tanda kurung <code>,</code> Memberikan seperator pada satuan <code>#</code> (for <code>f</code> format) - <code>#</code> (for <code>x</code> format) - <code>$</code> - <code>&lt;</code> - <p>Note</p> <p>Formating mengikuti locale-specific komputer anda. Contohnya, bisa jadi seperator satuan dikomputer anda adalah . dan decimal pointnya adalah koma. Mungkin di mesin yang lain justru sebaliknya. InsyaAllah akan ada catatan tentang bagaimana mengatur international behavior pada aplikasi yang kita buat.</p>"},{"location":"Programming%20Language/Java/02.%20Input%20and%20Output/#file-input-and-output","title":"FIle input and output","text":"<p>Dibawahini adalah nilai keluaran dari perintah <code>tree</code> untuk melihat struktur folder dari kode yang kita gunakan pada catatan ini.</p> <pre><code>src/main\n\u251c\u2500\u2500 java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Ch3\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 J3_6_Strings\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 J3_7_InputOutput\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 J_4_file_input_output_read_file.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 Main.java\n\u2514\u2500\u2500 resources\n    \u2514\u2500\u2500 MyFile.txt\n</code></pre> <p>Untuk membaca file menggunakan Scanner pada file yang berada pada folder khusus <code>resource</code> kita dapat menggunakan instance dari class <code>Scanner</code>.</p> <p>Code</p> J_4_file_input_output_read_file.java <pre><code>package Ch3.J3_7_InputOutput;\n\nimport java.io.IOException;\nimport java.net.URISyntaxException;\nimport java.net.URL;\nimport java.nio.file.Path;\nimport java.util.Objects;\nimport java.util.Scanner;\n\npublic class J_4_file_input_output_read_file {\n    public static void main(String[] args) throws URISyntaxException, IOException {\n\n        // Mengambil URL dari folder Resources\n        URL url = Objects.requireNonNull(J_4_file_input_output_read_file.\n                        class.getClassLoader().\n                        getResource(\"MyFile.txt\"),\n                \"URL tidak boleh kosong mas bor\");\n\n        // Membuat objek path, Scanner membutuhkan nilai dengan objek Path\n        Path lokasiFile = Path.of(url.toURI());\n\n        Scanner scanner = new Scanner(lokasiFile);\n        // Reading file using while loop\n        while (scanner.hasNextLine()){\n            String line = scanner.nextLine();\n            System.out.println(line);\n        }\n    }\n}\n</code></pre> Output<pre><code>Bismillah, dengan menyebut nama Allah.\n</code></pre> <p>Info</p> <p>Terkait dengan penggunaan class <code>Path</code>, ada cara lain yaitu menggunakan <code>File</code> dari <code>java.io.File</code>. Namun penggunaan <code>File</code> sudah digantikan dengan API terbaru, yaitu <code>java.nio.Path</code>. Untuk mengetahui lebih lanjut perbedaan dari toosl tersebut anda dapat menbaca disini Java Path Vs Java File</p>"},{"location":"Programming%20Language/Java/03.%20Control%20Flow/","title":"Control and Flow","text":"<p>Info</p> <p>Semua file yang ada pada contoh pada catatan ini ada pada package <code>Ch3/J3_8_ControlFlow</code></p> <p>Java, sebagaimana dengan bahasa pemprogramman yang lain, java juga mendukung conditional statement dan loops (perulangan) untuk menentukan control flow</p>"},{"location":"Programming%20Language/Java/03.%20Control%20Flow/#block-scope","title":"Block Scope","text":"<p>Sebelum kita berbicara tentang control structure, kita harus memahami dahulu apa itu block. Block atau disebut dengan compound statement terdiri dari satu atau beberapa statements didalamnya, block mendefinisikan scope dari variabel yang kita miliki. block dikelilingoleh oleh open and closed brace <code>{}</code> dan block dapat bersarang, artinya block bisa berisi block lainnya.</p> <p>Code</p> J_1_Block.java <pre><code>package J3_8_ControlFlow;\n\npublic class J_1_Block {\n    public static void main(String[] args) {\n        int val = 2;\n        {\n            int blockVal = 4;\n            System.out.println(val);\n            System.out.println(blockVal);\n        }\n        System.out.println(blockVal); // Error at compile time\n    }\n}\n</code></pre> <p>Dapat kita lihat diatas, variable <code>val</code> pada block mehotd <code>main</code> dapat diakses oleh expression atau statement pada block nested-nya, namun untuk variable pada block tersebut hanya bisa diakses pada block tersebut.</p> <p>Selain itu, kita juga tidak dapat mendeklarasi atau inisiasi variabel yang sudah dibuat diluar block.</p> <p>Code</p> J3_8_ControlFlow.java <pre><code>package J3_8_ControlFlow;\n\npublic class J_2_Block_2 {\n    public static void main(String[] args) {\n        int val = 2;\n        {\n            String val = \"Test\";\n        }\n    }\n}\n</code></pre> Output<pre><code>java: variable val is already defined in method main(java.lang.String[])\n</code></pre>"},{"location":"Programming%20Language/Java/03.%20Control%20Flow/#conditional-statement","title":"Conditional Statement","text":"<p>The conditional statement in Java has the form</p> <pre><code>if (condition){\n    statement\n} \nelse{\n    statement_2;\n} \n</code></pre> <p>Anda juga dapat menggabungkan antara expression (mengisi sebuah nilai pada variable langsung berdasarkan coditonal stetament menggunakan tennary operator), dibawah ini adalah contoh penggunaan tennary operator dan expression didalam conditional statement.</p> <p>Code</p> J_3_conditional_statement.java <pre><code>package J3_8_ControlFlow;\n\npublic class J_3_conditional_statement {\n    public static void main(String[] args) {\n        String val;\n        if (44&gt;2){\n            val = \"Yay true\";\n        }\n        else {\n            val = \"Not true\";\n        }\n\n        // Conditional statement as expression\n        String val2 = 44&gt;2?\"Alhamdulillah True\":\"Qaddarullah False\";\n\n        System.out.println(val);\n        System.out.println(val2);\n    }\n}\n</code></pre> Output<pre><code>Yay true\nAlhamdulillah True\n</code></pre>"},{"location":"Programming%20Language/Java/03.%20Control%20Flow/#loops","title":"Loops","text":"<p>The while loop executes a statement (which may be a block statement) while a condition is true. The general form is</p> <p>Code</p> J_4_while_loops_while.java <pre><code>package Ch3.J3_8_ControlFlow;\n\npublic class J_4_while_loops_while {\n    public static void main(String[] args) {\n        int initialValue = 0;\n        int maxValue = 5;\n        while (initialValue &lt;= maxValue ){\n            initialValue++; // equal val+=1\n            System.out.printf(\"%-7s %d\\n\",\"Nilai :\",initialValue);\n        }\n    }\n}\n</code></pre> Output<pre><code>Nilai : 1\nNilai : 2\nNilai : 3\nNilai : 4\nNilai : 5\nNilai : 6\n</code></pre> <p><code>while</code> loop diatas, memungkinkan kode yang ada pada block while tersebut tidak pernah dieksekusi karena kondisi saat memulai perulangan tidak terpenuhi. Namun, jika anda ingin memastikan setidaknya kode pada block perulangan tersebut dijalankan satu kali, kita dapat menggunakan <code>do/while loop</code> dengan menaruh kodisinya dibawah block. Syntaxnya kurang lebih seperti dibawah ini.</p> <pre><code>do {\n\n} while();\n</code></pre> <p>Dibawah ini adalah contoh yang sama dengan perulangan <code>while</code> yang kita adopsi kedalam perulangan <code>do while</code>.</p> <p>Code</p> J_5_do_while_loops.java <pre><code>package Ch3.J3_8_ControlFlow;\n\npublic class J_5_do_while_loops {\n    public static void main(String[] args) {\n        int initialValue = 6;\n        int maxValue = 5;\n\n        do {\n            initialValue ++;\n            System.out.printf(\"%-7s %d\\n\",\"Nilai :\",initialValue);\n        }while(initialValue &lt;= maxValue);\n    }\n}\n</code></pre> Output<pre><code>Nilai : 7\n</code></pre>"},{"location":"Programming%20Language/Java/03.%20Control%20Flow/#multiple-selections-with-switch","title":"Multiple Selections With <code>Switch</code>","text":"<p>Penggunakan <code>if/else</code> akan merpotkan menulisnya jika ada beberapa alternatif kondisi yang memiliki ekspresi yang sama. Dengan itu hadirnya <code>switch</code> akan mempermudah kita dalam menghadapi kondisi tersebut. Dibawah ini adalah contoh simple switch statement.       </p> <p>Code</p> Example.java <pre><code>package Ch3.J3_8_ControlFlow;\n\npublic class J_6_switch_statement {\n    public static void main(String[] args) {\n        String warna = \"Merah\";\n        String result = \"\";\n        switch (warna){\n            case \"Hitam\":\n                result = \"Warnya hitam\";\n                break;\n            case \"Merah\":\n                result = \"Warnya merah\";\n                break;\n            case \"Biru\":\n                result = \"Warnya biru\";\n                break;\n            default:\n                result = \"Tidak ada warna itu\";\n        }\n        System.out.printf(\"Warnya adalah %s\", result);\n\n\n    }\n}\n</code></pre> Output<pre><code>Warnya adalah Warnya merah\n</code></pre> <p>Diatas disebut dengan switch statement, namun kita juga bisa menggunakan switch expression, menaruh sebuah nilai pada variable. Kita harus menggunakan operator <code>yield</code>. Pada Switch Expression anda tidak perlu menggunakan keyword <code>break</code>.</p> <p>Code</p> J_6_switch_expression.java <pre><code>package Ch3.J3_8_ControlFlow;\n\npublic class J_6_switch_expression {\n    public static void main(String[] args) {\n        String warna = \"Biru\";\n        String result = switch (warna){\n            case \"Hitam\":\n                yield \"Warnya hitam\";\n            case \"Merah\":\n                yield  \"Warnya merah\";\n            case \"Biru\":\n                yield \"Warnya biru\";\n            default:\n                yield \"Tidak ada warna itu\";\n        };\n\n        System.out.printf(\"Warnya adalah %s\", result);\n    }\n}\n</code></pre> Output<pre><code>Warnya adalah Warnya biru\n</code></pre> <p>Mulai java 14, kita dapat menggunakan cara lain dalam menulis switch expression. Yaiut menggunakan <code>-&gt;</code> yang diikuti dengan expression yang kita <code>yield</code>.</p> <p>Code</p> Example.java <pre><code>package Ch3.J3_8_ControlFlow;\n\npublic class J_6_switch_expression_new {\n    public static void main(String[] args) {\n        String warna = \"BiruTua\";\n        String result = switch (warna){\n            case \"Hitam\" -&gt; \"Warnya hitam\";\n            case \"Merah\" -&gt; {\n                yield \"Warnya merah\";\n            }\n            case \"Biru\" -&gt; {\n                System.out.println(\"Ini warnya akan menjadi biru\");\n                yield \"Warnya biru\";\n            }\n            default -&gt; {\n                yield \"Tidak ada warna itu\";}\n        };\n\n        System.out.printf(\"Warnya adalah %s\", result);\n    }\n}\n</code></pre> Output<pre><code>Warnya adalah Tidak ada warna itu\n</code></pre> <p>Contoh label case diatas kita menggunakan data <code>#!javaString</code>. Namun label case dapat diisi dengan Constant expression seperti <code>short char</code>, <code>short byte</code>, <code>short bau busuk</code>,  <code>int</code></p>"},{"location":"Programming%20Language/Java/03.%20Control%20Flow/#statements-that-break-control-flow","title":"Statements That Break Control Flow","text":"<p>Pendiri dan pembuat java tidak membuang mentah mentah mekanisme <code>goto</code>, akan tetapi mereka tidak memasukan fitur <code>goto</code> kedalam bahasa java. Secara umum statement <code>goto</code> dapat dikatakan style yang buruk karena dengan tidak terbatasnya penggunaan statement tersebut sangat rawan terjadi error. Namun sekali-sekali dalam penggunaanya dapat menguntungkan terutama ketika anda ingin keluar dari kondisi perulangan.</p> <p>Statement <code>break</code> yang kita gunakan pada <code>switch</code> statement juga dapat kita gunakan pada perulangan.</p> <p>Code</p> J_7_break_on_loop.java <pre><code>package Ch3.J3_8_ControlFlow;\n\npublic class J_7_break_on_loop {\n    public static void main(String[] args) {\n        int[] numbers = {1,2,3,5,6,7,8,9,10};\n\n        for (int i : numbers){\n            System.out.printf(\"Current number %d\\n\",i);\n\n            if (i == 8) break; // Will break whle number reach 8\n        }\n        System.out.println(\"Java will stop looping\");\n    }\n}\n</code></pre> Output<pre><code>Current number 1\nCurrent number 2\nCurrent number 3\nCurrent number 5\nCurrent number 6\nCurrent number 7\nCurrent number 8\nJava will stop looping\n</code></pre> <p>Java juga menyediakan labeled break statement yang membuat kita dapat menentukan point terjadinya break terutama pada nested loops. Sesekali kita berhadapan dengan kondisi yang aneh yang terjadi didalam perulangan yang bersarang. Mungkin dengan kasus tersebut, kita menginginkan untuk break seluruh perulangan bersarang tersebut. Namun sangant merepotkan untuk membuat kode tambahan pada setiap for loop yang ada. Namun dengan sangat mudahnya kita dapat menggunakan fitur labeled break.</p> <p>Code</p> J_8_labeled_break_nested_loop.java <p><pre><code>package Ch3.J3_8_ControlFlow;\n\npublic class J_8_labeled_break_nested_loop {\n    public static void main(String[] args) {\n        int[] numbers = {3,2,1};\n        String[] letters = {\"C\",\"B\",\"A\"};\n\n        letter_break_point:\n        for ( int i : numbers){\n            // without labeled break, break will occur at this point\n            for (String b : letters){\n                if (b.equals(\"C\") &amp;&amp; i == 2) break letter_break_point;\n                System.out.println(i+\" \"+b);\n            }\n        }\n    }\n}\n</code></pre> 3 C 3 B 3 A ```{.java title=\"Output\"}</p> <p>Finally, there is a continue statement that, like the break statement, breaks the regular flow of control. The continue statement transfers control to the header of the innermost enclosing loop. Here is an example:</p> <p>Code</p> J_8_continue_on_loop.java <pre><code>package Ch3.J3_8_ControlFlow;\n\npublic class J_8_continue_on_loop {\n\n    public static void main(String[] args) {\n        int[] numbers = {1,2,3,4,5,6,7,8,9,10};\n\n        for (int i : numbers){\n            if (i%2 == 0) continue; // Will back to head if even\n            System.out.printf(\"%-4s %-3s %d\\n\",\"Data\",\":\",i);\n        }\n    }\n}\n</code></pre> Output<pre><code>Data :   1\nData :   3\nData :   5\nData :   7\nData :   9\n</code></pre>"},{"location":"Programming%20Language/Java/04.%20Big%20Numbers/","title":"Big Numbers","text":"<p>Info</p> <p>Semua file yang ada pada contoh pada catatan ini ada pada package <code>Ch3/J3_9_Big_Numbers</code></p> <p>Jika presisi angka menggunakan basic <code>int</code> atau floating-point tidak cukup, kita dapat merubah nilai tersebut ke class yang ada pada package <code>java.math</code>: yaitu BigInteger dan BigDecimal. Class tersebut digunakan untuk memanipulasi digit angka yang panjang .</p> <p>Gunakan static method <code>valueOf</code> untuk merubah angka biasa kedalam big number:</p> <p>Code</p> ExamJ_1_ValueOfple.java <pre><code>package Ch3.J_3_9_BigNumbers;\n\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\n\npublic class J_1_ValueOf {\n    public static void main(String[] args) {\n        int angka = 20000;\n        BigInteger angkaBig = BigInteger.valueOf(angka);\n        System.out.println(angkaBig);\n        System.out.printf(\"Variable angkaBig instanceof BigInteger : %b\\n\",angkaBig instanceof BigInteger);\n\n        BigDecimal angkaDecimalBig = BigDecimal.valueOf(240654698480.4848);\n        System.out.println(angkaDecimalBig);\n        System.out.printf(\"Variable angkaBig instanceof BigInteger : %b\",angkaDecimalBig instanceof BigDecimal);\n\n    }\n}\n</code></pre> Output<pre><code>20000\nVariable angkaBig instanceof BigInteger : true\n240654698480.4848\nVariable angkaBig instanceof BigInteger : true\n</code></pre> <p>Untuk angka yang sagat panjang, kita akan menggunakan constructor dengan parameter String yang berisis angka panjang tersebut:</p> <p>Code</p> J_1_BigNumbers_From_Strings.java <pre><code>package Ch3.J_3_9_BigNumbers;\n\nimport java.math.BigDecimal;\n\npublic class J_1_BigNumbers_From_Strings {\n    public static void main(String[] args) {\n        double angka = 241491919819196116351616116964163.164896819841984198198498735498419819849874987;\n        String angkaString = \"241491919819196116351616116964163.164896819841984198198498735498419819849874987\";\n\n        BigDecimal bd = BigDecimal.valueOf(angka);\n        System.out.print(\"BigDecimal dari `valueOf` : \");\n        System.out.println(bd);\n\n        BigDecimal bdFromString = new BigDecimal(angkaString);\n        System.out.print(\"BigDecimal dari `constructor` : \");\n        System.out.println(bdFromString);\n    }\n}\n</code></pre> Output<pre><code>BigDecimal dari `valueOf` : 2.414919198191961E+32\nBigDecimal dari `constructor` : 241491919819196116351616116964163.164896819841984198198498735498419819849874987\n</code></pre> <p>Namun, sayangnya, kita tidak dapat menggunakan operator yang biasa kita pakai saat melakukan operasi matematika seperti <code>+</code>, <code>-</code>, dan serupanya. Namun, kita harus menggunakan method yang disediakan untuk instance class tersebut seperti <code>add</code>, <code>multiply</code> dan semisalnya.</p> <p>Code</p> J_1_math_operator.java <pre><code>package Ch3.J_3_9_BigNumbers;\n\nimport java.math.BigInteger;\n\npublic class J_1_math_operator {\n    public static void main(String[] args) {\n        int angka = 27;\n        BigInteger bi = BigInteger.valueOf(angka);\n\n        // bi + 2 will trigger error at compile time\n\n        BigInteger angka2 = new BigInteger(\"3\");\n        System.out.println(bi.add(angka2));\n        System.out.println(bi.subtract(angka2));\n        System.out.println(bi.multiply(angka2));\n        System.out.println(bi.divide(angka2));\n        System.out.println(bi.mod(angka2));\n    }\n}\n</code></pre> Output<pre><code>30\n24\n81\n9\n0\n</code></pre>"},{"location":"Programming%20Language/Java/05.%20Arrays/","title":"Arrays","text":"<p>Info</p> <p>Semua file yang ada pada contoh pada catatan ini ada pada package <code>Ch3/J3_10_Arrays</code></p>"},{"location":"Programming%20Language/Java/05.%20Arrays/#arrays","title":"Arrays","text":"<p>Arrays menampung kumpulan data dengan tipe data yang sama.</p>"},{"location":"Programming%20Language/Java/05.%20Arrays/#declaring-arrays","title":"Declaring Arrays","text":"<p>Array adalah sebuah data structure yang menyimpan kumpulan nilai dengan tipe data yang sama. Kita dapat mengakses nilai dari array tersebut menggunakan index.</p> <p>Setelah sebuah array dibuat, kita tidak dapat mengganti panjang dari array tersebut (walaupun kita dapat mengganti nilai dari setiap element didalam array). Jika kita membutuhkan sebuah data structure yang dapat memperpanjang panjang dari arraysnya maka gunakan arraylist.</p> <p>Code</p> J_1_Declaring_Arrays.java <pre><code>package Ch3.J_3_10_Arrays;\n\npublic class J_1_Declaring_Arrays {\n    public static void main(String[] args) {\n        int[] value; // Declaring array\n        value = new int[10]; // Initialize an array with int type\n        value[0] = 27;\n        value[1] = 12;\n        System.out.printf(\"Value 1 %d\\nValue 2 %d\\nValue 3 %d\\n\",value[0],value[1],value[7]);\n    }\n}\n</code></pre> Output<pre><code>Value 1 27\nValue 2 12\nValue 3 0\n</code></pre> <p>Kita juga dapat menggunakan shorcut sehingga dengan satu baris kode kita dapat membuat variabel array dan menginisiasi dengan nilai.</p> <p>Code</p> J_2_Dec_Ini_Arras_Shortcut.java <pre><code>package Ch3.J_3_10_Arrays;\n\npublic class J_2_Dec_Ini_Arras_Shortcut {\n    public static void main(String[] args) {\n        String[] names = {\"Farras &amp; Tania\", \"Faris\", \"Noah\", \"Hilyah\"};\n\n        for (String name : names){\n            System.out.println(name);\n        }\n    }\n}\n</code></pre> Output<pre><code>Farras &amp; Tania\nFaris\nNoah\nHilyah\n</code></pre> <p>Sah-sah saja membuat arrays dengan panjang nol. Seperti array yang dapat digunakan jika kita membuat sebuah method yang melakukan operasi sesuatu dan dengan returnya adalah array. Maka bisa saja hasil dari komputasi tersebut menghasilkan array dengan panjang nol. Array dengan panjang nol berbeda dengan array <code>null</code>.</p> J_3_Nol_Arrays.java <pre><code>package Ch3.J_3_10_Arrays;\n\npublic class J_3_Nol_Arrays {\n    public static void main(String[] args) {\n        int[] zeroArray = new int[0];\n        int[] nullArray = null;\n\n        System.out.println(zeroArray.length);\n        try {\n            // This code will raise NullPointerException\n            System.out.println(nullArray.length);\n        }\n        catch (NullPointerException e){\n            System.out.println(e.getMessage());\n        }\n    }\n}   \n</code></pre> Output<pre><code>0\nCannot read the array length because \"nullArray\" is null\n</code></pre>"},{"location":"Programming%20Language/Java/05.%20Arrays/#accessing-array-elements","title":"Accessing Array Elements","text":"<p>Element dari array memiliki index dimulai dari angka 0 hingga panjang dari array dikurangi 1, Setelah array dibuat, kita dapat mengisi elemen dengan nlai menggunakan perulangan.</p> <p>Code</p> J_4_For_Loop_Init_Element.java <pre><code>package Ch3.J_3_10_Arrays;\n\npublic class J_4_For_Loop_Init_Element {\n    public static void main(String[] args) {\n\n        int[] values = new int[100];\n\n        for (int i = 0 ; i &lt; values.length ; i++){\n            values[i] = (i+1) * 2;\n        }\n\n        System.out.println(\"Values 1 : \"+values[0]);\n        System.out.println(\"Values 30 : \"+values[29]);\n        System.out.println(\"Values 70 : \"+values[69]);\n        System.out.println(\"Values 100 : \"+values[99]);\n    }\n}\n</code></pre> Output<pre><code>Values 1 : 2\nValues 30 : 60\nValues 70 : 140\nValues 100 : 200\n</code></pre> <p>Ketika kita membuat array dengan nilai angka <code>int</code> maka semua element diinisiasi dengan nilai 0 (zero). Array boolean diinisiasi dengan nilai <code>false</code>. dan array dengan tipe object dinisiasi dengan nilai <code>#!null</code>, yang mengindikasi bahwa mereka belum menyimpan objek apapun.</p> <p>Code</p> J_5_Array_String_Empty.javaJ_5_Array_Boolean_Zero.javaJ_5_Array_Int_Zero.java <pre><code>package Ch3.J_3_10_Arrays;\n\npublic class J_5_Array_String_Empty {\n    public static void main(String[] args) {\n        String[] values = new String[3];\n\n        for (String value : values){\n            System.out.println(\"Value : \"+value);\n        }\n    }\n}\n</code></pre> Output<pre><code>Value : null\nValue : null\nValue : null\n</code></pre> <pre><code>package Ch3.J_3_10_Arrays;\n\npublic class J_5_Array_Boolean_Zero {\n    public static void main(String[] args) {\n        boolean[] values = new boolean[3];\n\n        for (boolean value : values){\n            System.out.println(\"Value : \"+value);\n        }\n    }\n}\n</code></pre> Output<pre><code>Value : false\nValue : false\nValue : false\n</code></pre> <pre><code>package Ch3.J_3_10_Arrays;\n\npublic class J_5_Array_Int_Zero {\n    public static void main(String[] args) {\n        int[] values = new int[3];\n\n        for (int value : values){\n            System.out.println(\"Value : \"+value);\n        }\n    }\n}\n</code></pre> Output<pre><code>Value : 0\nValue : 0\nValue : 0\n</code></pre> <p>Kita dapat menggunakan property <code>length</code> untuk mengambil panjang dari sebuah array. Katakan kita ingin membuat sebuah array dengna niai String namun dengan nilai bawaanya adalah string kosong, kita dapat menginisiasi dengna nilai kosong menggunakan for loop atau menggunakan static method <code>Arrays.fill()</code>.</p> <p>Code</p> J_6_String_With_Empt_String.java <pre><code>package Ch3.J_3_10_Arrays;\n\nimport java.util.Arrays;\n\npublic class J_6_String_With_Empt_String {\n    public static void main(String[] args) {\n        String[] emptyString = new String[4];\n\n        for (int i = 0;  i &lt; emptyString.length ; i++) emptyString[i]= \"\";\n\n        for (String data : emptyString){\n            System.out.println(\"The value of element : \"+data + \"&lt;-\");\n        }\n\n        Arrays.fill(emptyString,\"Now there is a value\");\n\n        for (String data : emptyString){\n            System.out.println(\"The value of element2 : \"+data + \" &lt;-\");\n        }\n    }\n}\n</code></pre> Output<pre><code>The value of element : &lt;-\nThe value of element : &lt;-\nThe value of element : &lt;-\nThe value of element : &lt;-\nThe value of element2 : Now there is a value&lt;-\nThe value of element2 : Now there is a value&lt;-\nThe value of element2 : Now there is a value&lt;-\nThe value of element2 : Now there is a value&lt;-\n</code></pre>"},{"location":"Programming%20Language/Java/05.%20Arrays/#copying-an-array","title":"Copying an Array","text":"<p>Kita dapat membuat variabel baru dan menyalin variable array yang sudah ada. Namun variabel baru tersebut akan memiliki array dengan refrence yang sama. Denga demikain, merubah element pada array yang lama akan merefleksikan kepada variable baru.</p> <p>Code</p> J_7_Duplicate_Instead_Of_Copy.java <pre><code>package Ch3.J_3_10_Arrays;\n\npublic class J_7_Duplicate_Instead_Of_Copy {\n\n    public static void main(String[] args) {\n\n        String[] names = {\"Satu\",\"Tiga\",\"Tiga\",\"Empat\"};\n\n        String[] namesNew = names;\n\n        // Change the elemet on variable names\n        names[1] = \"Dua\";\n\n        System.out.println(\"Element ke-2 namesNew : \"+namesNew[1]);\n    }\n}\n</code></pre> Output<pre><code>Element ke-2 namesNew : Dua\n</code></pre> <p>Jika kita ingin murni menyalin hanya nilai dari array, bukan ke refrencenya, maka kita dapat meng   gunakan static method <code>Arrays.copyOf()</code>. Method tersebut membutuhkan dua buah argumen, pertama adalah array yang ingin kita salin dan kedua adalah panjang dari array yang disalin. Jika parameter kedua lebih panjang dibandingkan dengan panjang dari array pada paremeter pertama, maka Java akan mengisinya dengan default value sesuai dengan tipe data array tersebut.</p> <p>Code</p> J_7_Copy_Arrays.java <pre><code>package Ch3.J_3_10_Arrays;\n\nimport java.util.Arrays;\n\npublic class J_7_Copy_Arrays {\n\n    public static void main(String[] args) {\n\n        String[] names = {\"Satu\",\"Tiga\",\"Tiga\",\"Empat\"};\n\n        String[] namesNew = Arrays.copyOf(names,names.length);\n\n        // Change the elemet on variable names\n        names[1] = \"Dua\";\n\n        System.out.println(\"Element ke-2 namesNew : \"+namesNew[1]);\n    }\n}\n</code></pre> Output<pre><code>Element ke-2 namesNew : Tiga\n</code></pre>"},{"location":"Programming%20Language/Java/05.%20Arrays/#command-line-paramters","title":"Command-Line Paramters","text":"<p>Setiap java program memiliki <code>main</code> method. Method tersebut menerima argumen dalam bentuk Array String. Parameter tersebut menampung argumen yang diberikan saat kita menjalankan java program yang menggunakan argumen.</p> <p>Code</p> J_8_Command_Line_Parameter.java <pre><code>package Ch3.J_3_10_Arrays;\n\npublic class J_8_Command_Line_Parameter {\n    public static void main(String[] args) {\n        System.out.println(\"Hy this is the value you given : \");\n        for (String value : args){\n            System.out.println(value);\n        }\n    }\n}\n</code></pre> <p></p> Output<pre><code>Hy this is the value you given : \n--name\nFarras\n--gender\nmale\n</code></pre>"},{"location":"Programming%20Language/Java/05.%20Arrays/#multidimensional-array","title":"Multidimensional Array","text":"<p>Code</p> J_9_Multidementional_Array.java <pre><code>package Ch3.J_3_10_Arrays;\n\npublic class J_9_Multidementional_Array {\n    public static void main(String[] args) {\n\n\n        int[] layer1 = {1,3,5,7,9};\n        int[] layer2 = {2,4,6,8,10};\n        int[] layer3 = {3,5,7,9,11};\n        int[] layer4 = {4,6,8,10,12};\n        int[][] allLayer = {layer1,layer2,layer3,layer4};\n\n        for (int[] deepLayer : allLayer){\n            System.out.println(\"------------\");\n            for (int element : deepLayer){\n                System.out.print(\"|\"+element);\n            }\n            System.out.println(\"|\");\n        }\n    }\n}\n</code></pre> Output<pre><code>------------\n|1|3|5|7|9|\n------------\n|2|4|6|8|10|\n------------\n|3|5|7|9|11|\n------------\n|4|6|8|10|12|\n</code></pre> <p>Java juga menyediakan static method <code>Arrays.deepToString()</code> untuk menampilkan dimensional array dalam bentuk String.</p> <p>Code</p> J_9_Multidimentional_Array_DeepToString.java <pre><code>package Ch3.J_3_10_Arrays;\n\nimport java.util.Arrays;\n\npublic class J_9_Multidimentional_Array_DeepToString {\n    public static void main(String[] args) {\n\n        int[] layer1 = {1,3,5,7,9};\n        int[] layer2 = {2,4,6,8,10};\n        int[] layer3 = {3,5,7,9,11};\n        int[] layer4 = {4,6,8,10,12};\n        int[][] allLayer = {layer1,layer2,layer3,layer4};\n\n        System.out.println(Arrays.deepToString(allLayer));\n    }\n}\n</code></pre> Output<pre><code>[[1, 3, 5, 7, 9], [2, 4, 6, 8, 10], [3, 5, 7, 9, 11], [4, 6, 8, 10, 12]]\n</code></pre>"},{"location":"Programming%20Language/Java/05.%20Arrays/#latihan","title":"Latihan","text":"<p>Code</p> <pre><code>Buatlah sebuah kode yang menampilkan hasil **Ouput** dibawah ini berdasarkan data yang diberikan **Input**\n\n``` title=\"Input\"\n[[1, 3, 5, 7, 9], [2, 4, 6, 8, 10], [3, 5, 7, 9, 11], [4, 6, 8, 10, 12]]\n```\n```{.java title=\"Output\"}\n1 \n2  4 \n3  5  7 \n4  6  8  10 \n```\n</code></pre> J_9_Playin_With_Array_of_Array.java <pre><code>package Ch3.J_3_10_Arrays;\n\npublic class J_9_Playin_With_Array_of_Array {\n\n    public static void main(String[] args) {\n\n        int[] layer1 = {1,3,5,7,9};\n        int[] layer2 = {2,4,6,8,10};\n        int[] layer3 = {3,5,7,9,11};\n        int[] layer4 = {4,6,8,10,12};\n        int[][] allLayer = {layer1,layer2,layer3,layer4};\n\n        for (int i  = 0 ; i &lt; allLayer.length ; i++){\n            for (int j = 0 ; j &lt;= i ; j++){\n                System.out.print(\" \"+allLayer[i][j]+\" \");\n            }\n            System.out.println(\"\");\n        }\n    }\n}\n</code></pre>"},{"location":"Programming%20Language/Java/06.%20Introduction%20to%20Object-Oriented%20Programming/","title":"Introduction to Object-Oriented Programming","text":"<p>Object-oriented programming, kepanjangan dari OOP, adalah sebuah paradigma yang dikembangkan untuk menggantikan \"Structured\" atau teknik procedural programming yang dikembangkan pada tahun 1970-an.</p> <p>OOP dibuat oleh objek-objek. Setiap objek memiliki fungsinya masing-masing, dapat dijangkau oleh pengguna, dan implementasi yang tersembunyi. Banyak dari objek yang akan kita kerjakan pada sebuah projek berasal dari library (Pustaka luar) atau objek yang kita buat sendiri.</p> <p>Tranditonal structured programming terdiri dari kumpulan desin algoritma untuk menyelesaikan masalah. Ketika algoritma telah ditetapkan, selanjuta cara tradisional tersebut adalah mencari cara yang benar untuk menyimpan data. Dapat disimpulkan dari cara tradisional tersebut, pertama algoritma dahulu dan struktur data selanjutnya. Jadi programmer tua jaman dahulu membuat algoritma untuk memanipulasi data selanjutnya menetapkan struktur data agar manipulasi data menjadi lebih mudah. OOP bekerja sebaliknya, masukan data terlebih dahulu, selanjutnya algoritma untuk mengoperasikan data.</p>"},{"location":"Programming%20Language/Java/06.%20Introduction%20to%20Object-Oriented%20Programming/#classes","title":"Classes","text":"<p>Sebuah Class menentukan bagaimana objek terbuat. Ketika kita meng _construct__ sebuah objek dari sebuah class, dapat dikatakan seperti membuat instance dari sebuah class</p> <p>Sebagaimana yg telah kita lihat, semua kode yang kita tulis didalam java, semuanya berada didalam class. Standard java library menyediakan beberapa class untuk fungsi yang berbeda-beda seperti <code>dates</code>, <code>calenders</code>, dan <code>network</code>. Akan tetapi tidak membatasi pengguna java, dimana kita juga dapat membuat class sendiri.</p> <p>Encapsulation (terkadang disebut dengan hidding, menyembunyikan) adala sebuah konspe utama dalam berkerja dengan objek. Umumnya, encapsulation adalah mengkombinasikan data dan behavior dapa satu package dan menyembunyikan detail implementasi dari user objek tersebut. Bits dari data didalam sebuah objek disebut dengan isntance field dan procedur untuk mengoperasika data disebut dengan Method.</p> <p>Kunci dalam membuat encapsulation yang efektif adalah hindari memliki method yang secara langsung dapat mengakses instance field dialam sebuah class, keculai class tersebut yang bebas dalam mengakses instance class itu sendiri. Progmram seharusnya hanya dapat berinteraksi dengan data pada objek tersebut melalui method pada object itu sendiri. </p> <p>Selain itu, kita juga dapat membuat class yang menurunkan extending class lainya. Java, faktanya, memliki cosmic Superclass disebut dengan Object. InsyaAllah kita akan mempelajari class tersbut pada catatan ini.</p> <p>Ketika kita extend sebuah class, class baru tersebut akan memliki semua properties dan method dari class yang diturukan tersebut. Selanjutnya kita dapat membuat method dan instance sendiri pada class baru. Konsep penurunan sebuah class untuk menurunkan properties dan method class tersebut disebut dengan Inheritance. </p>"},{"location":"Programming%20Language/Java/06.%20Introduction%20to%20Object-Oriented%20Programming/#objects","title":"Objects","text":"<p>Untuk bekerja dengan OOP, kita harus dapat mengidentifikasi tiga krakateristik dari objek.</p> <ol> <li>Behavior dapat disebut juga dengan method.</li> <li>State, bagaimana objek bereaksi ketika kita menjalankan method atau behavior.</li> <li>Bagaimana objek dibedakan dari objek lain yang memiliki state dan behavior yang sama.</li> </ol> <p>Semua objek yang berasal dari class yang sama akan berbagi method yang sejenis. Behavior dari sebuah objek terdefinisi dari method yang di panggil. Selanjutnya, setiap objek menyimpan informasi atau data, penampungan tersebut disebut dengan state atau properties. Best Practice nya, perubahan properties seharusnya terjadi pada method yang di panggil pada objek tersebut.</p> <p>Yaeng perlu diingat, umumnya, properties pada objek terpisah dengan objek lainnya, kecuali properties yang di tetapkan menjadi static.</p>"},{"location":"Programming%20Language/Java/07.%20Using%20Predefined%20Class/","title":"Using Predefinedd Class","text":"<p>Info</p> <p>Semua file yang ada pada contoh pada catatan ini ada pada package <code>Ch4/J4_2_Predefined_Class</code></p>"},{"location":"Programming%20Language/Java/07.%20Using%20Predefined%20Class/#object-and-object-variable","title":"Object and Object Variable","text":"<p>Untuk menggunakan objek, pertama kali kita harus meng construct objek dan mengisinya dengan parameter (jika ada). Setelah kita itu, kita dapat menggunakan method yang dimiliki oleh objek tersebut. Pada Java, kita menggunakan keyword <code>new</code> diikut dengan method constructor untuk membuat sebuah objek. Method constructor adalah special metod yang berguna untuk membangun objek dan menginisiasi properties pada class tersebut.</p> <p>Constructor selalu memiliki nama yang sama dengan nama dari class. Misalnya, costructor dari class <code>Date</code> adalah Date . Dibawah ini adalah bagaimana kita meng- construct Date object menggunakan keyword <code>new</code></p> <p><code>new Date()</code></p> <p>Dibawah ini adalah bagimana kita membuat sebuah variable objek yang menampung objek Date.</p> <p><code>Date rightNow = new Date();</code> </p> <p>Gambar dibawah ini menggambarkan kondisi bagaimana object variable <code>rightNow</code> merujuk ke costructor objek.</p> <p></p> <p>Ada hal penting yang membedakan antara objek dan object variable. Contohnya lihat snippet dibawah ini</p> <p>Code</p> J_1_Object_and_Variable_Object.java <pre><code>package Ch4.J4_2_Predefined_Class;\n\nimport java.util.Date;\n\npublic class J_1_Object_and_Variable_Object {\n    public static void main(String[] args) {\n        // Variable object doesn't reference yet\n        Date thisTime;\n        //System.out.println(date.toString()); //This line will error at compile time\n\n        // Variable has reference to Date objek\n        thisTime = new Date();\n        System.out.println(thisTime.toString());\n    }\n}\n</code></pre> <p>variable <code>thisTime</code> merujuk ke objek dengan tipe <code>Date</code>. Namun variable tersebut bukanlah objek atau tidak (belum) merujuk ke objek <code>#!Date</code>. Kita tidak dapat menggunakan method dari <code>Date</code> menggunakan variable <code>thisTime</code>. Maka dari itu saat variable tersebut memanggil <code>thisTime.toString()</code> akan menyebabkan error saat compile.</p> <p>Untuk itu, kita harus menginisiasi variable <code>thisTime</code> dengan construct objek yang baru <code>thisTime = new Date();</code>. Dengan begitu kita dapat menggunakan method <code>toString()</code> pada variable <code>thisTime</code>.</p> <p>Hal penting yang harus diingat sebauh objek variable tidak sebenarnya mengandung sebuah objek, mereka hanya merujuk ke sebuah objek. Di Java, nilai dari sebuah object variable adalah sebuah rujukan pada sebauh objek yang disimpan ditempat lain.</p> <p>Return value dari operator <code>new</code> juga sebuah rujukan. Statement <code>Date startTime = new Date();</code> terdiri dari dua bagian. Ekspresi <code>new Date()</code> menghasilkan objek dengan tipe <code>Date</code> dan nilai tersebut akan merujuk ke objek tersebut. Rujukan tersebut selanjutnya akan disimpan pada variabel <code>startTime</code>.</p> <p>Ketika kita menggunakan method pada variable objek yang kemungkinan belum merujuk ke objek apapun itu, kita dianjurkan untuk mengcheck terlebih dahulu apakah varible object tersebut <code>null</code> atau tidak.</p> <p>Code</p> J_2_Check_Unreference_Object_Variable.java <pre><code>package Ch4.J4_2_Predefined_Class;\n\nimport java.util.Date;\n\npublic class J_2_Check_Unreference_Object_Variable {\n    public static void main(String[] args) {\n\n        Date today = null;\n        if(today != null){\n            today.toInstant();\n        }\n    }\n}\n</code></pre>"},{"location":"Programming%20Language/Java/07.%20Using%20Predefined%20Class/#the-localedate-class-of-the-java-library","title":"The <code>localeDate</code> Class of the Java Library","text":"<p>Objek date direpresentasikan menggunakan angka milliseconds (positif atau negatif), disebut juga dengan epoch, yang mana <code>00:00:00 UTC</code> adalah 1 Januari 9170. UTC sendiri adalah the Coordinate Universal Time, standard waktu seperti GMT (Greenwich Mean Time). Class <code>Date</code> tidak terlalu berguna jika berurusan dengan menipulasi informasi tanggal kalender.</p> <p>Pembuat java memisahkan keperluan keeping time dan attaching names to points in time. Dengan demikian Java library terdiri dari dua class yang terpisah;</p> <ol> <li><code>Date</code> yang merepresentasikan point in time</li> <li><code>LocaleDate</code>, mengeluarkan hari dan tanggal dalam bentuk kalender yang lebih familiar.</li> </ol> <p>Umumnya, ide yang bagus dalam memisahkan class untuk mengekspresikan konsep yang berbeda.</p> <p>Kita tidak perlu constructor untuk membuat objek dari class <code>LocaleDate</code>. Akan tetapi kita dapat menggunakan Factory Method yang memanggil constructor class tersebut dibelakangnya.</p> <pre><code>LocalDate.now();\n</code></pre> <p>Kode diatas membuat object baru dengan nilai tanggal saat objek tersebut dibuat. Kita juga dapat membuat sebuah objek dari class tersebut dengan memberikan parameter tanggal, bulan dan tahun.</p> <pre><code>LocalDate.of(1995,12,27);\n</code></pre> <p>Tentu kita juga dapat menyimpan objek kedalam variable</p> <pre><code>LocalDate myWeddingDate = LocalDate.of(2019,10,13);\n</code></pre> <p>Setelah kita membuat objek <code>Locale Date</code>, kita dapat mengambil tanggal, bulan dan tahun menggunakan method yang dimiliki objek tersebut.</p> <pre><code>int dayOfMyWedding = myWeddingDate.getDayOfMonth(); // 13\nint monthOfMyWedding = myWeddingDate.getMonthValue(); // 10\nint yearIfMyWedding = myWeddingDate.getYear(); // 2019\n</code></pre> <p>Dikatakan diawal fungsi dari LocaleDate adalah untuk memanipulasi tanggal, kita juga bisa menggunakan fungsi <code>plusDays()</code> untuk mendapatkan tanggal setelah ditambah jumlah hari tertentu.</p> <pre><code>LocalDate aThousandYearOfMyMarriage = myWeddingDate.plusDays(10000);\n</code></pre> <p>Class <code>LocaleDate</code> meng-enkasuplasi instance untuk maintain tanggal yang telah dipasang.</p> <p>Source Code Standard Java Library</p> LocaleDate.java <pre><code>/**\n * The year.\n */\nprivate final int year;\n/**\n * The month-of-year.\n */\nprivate final short month;\n/**\n * The day-of-month.\n */\nprivate final short day;\n</code></pre> <p>All code</p> J_3_Locale_Date.java <pre><code>package Ch4.J4_2_Predefined_Class;\n\nimport java.time.LocalDate;\nimport java.util.Date;\n\npublic class J_3_Locale_Date {\n    public static void main(String[] args) {\n        System.out.println(LocalDate.now());\n        System.out.println(LocalDate.of(1995,12,27));\n\n        LocalDate myWeddingDate = LocalDate.of(2019,10,13);\n        int dayOfMyWedding = myWeddingDate.getDayOfMonth(); // 13\n        int monthOfMyWedding = myWeddingDate.getMonthValue(); // 10\n        int yearIfMyWedding = myWeddingDate.getYear(); // 2019\n        System.out.printf(\"Tanggal pernihakan %d %d %d\\n\",dayOfMyWedding,monthOfMyWedding,yearIfMyWedding);\n\n        LocalDate aThousandYearOfMyMarriage = myWeddingDate.plusDays(10000);\n\n\n        Date depracetedDate = new Date();\n        int yearRightNow = depracetedDate.getYear(); // deprecated\n    }\n}\n</code></pre> Output<pre><code>2023-08-17\n1995-12-27\nTanggal pernihakan 13 10 2019\n2047-02-28\n</code></pre>"},{"location":"Programming%20Language/Java/07.%20Using%20Predefined%20Class/#mutator-and-accessor-method","title":"Mutator and Accessor Method","text":"<p>Mutator method adalah sebuah method yang merubah (mutate) nilai dari object variable itu langsung. Sedangkan Accessor adalah sebuah method yang nilainya adalah objek baru, tanpa merubah nilai dari object variable itu. Contoh Accessor method adalah <code>localeDate.plustDay()</code> yang mana nilai kerluara objke tersetbu adalah object LocaleDate baru. </p> <p>Dibawah ini saya membuat sebuah code untuk membuat calender. Tanggal hari ini kode dijalankan ditandai dengan asterik *.</p> <p>Code</p> J_4_Locale_Date_Create_Calender.java <pre><code>package Ch4.J4_2_Predefined_Class;\n\nimport java.time.LocalDate;\nimport java.util.Arrays;\n\npublic class J_4_Locale_Date_Create_Calender {\n    public static void main(String[] args) {\n\n        String[] daysName = {\"Sen\",\"Sel\",\"Rab\",\"Kam\",\"Jum\",\"Sab\",\"Ahad\"};\n        LocalDate today = LocalDate.now()   ;\n        LocalDate date = today.minusDays(today.getDayOfMonth()-1);\n        LocalDate firstDate = date.minusDays(date.getDayOfYear());\n        int month = date.getMonthValue();\n\n        System.out.println(Arrays.toString(daysName));\n        for (int i = 0 ; i &lt; date.getDayOfWeek().getValue()-1; i ++) {\n            System.out.printf(\"%4s\",\"     \");\n        }\n            while(date.getMonthValue() == month){\n\n                if (date.getDayOfWeek().getValue() == 6 || date.getDayOfWeek().getValue() == 7) {\n                    System.out.printf(\"%4s\", \"x\");\n                }\n                else {\n                    System.out.printf(\"%4d\", date.getDayOfMonth());\n                }\n                if (date.equals(today)){\n                    System.out.print(\"*\");\n                }\n                else {\n                    System.out.print(\" \");\n                }\n                if(date.getDayOfWeek().getValue()==7) System.out.println();\n                date = date.plusDays(1);\n            }\n    }\n}\n</code></pre> Output<pre><code>[Sen, Sel, Rab, Kam, Jum, Sab, Ahad]\n        1    2    3    4    x    x \n   7    8    9   10   11    x    x \n  14   15   16   17   18*   x    x \n  21   22   23   24   25    x    x \n  28   29   30   31 \n</code></pre>"},{"location":"Programming%20Language/Java/08.%20Defining%20Your%20Own%20Class/","title":"Defining Your Own Class","text":"<p>Info</p> <p>Semua file yang ada pada contoh pada catatan ini ada pada package <code>Ch4/J4_3_Defining_Your_Own_Class</code></p>"},{"location":"Programming%20Language/Java/08.%20Defining%20Your%20Own%20Class/#an-employee-class","title":"An Employee Class","text":"<p>Info</p> <p>Semua file yang ada pada contoh pada catatan ini ada pada package <code>Ch4/J4_3_Defining_Your_Own_Class/J_1_An_Employee_Class</code></p> <p>Mari kita buat class dengan nama <code>Employee</code>.</p> <p>Code</p> EmployeeTest.java <pre><code>package Ch4.J4_3_Defining_Your_Own_Class.J_1_An_Employee_Class;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\n\npublic class EmployeeTest {\n    public static void main(String[] args) {\n        Employee[] employees = new Employee[4];\n        employees[0] = new Employee(\"Employee 1\",new BigDecimal(\"7800000\"),LocalDate.of(2023,6,5));\n        employees[1] = new Employee(\"Employee 2\",new BigDecimal(\"7800000\"),LocalDate.of(2023,6,5));\n        employees[2] = new Employee(\"Employee 3\",new BigDecimal(\"7800000\"),LocalDate.of(2023,6,5));\n        employees[3] = new Employee(\"Employee 4\",new BigDecimal(\"7800000\"),LocalDate.of(2023,6,5));\n\n    }\n}\n\n\nclass Employee{\n    // instance\n    private String name;\n    private BigDecimal salary;\n\n    private LocalDate hireDay;\n\n    public Employee(String name, BigDecimal salary, LocalDate hireDay){\n        this.name = name;\n        this.salary = salary;\n        this.hireDay = hireDay;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    // Cutted, there is another method here\n}\n</code></pre> <p>File diatas terdiri dari dua class, <code>EmployeeTest</code> dan <code>Employee</code>. Pada sebuah file, kita hanya boleh memiliki satu public class dan class yang di public harus memiliki nama yang sama dengan nama file.</p>"},{"location":"Programming%20Language/Java/08.%20Defining%20Your%20Own%20Class/#use-of-multiple-source-files","title":"Use of Multiple Source Files","text":"<p>Info</p> <p>Semua file yang ada pada contoh pada catatan ini ada pada package <code>Ch4/J4_3_Defining_Your_Own_Class/J_2_Use_Of_Multiple_Source_Files</code></p> <p>Java programmer umumnya lebih memiliki membuat class kedalam source file masing-masing. Contoh, Employee Class ada pada Employe.java dan EmployeeTest class ada di EmployeeTest.java.</p> <p>Code</p> EmployeeTest.javaEmployee.java <pre><code>package Ch4.J4_3_Defining_Your_Own_Class.J_2_Use_Of_Multiple_Source_Files;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\n\npublic class EmployeeTest {\n    public static void main(String[] args) {\n        Employee employee = new Employee(\"Farras\",new BigDecimal(\"11000000\"), LocalDate.of(2023,6,5));\n\n        System.out.printf(\"Nama\\t: %s\\nSalaray\\t: %,.2f\\nTanggal masuk\\t: %s\",\n                employee.getName(),\n                employee.getSalary(),\n                employee.getHireDay().toString());\n    }\n}\n</code></pre> Output<pre><code>Nama    : Farras\nSalaray : 11,000,000.00\nTanggal masuk   : 2023-06-05\n</code></pre> <pre><code>package Ch4.J4_3_Defining_Your_Own_Class.J_2_Use_Of_Multiple_Source_Files;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\nclass Employee{\n    // instance\n    private String name;\n    private BigDecimal salary;\n\n    private LocalDate hireDay;\n\n    public Employee(String name, BigDecimal salary, LocalDate hireDay){\n        this.name = name;\n        this.salary = salary;\n        this.hireDay = hireDay;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    // Cutted, there is another method here\n}\n</code></pre>"},{"location":"Programming%20Language/Java/08.%20Defining%20Your%20Own%20Class/#declaring-local-variables-with-var","title":"Declaring Local Variables with <code>var</code>","text":"<p>Semenjak Java 10, kita dapat mendeklarasi (wajib inisiasi juga) local variable menggunakan keyword <code>var</code> sebagai spesifikasi type data variabel.</p> <p>Warning</p> <p><code>var</code> hanya bisa digunakan pada local variables didalam sebauh method.</p> <p>Code</p> J_3_Declaring_Variable_Using_var.java <pre><code>package Ch4.J4_3_Defining_Your_Own_Class;\n\nimport Ch4.J4_3_Defining_Your_Own_Class.J_2_Use_Of_Multiple_Source_Files.Employee;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\n\npublic class J_3_Declaring_Variable_Using_var {\n    public static void main(String[] args) {\n\n        Employee employeeOld = new Employee(\"Muhammad Farras\",new BigDecimal(12000000),\n                LocalDate.of(2023,5,6));\n\n        var employee = new Employee(\"Muhammad Farras\",new BigDecimal(12000000),\n                LocalDate.of(2023,5,6));\n\n    }\n}\n</code></pre>"},{"location":"Programming%20Language/Java/08.%20Defining%20Your%20Own%20Class/#working-with-null-references","title":"Working with <code>null</code> References","text":"<p>Info</p> <p>Semua file yang ada pada contoh pada catatan ini ada pada package <code>Ch4/J4_3_Defining_Your_Own_Class/J_4_Working_With_null_Reference</code></p> <p>Object variable menampung sebuah referensi ke sebuah objek atau special value <code>null</code> yang mengidikasi bahwa variable tersebut belum merujuk ke objek apapun itu.</p> <p>Kita harus berhati-hati dengan nilai <code>null</code>. Karena jika kita memanggil method dari sebauh variable object yang bernilai <code>null</code> akan menyebabkan <code>!#java NullPointerException</code>.</p> <p><pre><code>try {\n    Employee employee1 = null;\n    System.out.println(employee1.getName());\n    // Without catch this exception, the app will terminate\n}\ncatch (NullPointerException ex){\n    System.out.println(ex.getMessage());\n}\n</code></pre> Error tersebut sangat fatal, mirip dengan exception <code>index out of bounds</code> jika program kita tidak menangkap exception tersebut maka program akan berhenti terminate.</p> <p>Ketika kita mendefinisikan sebauh class, sangat baik jika kita menetahui field mana yang bisa menerima nilai <code>null</code> dan mana yang tidak. Pada contoh ini, kita tidak ingin properties <code>name</code>, <code>salary</code> dan <code>hireDay</code> menerima nilai <code>null</code>.</p> <p>Ada dua solusi untuk mengubah <code>null</code> kedalam non-null value.</p> <code>Pertama</code> Menggunakan cara primitive <pre><code>if (n == null) name = \"Unknown name\" else name = n; \n</code></pre> <code>Kedua</code> Menggunakan statick fungsi dari class <code>Object</code>. <pre><code>name = Objects.requireNonNullElse(n,\"Unknown name\");\n</code></pre> <p>Namun ada cara yang lebih baik adalah menolak nilai <code>null</code>. Gunakan <code>Objects.requireNonNull()</code>.</p> <pre><code>hireDay = Objects.requireNonNull(hireDay,\"Hire day is require\");\n</code></pre> <p>Jika seseorang membuat objek Employee dengan memberikan parameter <code>hireDay</code> nilai <code>null</code>, maka <code>NullPointerException</code> akan terjadi. pertama memang terlihat tidak berguna, namun ternyata ada dua manfaat.:</p> <ol> <li>Laporan exception akan terpampang deskripsi masalahnya</li> <li>Expcetion akan melaporkan lokasi persis masalah terjadi padakode. Karena,  <code>NullPointerException</code>  bisa terjadi dimana saja dan sulit untuk melacaknya, denga menggunakan method <code>Objects.requireNonNull()</code> kita dapat dengan mudah (alhamdulillah) melacak error akibat <code>NullPonterException</code> yang terjadi.</li> </ol> <p>All Code</p> Example.javaEmployee.java <pre><code>package Ch4.J4_3_Defining_Your_Own_Class.J_4_Working_With_null_Reference;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\n\npublic class EmployeeTest {\n    public static void main(String[] args) {\n\n        try {\n            Employee employee1 = null;\n            System.out.println(employee1.getName());\n            // Without catch this exception, the app will terminate\n        }\n        catch (NullPointerException ex){\n            System.out.println(ex.getMessage());\n        }\n\n        var employee2 = new Employee(null,new BigDecimal(2500000), LocalDate.now());\n        System.out.println(employee2);\n\n        var employee3 = new Employee(null,null, LocalDate.now());\n        System.out.println(employee3);\n\n        var employee4 = new Employee(null,null, null);\n        System.out.println(employee4);\n    }\n}\n</code></pre> Output<pre><code>Cannot invoke \"Ch4.J4_2_Predefined_Class.J_8_Working_With_null_Reference.Employee.getName()\" because \"employee1\" is null\nName        : Unknown Name\nSalary      : 2,500,000.00\nHire Day    : 2023-08-18\nName        : Unknown Name\nSalary      : 0.00\nHire Day    : 2023-08-18\nException in thread \"main\" java.lang.NullPointerException: Hire day is require\n    at java.base/java.util.Objects.requireNonNull(Objects.java:259)\n    at Ch4.J4_2_Predefined_Class.J_8_Working_With_null_Reference.Employee.&lt;init&gt;(Employee.java:19)\n    at Ch4.J4_2_Predefined_Class.J_8_Working_With_null_Reference.EmployeeTest.main(EmployeeTest.java:24)\n</code></pre> <pre><code>package Ch4.J4_3_Defining_Your_Own_Class.J_4_Working_With_null_Reference;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\nimport java.util.Objects;\n\npublic class Employee {\n    // instance\n    private String name;\n    private BigDecimal salary;\n\n    private LocalDate hireDay;\n\n    public Employee(String name, BigDecimal salary, LocalDate hireDay){\n        this.name = Objects.requireNonNullElse(name,\"Unknown Name\");\n\n        this.salary = (salary ==null)? new BigDecimal(0) : salary;\n\n        this.hireDay = Objects.requireNonNull(hireDay,\"Hire day is require\");\n    }\n\n    @Override\n    public String toString() {\n        return \"Name\\t\\t: %s\\nSalary\\t\\t: %,.2f\\nHire Day\\t: %s\".\n                formatted(this.name,this.salary,this.hireDay.toString());\n    }\n\n    public String getName() {\n        return this.name;\n    }\n}\n</code></pre>"},{"location":"Programming%20Language/Java/08.%20Defining%20Your%20Own%20Class/#private-method","title":"Private Method","text":"<p>Info</p> <p>Semua file yang ada pada contoh pada catatan ini ada pada package <code>Ch4/J4_3_Defining_Your_Own_Class/J_5_Private_Method</code></p> <p>Ketika mengimplementasi sebuah class, kita membuat semua instance fileds (Properties) menjadi <code>private</code> karena `#!java public`` data sangat rawan (berbahaya, dapat dirubah secara langsung). Namun bagaimana dengan private method? kebanyakan method diset sebagai public, private method biasanya digunakan untuk beberapa keadaan saja. Misalnya, terkadang kita ingin memecah kode untuk perhitungan kedalam beberapa method. Dimana method yang dipecah tersebut sebagai pembantu komputasi dari method utama yang diset sebagai public. Dengan demikian methode helper tersebut tidak hanya digunakan pada method utama dan tidak dapat dipanggil mada method instance utamanya.</p> <p>All Code</p> EmployeeTest.javaEmployee.java <pre><code>package Ch4.J4_3_Defining_Your_Own_Class.J_5_Private_Method;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\n\npublic class EmployeeTest {\n    public static void main(String[] args) {\n        var employee1 = new Employee(null,new BigDecimal(13000000), LocalDate.now());\n        System.out.println(employee1.nicePrint()); // java: nicePrint() has private access\n    }\n\n}\n</code></pre> <pre><code>package Ch4.J4_3_Defining_Your_Own_Class.J_5_Private_Method;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\nimport java.util.Objects;\n\npublic class Employee {\n    // instance\n    private String name;\n    private BigDecimal salary;\n\n    private LocalDate hireDay;\n\n    public Employee(String name, BigDecimal salary, LocalDate hireDay){\n        this.name = Objects.requireNonNullElse(name,\"Unknown Name\");\n\n        this.salary = (salary ==null)? new BigDecimal(0) : salary;\n\n        this.hireDay = Objects.requireNonNull(hireDay,\"Hire day is require\");\n    }\n\n    private String nicePrint(){\n        return \"Name\\t\\t: %s\\nSalary\\t\\t: %,.2f\\nHire Day\\t: %s\".\n                formatted(this.name,this.salary,this.hireDay.toString());\n    }\n\n    @Override\n    public String toString() {\n        return this.nicePrint();\n    }\n}\n</code></pre>"},{"location":"Programming%20Language/Java/08.%20Defining%20Your%20Own%20Class/#final-instance-fields","title":"Final Instance Fields","text":"<p>Kita dapat mendifinisikan instance field sebagai <code>final</code>. Denga demikian, field tersebut akan tetap memiliki nilai yang sama dari awal objek tersebut dibuat hinggai dihancurkan. Nilai pada field yang ditetapkan menjadi <code>final</code> tidak akan pernah beruha nilainya dan tidak dapat di assign dengan nilai apapun.</p> <pre><code>public class Employee {\n    // instance\n    private final String name;\n    ...\n}\n</code></pre> <p>Modifier <code>final</code> berguna untuk fields dengan tipe primitive atau final immutable class. (Class immutable adalah class yang tidak dapat berubah nilainya, seperti <code>String</code>).</p> <p>Namun untuk mutable class, penggunaan final sedikit membingungkan, contoh dibawah ini kita menggunakan saah satu mutable class, <code>StringBuilder</code>.</p> <p>Code</p> J_6_Final_Instance_Field.java <pre><code>package Ch4.J4_3_Defining_Your_Own_Class;\n\nimport java.time.LocalTime;\n\npublic class J_6_Final_Instance_Field {\n    public static void main(String[] args) {\n        var thisLog = new Logger();\n\n        thisLog.setNewDataLog(\"%s Update hase confirm\".formatted(LocalTime.now()));\n        thisLog.setNewDataLog(\"%s Another confirmation is accepted\".formatted(LocalTime.now()));\n\n        System.out.println(thisLog.getLog());\n    }\n}\n\nclass Logger{\n    private final StringBuilder log;\n\n    public Logger(){\n        this.log = new StringBuilder();\n    }\n\n    public void setNewDataLog(String information){\n        this.log.append(information).append(\"\\n\");\n    }\n\n    public String getLog(){\n        return this.log.toString();\n    }\n}\n</code></pre> Output<pre><code>10:16:23.868176100 Update hase confirm\n10:16:23.872176600 Another confirmation is accepted\n</code></pre> <p>Kode diatas kita membuat properties <code>log</code> menjadi <code>final</code>, namun mengapa kita masih menggunakan <code>append()</code> pada fields tersebut yang notabenya menambah isi dari fields tersebut. Jawabannya adalah, Keyword <code>final</code> fungsinya adalah agar reference objek yang telah tersimpan pada variable object (<code>log</code>) tidak akan pernah merujuk ke objek StringBuilder lainnya. Namun objek tersebut tetap dapat berubah, mutate</p>"},{"location":"Programming%20Language/Java/09.%20Static%20Field%20and%20Method/","title":"Static Field and Method","text":"<p>Info</p> <p>Semua file yang ada pada contoh pada catatan ini ada pada package <code>Ch4/J4_4_Static_Field_And_Method</code></p> <p>Semua sample diatas yang ada pada catatan ini, semua method main menggunakan modifier <code>static</code></p> <pre><code>public static void main (Stringp[] args){\n\n}\n</code></pre>"},{"location":"Programming%20Language/Java/09.%20Static%20Field%20and%20Method/#static-fields","title":"Static Fields","text":"<p>Jika kita mendefinisikan field sebagai <code>static</code>, maka field tersebut tidak akan bisa diakses dari objek dari class yang bersangkutan. Karena <code>static</code> field tersebut dimiliki oleh class, bukan instance dari class tersebut.</p> <p>Lanjutan dari class Employee, katakan setiap karyawan harus memiliki <code>ID</code> yang berbeda-beda dengan karyawan lainya. Katakan, kita tetapkan ID karyawan adalah nomor urut dari karyawan yang pertama menjadi anggota perusahaan tersebut dan seterusnya. Kita dapat memanfaatkan <code>static</code> field dimana field tersebut akan berbagi dengan instance objek dari class Employee sehingga kita dapat menaruh increment logic setiap objek Employee dibuat.</p> <p>Code</p> J_1_Static_Fields.java <pre><code>package Ch4.J4_4_Static_Field_And_Method;\n\npublic class J_1_Static_Fields {\n    public static void main(String[] args) {\n        Employee[] employee = new Employee[5];\n\n        employee[0] = new Employee(\"Farras\");\n        employee[1] = new Employee(\"Tania\");\n        employee[2] = new Employee(\"Faris\");\n        employee[3] = new Employee(\"Noah\");\n        employee[4] = new Employee(\"Hilyah\");\n\n        for (Employee data: employee){\n            System.out.println(data);\n            System.out.println(\"-----\");\n        }\n    }\n}\n\nclass Employee{\n    private static int  id = 0;\n\n    private int idKaryawan;\n    private String name;\n    public Employee(String name){\n        // Increment id\n        id++;\n        this.idKaryawan = id;\n        this.name = name;\n    }\n\n    @Override\n    public String toString() {\n        return \"Id \\t\\t: %d\\nName \\t: %s\".formatted(this.idKaryawan, this.name);\n    }\n}\n</code></pre> Output<pre><code>Id      : 1\nName    : Farras\n-----\nId      : 2\nName    : Tania\n-----\nId      : 3\nName    : Faris\n-----\nId      : 4\nName    : Noah\n-----\nId      : 5\nName    : Hilyah\n-----\n</code></pre>"},{"location":"Programming%20Language/Java/09.%20Static%20Field%20and%20Method/#static-constant","title":"Static Constant","text":"<p>Static Fields jarang ditemukan atau dipakai. Namun static constant lebih sering ditemukan. Sebagai contoh kita ingin membuat sebuah static field/properties yang nilainya tidak dapat di-reassign.</p> <p>Code</p> J_2_Static_Constant.java <pre><code>package Ch4.J4_4_Static_Field_And_Method;\n\npublic class J_2_Static_Constant {\n    public static void main(String[] args) {\n        System.out.println(Math.PHI);\n    }\n}\n\nclass Math{\n    public static final double PHI = 3.14;\n}\n</code></pre> <p>Sebagaimana yang telah kita lihat pada catatan diatas, sangat tidak disarankan membuat filed sebagai <code>public</code>. Namun untuk Static Contant tidak mengapa, karena kita juga menetapkan modifier menjadi <code>final</code> dimana nilai field tersebut tidak akan bisa di ganti.</p>"},{"location":"Programming%20Language/Java/09.%20Static%20Field%20and%20Method/#static-method","title":"Static Method","text":"<p>Static method adalah method yang tidak dapat beroperasi pada sebuah Object, namun langsung pada classny. Contoh adalah operasi matematika yang ada pada class <code>Math</code>.</p> <p><pre><code>System.out.println(java.lang.Math.pow(4.0,5.0));\n</code></pre> Gunakan static mehotd pada dua kondisi:</p> <ol> <li>Gunakan static method ketika kita tidak butuh akses ke properties dari objek karena semua yang dibutuhkan diambil dari paramater dari static metod.</li> <li>Ketika mtehod hanya membutuhkan akses ke static fields dari class.</li> </ol>"},{"location":"Programming%20Language/Java/09.%20Static%20Field%20and%20Method/#factory-method","title":"Factory Method","text":"<p>Factory method adalah salah satu fungsi dari <code>static method</code>. Class seperti <code>LocalDate</code> dan <code>NumberFormat</code> menggunakan static facotry methods utuk membangun object. Pada catatan sebelumnya kita telah menggunakan factory method untuk membuat object LocalDate. Dibawah ini kita akan membuat class yang memiliki Factory Method untuk membuat object.</p> <p>Code</p> J_3_Factory_Method.java <pre><code>package Ch4.J4_4_Static_Field_And_Method;\n\npublic class J_3_Factory_Method {\n    public static void main(String[] args) {\n\n        var logs = SystemMessage.forStand(\"This is log\");\n\n        var secondLogs = SystemMessage.forStandLower(\"This is log\");\n\n        System.out.println(logs.getSysLog());\n        System.out.println(secondLogs.getSysLog());\n    }\n}\n\nclass SystemMessage{\n\n    private String source;\n    private String sysLog;\n\n    private SystemMessage(String source, String message){\n        this.sysLog = message;\n        this.source = source;\n    }\n    public static SystemMessage forStand (String message){\n        return new SystemMessage(\"From forStand()\",message);\n    }\n\n    public static SystemMessage forStandLower(String message){\n        return forStand(message.toLowerCase());\n    }\n\n    public String getSysLog() {\n        return sysLog;\n    }\n}\n</code></pre> Output<pre><code>This is log\nthis is log\n</code></pre>"},{"location":"Programming%20Language/Java/10.%20Method%20Parameters/","title":"Method Parameters","text":"<p>Info</p> <p>Semua file yang ada pada contoh pada catatan ini ada pada package <code>Ch4/J4_5_Static_Method_Parameters</code></p> <p>Ketentual call by value artinya, method hanya mengambil nilai dari parameter yang disediakan. Dilain sisi, call by reference artinya method mengambil lokasi dari variable dari parameter yang disediakan. Method dapat memodifikasi nilai yang disimpan dalam variable yang diberikan menggunakan call by reference namun tidak saat diberikan menggunakan passed by value.</p> <p>Java programming language selalu menggunakan call by value. Artinyam method hanya mendapatan salinan dari semua nilai parameter. Sehingga, method tidak dapat memodifikasi konten dari parameter apapun yang diberikan.</p> <p>Code</p> J_1_Call_By_Value.java <pre><code>package Ch4.J4_5_Method_Parameters;\n\npublic class J_1_Call_By_Value {\n\n    public static void main(String[] args) {\n\n        var myWages = 10_000_000;\n\n        doubleIt(myWages);\n\n        // myWages still same\n        System.out.printf(\"%,2d\",myWages);\n    }\n\n    public static int doubleIt (int wages){\n        x = x * 2;\n        return x;\n    }\n}\n</code></pre> Output<pre><code>10,000,000\n</code></pre> <p>Implementasi apapun yang diberikan pada variable <code>myWages</code>, variable tersebut tidak akan pernah berubah nilainya. Jadi apa yang terjadi ?</p> <ol> <li>variable <code>x</code> pada method <code>doubleIt</code> diinisiasi dengan nilai salinan dari <code>wages</code>.</li> <li>Nilai <code>x</code> digandakan,kali 2.</li> <li>Method selesai, dan variable <code>x</code> tidak lagi digunakan.</li> </ol> <p>Dengan demikian tidak terjadi perubahan apapun terhadap variable <code>myWages</code>.</p> <p>Namun, secara garis besar, ada dua jenis tipe parameter;</p> <ol> <li>Primitive types (<code>int</code>, <code>boolean</code>, dsb)</li> <li>Object reference (refrensi ke objek)</li> </ol> <p>Dari hasil diatas kita dapat melihat, tidak mungkin sebuah method merubah nilai parameter primitive type. Namun berbeda dengan object reference.</p> <p>Code</p> J_2_Call_By_Value_Or_Reference_Ask.java <pre><code>package Ch4.J4_5_Method_Parameters;\n\npublic class J_2_Call_By_Value_Or_Reference_Ask {\n    public static void main(String[] args) {\n\n        var farras = new Person(\"Farras\",12_000_000);\n\n        System.out.println(farras);\n\n        multipleSalary(farras);\n\n        System.out.println(farras); // but why salary multiplied\n\n    }\n\n    // This parameter will get copy of value only\n    public static void multipleSalary(Person p){\n        p.salary = p.salary * 2;\n    }\n}\n\nclass Person {\n    public int salary;\n    private final String  name;\n\n    public  Person(String name, int salary){\n        this.name = name;\n        this.salary = salary;\n    }\n\n    @Override\n    public String toString() {\n        return \"Name %s, gaji %,2d\".formatted(this.name, this.salary);\n    }\n}\n</code></pre> Output<pre><code>Name Farras, gaji 12,000,000\nName Farras, gaji 24,000,000\n</code></pre> <p>Wow, mengapa salary dari person1 berubah ?</p> <ol> <li><code>p</code> diinisiasi dengan nilai salinan dari <code>farras</code>, yup, yaitu refrensi ke object.</li> <li>method <code>multipleSalayar</code> di aplikasikan ke object reference. Object (instance) dari class <code>Person</code> yaitu <code>p</code> (karena mendapatkan object reference) dan <code>farras</code> akan mendapatkan peningkatan <code>salary</code> sebanyak duakali lipat.</li> <li>Method berakhir, parameter <code>p</code> tidak lagi digunakan (dihapus), dan tentu, object variable <code>farras</code> berlanjut terhubung ke object yang salarynya digandakan.</li> </ol> <p>Jadi, dari penjelasan diatas, Java selalu passing by value masuk akal walaupun terliat seperti passing by reference.</p> <p>Sebagaimana yang telah kita lihat diatas, sangat memungkinkan dan faktanya sering terjadi peng-implementasian sebuah method yang merubah state (proerties) dari sebuah objek parameter. Alasanya sangat simple. Method mendapatkan salinan dari object reference, dan keduanya, original dan copy-an merujuk pada object yang sama.</p> <p>Beberapa programmer sayangnya mengklaim bahwa Java sebenarnya menggunakan call by reference untuk object. Ini SALAH. Mari kita coba menggunakan sedikit eksperiment.</p> <p>Code</p> J_3_Java_Not_Use_Call_By_Reference.java <pre><code>package Ch4.J4_5_Method_Parameters;\n\npublic class J_3_Java_Not_Use_Call_By_Reference {\n\n    public static void main(String[] args) {\n        Employee f = new Employee(\"Farras\");\n        Employee t = new Employee(\"Tania\");\n\n        swapEmployee(f,t);\n\n        System.out.println(\"object f memiliki nama : \"+f.name);\n        System.out.println(\"object t memiliki nama : \"+t.name);\n    }\n\n    public static void swapEmployee(Employee f, Employee t){\n        Employee temp = f;\n        f = t;\n        t= temp;\n        System.out.println(\"Copy reference object f memiliki nama : \"+f.name);\n        System.out.println(\"Copy reference object t memiliki nama : \"+t.name);\n    }\n}\n\nclass Employee{\n    public String name;\n    public Employee(String name){\n        this.name = name;\n    }\n}\n</code></pre> Output<pre><code>Copy reference object f memiliki nama : Tania\nCopy reference object t memiliki nama : Farras\nobject f memiliki nama : Farras\nobject t memiliki nama : Tania\n</code></pre> <p>Kalau seandainya java menggunakan call by reference maka, implementasi dari hasil <code>print.out</code> diatas antara copy object dan original object seharsnya mengeluarkan nilai yang sama.</p> <p>Ini adalah rangkuman dari apa yang dapat kita dan tidak dapat kita lakukan dengan method parameter pada Java:</p> <ol> <li>Sebuah method tidak dapat memodifikasi primitive type (integer atau <code>boolean</code>)</li> <li>Method dapat merubah state dari sebuah object parameter.</li> <li>Method tidak dapat membuat sebuah object parameter merujuk pada objek yang baru.</li> </ol>"},{"location":"Programming%20Language/Java/11.%20Object%20Construction/","title":"Object Construction","text":"<p>Info</p> <p>Semua file yang ada pada contoh pada catatan ini ada pada package <code>J4_6_Object_Construction</code></p> <p>Java menawarkan berbagai macam mekanisme dalam membangun object.</p>"},{"location":"Programming%20Language/Java/11.%20Object%20Construction/#method-overloading","title":"Method Overloading","text":"<p>Beberapa class memiliki lebih dari satu constructor, salah satunya adalah <code>StringBuilder</code> yang memiliki 4 buah constructore dengan tipe parameter yang dibutuhkan yang berbeda.</p> <p>Code</p> J_1_StringBuilder_Overloading.java <pre><code>package Ch4.J4_6_Object_Construction;\n\npublic class J_1_StringBuilder_Overloading {\n    public static void main(String[] args) {\n        var sb1 = new StringBuilder();\n\n        String s = \"To do: \\n\";\n        var sb2 = new StringBuilder(s);\n\n        var sb3 = new StringBuilder(50);\n\n        CharSequence cs = \"List Task : \\n\";\n        var sb4 = new StringBuilder(cs);\n    }\n}\n</code></pre> <p>Kemampuan ini disebut dengan overloading. Overloading terjadi jika beberapa method dengan nama yang sama (pada contoh diatas kita menggunakan constructor method) namun memiliki parameter yang berbeda. Compiler harus mengurutkan dan menentukan method mana yang dipanggil. Compiler akan memilih method yang sesuai dengan tipe parameter yang diberikan pada header dari macam-macam method.</p> <p>Compile-timer error akan terjadi jika, compiler tidak dapat mencocokan parameter2 apakah karena tidak cocok dengan semua method dengan nama yang sama. Proses mencarian kecocokan itu disebut dengan overloading resolution.</p>"},{"location":"Programming%20Language/Java/11.%20Object%20Construction/#object-desctruction-and-finalize-method","title":"Object Desctruction and <code>finalize</code> method","text":"<p>Beberapa OOP, seperti C++, memiliki method desctructor yang terpisah untuk membersihka kode yang sudah lagi dibutuhkan. Aktivitas yang paling sering terjadi saat descturtion proses adalah memberishakn memori yang diisi oleh object. Karen java secara otomatis menjalankan garbage collection, maka pembebasan memory tidak lagi dibutuhkan, maka dari itu Java tidak mendukung desctructors. Namun tentu, beberapa object memanfaatkan sebuah resource yang dapat melebihi kapasitas memory, seperti sebuah file atau menanganin objek yang menggunakan system resources. Pada kondisi ini sangat penting untuk melepaskan resources dan mengambalikannya jika resource sudah tidak lagi digunakan.</p> <p>Jadi sebuah resource harus segara di-close secepat mungkin setelah kita selesai menggunakannya, berikan method <code>close()</code> yang melakukan pembersihan yang dibutuhkan. Kita dapat memanggil method <code>#1java close</code> ketika kita selesai dengan object. InsyaAllah pada catatan ini kita akan membahas bagaimana kita memanggil method tersebut secara otomatis.</p>"},{"location":"Programming%20Language/Java/12.%20Records/","title":"Records","text":"<p>Info</p> <p>Semua file yang ada pada contoh pada catatan ini ada pada package <code>Ch4/J4_5_Records</code></p>"},{"location":"Programming%20Language/Java/12.%20Records/#record-concept","title":"Record Concept","text":"<p><code>record</code> adalah bentuk sepsial dari sebuah class dimana statenya adalah immutable dan readeable pada public.</p> <pre><code>record Employee (String name, int id, LocalDate hireDay, BigDecimal salary){}\n</code></pre> <p>Hasilnya adalah sebuah class dengan instance fields serta accessor method sebagai berikut; <pre><code>public class Employee{\n\n    private final String name;\n    private final int id;\n    private final Calendar hireDay;\n    private final BigDecimal salary;\n\n    public Employee (String name, int id, Calendar hireDay, BigDecimal salary){\n        this.name = name;\n        this.id = id;\n        this.hireDay = hireDay;\n        this.salary = salary;\n    }\n    public String name(){\n        return this.name;\n    }\n    public int id(){\n        return this.id;\n    }\n    public Calendar hireDay(){\n        return this.hireDay;\n    }\n    public BigDecimal salary(){\n        return this.salary;\n    }\n}\n</code></pre></p> <p>Setiap record memiliki tiga buah method yang telah terdefinisi secara otomatis, <code>toString()</code>, <code>equals()</code>, dan <code>hashCode</code>.</p> <p></p> <p>Kita juga dapat membuat method sendiri pada sebuah record</p> <pre><code>record Employee (String name, int id, LocalDate hireDay, BigDecimal salary){\n\n    public void raisingSalary(BigDecimal kenaikan){\n        this.salary.add(kenaikan);\n    }\n\n}\n</code></pre> <p>Sebagaimana class, record juga dapat memiliki static fields dan methods</p> <pre><code>private static int incrementalPointByCalledMethod = 0;\n\npublic static int getTotalIncrementalpointByCalledMethod(){\n    return incrementalPointByCalledMethod;\n}\n</code></pre> <p>Akan tetapi kita tidak dapat menambahkan instance fields</p> <p></p> <p>Kita juga dapat meng-override method yang diturunkan oleh records.</p> <pre><code>@Override\n    public String toString() {\n        incrementalPointByCalledMethod++;   \n        return \"Name\\t\\t: %s\\nid\\t\\t: %d\\nHire day\\t:%s\\nSalary\\t\\t: %,d\"\n                .formatted(name, id, hireDay, salary);\n    }\n</code></pre> <p>Ingat, instance fields dari record secara otomatis menjadi final (nilainya tidak dapat berubah). Namun untuk instance field record yang menampung object references rasanya akan seperti variable mutable. Namun sesunggunya variable tersebut tetap final.</p> <p>Code</p> Example.java <pre><code>package Ch4.J_4_5_Records.J_1_ConceptRecords;\n\nimport java.math.BigDecimal;\nimport java.util.Calendar;\n\npublic class MainRecords {\n    public static void main(String[] args) {\n\n        Calendar dayHire = Calendar.getInstance();\n        dayHire.set(2023,6,5);\n\n        var employeeFarras = new Employee(\"Farras\",2745, dayHire,\n                new BigDecimal(13_000_000));\n\n        System.out.println(employeeFarras);\n\n        System.out.println(\"----\");\n        // Ganti hireDay\n        employeeFarras.hireDay().add(Calendar.DAY_OF_MONTH,10);\n        System.out.println(employeeFarras);\n    }\n}\n</code></pre> Output<pre><code>Name        : Farras\nid          : 2745\nHire day    : Wed Jul 05 00:06:23 WIB 2023\nSalary      : 13,000,000\n----\nName        : Farras\nid          : 2745\nHire day    : Sat Jul 15 00:06:23 WIB 2023\nSalary      : 13,000,000\n</code></pre> <p>Tip</p> <p>Gunakan <code>record</code> dari pada class untuk objek yang datanya tidak dibutuhkan untuk berubah-ubah (immutable). Gunakan class jika datanya memungkinkan untuk berubah. Record lebih mudah dibaca dan lebih efesiend serta aman untuk concurrent program (progmram yang berbarengan).</p>"},{"location":"Programming%20Language/Java/12.%20Records/#consructor-canonical-costume-and-compact","title":"Consructor : Canonical, Costume and Compact","text":"<p>Constructor yang secara otomatis terdefinisi (seperti <code>record</code>) dengan caramemasang semua instance fields dengan paramter disebut dengan canonical constructor.</p> <p>Kita juga dapat mendefinisikan costum constructor tambahan. Statement constructor pertama harus memanggil constructor lainnya.</p> <p>Code</p> Additional canonical constructor <pre><code>record Point (double x, double y ){\n\n    public Point(){\n        this(0,0);\n    }\n    ...\n}\n</code></pre> <p>Record diatas memiliki 2 buah constructore, pertama adalah original constructor yang menerima dua buah parameter, sedangakan yang kedua adalah construcotr yang tidak menerima parameter apapun.</p> <p>Jika canonical constructor membutuhkan perkerjaan tambahan kita dapat menyediakan implementasi kita sendiri.</p> <p>Code</p> Costume Constructor <pre><code>record Point (double x, double y ){\n\n    public Point(double x , double y){\n        if (y &gt; x){\n            this.x = y;\n            this.y = x;\n        }\n        else {\n            this.x = x;\n            this.y = y;\n        }\n    }\n}\n</code></pre> <p>However, you are encouraged to use a compact form when implementing the canonical constructor.</p> <p>Code</p> Compact <pre><code>record Range(int from, int to){\n    public Range{\n        if (to &lt;=  from){\n\n            int temp = from;\n            from = to;\n            to = temp;\n        }\n    }\n}\n</code></pre> <p>Badan dari compact form adalah  <code>prelude</code> (Pendahuluan) untuk canonical constructor. Pendahuluan tersebut sebenarnya memodifikasi parameter variable sebelum di assigned ke instance fields <code>this.from</code> dan <code>this.to</code>. Dan, Kita tidak dapat membaca read atau memodifikasi instance fields didalam body of compact constructore.</p> <p>All Code</p> J_2_Canonical_Costume.java <pre><code>package Ch4.J_4_5_Records;\n\npublic class J_2_Canonical_Costume {\n    public static void main(String[] args) {\n\n        Point p1 = new Point(4d,3d);\n        System.out.printf(\"X : %.2f\\nY : %.2f\\n\",p1.x(),p1.y());System.out.println();\n\n        Point p2 = new Point();\n        System.out.printf(\"X : %.2f\\nY : %.2f\\n\",p2.x(),p2.y());System.out.println();\n\n        Point p3 = new Point(3d, 12d);\n        System.out.printf(\"X : %.2f\\nY : %.2f\\n\",p3.x(),p3.y());System.out.println();\n\n\n        Range range1 = new Range(10,20);\n        System.out.printf(\"From : %d\\nTo : %d\\n\",range1.from(), range1.to());System.out.println();\n\n        Range range2 = new Range(40,20);\n        System.out.printf(\"From : %d\\nTo : %d\\n\",range2.from(), range2.to());\n\n    }\n}\n\nrecord Range(int from, int to){\n    public Range{\n        if (to &lt;=  from){\n\n            int temp = from;\n            from = to;\n            to = temp;\n        }\n    }\n}\n\nrecord Point (double x, double y ){\n\n    public Point(){\n        this(0,0);\n    }\n\n    public Point(double x , double y){\n        if (y &gt; x){\n            this.x = y;\n            this.y = x;\n        }\n        else {\n            this.x = x;\n            this.y = y;\n        }\n    }\n}\n</code></pre> Output<pre><code>X : 4.00\nY : 3.00\n\nX : 0.00\nY : 0.00\n\nX : 12.00\nY : 3.00\n\nFrom : 10\nTo : 20\n\nFrom : 20\nTo : 40\n</code></pre>"},{"location":"Programming%20Language/Java/13.%20Classes%2C%20Superclasses%2C%20and%20Subclasses/","title":"Classes, Superclasses, and Subclasses","text":"<p>Info</p> <p>Semua file yang ada pada contoh pada catatan ini ada pada package <code>Ch5/J_5_1_Classes_Superclasses_Subclasses</code></p> <p>Mari kita kembali pada class <code>Employee</code> yang telah kita buat pada contoh sebelumnya. Katakan di sebuah perusahaan ada juga Manager. Jadi Manager adalah seorang Employee yang memiliki tunjangan bonus tambahan. Maka kita harus membuat sebuah Class <code>Manager</code> yang memiliki state dan behavior yang sama persis dengan Employee namun dengan tambahan adanya perhitungan bonus. Disinilah inheritance memainkan perannya. Manager adalah Employee, maka kita dapat menggunakan hubungan <code>is-a</code>, class Manager <code>is-a</code> class Employee.</p>"},{"location":"Programming%20Language/Java/13.%20Classes%2C%20Superclasses%2C%20and%20Subclasses/#defining-subclasses","title":"Defining Subclasses","text":"<p>Dibawah ini adalah bagaimana kita mendefinisikan <code>Manager</code> class yang merupakan turunan dari <code>Employee</code></p> <p>Code</p> Inheritance <pre><code>class Manager extends Employee {\n    // Another method here\n}\n</code></pre> <p>Kata kunci <code>extends</code> meeng indikasi bahwa kita membuat sebuah class baru yang menurunkan sebuah class yang sudah ada. Class yang sudah ada disebut dengan super class, base class atau parent class sedangkan class yang baru bisa disebut subclass, derived class atau child class. Satu class hanya bisa menurunkan (extend) satu buah class.</p> <p>Class <code>Employee</code> adalah superclass, namun bukan berarti class tersebut superior atau memiliki fungsi yang lebih banyak sehingga dikatakan superclass. Justru kebalikannya. Subclass memliki fungsi yang lebih banyak dibandingka superclass-nya. Contoh, <code>Manager</code> memiliki data dan fungsi yang lebih banyak dibandingkan dengan superclass <code>Employee</code>.</p> <p>Class <code>Manager</code> memiliki field baru <code>bonus</code> dan method baru untuk menyetel nilai pada field tersebut.</p> <p>Code</p> Manager.java <pre><code>class Manager extends Employee {\n\n    ... // cutted\n    BigDecimal bonus;\n\n    public void setBonus(BigDecimal bonus){\n        this.bonus = bonus;\n    }\n\n    // Another method here\n}\n</code></pre> <p>Dari hasil diatas, jika kita memiliki objek <code>Manager</code> kita dapat memasang nilai bonus dengan memanggil method seperti dibawah ini.</p> <p>Code</p> call <code>setBonus()</code> <pre><code>manager.setBonus(1500000);\n</code></pre> <p>Akan tetapi, jika kita memiliki object <code>Employee</code>, kita tidak dapat menggunakan method <code>setBonus</code> karena method tersebut tidak dimiliki oleh class <code>Employee</code>. Namun sebaliknya, pada subclass, yaitu class <code>Manager</code> kita dapat menggunakan semua method yang memiliki Accsess Modifier public, atau protected seperti method <code>getName</code>, <code>getHireDay</code> yang dimiliki oleh class <code>Employee</code>. Walaupun objek tersebut tidak secera eksplisit di definisikan pada class <code>Manager</code>, method tersbut akan secara otomatis diturunkan dari Superclass <code>Employee</code></p> <p>Semua object <code>Manager</code> memiliki empat fields, <code>name</code>, <code>hireDay</code>, <code>salary</code>, dan <code>bonus</code>. Semua field selain <code>bonus</code> diambil dari Superclass <code>Employee</code>.</p> <p>Note</p> <p>Kita telah mencoba membuat class menggunakan <code>record</code>. Class yang dibangung menggunakan <code>record</code> tidak dapat menjadi Superclass atau Subclass dari class lain.</p>"},{"location":"Programming%20Language/Java/13.%20Classes%2C%20Superclasses%2C%20and%20Subclasses/#overriding-methods","title":"Overriding Methods","text":"<p>Beberapa method dari superclass <code>Manager</code> tidak cocok dengan subclass <code>Employee</code>.  Salah satunya adalah <code>getSalary()</code>. Method tersebut seharunsya mengembalikan gaji pokok di tambah dengan bonus. Kita harus membuat method baru yang meng-override superclass method.</p> <p>Logika sangat mudah, yaitu dengan mengembalikan field <code>salary</code> ditambah dengan field <code>bonus</code>.</p> <p>Code</p> Override method <code>getSalary()</code> <pre><code>public BigDecimal getSalary() {\n    return this.bonus.add(this.salary); // error\n}\n</code></pre> <p>Kode diatas tidak akan berhasil. Perlu diingat, hanya method dari <code>Employee</code> yang memiliki akses langsung ke private fields dari class <code>Employee</code>. Artinya method <code>getSalary()</code> dari class <code>Manager</code> tidak memiliki akses langsung untuk mengambil nilai dari field <code>salary</code>. Jika method dari class <code>Manager</code> ingin mengakses private field <code>salary</code>, maka kita harus menggunakan apa yang digunakan oleh method dari class lain, yaitu menggunakan public method, yaitu yang telah kita buat methodnya di class <code>Employee</code>, yaitu <code>getSalary()</code>.</p> <p>Code</p> Override method <code>getSalary()</code> <pre><code>public BigDecimal getSalary() {\n    return this.bonus.add(getSalary()); // error\n}\n</code></pre> <p>Namun masalahnya, fungsi <code>getSalary()</code> yang kita panggil memiliki nama method yang sama dengan nama method yang sedang kita implementasi. Kode diatas akan menyebabkan perulangan berantai akibat kita memanggil method itu sendiri didalam dirinya yang menyebabkan program akan berhenti.</p> <p>Karena itu, kita harus mengindikasi atau memberitahu compiler bahwa kita ingin mengambil method <code>getSalary()</code> dari superclass <code>Employee</code>, bukan dari class saat ini. Kita dapat menggunakan keyword <code>super</code> untuk tujuan tersebut.</p> <p>Code</p> Override method <code>getSalary()</code> <pre><code>@Override\npublic BigDecimal getSalary() {\n    return super.getSalary().add(this.getBonus());\n}\n</code></pre> <p>Anotasi <code>Override</code> opsional, anotasi tersebut digunakan oleh compiler untuk menunjukan bahwa class tersebut meniban method dari superclass. Compiler akan mengeluarkan error jika setidaknya kondisi dibawah terpenuhi;</p> <ol> <li>Method meniban atau mengimplementasi deklarasi method</li> <li>Method memiliki signature yang sama dengan yang dideklarasi pada superclass</li> </ol> <p>Note</p> <p>Beberapa orang berpikir bahwa <code>super</code> dianalogikan dengan <code>this</code> reference. Namun analogi tersebut kurang tepat. <code>super</code> bukan merujuk ke sebuah object. Akan tetapi ia adalah special keyword yang mengarahkan compiler untuk meminta superclass method.</p>"},{"location":"Programming%20Language/Java/13.%20Classes%2C%20Superclasses%2C%20and%20Subclasses/#subclass-constructor","title":"Subclass Constructor","text":"<p>Sekarang kita buat constructor pada class <code>Manager</code> untuk membuat object.</p> <p>Code</p> Constructor on subclass <pre><code>public Manager(String name, BigDecimal salary, LocalDate hireDay){\n    super(name, salary,hireDay);\n    this.bonus = new BigDecimal(0);\n}\n</code></pre> <p>Dibawah ini adalah full kode dari penggalan kode diatas</p> <p>Code</p> <p>Kode dibawah ini berada pada Package <code>Ch5/J_5_1_Classes_Superclasses_Subclasses/Example1</code></p> Main.javaManager.javaEmployee.java <pre><code>package Ch5.J_5_1_Classes_Superclasses_Subclasses.Example1;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\n\npublic class Main {\n    public static void main(String[] args) {\n        var manager1 = new Manager(\"Farras\",new BigDecimal(13000000), LocalDate.of(2023,6,5));\n        manager1.setBonus(new BigDecimal(2000000));\n        System.out.println(manager1);System.out.println();\n\n        var employee = new Employee(\"Fulan 2\", new BigDecimal(5900000), LocalDate.of(2017,7,3));\n        System.out.println(employee);\n    }\n}\n</code></pre> Output<pre><code>Name            : Farras\nSalary &amp; Bonus  : 15,000,000.00\nHire Day        : 2023-06-05\n\nName            : Fulan 2\nSalary          : 5,900,000.00\nHire Day        : 2017-07-03\n</code></pre> <pre><code>package Ch5.J_5_1_Classes_Superclasses_Subclasses.Example1;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\n\npublic class Manager extends Employee{\n    private BigDecimal bonus;\n\n    public BigDecimal getBonus() {\n        return bonus;\n    }\n\n    public Manager(String name, BigDecimal salary, LocalDate hireDay){\n        super(name, salary,hireDay);\n        this.bonus = new BigDecimal(0);\n    }\n\n    public void setBonus(BigDecimal bonus) {\n        this.bonus = bonus;\n    }\n\n    @Override\n    public BigDecimal getSalary() {\n        return super.getSalary().add(this.getBonus());\n    }\n\n    @Override\n    public String toString() {\n        return super.toString().replace(\"Salary\\t\\t\",\"Salary &amp; Bonus\");\n    }\n}\n</code></pre> <pre><code>package Ch5.J_5_1_Classes_Superclasses_Subclasses.Example1;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\n\npublic class Employee{\n    // instance\n    private String name;\n    private BigDecimal salary;\n\n    private LocalDate hireDay;\n\n    public Employee(String name, BigDecimal salary, LocalDate hireDay){\n        this.name = name;\n        this.salary = salary;\n        this.hireDay = hireDay;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public BigDecimal getSalary() {\n        return salary;\n    }\n\n    public LocalDate getHireDay() {\n        return hireDay;\n    }\n    @Override\n    public String toString() {\n        return \"Name\\t\\t\\t: %s\\nSalary\\t\\t\\t: %,.2f\\nHire Day\\t\\t: %s\".\n                formatted(this.getName(),this.getSalary(),this.getHireDay().toString());\n    }\n}\n</code></pre>"},{"location":"Programming%20Language/Java/13.%20Classes%2C%20Superclasses%2C%20and%20Subclasses/#preventing-inheritance-final-classes-and-methods","title":"Preventing Inheritance: Final Classes and Methods","text":"<p>Class yang tidak dapat diturunkan (extend) disebut dengan final class dan kita harus menggunakan <code>final</code> modifier saat mendefinisikan class untuk mengindikasi bahwa class ini adalah final class. Katakan class <code>Executive</code> tidak bisa lagi diturunkan karena tidak ada yang lebih tinggi dari eksekutif.</p> <p>Code</p> Example.java <pre><code>public final class Executive extends Manager{\n    // method here\n}\n</code></pre> <p>Kita juga dapat membat method tertentu pada sebuah class menjadi <code>final</code>. Jika kita melakukan itu, maka tidak ada subclass yang dapat meng-override method tersebut.</p> <p>Note</p> <p>Semua method didalam final class secara otomatis menjadi final method. Ingat juga bahwa field juga dapat dijadikan final field dimana field tersebut tidak akan pernah berubah lagi semenjak objek class tersebut telah terbuat. Namun class yang di set sebagai final hanya secara otomatis menjadi semua method final, namun fields tidak.</p> <p>Code</p> Example.java <pre><code>public class Manager extends Employee {\n    ...\n    public final String getName(){\n        return this.name;\n    }\n}\n</code></pre>"},{"location":"Programming%20Language/Java/13.%20Classes%2C%20Superclasses%2C%20and%20Subclasses/#casting","title":"Casting","text":"<p>Konversi dari satu tipe data ke tipe data lain disebut dengan Casting. Java programming langguage memmiliki special notasi untuk casting.</p> <p>Code</p> Casting <code>double</code> to <code>int</code> <pre><code>double pecahan = 4d;\nint satuan = (int)pecahan;\n</code></pre> <p>Konversi nilai dari pecahan kedalam integer akan menghilangkan fraksi dari <code>pecahan</code>.</p> <p>Mari sekarang kita lihat casting pada object reference. Mari kita gunakan lagi superclass <code>Employee</code> dan subclass <code>Manager</code>.</p> <p>Code</p> J_1_Casting_Object_Reference.java <pre><code>package Ch5.J_5_1_Classes_Superclasses_Subclasses;\n\nimport Ch5.J_5_1_Classes_Superclasses_Subclasses.Example1.Employee;\nimport Ch5.J_5_1_Classes_Superclasses_Subclasses.Example1.Manager;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\n\npublic class J_1_Casting_Object_Reference {\n    public static void main(String[] args) {\n        Employee[] employees = new Employee[3];\n\n        employees[0] = new Manager(\"farras\",new BigDecimal(13000000), LocalDate.now());\n        employees[1] = new Employee(\"Fulan2\",new BigDecimal(5000000), LocalDate.now());\n        employees[2] = new Employee(\"Fulan3\",new BigDecimal(7500000), LocalDate.now());\n\n        for (Employee data : employees){\n\n            if (data instanceof Manager){ //(1)!\n                Manager boss = (Manager) data;\n                boss.setBonus(new BigDecimal(4500000));\n                System.out.println(boss);\n            }\n            else {\n                System.out.println(data);\n            }\n            System.out.println();\n        }\n    }\n}\n</code></pre> <ol> <li>Semenjak Java 16 kita dapat melakuakn seperti ini     <pre><code>if (data instanceof Manager boss){ //(1)!\n        boss.setBonus(new BigDecimal(4500000));\n        System.out.println(boss);\n    }\n</code></pre></li> </ol> Output<pre><code>Name            : farras\nSalary &amp; Bonus  : 17,500,000.00\nHire Day        : 2023-08-19\n\nName            : Fulan2\nSalary          : 5,000,000.00\nHire Day        : 2023-08-19\n\nName            : Fulan3\nSalary          : 7,500,000.00\nHire Day        : 2023-08-19\n</code></pre> <p>Penjelasan dari kode diatas sbb;</p> <ol> <li>Kita membuat array yang menampung object variabel yang berisikan object reference ke Class <code>Employee</code></li> <li>Saat inisiasi data, ada satu yang diisi dengan objects reference <code>Manager</code>. Ini sah-sah saja, karena tidak semua Employee adalah karyawan, karena ada juga yang menjabat sebagai Manager. Ini disebut dengan Promosing less.</li> <li>Kita me-looping vairable <code>employess</code> dan melakukan pengecheckan apakah element dari Array yang berisikan object tersebut instance dari class <code>Manager</code>. Jika ia maka kita meng-casting element tersebut kedalam type <code>Manager</code>. Selanjutnya kita memanggil method <code>setBonus()</code> dan menampilkan <code>toString()</code> dari object <code>Manager</code>.</li> <li>Jika element bukan instace dari maka kita langsung menampilkan <code>toString()</code> dari object <code>Employee</code>.</li> </ol> <p>Masih membahas tentang casting objects reference. Compiler melakukan pengujian apakah kita memberikan tipe yang lebih tinggi saat menyimpan nilai pada sebuah variable. Ada dua jenis, promosing less dan promosing more;</p> <ul> <li> <p>Jika kita memberikan subclass reference pada superclass variable maka kita melakukan prmissing less, dan compiler akan menganggap itu sah-sah saja (Sebagaimana cotoh diatas kita memberikan object reference subclass <code>Manager</code> pada variable superclass <code>Employee</code>).</p> </li> <li> <p>Jika kita memberikan superclass reference pada sublcass variable maka kita melakukan promosing more. Jika demikian kita harus menggunakan cast sehingga promise daat di check saat runtime oleh compiler.</p> </li> </ul> <p>Code</p> J_2_Casting_Promosing_More_and_Less.java <pre><code>package Ch5.J_5_1_Classes_Superclasses_Subclasses;\n\nimport Ch5.J_5_1_Classes_Superclasses_Subclasses.Example1.Employee;\nimport Ch5.J_5_1_Classes_Superclasses_Subclasses.Example1.Manager;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\n\npublic class J_2_Casting_Promosing_More_and_Less {\n    public static void main(String[] args) {\n\n        // Promosing less\n        Employee realManager = new Manager(\"farras\",new BigDecimal(13000000), LocalDate.now());\n\n        // Promosing More\n        Manager fakeManager = (Manager) new Employee(\"farras\",new BigDecimal(13000000), LocalDate.now());\n    }\n}\n</code></pre> <p>Lalu bagaimana jika kita melakukan cast down pada rantai inheritance. Misalkan object reference di cast ke class Manager.</p> <p>Code</p> J_3_Casting_to_Subclass.java <pre><code>package Ch5.J_5_1_Classes_Superclasses_Subclasses;\n\nimport Ch5.J_5_1_Classes_Superclasses_Subclasses.Example1.Employee;\nimport Ch5.J_5_1_Classes_Superclasses_Subclasses.Example1.Manager;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\n\npublic class J_3_Casting_to_Subclass {\n    public static void main(String[] args) {\n\n        try {\n            // will raise ClassCastException\n            Employee karyawan = new Employee(\"Fulan2\",new BigDecimal(5000000), LocalDate.now());\n            Manager manager = (Manager) karyawan;\n        }\n        catch (ClassCastException ex){\n            System.out.println(ex.getLocalizedMessage());\n        }\n\n    }\n}\n</code></pre> Output<pre><code>class Ch5.J_5_1_Classes_Superclasses_Subclasses.Example1.Employee cannot be cast to class Ch5.J_5_1_Classes_Superclasses_Subclasses.Example1.Manager\n</code></pre> <p>jika kita tidak menangkap exception <code>catch</code>, program kita akan berhenti. Maka dari itu, praktik yang baik kita kita mencari tahu dahulu apakah cast akan berhasil sebelum kita melakukan casting. Kita dapat menggunakan apa yang telah kita gunakan pada conoht diatas, yaitu menggunakan <code>instaceof</code></p> <p>Code</p> Example.java <pre><code>package Ch5.J_5_1_Classes_Superclasses_Subclasses;\n\nimport Ch5.J_5_1_Classes_Superclasses_Subclasses.Example1.Employee;\nimport Ch5.J_5_1_Classes_Superclasses_Subclasses.Example1.Manager;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\n\npublic class J_4_Casting_Save_With_Instanceof {\n    public static void main(String[] args) {\n\n        Employee karyawan = new Employee(\"Fulan2\",new BigDecimal(5000000), LocalDate.now());\n\n        if(karyawan instanceof Manager) {\n            Manager manager = (Manager) karyawan;\n        }else {\n            System.out.println(\"Karyawan bukan isntace dari manager\");\n        }\n\n    }\n}\n</code></pre> Output<pre><code>Karyawan bukan isntace dari manager\n</code></pre>"},{"location":"Programming%20Language/Java/13.%20Classes%2C%20Superclasses%2C%20and%20Subclasses/#access-modifeir","title":"Access Modifeir","text":"<p>Berbicara tentang akses field dan method dari sebuah class, dibawha ini adalah empat akses kontrol yang disediakan olhe Java</p> <ol> <li>Accessible in the class only (private).</li> <li>Accessible by the world (public).</li> <li>Accessible in the package and all subclasses (protected).</li> <li>Accessible in the package\u2014the (unfortunate) default. No modifiers are needed.</li> </ol>"},{"location":"Programming%20Language/Java/14.%20Object%20the%20Cosmic%20Superclass/","title":"Object the Cosmic Superclass","text":"<p>Info</p> <p>Semua file yang ada pada contoh pada catatan ini ada pada package <code>Ch5/J_5_2_Objects_The_Cosmic_Class</code></p> <p>Class <code>Objetcs</code> adalah super parent dari semual class yang ada didalam Java. Namun kita tidak perlu menuliskan secara langsung <code>extends</code> pada class tersebut</p> <p>Code</p> No need and never did <pre><code>public class Employee extends Objects{\n    ...\n}\n</code></pre> <p>Karena semua class menurunkan dari class <code>Objects</code>, maka dari itu sangat penting bagi kita untuk mengetahui service yang diberikan oleh class ini.</p>"},{"location":"Programming%20Language/Java/14.%20Object%20the%20Cosmic%20Superclass/#variable-of-type-objects","title":"Variable of Type Objects","text":"<p>Kita dapat menggunakan type <code>object</code> untuk merujuk (reference) ke objek apapun itu</p> <p>Code</p> Type <code>object</code> reference to Employee object <pre><code>Object employee = new Employee(\"Farras\",\n                new BigDecimal(13_000_000), LocalDate.now());\n</code></pre> <p>Penggunaan type <code>object</code> hanya berguna sebagai penampungan umum (Generic holder) untuk nilai apapun. Untuk melakukan hal yang spesifik misalnya method pada sebauh class, kita harus mengetahui type asli dari object referencenya dan melakukan casting.</p> <p>Code</p> J_1_Variable_Type_Objects.java <pre><code>package Ch5.J_5_2_Objects_The_Cosmic_Class;\n\nimport Ch5.J_5_1_Classes_Superclasses_Subclasses.Example1.Employee;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\n\npublic class J_1_Variable_Type_Objects {\n    public static void main(String[] args) {\n        Object employee = new Employee(\"Farras\",\n                new BigDecimal(13_000_000), LocalDate.now());\n\n        System.out.println(employee);\n        System.out.println();\n\n        // cast to Employee if want getMethod in class Employee\n        System.out.println(((Employee) employee).getName());\n    }\n}\n</code></pre> Output<pre><code>Name            : Farras\nSalary          : 13,000,000.00\nHire Day        : 2023-08-20\n\nFarras\n</code></pre>"},{"location":"Programming%20Language/Java/14.%20Object%20the%20Cosmic%20Superclass/#the-equals-method","title":"The Equals Method","text":"<p>Method yang berada didalam object class berguna untuk menguji apakah object tersebut memilik refference yang sama dangen objek yang lainnya.</p> <p>Code</p> J_2_The_Equals_Method.java <pre><code>public class J_2_The_Equals_Method {\n    public static void main(String[] args) {\n\n        Object employee1 = new Employee(\"Farras\",new BigDecimal(\"9500000\"), LocalDate.now());\n        Object employee2 = new Employee(\"Farras\",new BigDecimal(\"9500000\"), LocalDate.now());\n        Object copyOfEmployee1 = employee1;\n\n        System.out.println(employee1.equals(employee2)); //false\n        System.out.println(employee1.equals(copyOfEmployee1)); //true\n        System.out.println(copyOfEmployee1.equals(employee1)); //true\n    }\n}\n</code></pre> <p>Terdapat 3 objek, employee1, employee2, dan copyOfEmployee1. Return value <code>equals</code> antara employee1 dan employee2 adalah false, walaupun pada saat membuat constructore kita memberikan nilai yang sama. Mengapa ? karena method <code>equals</code> pada class <code>Object</code> hanya mengabalikan nilai <code>True</code> jika objek memliki refference yang sama. Dibuktikan dengan penggunaan method <code>equals</code> antara employee1 dan copyOfEmployee1 yang mengembalikan nilai <code>True</code> karena refference keduanya adalah Identical.</p> <p>Code</p> Object.java <pre><code>public boolean equals(Object obj) {\n        return (this == obj);\n    }\n</code></pre> <p>Selanjutnya mari kita putuskan, objek employee kita katakan sama jika memliki nama, gaji dan tanggal rekrutment yang sama. Mari kita override method <code>equals</code> pada class <code>Employee</code>.</p> <p>Code</p> J_2_The_Equals_Method.java <pre><code>public class Employee{\n\n    // ... Code dipotong\n\n    @Override\n    public boolean equals(Object obj) {\n\n\n        // Return true, jelas identical\n        if (this == obj) return true;\n\n        // mengembalikan false jika eksplisti parameter bernilai null\n        if (obj == null) return false;\n\n        // Objek sama jikai class instancenya sama\n        if (getClass() != obj.getClass()) return false;\n\n        // sekarang kita tahu, explisti parameter bukan null\n\n        // Casting explisit parameter ke Employee\n        Employee eksplisitEmployee = (Employee) obj;\n\n        // Membandingkan nilai dari field\n        return this.getName().equals(eksplisitEmployee.getName())\n                &amp;&amp; this.getSalary().compareTo(eksplisitEmployee.getSalary()) == 0\n                &amp;&amp; this.getHireDay().isEqual(eksplisitEmployee.getHireDay());\n    }\n}\n</code></pre> <p>Sekarangkan jalankan kode yang sama saat membandingkan employee1, employee2, dan copyOfEmployee1. Terutama antaran employee1 dan employee2 akan mengembalikan nilai <code>true</code> dari yang sebelumnya <code>false</code>.</p>"},{"location":"Programming%20Language/Java/14.%20Object%20the%20Cosmic%20Superclass/#equality-testing-and-inheritance","title":"Equality Testing and Inheritance","text":"<p>Katakan, employee2 sekarang menjadi seorang manager, tidak ada perubahan termasuk gaji (hikss ), yang berubah hanya bonus. Apakah employee1 dan employee2 tetap mengambalikan nilai <code>True</code> ? </p> <p>Jawabannya adalah tidak. Karena method <code>equals</code> yang telah kita override akan mengembalikan nilai <code>false</code> jika bukan dari class yang sama. Sedangkan class Employee dan class Manger berbeda. Banyak programmer menggunakan <code>instance of</code> ketika berhubungan dengan perbandingan antara instance dengan inheritance. Namun penggunan <code>instanceof</code> ini menjadi kontervesi.</p> <pre><code>if (!(obj instanceof Employee)) return false;\n</code></pre> <p>Kode diatas memungkina bawah objek obj adalah instance dari subclass Employee. Namun pendekatan tersebut bisa menjadi masalah. Mengapa ? Karena Java Langauage Specification mewajibkan method <code>equals</code> memiliki properties berikut;</p> <ol> <li>Reflexsive, untuk setiap non-null refferences, <code>x</code>, nilai <code>x.equals(x)</code> harus bernilai <code>true</code>.</li> <li>Symetri, untuk setipa non-null refferences, <code>x</code> dan <code>y</code>, jika nilai dari <code>x.equals(y)</code> benar, maka <code>y.equals(x)</code> harus benar pula.</li> <li>Transitive, untuk setiap non-null refferences, <code>x</code>, <code>y</code> dan <code>z</code>, jikai <code>x.equals(y)</code> benar, <code>y.equals(z)</code> benar, maka <code>x.equals(z)</code> harus benar pula.</li> <li>Consistent, selama tidak ada perubahan antara instance yang diuji, maka kembalian method <code>equals</code> harus selalu sama.</li> <li>untuk setiap non-null refferences, <code>x</code>, <code>x.equals(null)</code> selalu bernilai salah.</li> </ol> <p>Code</p> J_2_The_Equals_Method_2.javaManager.java <pre><code>public class J_2_The_Equals_Method_2 {\n    public static void main(String[] args) {\n\n        Employee employee1 = new Employee(\"Farras\",new BigDecimal(\"9500000\"), LocalDate.now());\n        Manager employee2 = new Manager(\"Farras\",new BigDecimal(\"9500000\"), LocalDate.now());\n        employee2.setBonus(new BigDecimal(\"1000000\"));\n\n        System.out.println(employee1.equals(employee2)); //false\n        System.out.println(employee2.equals(employee1)); //true\n        // this equals method doesn't symmetric\n    }\n}\n</code></pre> <pre><code>public class Manager extends Employee {\n    // Dipotong\n\n    @Override\n    public boolean equals(Object obj) {\n\n        // jika null tetap false\n        if (obj == null) return false;\n\n\n        if (obj instanceof Employee) return true;\n\n        Manager manager = (Manager) obj;\n\n        return this.getName().equals(manager.getName())\n                &amp;&amp; this.getSalary().compareTo(manager.getSalary()) == 0\n                &amp;&amp; this.getHireDay().isEqual(manager.getHireDay());\n    }\n}\n</code></pre>"},{"location":"Programming%20Language/Java/15.%20Generic%20Array%20Lists/","title":"Generic Array Lists","text":"<p>sample</p> <p>Code</p> Example.java Output <p>Code</p> Example.javaExample.java Output Output <p>Code</p> Example 1Example 2 Output Output"},{"location":"Programming%20Language/Java/others/01.%20sftp/","title":"SFTP","text":""},{"location":"Programming%20Language/Java/others/01.%20sftp/#ssh-client-java-menggunakan-sshj","title":"SSH Client Java menggunakan SSHJ","text":"<p>Github repository sshj</p>"},{"location":"Programming%20Language/Python/","title":"Preface Python","text":"<p> Masih dalam proses belajar, catatan ini masih dapat berkembang</p> <p>Warning</p> <p>Catatan ini sifatnya pribadi untuk umum, artinya siapa saja bisa baca. Namun saya tidak bertanggung jawab secara  penuh jika anda menggunakan apa yang ada pada catatan ini dan menjadi masalah</p>"},{"location":"Programming%20Language/Python/#background","title":"Background","text":"<p>Cita-cita saya sangat banyak, saya ingin menjadi orang yang ahli dalam bidang security dan data scientis, termasuk AI didalamnya. Ada yang bilang jangan jadi All Jack, lebih baik One As. Betul tidak salah, namun mengapa tidak All AS. Allah maha melihat hambanya yang berusaha.</p> <p>Hadist</p> <p>Dari Abu Hurairah radhiallahu \u2018anhu, Rasulullah Shallallahu Alaihi Wassalam bersabda</p> <p>\u0627\u0644\u0652\u0645\u064f\u0624\u0652\u0645\u0650\u0646\u064f \u0627\u0644\u0652\u0642\u064e\u0648\u0650\u0649\u0651\u064f \u062e\u064e\u064a\u0652\u0631\u064c \u0648\u064e\u0623\u064e\u062d\u064e\u0628\u0651\u064f \u0625\u0650\u0644\u064e\u0649 \u0627\u0644\u0644\u0651\u064e\u0647\u0650 \u0645\u0650\u0646\u064e \u0627\u0644\u0652\u0645\u064f\u0624\u0652\u0645\u0650\u0646\u0650 \u0627\u0644\u0636\u0651\u064e\u0639\u0650\u064a\u0641\u0650 \u0648\u064e\u0641\u0650\u0649 \u0643\u064f\u0644\u0651\u064d \u062e\u064e\u064a\u0652\u0631\u064c \u0627\u062d\u0652\u0631\u0650\u0635\u0652 \u0639\u064e\u0644\u064e\u0649 \u0645\u064e\u0627 \u064a\u064e\u0646\u0652\u0641\u064e\u0639\u064f\u0643\u064e \u0648\u064e\u0627\u0633\u0652\u062a\u064e\u0639\u0650\u0646\u0652 \u0628\u0650\u0627\u0644\u0644\u0651\u064e\u0647\u0650 \u0648\u064e\u0644\u0627\u064e \u062a\u064e\u0639\u0652\u062c\u0650\u0632\u0652 \u0648\u064e\u0625\u0650\u0646\u0652 \u0623\u064e\u0635\u064e\u0627\u0628\u064e\u0643\u064e \u0634\u064e\u064a\u0652\u0621\u064c \u0641\u064e\u0644\u0627\u064e \u062a\u064e\u0642\u064f\u0644\u0652 \u0644\u064e\u0648\u0652 \u0623\u064e\u0646\u0651\u0650\u0649 \u0641\u064e\u0639\u064e\u0644\u0652\u062a\u064f \u0643\u064e\u0627\u0646\u064e \u0643\u064e\u0630\u064e\u0627 \u0648\u064e\u0643\u064e\u0630\u064e\u0627. \u0648\u064e\u0644\u064e\u0643\u0650\u0646\u0652 \u0642\u064f\u0644\u0652 \u0642\u064e\u062f\u064e\u0631\u064f \u0627\u0644\u0644\u0651\u064e\u0647\u0650 \u0648\u064e\u0645\u064e\u0627 \u0634\u064e\u0627\u0621\u064e \u0641\u064e\u0639\u064e\u0644\u064e \u0641\u064e\u0625\u0650\u0646\u0651\u064e \u0644\u064e\u0648\u0652 \u062a\u064e\u0641\u0652\u062a\u064e\u062d\u064f \u0639\u064e\u0645\u064e\u0644\u064e \u0627\u0644\u0634\u0651\u064e\u064a\u0652\u0637\u064e\u0627\u0646\u0650</p> <p>\u201cMukmin yang kuat lebih baik dan lebih dicintai oleh Allah daripada mukmin yang lemah. Namun, keduanya tetap memiliki kebaikan. Bersemangatlah atas hal-hal yang bermanfaat bagimu. Minta tolonglah pada Allah, jangan engkau lemah. Jika engkau tertimpa suatu musibah, maka janganlah engkau katakan: \u2018Seandainya aku lakukan demikian dan demikian.\u2019 Akan tetapi hendaklah kau katakan: \u2018Ini sudah jadi takdir Allah. Setiap apa yang telah Dia kehendaki pasti terjadi.\u2019 Karena perkataan law (seandainya) dapat membuka pintu setan.<sup>1</sup>\u201d</p> <p>Python banyak digunakan pada tools security dan python juga banyak digunakan dalam pengembangan teknologi machine learning, serta data scient. Maka dari itu saya ingin menguasai bahasa python (dengan izin Allah) untuk menggapai cita-cita saya.</p>"},{"location":"Programming%20Language/Python/#books","title":"Books","text":"<p>Sumber buku berjudul Learn Python Programming An in-depth introduction to fundamentasl python ** yang ditulis oleh Fabrizio Romano dan Heinrich Kruger serta dipublish oleh Packt Publishing.</p>"},{"location":"Programming%20Language/Python/#why-this-books","title":"Why this books ?","text":"<p>Oke, pertama, saya sangat suka dengan kebanyakan struktur serta bahasa dari buku yang diterbitkan Packt (Walaupun terkadang tidak semuanya), sehingga mudah untuk dipahami dan tidak lompat sana dan lompat sini dari setiap chapter, terususun secara rapih. Dan pada buku ini penulis menjelaskan secara detail dibalik bahasa python dengan bahasa yang mudah dimengerti.</p> <ol> <li> <p>HR. Muslim no. 2664.\u00a0\u21a9</p> </li> </ol>"},{"location":"Programming%20Language/Python/01.%20Data%20Types/","title":"Data Types","text":"<p>Standar library dari python yang berhubungan dengan tanggal dan waktu adalah;</p> <ul> <li>datetime</li> <li>calender</li> <li>zoneinfo</li> <li>time</li> </ul>"},{"location":"Programming%20Language/Python/01.%20Data%20Types/#date","title":"Date","text":"<p>Import <code>date</code> class dari datetime <pre><code>from datetime import date\n</code></pre></p> <p>Membuat objek dari class <code>date</code> dan tipe data dari variabel yang menampung instansi dari class <code>date</code></p> <p>Code</p> python3Output <pre><code>today = date.today()\ntype(today)\n</code></pre> <pre><code>&lt;class 'datetime.date'&gt;\n</code></pre> <p>Dibawah ini adalah objek dari <code>datetime.date</code></p> <p>Code</p> python3Output <pre><code>print(date)\n</code></pre> <pre><code>2023-02-11\n</code></pre> <p>method <code>ctime</code> mengembalikan current time dalam bentuk string</p> <p>Code</p> python3Output <pre><code>today.ctime*()\n</code></pre> <pre><code>'Sat Feb 11 00:00:00 2023'\n</code></pre> <p>Method <code>isoformat()</code> mengembalikna nilai string dalam bentuk format ISO 8601, YYYY-MM-DD.</p> <p>Code</p> python3Print <pre><code>today.isoformat()\n</code></pre> <pre><code>'2023-02-11'\n</code></pre> <p>Objek <code>datetime.date</code> memliki <code>day</code>, <code>month</code>, dan <code>year</code> mengembalikan nilai hari, bulan dan tahun tipe int</p> <p>Code</p> python3Print <pre><code>today.day\ntoday.month\ntoday.year\n</code></pre> <pre><code>11\n02\n2023\n</code></pre> <p>Metho <code>timetuple</code> mengembalikan time tuple</p> <p>Code</p> python3Print <pre><code>today.timetuple()\n</code></pre> <pre><code>time.struct_time(tm_year=2023, tm_mon=2, tm_mday=11, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=5, tm_yday=42, tm_isdst=-1)\n</code></pre> <p>Method <code>weekday</code> mengembalikan hari dari satu minggu dalam bentuk int,</p> <ol> <li>Monday</li> <li>Thursday</li> <li>Wednesday</li> <li>Tuesday</li> <li>Friday</li> <li>Saturday</li> <li>Sunday</li> </ol> <p>Code</p> python3Print <pre><code>today.weekday()\n</code></pre> <pre><code>5 # (1)!\n</code></pre> <ol> <li>5, karena hari ini code tersebut dijalankan adalah hari Sabtu heheh</li> </ol>"},{"location":"Programming%20Language/Python/01.%20Data%20Types/#calendar","title":"Calendar","text":"<p>Kita dapat memanfaatkan method <code>weekday</code> dengan eskalasi return value tersebut dengan dictionary <code>calender.day_name</code>. Sebelum itu anda harus mengimport class calender terlebih dahulu </p> <p>Code</p> python3Print <pre><code>import calendar\n\ncalendar.day_name[today.weekday()]\n</code></pre> <pre><code>Saturday\n</code></pre>"},{"location":"Programming%20Language/Python/01.%20Data%20Types/#time","title":"Time","text":"<p>Module time menyediakan beberapa fungsi untuk memanipulasi waktu. Berbicara tentang waktu, ada dua standar yang merepresentasi waktu;</p> <ol> <li> <p>Bilangan dalam bentuk detik (seconds) epoch, dalam UTC (GMT). Nilai tersebut dapat dalam bentuk integer atau floating point (pecahan). Nilai epoch telah terdefinisi, detik 0 menunjuk pada 01 Januari 1970.</p> </li> <li> <p>Nilai-nilai dalam bentuk tuple berisikan 9 bilangan, seperit <code>year</code>, <code>month</code>, <code>day</code>, <code>hours</code>, <code>minutes</code>, <code>seconds</code>, <code>weekday</code>, <code>julian day</code> (hari dalam satu tahun), dan <code>dst</code> (Day Light Saving Time, ditandai dengan -1, 0 atau 1)</p> </li> </ol> <p>Modul time memliki method <code>ctime()</code> yang dapat mengkonversi detik epoch kedalam string dalam local time.</p> <p>Code</p> python3Print <pre><code>import time\n\ntime.ctime()\n</code></pre> <pre><code>'Sat Feb 11 22:24:04 2023'\n</code></pre> <p>Modul ini juga memliki property <code>daylight</code> yang mengembalikan 0 jika malam hari dan 1 jika siang hari.</p> <p>Code</p> python3Print <pre><code>time.daylight\n</code></pre> <pre><code>0 # (1)!\n</code></pre> <ol> <li>Karena saat ini malam makan akan mengambalikan nilai <code>0</code>.</li> </ol> <p>Epoch time sendiri dapat diambil nilainya menggunakan method <code>time()</code></p> <p>Code</p> python3Print <pre><code>time.time()\n</code></pre> <pre><code>1676130239.1693265\n</code></pre> <p>Metohd <code>gmtime()</code> akan mengkonversi epoch kedalam time tuple UTC. Jika method ini tidak diberikan sebuah parameter maka akan menggunakan current time waktu GMT.</p> <p>Code</p> python3Print <pre><code>time.gmtime()\n</code></pre> <pre><code>time.struct_time(tm_year=2023, tm_mon=2, tm_mday=11, tm_hour=15, tm_min=36, tm_sec=16, tm_wday=5, tm_yday=42, tm_isdst=0)\n</code></pre> <p>Code</p> python3Print <pre><code>time.gmtime(1999999999)\n</code></pre> <pre><code>time.struct_time(tm_year=2023, tm_mon=2, tm_mday=11, tm_hour=15, tm_min=52, tm_sec=9, tm_wday=5, tm_yday=42, tm_isdst=0)\n</code></pre> <p>Selain gmtime, modul ini juga memliki method yang sejenis namun tidak merepresentasi waktu GMT melainkan localtime, method tersebut adalah <code>localtime</code>. Jika method ini tidak diberikan sebuah parameter maka akan menggunakan current time pada localtime.</p> <p>Code</p> python3Print <pre><code>time.localtime()\n</code></pre> <pre><code>time.struct_time(tm_year=2023, tm_mon=2, tm_mday=11, tm_hour=22, tm_min=52, tm_sec=9, tm_wday=5, tm_yday=42, tm_isdst=0)\n</code></pre> <p>GMT (Greemwich Mean Time) adalah rata-rata waktu surya yang dilihat dari Royal Greenwich Observatory (Observatorium Kerajaan di Greenwich), yang terletak di Greenwich, London, Inggris, yang melalui konvensi dikenal terletak di 0 derajat garis bujur.</p> <p>Perbedaan antara GMT dengan Western Indonesia Time (WIB) sekitar tujuh jam. Dapat dilihat di tm_hour dari snippet diatas. tm_hour dari fungsi gmtime() 10 dan dari localtime() adalah 17, selisih 7 jam.</p>"},{"location":"Programming%20Language/Python/01.%20Data%20Types/#datetime","title":"Datetime","text":"<p>Dengan module <code>datetime</code> ini, kita dapat mengambil nilai <code>date</code> saja atau <code>time</code> saja. Untuk membuat objek dari class ini dapat menggunakan 3 cara;</p> <p>Info</p> <p>Untuk menggunakan modul <code>datetime</code> anda harus mengimportnya <code>from datetime import datetime</code></p> <ol> <li> <p>Menggunakan method <code>now()</code></p> <p>Code</p> python3Print <pre><code>datetime.now()\n</code></pre> <pre><code>datetime.datetime(2023, 2, 11, 23, 16, 34, 533686)\n</code></pre> </li> <li> <p>Menggunakan method <code>utcnow()</code></p> <p>Code</p> python3Print <pre><code>datetime.utcnow()\n</code></pre> <pre><code>datetime(2023, 2, 11, 16, 16, 34, 733540)\n</code></pre> </li> <li> <p>Memberikan 3 parementer wajin (<code>year</code>, <code>month</code>, dan <code>day</code>) pada <code>datetime()</code></p> <p>Code</p> python3Print <pre><code>datetime(2023,12,10)\n</code></pre> <pre><code>datetime.datetime(2023, 12, 10, 0, 0)\n</code></pre> </li> </ol>"},{"location":"Programming%20Language/Python/01.%20Data%20Types/#play-with-datetime","title":"Play With Datetime","text":"<p>Katakan kita ingin mengetahui perbedaan dari dua tanggal, anda dapat mengurangi objek datetime pertama dengan objek datetime lainnya.</p> <p>Sebagai simulasi kita akan membuat datetime tanggal kelahiran Faris dan Noah dan kita ingin mengetahui perbedaan umur mereka</p> <p>Code</p> python3Print <pre><code>from zoneinfo import ZoneInfo\ndt_f = datetime(year=2021, month=10, day = 13, hour=0, minute=23, tzinfo=ZoneInfo(\"Asia/Jakarta\"))\ndt_n = datetime(year=2020, month=5, day = 11, hour=11, minute=30, tzinfo=ZoneInfo(\"Asia/Jakarta\"))\n\ndiff = dt_f - dt_n\n\nprint(f'Selisih hari lahir Faris dan Noah {diff.days} hari')\nprint(f'Selisih detik lahir Faris dan Noah {diff.total_seconds()} hari')\n</code></pre> <pre><code>Selisih hari lahir Faris dan Noah 519 hari\nSelisih detik lahir Faris dan Noah 44887980.0 hari\n</code></pre> <p>Variabel dt_f dan dt_n diatas bertipe datetime.datetime, akan tetapi operasi pengurangan kedua tabel tersebut menghasilkan tipe data lain, yaitu timedelta.</p> <p>Code</p> python3Print <pre><code>print(type(dt_f))\nprint(type(dt_n))\nprint(type(diff))\n</code></pre> <pre><code>&lt;class 'datetime.datetime'&gt;\n&lt;class 'datetime.datetime'&gt;\n&lt;class 'datetime.timedelta'&gt;\n</code></pre> <p>Timedelta adalah perbedaan nilai diatara dua nilai <code>datetime</code>. Anda juga dapat membuat objek timedelta menggunakan constructor dari timedelta. Anda harus mengimport nya dengan script dibawah ini</p> <pre><code>from datetime import timedelta\n</code></pre> <p>Semua argumen untuk membuat objek timedelta opsional.</p> <pre><code>timedelta(days=0, seconds=0, microseconds=0, milliseconds=0, minutes=0, hours=0, weeks=0)\n</code></pre> <p>Misalkan, anda ingin megetahui umur Faris 5000 hari dari kelahiran sudah berapa tahun</p> <p>Code</p> python3Print <pre><code>limaRibuHari = timedelta(days=5000)\numurFaris = dt_f + limaRibuHari\nprint(umurFaris)\n</code></pre> <pre><code>2035-06-22 00:23:00+07:00\n</code></pre>"},{"location":"Programming%20Language/Python/01.%20Data%20Types/#parsing-between-different-date-tye","title":"Parsing Between Different Date Tye","text":"<p>Liha lah tanggal ini <code>1977-11-24T19:30:13+01:00</code>, itu adalah tanggal standard internasional, ISO. Banyak aplikasi diluarsana menggunakan standard penulisan ini. Pertanyaan, lalu bagaimana jika ingin belerja dengan objek datetime pada python ?</p> <p>Pythonn dapat mengkonversi tipe date iso format kedalam objek datetime python menggunakan method <code>fromisoformat()</code></p> <p>Code</p> python3Print <pre><code>iso_date = '1977-11-24T19:30:13+01:00'\nprint(datetime.fromisoformat(iso_date))\n</code></pre> <pre><code>1977-11-24 19:30:13+01:00\n</code></pre> <p>Dan python juga dapat memformat timestamp kedalam datetime menggunakna method <code>fromtimestamp()</code></p> <p>Code</p> python3Print <pre><code>time_stamp_now = time.time()\nprint(datetime.fromtimestamp(time_stamp_now, tz=ZoneInfo(\"Asia/Jakarta\"))) # (1)!\n</code></pre> <ol> <li>Menggunakan waktu Asia Jakarta</li> </ol> <pre><code>2023-02-12 00:15:26.170209+07:00\n</code></pre>"},{"location":"Programming%20Language/Python/02.%20Conditional%20and%20Iteration/","title":"Conditional and Iteration","text":""},{"location":"Programming%20Language/Python/02.%20Conditional%20and%20Iteration/#conditional-if-statement-and-tennary-operator","title":"Conditional if Statement and Tennary Operator","text":"<p>Code</p> if statementTennary Operator Code<pre><code>order_total = 247\nif order_total &gt; 100:\n    discount = 25  # GBP\nelse:\n    discount = 0  # GBP\nprint(f'Jumlah order {order_total}, mendapatkan diskon {discount}')\n</code></pre> Print ouput<pre><code>Jumlah order 247, mendapatkan diskon 25\n</code></pre> Code<pre><code>order_total = 247\ndiscount = 25 if order_total &gt; 100 else 0\nprint(f'Jumlah order {order_total}, mendapatkan diskon {discount}')\n</code></pre> Print ouput<pre><code>Jumlah order 247, mendapatkan diskon 25\n</code></pre>"},{"location":"Programming%20Language/Python/02.%20Conditional%20and%20Iteration/#looping","title":"Looping","text":"<p>Code</p> for loop on listfor loon on range Code<pre><code>for number in [0, 1, 2, 3, 4]:\n    print(number)\n</code></pre> Print ouput<pre><code>0\n1\n2\n3\n4\n</code></pre> Code<pre><code>for number in range(5):\n    print(number)\n</code></pre> Print ouput<pre><code>0\n1\n2\n3\n4\n</code></pre>"},{"location":"Programming%20Language/Python/02.%20Conditional%20and%20Iteration/#get-value-from-list-using-for-loop-and-range","title":"get value from list using for loop and range","text":"<p>Kita dapat memanfaat fungsi <code>range()</code> untuk mendapatkan nomor urut dari index.</p> <p>Code</p> <pre><code>nama = 'farras', 'tania', 'faris', 'noah'\nfor position in range (len (nama) ):\n    print(f'Nomor urut {position} adalah {nama[position]}')\n</code></pre> Print ouput<pre><code>Nomor urut 0 adalah farras\nNomor urut 1 adalah tania\nNomor urut 2 adalah faris\nNomor urut 3 adalah noah\n</code></pre> <p>cara diatas agak sedikir rumit, di python kita dapat menggunakan cara yang lebih simpel. Kita tidak perlu mengambila nilai dari tuple melalui index. Dibawah ini cara yang lebih elegan.</p> <p>Code</p> <pre><code>nama = 'farras', 'tania', 'faris', 'noah'\nfor real in nama:\n    print(f'Namanya adalah {real}')\n</code></pre> Print ouput<pre><code>Namanya adalah farras\nNamanya adalah tania\nNamanya adalah faris\nNamanya adalah noah\n</code></pre> <p>Hmm contoh, jika kita ingin tetap menggunakan position sebagai nomor urut. Apakah kita harus menggunakan fungsi <code>len()</code> lagi ?. Tidak perlu  kita dapat menggunakan <code>enumerate</code>. Enumerate memberikan dua tuple berpasangan, (position, value)</p> <p>Code</p> <pre><code>nama = 'farras', 'tania', 'faris', 'noah'\nfor positions, value in enumerate (nama):\n    print(f'Nomor {positions} disini oleh {value}')\n</code></pre> Print ouput<pre><code>Nomor 0 disini oleh farras\nNomor 1 disini oleh tania\nNomor 2 disini oleh faris\nNomor 3 disini oleh noah\n</code></pre> <p>Anda dapat menggunakan parameter start pada enumerate function untuk menentukan dari urutan berapa positions akan dimulai.</p> <p>Code</p> <pre><code>nama = 'farras', 'tania', 'faris', 'noah'\nfor positions, value in enumerate (nama, start = 2): # (1)!\n    print(f'Nomor {positions} disini oleh {value}')\n</code></pre> <ol> <li>Argumen ke-2 diisi degan integer bernilai 2</li> </ol> Print ouput<pre><code>Nomor 2 disini oleh farras # (1)!\nNomor 3 disini oleh tania\nNomor 4 disini oleh faris\nNomor 5 disini oleh noah\n</code></pre> <ol> <li>Nomor urut dimulai dari angka 2 dari pada 0.</li> </ol>"},{"location":"Programming%20Language/Python/02.%20Conditional%20and%20Iteration/#iterators-and-iterable","title":"Iterators and Iterable","text":"<p>Iterable, adalah sebuah objek yang dapat sekaligus mengembalikan semua anggotnya. Contoh interable adalah semua squances types (<code>list</code>, <code>str</code>, dan <code>tuple</code>) dan beberapa non -sequances type (<code>dictionary</code>, <code>file object</code>, dan object dari semua class yang didalamnya ada function, i method atau <code>__getitem__</code> yang mengimplementasi squance semantics.</p> <p>Iterable dapat menggunakan for loop dan dibanyak tempat dimana rangkaian (sequence) dibutuhkan, seperiti (<code>zip()</code>, <code>map()</code>, ...). Ketika iterable ditempatkan sebagai argumen/operator pada fungsi bawaan <code>iter()</code>, fungsi tersebut akan mengembalikan iterator untuk objek tersebut.</p> <p>Code</p> tuple menjadi iteratorlist menjadi iterator Code<pre><code>nama = 'farras', 'faris', 'noah'\nprint(type (nama))\n\niter_nama = iter(nama)\nprint(type (iter_nama))\n</code></pre> Print ouput<pre><code>&lt;class 'tuple'&gt;\n&lt;class 'tuple_iterator'&gt;\n</code></pre> Code<pre><code>ttl = ['jakarta', 'parung', 'parung']\nprint(type(ttl))\n\niter_ttl = iter(ttl)\nprint(type(iter_ttl))\n</code></pre> Print ouput<pre><code>&lt;class 'list'&gt;\n&lt;class 'list_iterator'&gt;\n</code></pre> <p>iterator bagus untuk melewati satu persatu nilai dari himpunan nilai yang dirubah kedalam iterator. Penggunaan itertor biasa digunakan ketika membaca sebuah data dari file. pada contoh dibawah ini kita akan menggunakan objek iterator pada snipet diatas. Untuk mebaca satu persatu nilai dari iterator objek kita akan menggunakan fungsi <code>next()</code>.</p>"},{"location":"Programming%20Language/Python/02.%20Conditional%20and%20Iteration/#alasan-harus-menggunakan-iterators","title":"Alasan harus menggunakan iterators","text":"<p>Didunia teknologi yang berkembang pesat, kita ditantang membuat analisa menggunakan data yang amat-amat banyak. Masalah terbesarnya adalah penanganan data yang besar ini saat melakukan proses analisa dapat menyebabkan kapasitas memori mencapai limitnya bahkan habis. Jika kita dihadapi dengan masalah tersebut, kita harus mengenal dengan yang namanya konsep iterators.</p> <p>Jadi, dari pada memasukan data sekali jalan untuk melakukan beberapa operasi, lebih baik masukan data yang lebih sedikit atau data yang dibutuhkan saja pada setiap operasi. Dengan demikian akan mengurangi resiko memori anda termakan habis, dan begitulah cara kerja dari konsep iterators,</p> <p>Jadi, penggunaan iterator menghemat banyak memori karena iterator tidak memasukan data saat diolah namun saat data tersebut dipanggil.</p> <p>Code</p> Membuat iterator dan memanggil nilanya<pre><code>nama_iter = iter('farras', 'faris', 'noah')\n\nprint(next(iter_nama)) #(1)\nprint(next(iter_nama)) #(2)\nprint(next(iter_nama)) #(3)\nprint(next(iter_nama)) #(4)\n</code></pre> <ol> <li>Pemanggilan <code>next</code> mengeluarkan farras lalu menghapus data tersebut</li> <li>Pemanggilan <code>next</code> mengeluarkan noah lalu menghapus data tersebut</li> <li>Pemanggilan <code>next</code> mengeluarkan noah lalu menghapus data tersebut</li> <li>Pemanggilan <code>next</code> menyebabkan exception <code>StopIteration</code> karena variabel tersebut sudah tidak menampung data apapun</li> </ol> Print output<pre><code>farras\nfaris\nnoah\n---------------------------------------------------------------------------\nStopIteration                             Traceback (most recent call last)\nInput In [9], in &lt;cell line: 4&gt;()\n    2 print(next(iter_nama)) #(2)\n    3 print(next(iter_nama)) #(3)\n----&gt; 4 print(next(iter_nama))\n\nStopIteration:\n</code></pre> <p>Fungs <code>next()</code> akan mengeluarkan exception ketika iterator sudah habis di baca.</p> <p>Jika anda ingin mengeluarkan semua nilai dari sebuah iterator dan ingin menghindari StopIteration anda dapat menggunakan <code>for loop</code> statement sama persis dengan iterable.</p> <p>Code</p> Membuat iterator dan memanggil nilanya<pre><code>nama_iter = iter('farras', 'faris', 'noah')\n\nfor a in nama_iter:\n    print(a)\n</code></pre> Print output<pre><code>farras\nfaris\nnoah\n</code></pre> <p>Namun, sebenarnya ketika kita berurusan dengan iterable kita tidak perlu merubahnya kedalam iterator objek dengan fungsi <code>iter()</code>, for stament secara otomatis akan mengeluarkan nilai dari himpunan nilai tersebut satu persatu. Namun iterabel memakan lebih banyak tempat penyimpanan karena iterabel tetap menyimpan data tersebut setelah dipanggi keluar. Kita lihat simulasi dibawah ini</p> <p>Code</p> For loop iterableFor loop iterator Membuat iterable dan pemanggilan dengan for loop<pre><code>data = range(3)\nprint(\"Pemanggilan pertama\")\nfor a in data:\n    print (a)\nprint(\"Pemanggialan kedua\")\nfor a in data:\n    print (a)\n</code></pre> Print output<pre><code>Pemanggilan pertaman\n0\n1\n2\nPemanggialan kedua\n0\n1\n2\n</code></pre> Membuat iterator dan pemanggilan dengan for loop<pre><code>data_iter = iter(range(3))\nprint(\"Pemanggilan pertama\")\nfor a in data_iter:\n    print (a)\nprint(\"Pemanggialan kedua\")\nfor a in data_iter:\n    print (a)\n</code></pre> Print output<pre><code>Pemanggilan pertaman\n0\n1\n2\nPemanggialan kedua\n</code></pre> <p>Perulangan for loop pada iterable dapat terus dilakukan berulang-ulang kali tanpa harus membuat iterable lagi. Namun dengan iterator, jika anda sudah menggunakan for loop sekali anda tidak dapat mengambil datanya kembali dengan for loop. Jika anda sadari, ketika fungsi next() dipanggil setelah data habis maka akan menghasilkan exception, sama halnya dengan for loop yang tidak mengeluarkan datanya setelah iterator tersebut sudah tidak memliki data.</p> <p>Note</p> <p>Setiap data pada iterator akan langsung dihapus pada memori setelah di panggil.</p>"},{"location":"Programming%20Language/Python/02.%20Conditional%20and%20Iteration/#perulangan-pada-nilai-berurut-ganda","title":"Perulangan pada nilai berurut ganda","text":"<p>Sebagai simulasi kita membuat 3 variable yang masing masing menampung daftar nama, umur, dan tempat lahir dalam bentuk <code>list</code></p> <p>Code</p> Assingment variable<pre><code>nama = [\"Farras\", \"Tania\", \"Faris\", \"Noah\"]\numur = [26, 23, 2, 1]\ntl = [\"Jakarta\", \"Depok\", \"Bogor\", \"Bogor\"]\n</code></pre> <p>Dibawah ini kita akan menampilkan nama, umur dan tempat lahir dari setiap data di list diatas.</p> <p>Code</p> Mencetak semua data dari list diatas<pre><code>for position in range (0,4):\n    print (f'{nama[position]} berumur {umur[position]} lahir di {tl[position]} ') \n</code></pre> Print output<pre><code>Farras berumur 26 lahir di Jakarta \nTania berumur 23 lahir di Depok \nFaris berumur 2 lahir di Bogor \nNoah berumur 1 lahir di Bogor \n</code></pre> <p>Ada cara yang lebih baik pythonic, kita dapat menggunakan fungsi <code>zip()</code> untuk menampilkan ketiga iterable objek diatas.</p> <p>Code</p> Mencetak semua data dari list diatas<pre><code>for nilai_nama, nilai_umur, nilai_tl in zip (nama, umur, tl):\n    print (f'{nilai_nama} berumur {nilai_umur} lahir di {nilai_tl} ')\n</code></pre> Print output<pre><code>Farras berumur 26 lahir di Jakarta \nTania berumur 23 lahir di Depok \nFaris berumur 2 lahir di Bogor \nNoah berumur 1 lahir di Bogor \n</code></pre> <p>Agak sedikit panjang jika kita menggabungkan nilai di for statement head, kita dapat memisahkan di body for statement.</p> <p>Code</p> Mencetak semua data dari list diatas<pre><code>for data in zip (nama, umur, tl):\n    nilai_nama, nilai_umur, nilai_tl = data\n    print (f'{nilai_nama} berumur {nilai_umur} lahir di {nilai_tl} ')\n</code></pre> Print output<pre><code>Farras berumur 26 lahir di Jakarta \nTania berumur 23 lahir di Depok \nFaris berumur 2 lahir di Bogor \nNoah\n</code></pre>"},{"location":"Programming%20Language/Python/02.%20Conditional%20and%20Iteration/#perulangan-while","title":"Perulangan <code>while</code>","text":"<p>While loop serupa dengan for loop, namun <code>nwhile</code> loop tidak melakukan perulangan pada himpunan (sequance), namun kita harus  menulis logika secara manual. While loop akan terus melakukan perulangan selama kondisinya tepat (<code>true</code>) dan akan berhenti ketika kondisi yang diinginkan sudah tidak sesuai (<code>false</code>).</p> <p>Berikut adalah salah satu kode penggunaan while dalam merubah bilangan <code>int</code> kedalam <code>binnary</code>.</p> <p>Code</p> Konversi int ke binary<pre><code>def int_to_bin(number):\n    n = number\n    binnary = []\n    while n &gt; 0:\n        binnary.append( n % 2)\n        n //= 2\n\n    binnary.reverse()\n    return binnary;\n\nprint(int_to_bin(9))\n</code></pre> Print output<pre><code>[1, 0, 0, 1]\n</code></pre> <p>Ada cara yang lebih elegen pythonic, kita dapat menggunakan fungsi <code>divmod()</code> yang membutuhkn 2 argumen, number dan divisor(pembagi), dan nilai kembaliannya ada dua nilai yang dibungkus dalam tuple, hasil bagi, dan sisa bagi.</p> <p>Code</p> Konversi int ke binary<pre><code>def int_to_bin_div_mod(number):\n    n = number\n    binnary = []\n    while n &gt; 0:\n        n, bins = divmod(n,2)\n        binnary.append(bins)\n\n    binnary.reverse()\n    return binnary;\n\nprint(int_to_bin_div_mod(11))\n</code></pre> Print output<pre><code>[1, 0, 1, 1]\n</code></pre>"},{"location":"Programming%20Language/Python/02.%20Conditional%20and%20Iteration/#while-continue-dam-break","title":"<code>while</code> - <code>continue</code> dam <code>break</code>","text":"<p><code>continue</code> digunakan untuk melewatkan (skip) satu sekali perulangan saat continue dieksekusi. <code>break</code> akan menghentikan perulangan secara utuh.</p> <p>Contoh penggunaan continue, kita akan memberikan diskon sebesa 20% kepada barang yang memliki masa kadarluasa hari ini.</p> <p>Code</p> Penggunaan Continue<pre><code>from datetime import date, timedelta\n\ntoday = date.today()\ntommorow = today + timedelta(days=1)\n\nproducts = [\n{'id':'1', 'exparation_date':today, 'name':'Nasi Padang', 'price':15000},\n{'id':'2', 'exparation_date':tommorow, 'name':'Jus Jeruk', 'price':20000},\n{'id':'3', 'exparation_date':today, 'name':'Soto Lamongan', 'price':35000}\n]\n\n        if product['exparation_date'] != today:\n                continue\nfor product in products:\n        product['price'] *= 0.8\n        print(f\"Price for ${product['name']} is {product['price']:,.0f}\")\n</code></pre> Print output<pre><code>Price for $Nasi Padang is 12,000\nPrice for $Soto Lamongan is 28,000\n</code></pre> <p>Simulasi <code>break</code> akan memberhenti semua proses ketika angka yang dimasukan oleh user habis dibagi dengan 7</p> <p>Code</p> Penggunaan Continue<pre><code>print(\"Input number here : \", end=\"\")\n\nnumber = 1 # this flag\n\nwhile (True):\n    print(\"Keep enter the number here : \", end=\"\")\n    number = int(input())\n    if (number%7 != 0):\n\n            print(\"Iterating is still working\")\n            print(\"-------------\");\n    else:\n            print(\"opps you entered boom number, breaking soon\")\n            break\n\nprint (\"the game has ended\")\n</code></pre> Print output<pre><code>Input number here : Keep enter the number here : \n\n8\n\nIterating is still working\n-------------\nKeep enter the number here : \n\n7\n\nopps you entered boom number, breaking soon\nthe game has ended\n</code></pre>"},{"location":"Programming%20Language/Python/02.%20Conditional%20and%20Iteration/#else-clause-on-iteration","title":"Else clause on iteration","text":"<p>Fitur yang dimiliki oleh python adalah adanya <code>else</code> pada <code>for</code> atau <code>while</code> loop. Untuk mendemonstrasikan fitur tersebut, kita akan membuat  sebuah list yang berisikan beberapa tuple, isi dari tuple tersebut adalah nama dan umur. Logika, jika umur sudah lebih dari 18 tahun maka SIM (Surat Ijin Mengemudi) di tampilkan, jika tidak maka tampilkan exception.</p> <p>Code</p> Klausa else pada perulangan<pre><code>class DriverException(Exception):\n        pass\n\n\nnama = (\"farras\",\"tania\",\"faris\", \"noah\")\numur = (17,14,0,0)\n\nfor data in zip(nama,umur):\n        nama, umur = data\n        if umur &gt;= 18:\n                driver = (nama,umur)\n                print(driver)\n                break\nelse :\n        raise DriverException(\"Driver not found\")\n</code></pre> Print output<pre><code>---------------------------------------------------------------------------\nDriverException                           Traceback (most recent call last)\nInput In [108], in &lt;cell line: 8&gt;()\n    13                 break\n    14 else :\n---&gt; 15         raise DriverException(\"Driver not found\")\n\nDriverException: Driver not found\n</code></pre>"},{"location":"Programming%20Language/Python/02.%20Conditional%20and%20Iteration/#ekspresi-assigment","title":"Ekspresi Assigment","text":"<p>Untuk memahami Assignment Expression setidaknya kita harus memahami perbedaan statement dan expression.</p> <ul> <li>Statement dapat berupa expression atau salah satu dari konstruksi dari if, while atau for.</li> <li>Expression adalah akumulasi dari elemen expression seperti literals, names, attribute access, operator atau function calls yang mengembalikan sebuah nilai (return a value)</li> </ul> <p>Expression dapat mengembalikan sebuah nilai (return value). Expression dapat menjadi sebuah statement namun tidak semua statement itu expression. Assigment seperti <code>name = \"Muhammad Farras</code> bukanlah sebuah expression dan juga tidak mengembalikan sebuah nilai. Artinya kita tidak dapat menggunakan assignment statement pada conditional expression seperti <code>while</code>, <code>for loop</code> atau <code>if</code> statement.</p>"},{"location":"Programming%20Language/Python/02.%20Conditional%20and%20Iteration/#walrus-operator","title":"Walrus Operator","text":"<p>Code</p> Assignment value pada conditional statement<pre><code>if lulus := true:\n    print(\"Lulus\")\nelse:\n    print(\"Tidak lulus\")\n</code></pre> Print output<pre><code>Input In [111]\n    if lulus = true:\n            ^\nSyntaxError: invalid syntax\n</code></pre> <p>Dari POC diatas kita lihat, statement tidak bisa dimasukan kedalam sebuah expression, karena satement tidak mengembalikan sebuah nilai. Solusi dari kode diatas, kita harus memisahkan antara dua statement tersebut dengan cara membuat sebuah variable yang menampung sebuah nilai True.</p> <p>Code</p> Assignment value pada conditional statement<pre><code>lulus = True #(1)!\nif lulus: #(2)!\n        print (\"lulus\")\nelse:\n        print(\"Tidak lulus\")\n</code></pre> <ol> <li>Assignment Statement</li> <li>Conditional Statement</li> </ol> Print output<pre><code>lulus\n</code></pre> <p>Nahhhh, kita dapat memanfaat Assigment Expression agar kode yang dibuat lebih ringkas, assingment expression menggunakan keyword walrus operator \u2192 :=</p> <p>Code</p> Assignment value pada conditional statement<pre><code>if lulus := True: #(1)!\n    print(\"Lulus\")\nelse:\n    print(\"Tidak lulus\")\n</code></pre> <ol> <li>Condtional dan Assignment Statement sekaligus</li> </ol> Print output<pre><code>lulus\n</code></pre> <p>Contoh lain penggunaan walrus operator pada kode yang telah kita gunakan pada sesi continue)</p> <p>Code</p> Assignment value pada conditional statement<pre><code>while (True):\n    print(\"Input the number here : \", end=\"\")\n\n    if (number := int(input())%7 != 0): #(1)!\n\n            print(\"Iterating is still working\")\n            print(\"-------------\");\n    else:\n            print(\"opps you entered boom number, breaking soon\")\n            break\n\nprint (\"the game has ended\")\n</code></pre> <ol> <li>Condtional dan Assignment Statement sekaligus</li> </ol> Print output<pre><code>Input the number here : \n\n7\n\nopps you entered boom number, breaking soon\nthe game has ended\n</code></pre>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/","title":"Function, Building and Block of Code","text":""},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#namespace","title":"Namespace","text":"<p>Namespace adalah pemetaan nama-nama ke objek-objek. Contohnya kumpulan<code>names</code> bawaan (fungsi yang dapat diakses dimana saja program python manapun) seperti <code>help()</code>, <code>dir()</code> atau <code>print()</code>, <code>global names</code> dalam sebuah module, dann <code>local name</code> pada sebuah function. Bahkan kumpulan dari attributes dari sebuah objek dapat disebut juga dengan namespace.</p> <p>Info</p> <p><code>names</code> artinya varibael. Sebuah nama yang menampung objek.</p> <p>Manfaat dari namespace ini, kita dapat mendefinisikan dan mengelola names secara jelas. Misalkan kita ingin fungsi menggunakan fungsi <code>standard_normal</code>, dan kita harus mengimport <code>from numpy.random import standard_normal</code>.</p> <p>Inline syntax diatas dimulai dengan masuk ke namespace <code>numpy</code> , lalu masuk lagi ke namespace terakhir <code>random</code> dan terakhir memanggil names yang ingin kita gunakan, yaitu <code>standard_nomal</code>.</p> <p>Ada konsep lain yang berhubungan denga namespace, yaitu scope.</p>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#scope","title":"Scope","text":"<p>Scope adalah wilayah tekstual dari program python, dimana namespace dapat diakses secara langsung. Scope ditetukan secara statis, namun sebenarnya, mereka menentukannya dinamis. Artinya, jika kita menginspeksi ke kode yang ditulis dengan python kita dapat mengetahui names scope dari objek tersebut. Misalkan <code>standard_normal</code> berasal dari objek <code>numpy</code>.</p> <p>Ada empat scope yang python buat dapat diakses.</p> <ol> <li> <p>Local, scope paling dalam dan mengadung local names</p> </li> <li> <p>enclosing, scope ini mengadung enclosing names. diantara global dan local scope.</p> </li> <li> <p>global, scope yang mengandung global scope</p> </li> <li> <p>built-in, scope yang mengandung built-in names, semisal <code>prin</code>, <code>abs</code>, <code>help</code>, <code>die</code> dst.</p> </li> </ol> <p>Aturan python mencari sebuah names yang ditulis pada program python sebagai berikut :</p> <p>Pertama, python akan mencari dari namespace saat ini. Jika tidak ditemukan selanjutnya akan dicari pada enclosing scope, dan terus hingga buil-in scope. JIka names juga tidak ditemukan maka python akan mengeluarkan exception <code>NameError</code> yang artinya names tersebut belum terdefinisi.</p> <p>Urutanya pencarian name, LEGB, (Local,Enclosing ,Global, Built-in)</p>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#scope-dan-name-resolution","title":"Scope dan Name Resolution","text":"<p>Diatas kita berbicara tentang teori, sekarang kita akan langsung bermain dengan program python. Lihatlah kode dibawah ini.</p> <p>Code</p> Demo Global dan Local<pre><code>def my_function():\n    test = 1 # name yang didefinisikan pada local scope\n    print('my_function:', test)\n\ntest = 0 # name yang didefinisikan pada global scope\nmy_function()\nprint('global:', test)\n</code></pre> Print output<pre><code>my_function: 1\nglobal: 0\n</code></pre> <p>variable test pada pada <code>my_function</code> menghasilkan nilai <code>1</code> karena didefinisikan pada local scope dan test pada global scope adalah <code>0</code> karena test terdefinisi pada global scope. Ingat, Python akan mencari name pada masing-masing namespace saat ini. Artinya python akan mencari name test<code>my_function</code> di localscope, dan name test pada global di global scope.</p> <p>Code</p> Demo Global dan Local<pre><code>def my_function():\n    # test = 1 #(1)!\n    print('my_function:', test)\n\ntest = 0 # name yang didefinisikan pada global scope\nmy_function()\nprint('global:', test)\n</code></pre> Print output<pre><code>my_function: 0\nglobal: 0\n</code></pre> <p>Kode diatas, name test pada <code>my_function</code> menjadi <code>0</code>. Ingat LEGB, karena python tidak menemukan test pada localscope (current scope fungsi tersebut) selanjutnya python akan mencari di enclosing scope, karena fungsi diatas tidak memliki enclosing scope selanjutnya python akan mencari test pada global scope dan menemukanya dengan nilai test adalah <code>0</code>.</p> <p>Sekarang lihat kode dibawah ini untuk demo yang lebih tajam</p> <p>Code</p> Demo Global dan Local<pre><code>def outer():\n    test = 1 #(1)!\n\n    def inner():\n        # test = 2\n\n        def deep_inner():\n            test = 3\n            print(f'Deeper inner : {test}')\n\n        deep_inner()\n        print(f'Inner : {test}')\n    inner()\n    print(f'Outer : {test}')\n\n\nouter()\ntest = 0\nprint(f'Global : {test}')\n</code></pre> Print output<pre><code>Deeper inner : 3\nInner : 1\nOuter : 1\nGlobal : 0\n</code></pre> <p>Kali ini, karena python tidak menesmukan name test dari fungsi <code>inner</code> maka akan mencari name test pada <code>enclosing</code> scope, yaitu pada fungsi outer.</p>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#global-dan-nonlocal-statement","title":"Global dan Nonlocal Statement","text":"<p>Just look at the behavior of nonlocal and global</p> <code>nonlocal</code> <p>The nonlocal statement causes the listed identifiers to refer to previously bound variables in the nearest enclosing scope excluding globals.</p> <p>Code</p> Non local pada <code>inner()</code>Non local pada <code>deep_inner()</code>Non local pada <code>inner() &amp;</code>#!python deep_inner()`Non local pada <code>outer()</code> Demo Global dan Local<pre><code>def outer():\n    test = 1\n\n\n    def inner():\n        nonlocal test\n        test = 2\n\n\n        def deep_inner():\n            test = 3\n            print(f'Deeper inner : {test}')\n\n        deep_inner()\n        print(f'Inner : {test}')\n    inner()\n    print(f'Outer : {test}')\n\n\ntest = 0\nouter()\nprint(f'Global : {test}')\n</code></pre> Print output<pre><code>Deeper inner : 3\nInner : 2\nOuter : 2\nGlobal : 0\n</code></pre> Demo Global dan Local<pre><code>def outer():\n    test = 1\n\n    def inner():\n        test = 2\n\n        def deep_inner():\n            nonlocal test\n            test = 3\n            print(f'Deeper inner : {test}')\n\n        deep_inner()#(1)!\n        print(f'Inner : {test}')\n    inner()\n    print(f'Outer : {test}')\n\ntest = 0\nouter()\nprint(f'Global : {test}')\n</code></pre> Print output<pre><code>Deeper inner : 3\nInner : 3\nOuter : 1\nGlobal : 0\n</code></pre> Demo Global dan Local<pre><code>def outer():\n    test = 1\n\n    def inner():\n        test = 2\n\n        def deep_inner():\n            nonlocal test\n            test = 3\n            print(f'Deeper inner : {test}')\n\n        deep_inner()#(1)!\n        print(f'Inner : {test}')\n    inner()\n    print(f'Outer : {test}')\n\ntest = 0\nouter()\nprint(f'Global : {test}')\n</code></pre> Print output<pre><code>Deeper inner : 3\nInner : 3\nOuter : 3\nGlobal : 0\n</code></pre> Demo Global dan Local<pre><code>def outer():\n    nonlocal test\n    test = 1\n\n    def inner():\n        test = 2\n\n        def deep_inner():\n            test = 3\n            print(f'Deeper inner : {test}')\n\n        deep_inner()#(1)!\n        print(f'Inner : {test}')\n    inner()\n    print(f'Outer : {test}')\n\ntest = 0\nouter()\nprint(f'Global : {test}')\n</code></pre> Print output<pre><code>Input In [162]\n    nonlocal test\n    ^\nSyntaxError: no binding for nonlocal 'test' found\n</code></pre> <p>And now for global. Menggunakan kode yang sama diatas. Coba kita comment name test pada <code>inner()</code>. Merujuk ke LEGB, python akan mengambil nilai test pada enclosing scope, yaitu name test pada <code>outer()</code> dengan nilai 1.</p> <p>Code</p> Demo Global dan Local<pre><code>def outer():\n    test = 1\n\n    def inner():\n        # test = 2\n\n        def deep_inner():\n            test = 3\n            print(f'Deeper inner : {test}')\n\n        deep_inner()#(1)!\n        print(f'Inner : {test}')\n    inner()\n    print(f'Outer : {test}')\n\ntest = 0\nouter()\nprint(f'Global : {test}')\n</code></pre> Print output<pre><code>Deeper inner : 3\nInner : 1\nOuter : 1\nGlobal : 0\n</code></pre> <p>Namun dengan membuat global naming test pada fungsi <code>inner()</code> membuat python mengambil nilai test langsung dari global.</p> <p>Code</p> Demo Global dan Local<pre><code>def outer():\n    test = 1\n\n    def inner():\n        global test\n        # test = 2\n\n        def deep_inner():\n            test = 3\n            print(f'Deeper inner : {test}')\n\n        deep_inner()#(1)!\n        print(f'Inner : {test}')\n    inner()\n    print(f'Outer : {test}')\n\ntest = 0\nouter()\nprint(f'Global : {test}')\n</code></pre> Print output<pre><code>Deeper inner : 3\nInner : 0\nOuter : 1\nGlobal : 0\n</code></pre> <p>Dan jika kita uncomment lagi name test pada <code>inner</code> dan menulis global pada test maka nilai test pada global akan di overwrite dengan nilai test pada `#!python inner.</p> <p>Code</p> Demo Global dan Local<pre><code>def outer():\n    test = 1\n\n    def inner():\n        global test\n        test = 2\n\n        def deep_inner():\n            test = 3\n            print(f'Deeper inner : {test}')\n\n        deep_inner()#(1)!\n        print(f'Inner : {test}')\n    inner()\n    print(f'Outer : {test}')\n\ntest = 0\nouter()\nprint(f'Global : {test}')\n</code></pre> Print output<pre><code>Deeper inner : 3\nInner : 2\nOuter : 1\nGlobal : 2\n</code></pre>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#input-parameters","title":"Input Parameters","text":"<p>Untuk memahami semua tipe parameter anda harus memahami apa itu maksud dari memberikan argumen pada sebuah fungsi. Ada 3 kunci yang harus anda pahami;</p> <ul> <li>Argument-passing, memberikan nilai dari objek ke variable name pada local scope fungsi.</li> <li>Mengisi nilai dari objek ke argument name didalam fungsi tidak memberikan dampak pada caller.</li> <li>Mengubah argumen mutable object pada sebuah fungsi akan mempengaruhi caller.</li> </ul>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#argument-passing","title":"Argument-passing","text":"<p>Memberikan nilai dari objek ke variable name pada local scope fungsi.</p> <p>Code</p> <pre><code>x = 10\ndef ganda(y):\n    print(y*2)\n\nganda(x)\n</code></pre> Print output<pre><code>20\n</code></pre>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#assignment-to-parameter-name","title":"Assignment to parameter name","text":"<p>Mengisi nilai dari objek ke argument name didalam fungsi tidak memberikan dampak pada caller.</p> <p>Code</p> <pre><code>x = 10\ndef ganda(x):\n    x = 2 #(1)!\n    print(x*2) \n\nganda(x)\nprint(x) #(2)!\n</code></pre> Print output<pre><code>4\n10\n</code></pre> <ol> <li>Assignment <code>x</code> ini hanya terjadi pada local scope, tidak mempengaruhi global scope (caller).</li> <li>Nilai global <code>x</code> tetap 10, tidak dipengaruhi asiggment didalam fungsi <code>ganda</code>.</li> </ol>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#mengubah-mutable-objek","title":"Mengubah mutable objek","text":"<p>Mengubah argumen mutable object pada sebuah fungsi akan mempengaruhi caller.</p> <p>Code</p> <pre><code>lst = [1,2,3,4,5]\ndef func(x):\n    for a,b in enumerate(x):\n        lst[a] = b**2\n\nfunc(lst)\nprint(lst)\n</code></pre> Print output<pre><code>[1, 4, 9, 16, 25]\n</code></pre> <p>Jika kembali melihat poin kedua \"=Mengisi= nilai dari objek ke argument name didalam fungsi tidak memberikan dampak pada caller.\". Lihat kode dibawah ini, saya menambahkan kode yang mengisi nilai <code>x</code> dengan nilai baru.</p> <p>Code</p> <pre><code>lst = [1,2,3,4,5]\ndef func(x):\n    for a,b in enumerate(x):\n        lst[a] = b**2\n\n    x = [0,0,0,0,0] #(1)!\nfunc(lst)\nprint(lst) #(2)!\n</code></pre> <ol> <li>Tidak dapat mengganti nilai caller, <code>lst</code> pada global scope yang sudah dimodifikasi.</li> <li>Tetap mengambil nilai <code>lst</code> pada global scope yang sudah dimodifikasi oleh fungsi <code>func</code>.</li> </ol> Print output<pre><code>[1, 4, 9, 16, 25]\n</code></pre>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#memberikan-argumen","title":"Memberikan argumen","text":"<p>Ada empat cara untuk memberikan sebuah argumen pada fungsi</p> <ul> <li>Positional arguments</li> <li>Keyword arguments</li> <li>Iterable unpacking</li> <li>Dictionary unpacking</li> </ul>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#positional-arguments","title":"Positional arguments","text":"<p>Ini adalah pemberian argumenyang paling umum.</p> <p>Code</p> <pre><code>def func (satu, dua, tiga):\n    print(satu, dua ,tiga)\n\nfunc (10,20,30) #(1)!\n</code></pre> <ol> <li>Penempatan argumen sesuai posisi</li> </ol> Print output<pre><code>10 20 30\n</code></pre>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#keyword-arguments","title":"Keyword arguments","text":"<p>Ketika memberikan argumen pada sebuah fungsi, keyword argumen tidak harus dalam urutan.</p> <p>Code</p> <pre><code>def func (satu, dua, tiga):\n    print(satu, dua ,tiga)\n\nfunc (tiga=30, satu=10, dua=20) #(1)!\n</code></pre> <ol> <li>Penempatan argumen sesuai nama dari argumen</li> </ol> Print output<pre><code>10 20 30\n</code></pre> <p>Anda juga dapat menggabungkan positional argument dan keyword argumen.</p> <p>Code</p> <pre><code>def func (satu, dua, tiga):\n    print(satu, dua ,tiga)\n\nfunc (10, tiga=30,  dua=20) #(1)!\n</code></pre> <ol> <li>10, adalah positional argumen, dan {20,30} menggunakan keyword argumen.</li> </ol> Print output<pre><code>10 20 30\n</code></pre> <p>Warning</p> <p>Jika anda ingin menggabungkan positional dan keyword argumen pastikan positional argumen harus ditempatkan sebelum keyword. Kalau tidak akan menyebabkan syntax error</p> <p>Code</p> <pre><code>def func (satu, dua, tiga):\n    print(satu, dua ,tiga)\n\nfunc (dua= 20, satu=10,  30) #(1)!\n</code></pre> <ol> <li>30, adalah positional argumen, dan {10,20} menggunakan keyword argumen.</li> </ol> Print output<pre><code>  Input In [231]\n    func (dua= 20, satu=10,  30)\n                            ^\nSyntaxError: positional argument follows keyword argument\n</code></pre>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#iterable-unpacking","title":"Iterable unpacking","text":"<p>Untuk menggunakan iterable unpacking anda dapat menggunakan tanda bintang =*= sebelum nama variabel yang menampung objek iterable. Iterable unpacking akan memberikan argumen sesuai dengan posisi dari iterable yang diberikan.</p> <p>Code</p> Iterable upacking pada tupleIterable upacking pada list <pre><code>deret = (10,20,30)\ndef func (satu, dua, tiga):\n    print(satu, dua ,tiga)\n\nfunc(*deret)\n</code></pre> Print output<pre><code>10 20 30\n</code></pre> <pre><code>deret = [10,20,30]\ndef func (satu, dua, tiga):\n    print(satu, dua ,tiga)\n\nfunc(*deret)\n</code></pre> Print output<pre><code>10 20 30\n</code></pre>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#dictionary-unpacking","title":"Dictionary unpacking","text":"<p>Sejenis dengan iterable unpacking yang memberikan argumen sesuai dengan posisi, Dictionary unpacking memberikan nilai sesuai dengan keyword argument. Yang harus diingat, key yang digunakan pada Dictionary akan diberikan pada keyword argument yang sesuai.</p> <p>Code</p> <pre><code>deret = {'satu':10,'dua':20,'tiga':30}\ndef func (satu, dua, tiga):\n    deret[\"satu\"] = 50\n    print(satu, dua ,tiga)\n\nfunc(**deret)\n</code></pre> Print output<pre><code>10 20 30\n</code></pre>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#kombinasi-tipe-argumen","title":"Kombinasi tipe argumen","text":"<p>Kita dapat menggabungkan antara keyword anda positional selama kita menempatkan dalam urutan yang benar. Kita juga dapat mengkombinasi Ditctionary dan Iterable unpacking dengan positional dan keyword argumen dengan ketentuan sebagai berikut;</p> <ol> <li>Posisi awal, bisa positional argument <code>(name)</code> dan iterable unpacking <code>*(name)</code></li> <li>Selanjutnya, keyword argument <code>(name=value)</code> yang dapat digabung dengan iterable unpacking <code>*(name)</code></li> <li>Terakhir, dictionary unpacking <code>**{name:value}</code> yang dapat digabung dengan keyword argument <code>(name=value)</code></li> </ol> <p>Code</p> <pre><code>def func (a,b,c,d,e,f,g):\n    print(a,b,c,d,e,f,g)\n\n\nfunc(1,*(2,3,4,5), **{'f':6,'g':7})\nfunc(c = 3, d= 4, *(1,2), e=5,f=6,**{'g':7})\nfunc(*(1,2), d=4, c=3,  **{'f':6,'g':7}, e=5)\n</code></pre> Print output<pre><code>1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n</code></pre>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#mendefinisikan-parameter","title":"Mendefinisikan parameter","text":"<p>Parameter pada fungsi terbagi menjadi 5 kelompok</p> <ol> <li> <p>Positional atau Keyword parameter, dapat diberikan oleh positional argumen dan keyword argument</p> </li> <li> <p>Variable Positional Parameters, menerima kumpulan nilai dari positional argument dalam sebuah <code>tuple</code></p> </li> <li> <p>Variable Keyword parameters, menerima kumpulan nilai dari keyword argument dalam sebuah <code>dictionary</code></p> </li> <li> <p>Positional-only parameters, hanya dapat menerima positional arguments.</p> </li> <li> <p>Keyword-only parameters, hanya dapat menerima keyword arguments</p> </li> </ol>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#parameter-opsional","title":"Parameter opsional","text":"<p>Diluar dari kategori parameter diatas, parameter dapat diatur untuk menjadi opsional atau wajib. Parameter Opsional memeliki nilai bawaan yang harus didefinisikan pada parameter fungsi dengan syntax <code>name=value</code>.</p> <p>Code</p> <pre><code>def func (a,b=2,c=3):\n    print(a,b,c)\n\nfunc (1)\nfunc (b=4,c=6,a=2)\nfunc(*(4,5),6)\nfunc(2,3)\n</code></pre> Print output<pre><code>1 2 3\n2 4 6\n4 5 6\n2 3 3\n</code></pre> <p>Penting untuk dicatat bahwa, paramter yang wajib harus diletakan dibagian yang paling kiri dan tidak bisa disebalah kanan dari parameter yang opsi. Dibawah ini saya menghapus parameter opsi <code>c</code> dan merubahnya menjadi parameter wajib.</p> <p>Code</p> <pre><code>def func (a,b=2,c):\n    print(a,b,c)\n\nfunc (1)\nfunc (b=4,c=6,a=2)\nfunc(*(4,5),6)\nfunc(2,3)\n</code></pre> Print output<pre><code>Input In [283]\n    def func (a,b=2,c):\n                    ^\nSyntaxError: non-default argument follows default argument\n</code></pre>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#variable-positional-parameter","title":"Variable Positional Parameter","text":"<p>Dalam kondisi tertentu mungkin tidak ingin menspesifikan dengan tepat jumlah positional parameter pada sebuah fungsi. Python menyediakan sebuah fitur untuk menyelesaikan diatas dengan varible positional paramters.</p> <p>Code</p> <pre><code>def terkecil (*post):\n    # print(type(post)) (1)\n    if post:\n        terkecil = post[0] # Terkecil sementara\n        for a in post[1:]:\n            if a &lt; terkecil:\n                terkecil = a\n        return terkecil\n\nprint(terkecil(1,-2,4,-5,6))\n</code></pre> <ol> <li>Variable Positional Parameters akan mengumpulkan argumen yang diterima menjadi sebuah <code>tuple</code>. </li> </ol> Print output<pre><code>-5\n</code></pre> <p>Info</p> <p>Fungsi setidaknya hanya dapat memiliki satu buah variable positional parameters. Karena python tidak tahu bagaimana membagi argumen-argumen yang diberikan menjadi dua atau lebih tuple. anda jgua tidak dapat menetapkan nilai bawaan pada variable positional parameters. Nilai default variable positional parameter adalah empty tuple.</p> Dua variable positional parameterVariable positional parameter dengan default value <pre><code>def dua_positional_parameter (*post, *post2):\n    print(type(post), type(post2))\n</code></pre> Print output<pre><code>Input In [298]\n    def dua_positional_parameter (*post, *post2):\n                                        ^\nSyntaxError: invalid syntax\n</code></pre> <pre><code>def dua_positional_parameter (*post = (1,2,3)):\n    print(type(post))\n</code></pre> Print output<pre><code>Input In [300]\n    def dua_positional_parameter (*post = (1,2,3)):\n                                        ^\nSyntaxError: invalid syntax\n</code></pre> <p>Jika anda perhatikan, penggunaan variable positional parameters sama dengan iterable unpacking. Kedua fitur tersebut seringkali digunakan secara bersamaan. Dimana variabel positional parameters memastikan panjang dari iterable yang di unpacking cocok dengan jumlah parameter yang terdifinisi disebuah fungsi.</p> <p>Code</p> Penggunakan variable positional parameters dengan iterable unpacking<pre><code>def terkecil (*post): #(1)!\n    if post:\n        terkecil = post[0] # Terkecil sementara\n        for a in post[1:]:\n            if a &lt; terkecil:\n                terkecil = a\n        return terkecil\n\nderet = [1,-2,3,-4,5,6]\nprint(terkecil(*deret)) #(2)!\n</code></pre> <ol> <li>Varriable Positional Parameters</li> <li>Itrable Unpacking </li> </ol> Print output<pre><code>-4\n</code></pre>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#variable-keyword-parameters","title":"Variable Keyword Parameters","text":"<p>Sama dengan variable positional parameters, yang berbeda adalah fitur ini mengumpulkan parameter dalam bentuk dictionary dan menggunakan dua buah asterik <code>**</code>.</p> <p>Code</p> <pre><code>def func (**kwargs):\n    print(kwargs)\n\nfunc(a=2,b=3)\n</code></pre> Print output<pre><code>{'a': 2, 'b': 3}\n</code></pre> <p>Sama seperti variable positional paramters yang mengumpulkan kembali iterable unpacking, variable keyword parameters mengumpulkan kembali dictionary unpacking. Dictionary unpacking juga sering digunakan untuk memberikan argumen ke fungsi dengan variable keyword parameters.</p> <p>Code</p> <pre><code>def connect(**options):\n    conn_params = {\n    'host': options.get('host', '127.0.0.1'),\n    'port': options.get('port', 5432),\n    'user': options.get('user', ''),\n    'pwd': options.get('pwd', ''),\n    }\n    print(conn_params)\n    # we then connect to the db (commented out)\n    # db.connect(**conn_params)\nconnect()\nconnect(host='127.0.0.42', port=5433)\nconnect(port=5431, user='fab', pwd='gandalf')\n</code></pre> Print output<pre><code>{'host': '127.0.0.1', 'port': 5432, 'user': '', 'pwd': ''}\n{'host': '127.0.0.42', 'port': 5433, 'user': '', 'pwd': ''}\n{'host': '127.0.0.1', 'port': 5431, 'user': 'fab', 'pwd': 'gandalf'}\n</code></pre> <p>Didalam fungsi, kita dapat menyiapkan dictionary untuk parameter connection (conn_params) menggunakan nilai bawaan yang dapat ditiban.</p>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#positional-only-parameters","title":"Positional-only parameters","text":"<p>Untuk mengindikasi parameter pada sebuah fungsi harus sesuai dengan urutan posisi dan melarang menggunakan keyword argument gunakan syntax <code>/</code>.</p> Position onlyContain keyword arguments <p>Code</p> <pre><code>def func(a,b,/,c):\n    print(a,b,c)\n\nfunc(1,2,c=3)\nfunc(*(2,4), 8)\n</code></pre> Print output<pre><code>1 2 3\n2 4 8\n</code></pre> <p>Code</p> <pre><code>def func(a,b,/,c): #(1)!\n    print(a,b,c)\n\nfunc(a=1,b=2,c=3)\n</code></pre> <ol> <li>parameter <code>a</code> dan <code>b</code> harus diisi dengan positional argumen, jika tidak akan menghasilkan exception.  </li> </ol> Print output<pre><code>---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nInput In [337], in &lt;cell line: 7&gt;()\n    4 func(1,2,c=3)\n    5 func(*(2,4), 8)\n----&gt; 7 func(a=1,b=2,c=3)\n\nTypeError: func() got some positional-only arguments passed as keyword arguments: 'a, b'\n</code></pre> <p>Info</p> <p>Parameter disebelah slash <code>/</code> adalah parameter yang ditetapkan sebagai positional-only parameters.</p> <p>Positional-only parameters juga dapat menerima default value, menjadi parameter opsional.</p> <p>Code</p> <pre><code>def func (a,b=2,/):\n    print(a,b)\n\nfunc(1,3)\nfunc(8)\n</code></pre> Print output<pre><code>1 3\n8 2\n</code></pre> <p>Warning</p> <p>Ingat tentang parameter opsional ?, parameter opsional harus diletakan disebelah kanan dari parameter wajib.</p>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#combining-input-parameters","title":"Combining Input Parameters","text":"<p>Mengkombinasi argumen dengan tipe yang berbeda pada fungsi yang sama ada beberapa batasan dalam urutan, diantaranya:</p> <ol> <li> <p>Positional only parameters harus ditempatkan diawal, diikut dengan <code>/</code></p> </li> <li> <p>Normal parameters ditempatkan setelah Positional only paramaters.</p> </li> <li>Variable positional parameters ditempatkan setelah normal parameters.</li> <li>Keyword only parameters ditempatkan setelah variable positional paramaters </li> <li>Variable keyword parameters selalu ditempatkan dibagian yang paling akhir.</li> <li>Untuk positional only parameters and norma paramenters, semua parameter wajib harus didefinisi sebelum parameter opsional Artinya, jika anda memliki positional only parameters opsional, maka semua normal parameter harus opsional.</li> </ol> <p>Code</p> <pre><code>def func (a,b,/,c,d,e,f,*args,**kwargs):\n    print (f'a,b : {a,b}')\n    print(f'c,d,e : {c,d,e}')\n    print(f'f : {f}')\n    print(args)\n    print(kwargs)\n\nfunc(0,1,*(4,5,6,7,8),*(9,10,11,12,13,14,15,16,17,18), detail=\"test\", more=\"more-detail\")\n</code></pre> Print output<pre><code>a,b : (0, 1)\nc,d,e : (4, 5, 6)\nf : 7\n(8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)\n{'detail': 'test', 'more': 'more-detail'}\n</code></pre>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#bugs-pada-nilai-default-objek-mutanble","title":"Bugs pada nilai default objek mutanble","text":"<p>Katakan kita memliki fungsi dibawahi ini</p> <p>Code</p> <pre><code>def func(a=[],b={}):\n    print(f'{\"-\"*6}start{\"-\"*6}')\n    b[len(a)] = a\n    a.append(len(a))\n    print(a)\n    print(b)\n    print()\n\nfunc()\nfunc()\nfunc()\n</code></pre> Print output<pre><code>------start------\n[0]\n{0: [0]}\n\n------start------\n[0, 1]\n{0: [0, 1], 1: [0, 1]}\n\n------start------\n[0, 1, 2]\n{0: [0, 1, 2], 1: [0, 1, 2], 2: [0, 1, 2]}\n</code></pre> <p>Parameter defalut diatas selalu update ketika memanggil fungsi yang sama. Behavior yang diingikan nilai default tersebut selalu refresh, diperbaharui.</p> <p>Code</p> <pre><code>def func(a=None,b=None):\n    if a is None:\n        a = []\n\n    if b is None:\n        b = {}\n    print(f'{\"-\"*6}start{\"-\"*6}')\n    b[len(a)] = a\n    a.append(len(a))\n    print(a)\n    print(b)\n    print()\n\nfunc()\nfunc()\nfunc()\n</code></pre> Print output<pre><code>------start------\n[0]\n{0: [0]}\n\n------start------\n[0]\n{0: [0]}\n\n------start------\n[0]\n{0: [0]}\n</code></pre>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#retrun-value","title":"Retrun value","text":"One return valueMultiple return value <p>Code</p> <pre><code>def func (a,b):\n    return (a+b)\nhasil = func(1,2)\nprint(hasil)\n\n```{.python .no-copy title=\"Print output\"}\n3\n</code></pre> <p>Code</p> <pre><code>def func_mul (a,b):\n    return (a,b)\nhasil_1, hasil_2 = func_mul(1,2)\nprint(hasil_1)\nprint(hasil_2)\n\n```{.python .no-copy title=\"Print output\"}\n1\n2\n</code></pre>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#recursive-function","title":"Recursive function","text":"<p>Ketika fungsi memanggil dirinya sendiri untuk menghasilkan nilai return maka itu dikatakan Recursive function</p> <p>Code</p> <pre><code>def faktorial (n):\n    # base, kondisi stop recursive function\n    if n in (0,1):\n        return 1\n\n    return faktorial (n-1) * n\n\nfaktorial (4)\n</code></pre> Print output<pre><code>24\n</code></pre> <p>Info</p> <p>Jika anda bingung, anda bisa merujuk ke catatan tambahan Recursive Function Python</p>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#anonymous-function","title":"Anonymous Function","text":"<p>Anonymouse function didalam python disebut dengan lambda. Penggunaan fitur ini bermanfaat jika kita hanya ingin membuatsebuah fungsi simple, ditulis hanya dengan satu baris. Untuk membuat fungsi ini gunakan syntax dibawah ini;</p> <p>Syntax</p> <pre><code>name_function = lambda [parameter_list] : return_expression\n</code></pre> <p>Oke, dibawah ini contoh implementasi penggunan lambda. Katakan kita ingin membuat sebuah fungsi untuk mengembalikan nilai genap.</p> <p>Code</p> <pre><code>ambil_genap = lambda *lists : [a for a in lists if a%2 == 0]\n\njumlah(*range(20))\n</code></pre> Print output<pre><code>[0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n</code></pre> <p>Pada baris yang di hightlight kita menggunakan lambda function untuk mengembalikan nilai mana saja yang genap. Pada fungsi lambda diatas kita meenggunakan fitur yang telah kita bahas, Pada pemanggilan fungsi <code>jumlah(*range(20))</code> kita menggunakan iterable unpacking, pada penetuan parameter lambda <code>lambda *lists :</code> menggunakan variable positional pamater, dan pada expression lambda menggunakan comprehension.</p>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#function-attributes","title":"Function attributes","text":"<p>Setiap fungsi, khususnya pada sebuah objek yang besar memiliki atribut-atribut. Beberapa dari atribute tersebut dapat digunakan untuk meng-inspeksi fungsi tersebut saat runtime. attribute yang paling sering digunakan adalah  <code>__doc__, __name__, __qualname__, __module__, __defaults__, __code__, __globals__, __dict__, __closure__, __annotations__, __kwdefaults__, __builtins__</code>.</p> <p>Misalkan kita ingin mendapatkan dokumentasi dari objek <code>pow</code></p> <p>Code</p> Menggunakan fungsi <code>getattr()</code>Menggunakan atribute langsung dari objek <pre><code>print(getattr(pow,\"__doc__\"))\n</code></pre> <pre><code>print(pow.__doc__)\n</code></pre>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#built-in-function","title":"Built-in function","text":"<p>Python memliki fungsi bawaan yang dapat kita akses dari mana saja. Kita telah meyinnggunya pada Scope dan Name Resoulution ketika membahas bagaimana python mencari sebuah names dengan urutan Local, Enclosing, Global dan Built-in.</p> <p>Untukmelihat daftar fungsi built_in anda dapat menggunakan <code>dir()</code> pada attribute <code>__builtins__</code>.</p> <p>Code</p> <pre><code>[a for a in dir(__builtins__) if a[0].islower()][10:20] #(1)!\n</code></pre> <ol> <li>Saya hanya mengambil built-in function beberapa saja.</li> </ol> Print output<pre><code>['chr',\n'classmethod',\n'compile',\n'complex',\n'copyright',\n'credits',\n'delattr',\n'dict',\n'dir',\n'display']\n</code></pre>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#dokumentasi-kode","title":"Dokumentasi Kode","text":"<p>Saat membahas tentang attribute kita menggunakan contaoh attribute <code>#!__doc__</code>. Sekarang kita akan membahas cara membuat dokumentasi sehingga bisa diakes menggunakan attribute <code>#!__doc__</code> atau fungsi built-in fungsi <code>#!help()</code>.</p> <p>Untuk membuat dokumentasi anda dapat mengikuti contoh dibawah.</p> <p>Code</p> <pre><code>def contoh_doc(nama, tempat):\n    \"\"\" Contoh dokumentasi\n\n    Ini adalah dokumentasi yang berisikan penjelasan tentang fungsi ini. Fungsi ini,\n    Fungsi ini,Fungsi ini,Fungsi ini,Fungsi ini,Fungsi ini.\n\n    :param nama: Pembuat dokumentasi\n    :param tempat: Tempat membuat dokumentasi\n    :return: String detail hasil fungsi ini\n    \"\"\"\n\n    return f'Nama {nama}, tempat {tempat}'\n\n    help(contoh_doc)\n    # Sama dengan print(contoh_doc.__doc__)\n</code></pre> Print output<pre><code>Contoh dokumentasi\n\n    Ini adalah dokumentasi yang berisikan penjelasan tentang fungsi ini. Fungsi ini,\n    Fungsi ini,Fungsi ini,Fungsi ini,Fungsi ini,Fungsi ini.\n\n    :param nama: Pembuat dokumentasi\n    :param tempat: Tempat membuat dokumentasi\n    :return: String detail hasil fungsi ini\n</code></pre>"},{"location":"Programming%20Language/Python/03.%20Function%20Building%20and%20Block%20of%20Code/#import-objects","title":"Import Objects","text":"<p>Tujuan utama kita membuat seuah fungsi adalah untuk dapat digunakan kembali tanpa harus menulis ulang kode dimanampun python program ditulis. Di python kita harus mengimport mereka (fungsi-fungsi dalam sebuah object atau module) dalam bentuk <code>namespace</code> di tempat dimana kita membutuhkan fungsi tersebut. Ada beberapa cara untuk mengimport objects dalam bentuk <code>namespace</code>, yang paling sering dipakai adalah.</p> <ol> <li><code>import module_name</code></li> <li><code>from module_name import function_name</code></li> </ol> <p>Code</p> <pre><code>import numpy as np #(1)!\nfrom numpy.random import standard_normal  #(2)!\n</code></pre> <ol> <li>Mengimport module name saja, penggunaan selanjutnya, misal <code>np.random.standard_nromal()</code>.</li> <li>Mengimport module name dan function name, penggunaan langsung memanggil nama fungsi <code>standard_normal()</code>.</li> </ol>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/","title":"Comprehensions and Generators","text":"<p>Pada bagian ini saya menuliskan catatan yang bertujuan bukan semata untuk meningkat performa dari kode yang dibuat namun juga tetap mempertahankan kode yang mudah untuk dibaca dan mudah untuk di maintain. Sehingga catatan ini secar umum membahas</p> <ul> <li>Fungsi <code>map()</code>, <code>zip()</code>, dan <code>filter()</code></li> <li>Comprehensions</li> <li>Generators</li> </ul> <p>InsyaAllahk kita akan melakukan beberapa perhitungan dan perbandingan terhadap beberapa kode yang dicatat dan membuat kesimpulan dari perhitungan dan perbandingan tersebut, terutama pada waktu yang dibutuhkan mesin untuk menajalankan kode.</p> <p>Coba perhatikan kode dibawah ini. Kedua fungsi ini mengembalikan akar kuadrat dari parameter yang diberikan.</p> <p>Code</p> Fungsi Square SatuFungsi Square Dua <pre><code>%%timeit\ndef square_satu(n):\n    return n**2\n\nsquare_satu(10)\n</code></pre> <pre><code>338 ns \u00b1 14.8 ns per loop (mean \u00b1 std. dev. of 7 runs, 1,000,000 loops each)\n</code></pre> <pre><code>%%timeit\ndef square_dua(n):\n    return n*n\n\nsquare_satu(10)\n</code></pre> <pre><code>127 ns \u00b1 1.06 ns per loop (mean \u00b1 std. dev. of 7 runs, 10,000,000 loops each)\n</code></pre> <p>Fungsi diatas sama-sama mengembalikan nilai akar pangkat dari parameter yang diberikan. Sekilas fungsi <code>square_dua()</code> lebih cepat. Namun kebanyakan kita tidak terlalu memikirkan performa yang sedikit berbeda. Dalam kasus diatas tidak masalah jika mengutaman demikian, lagi pula fungsi <code>square_satu()</code> lebih mudah dibaca. Jadi kapan sebuah performa menjadi isu yang diutamakan ? Yaitu ketika kita berhubungan dengan data yang amat besar .</p> <p>Misalkan kita menggunakan kedua fungsi diatas ke data yang memliki 10 juta baris. Jika perbedaan dari fungsi tersebut misalkan <code>0.1</code> detik. Sehingga jika diaplikasikan ke data tersebut maka akan memliki rentang waktu 27 jam, Cukup signifikan, dan disinilah kita harus mempertimbangkan masalah performa.</p> <p>Jadi dibawah ini saya mencatat eksplorasi tentang iterators yang menghemat penyimpanan dalam menjalankan operasi sederhana dari sebuah kumpulan data secara sekaligus.</p>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#fungsi-map-zip-dan-filter","title":"Fungsi <code>map</code>, <code>zip</code>, dan <code>filter</code>","text":"<p>Dibawah ini saya mencatat cara menggunakan fungsi map, zip dan filter serta bagaimana cara menggunakan generators dan comprehension untuk menghasilkan nilai yang sama menggunakan ketiga fungsi diatas.</p>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#map","title":"Map","text":"<p>Arti map dari dokumentasi resmi python.</p> <p>Apa itu Map</p> <p><code>map(function, iterable, \u2026)</code></p> <p>Return an iterator that applies function to every item of iterable, yielding the results. If additional iterable arguments are passed, function must take that many arguments and is applied to the items from all iterables in parallel. With multiple iterables, the iterator stops when the shortest iterable is exhausted.</p> <p> InsyaAllah kita akan bahas tentang <code>yield</code> pada bagian catatan dibawah ini. </p> <p>Bahasa catatan saya, fungsi map ini memiliki parameter 2 parameter wajib dan opsinal. Dimana fungsi ini akan mengembalikan nilai dalam bentuk iterator hasil dari operasional fungsi pada parameter pertama atas iterable. Jika parameter diisi lebih dari satubuah iterbale maka fungsi ini akan sekelsai beroperasi hingga iterable terpendek habis nilainya. Dibawah ini penejelasan tentang parameter tersebut</p> <ol> <li>function, parameter wajib ini diisi dengan sebuah fungsi atau lambda yang menerima nilai dari parameger iterable.</li> <li>iterable, parameter wajib ini diisi dengan iterable, bisa berupa list, tuple, set atau dict.</li> <li>iterable*, paremeter opsional ini diisi dengan iterble. Bisa lebih dari satu buah parametel opsional.</li> </ol> <p>Mari coba implementasi pada sebuah studi kasus. Katakan ada data nilai mahasiswa dalam bentuk dicitonary dibawah ini. kita diarahkan untuk mengurutkan nilai mahasiswa berdasarkannilai rata-rata.</p> Data<pre><code>students = [\ndict(id=0, credits=dict(math=9, physics=6, history=7)),\ndict(id=1, credits=dict(math=6, physics=7, latin=10)),\ndict(id=2, credits=dict(history=8, physics=9, chemistry=10)),\ndict(id=3, credits=dict(math=5, physics=5, geography=7)),\n]\n</code></pre> <p>Code</p> <pre><code>rata_rata = sorted(map(lambda n: (sum(n[\"credits\"].values()),n), students), reverse=True)\nmengeluarkan_nilai = map(lambda n: n[1], rata_rata)\n\nfor a in mengeluarkan_nilai:\n    print(a)\n</code></pre> <pre><code>{'id': 2, 'credits': {'history': 8, 'physics': 9, 'chemistry': 10}}\n{'id': 1, 'credits': {'math': 6, 'physics': 7, 'latin': 10}}\n{'id': 0, 'credits': {'math': 9, 'physics': 6, 'history': 7}}\n{'id': 3, 'credits': {'math': 5, 'physics': 5, 'geography': 7}}\n</code></pre>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#zip","title":"Zip","text":"<p>Berdasarkan dokumentasi resmi python, zip adalah</p> <p>Apa itu Zip</p> <p><code>zip(*iterables)</code></p> <p>Returns an iterator of tuples, where the i-th tuple contains the i-th element from each of the argument sequences or iterables. The iterator stops when the shortest input iterable is exhausted. With a single iterable argument, it returns an iterator of 1-tuples. With no arguments, it returns an empty iterator.</p> <p>Fungsi <code>zip()</code> mengembalikan sebuah iterator yang berisi tuple dari setiap nilai iterable yang pada parameter. Jika iterable pada parameter-parameter yang diberikam terpendek telah habis maka operasi akan berhenti.</p> <p>Dibawah ini kode yang semoga membuat anda paham tentang fungsi ini.</p> <p>Code</p> <pre><code>angka_1 = [1,2,3,4,5,6]\nangka_2 = [6,5,4,3,2,1]\n\ngabungan = zip(*(angka_1,angka_2))\n\nfor a,b in gabungan:\n    print(a,b,sep=\"|\")\n</code></pre> <pre><code>1|6\n2|5\n3|4\n4|3\n5|2\n6|1\n</code></pre> <p>Untuk memahami lebih dalam tentang fungsi yang telah dicatat diatas <code>map</code> dan <code>zip</code> coba selesaikan tugas dibawah ini.</p> <p>Tugas</p> <p>Anda memliki nilai dibawah ini, buatlah sebuah logika menggunakan fungsi map dan zip untuk mengembalikan nilai tertinggi dari ketiga iterable ini pada setiap data. dibawahi ini adalah data yang diberikan</p> <pre><code>a = [5, 9, 2, 4, 7]\nb = [3, 7, 1, 9, 2]\nc = [6, 8, 0, 5, 3]\n</code></pre> Jawaban <pre><code>hasil_max = list(map(lambda n : max(n), zip(a,b,c)))\nprint(hasil_max)\n</code></pre> <pre><code>[6, 9, 2, 9, 7]\n</code></pre>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#filter","title":"filter","text":"<p>Oke, semua bersumber dari dokumentasi resmi. Sebagaimana islam bersumber dari Al-Quran dan As Sunnah sesuai dengan pemahaman para sahabat .</p> <p>Apa itu Filter</p> <p><code>filter(function, iterable)</code></p> <p>Construct an iterator from those elements of iterable for which function returns True. iterable may be either a sequence, a container which supports iteration, or an iterator. If function is None, the identity function is assumed, that is, all elements of iterable that are false are removed.</p> <p>Fungsi <code>filter</code> membuat sebuah interator dari elemen-elemen parameter iterable yang hanya bernilai <code>True</code> setelah dilakukan operasi pada sebuah fungsi atau lambda.</p> <p>Katakan anda anda diberikan sekumpulan nilai student seperti contoh map diatas. Anda diperintahkan mengambil data hanya nilai yang melebihi nilai kkm sebesar 6.</p> <p>Code</p> <pre><code>students = [\ndict(id=0, credits=dict(math=9, physics=6, history=7)),\ndict(id=1, credits=dict(math=6, physics=7, latin=10)),\ndict(id=2, credits=dict(history=8, physics=9, chemistry=10)),\ndict(id=3, credits=dict(math=5, physics=5, geography=7)),\n]\n\nnilai_lulus = list(filter(lambda n : min(n[\"credits\"].values()) &gt;= 6, students))\nnilai_lulus\n</code></pre> <pre><code>[{'id': 0, 'credits': {'math': 9, 'physics': 6, 'history': 7}},\n{'id': 1, 'credits': {'math': 6, 'physics': 7, 'latin': 10}},\n{'id': 2, 'credits': {'history': 8, 'physics': 9, 'chemistry': 10}}]\n</code></pre>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#comprehensions","title":"Comprehensions","text":"<p>Comprehension adalah notasi ringkas untuk melakukan beberapa operasi pada setiap elemen dari objek (iterable atau memeliki turunan iterator) dan atau hanya mengambil subset dari element pada obejek (seperti filter) yang sesui dengan kondisi tertentu.</p> <p>Python memliki bebera tipe comprehension, seperti list comprehension, dictionary comprehensions, dan set comprehensions. Namun pada catatan ini saya hanya mencatat list comprehension. Karena dari bukuknya juga mencatumkan itu saja. Akan tetapi sytanxnya sama hanya membedakan beberapa karakter saja.</p> Sytanx list comprehensions<pre><code>[result_value for a in squance_objects conditional_logic]\n</code></pre> <p>Dibawah ini cara membuat sebuah list yang berisikan kuadrat dari nilai yang diberikan. Saya akan membuat nya dengan 3 cara. pertama menggunakan perulangan, kedua memanfaat fungsi <code>map</code> dan ketiga menggunakan list comprehension.</p> <p>Code</p> For loopMenggunakan <code>map()</code>Menggunakan list comprehensions <pre><code>nilai_kuadrat = []\n\nfor a in range(10):\n    nilai_kuadrat.append(a ** 2)\n\nprint (nilai_kuadrat)\n</code></pre> Print Output<pre><code>[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n</code></pre> <p>Kata penulis buku ini, \"If you code like this, you are not python dev\" </p> <pre><code>nilai_kuadrat = list(map(lambda n : n**2, range(10)))\nprint(nilai_kuadrat)\n</code></pre> Print Output<pre><code>[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n</code></pre> <pre><code>[a**2 for a in range(10)]\n</code></pre> Print Output<pre><code>[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n</code></pre> <p>MasyAllah, penggunaan comprehension list sangat pendek untuk menghasilkan nilai yang sama. Sekarang mari kita coba untuk menambahkan penyaringan hanya untuk nilai yang genap dengan cara-cara diatas. Cara pertama kita akan menambahkan if conditionl dan pada cara kedua menggunakan fungsi <code>filter()</code>. Lalu bagaimana dengan cara yang menggunakan comprehension ? Oke lihat catatan kode dibawah ini.</p> <p>Code</p> For loopMenggunakan <code>map()</code>Menggunakan list comprehensions <pre><code>nilai_kuadrat = []\n\nfor a in range(10):\n    if not (genap:= (a**2)) % 2: # (1)!\n        nilai_kuadrat.append(genap)\n\nprint (nilai_kuadrat)\n</code></pre> <ol> <li><code>not (genap:= (a**2)) % 2</code> ekuivalen dengan <code>(genap:= (a**2)) % 2 == 0:</code></li> </ol> Print Output<pre><code>[0, 4, 16, 36, 64]\n</code></pre> <p>Kode diatas memanfaatkan walrus operator</p> <pre><code>nilai_kuadrat = list(filter(lambda a : not (a % 2),map(lambda n : n**2, range(10)))) # (1)!\nprint(nilai_kuadrat)\n</code></pre> <ol> <li><code>not (a % 2)</code> ekuivalen dengan <code>a %2 == 0</code></li> </ol> Print Output<pre><code>[0, 4, 16, 36, 64]\n</code></pre> <pre><code>[a**2 for a in range(10) if not (a**2) % 2] # (1)!\n</code></pre> <ol> <li><code>not (a**2) % 2</code> ekuivalen dengan <code>(a**2) % 2 == 0</code></li> </ol> Print Output<pre><code>[0, 4, 16, 36, 64]\n</code></pre>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#nested-comprehensions","title":"Nested comprehensions","text":"<p>Kode dibawah ini adalah kode yang menggunakan nested for loop</p> <p>Code</p> <pre><code>kata = 'abcd'\nhasil = []\nfor a,b in enumerate(kata):\n    for c in kata[a:]:\n        hasil.append((b,c))\n\nprint(hasil)  \n</code></pre> Print Output<pre><code>[('a', 'a'), ('a', 'b'), ('a', 'c'), ('a', 'd'), ('b', 'b'), ('b', 'c'), ('b', 'd'), ('c', 'c'), ('c', 'd'), ('d', 'd')]\n</code></pre> <p>Kode diatas juga bisa dibuat menggunakan nested list comprehensions.</p> <p>Code</p> <pre><code>kata = 'abcd'\n[(b,c) for a,b in enumerate(kata) for c in kata[a:]] \n</code></pre> Print Output<pre><code>[('a', 'a'), ('a', 'b'), ('a', 'c'), ('a', 'd'), ('b', 'b'), ('b', 'c'), ('b', 'd'), ('c', 'c'), ('c', 'd'), ('d', 'd')]\n</code></pre> <p>Info</p> <p>Infat, string juga termasuk squance didalam python</p>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#filtering-comprehensions","title":"Filtering comprehensions","text":"<p>Sebelumnya kita telah menggunakan fungsi filtering pada comprehensions. Pada catatan ini saya hanya menuliskan kembali sebuah kode yang lebih kompleks untuk menghitung pytagoras serta hanya mengembalikan nilai rill (bilangan bulat) atas operasi tersebut.</p> Menggunakan Comprehension ListMenggunakan for loop <p>Code</p> <pre><code>mx = 10\n[ (a,b,int(c)) \nfor a in range(1,mx) \nfor b in range (a,mx) \nif (c:=sqrt(a**2 + b**2)).is_integer()]\n</code></pre> Print Output<pre><code>[(3, 4, 5), (6, 8, 10)]\n</code></pre> <p>Code</p> <pre><code># Using for loop\nfrom math import sqrt\nmx = 10\nreal_pytha = []\n\nfor a in range (1,mx):\n    for b in range(a,mx):\n        if (hasil:= sqrt(a**2 + b**2)).is_integer():\n            real_pytha.append([a,b,int(hasil)])\n\nreal_pytha\n</code></pre> Print Output<pre><code>[(3, 4, 5), (6, 8, 10)]\n</code></pre>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#dictionary-comprehensions","title":"Dictionary Comprehensions","text":"<p>Sama halnya dengan list comprehensions, dictionary comprehensions hanya berbeda hasil dari comprehensions nya, yaitu menghasilkan dictionary.</p> <p>Code</p> <pre><code>from string import ascii_letters # (1)!\n{urut:huruf for urut, huruf in enumerate(ascii_letters[10:20])} # (2)!\n</code></pre> <ol> <li>name <code>ascii_letters</code> berisikan string huruf kecil dan kapital</li> <li>Hanya mengambil kata dari 10 - 20, untuk meringkas hasil output</li> </ol> Print Output<pre><code>{0: 'k',1: 'l',2: 'm',3: 'n',4: 'o',8: 's',9: 't'}\n</code></pre> <p>Dan, dictionary tidak bisa menampung key yang ganda</p> <p>Code</p> <pre><code>sapa = 'hello farras'\n{huruf:urut for urut, huruf in enumerate(sapa)}\n</code></pre> Print Output<pre><code>{'h': 0, 'e': 1, 'l': 3, 'o': 4, ' ': 5, 'f': 6, 'a': 10, 'r': 9, 's': 11}\n</code></pre>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#set-comprehensions","title":"Set Comprehensions","text":"<p>Set comprehensions sejenis dengan list comprehensions, hanya saja set comprehensions menggunalan <code>{}</code> dan Set comprehensions tidak dapat menampung nilai yang ganda.</p> <p>Code</p> <pre><code>helo = 'aabbccddeefmmmnnoopqq'\n{a for a in helo}  \n</code></pre> Print Output<pre><code>{'a', 'b', 'c', 'd', 'e', 'f', 'm', 'n', 'o', 'p', 'q'}\n</code></pre>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#generators","title":"Generators","text":"<p>Generators adalah alat yang sangat powerfull dimana alat tersebut menjadikan pola kode menjadi lebih elegan dan efesien, Generators berdiri diatas konsep perulangan, iteration.</p> <p>Ada dua tipe dari generator:</p> <ol> <li> <p>Generator Function, fungsi ini sejenis dengan fungsi pada umumnya, namun jika pada fungsi umum mengembalikan nilai sekaligus dengan return value , generator function mengembalikan nilai menggunakan yield yang membuat fungsi tersebut Mengmbalikan nilai satu persatu, menunda dan melanjutkan kondisi disetiap penggunaan yield</p> </li> <li> <p>Generator Expression, sama seperti dengan list comprehensions yang mengembalikan list, generator expression mengembalikan nilai satu persatu, tidak sekaligus.</p> </li> </ol>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#generator-functions","title":"Generator Functions","text":"<p>Jika fungsi pada umumnya mengumpulkan nilai dan mengembalikan semua nilai tersebut sekaligus, bebeda dengan generator function yang secara otomatis berubah menjadi iterators yang mengembalikan nilai satu persatu ketika kita memanggil perintah yield.</p> <p>Untuk membedakannya coba lihat duabuah kode dibawah ini;</p> <ol> <li>fungsi biasa dengan return statement, dan </li> <li>fungsi menggunakan yield statement (Generator Function).</li> </ol> Fungsi BiasaGenerator Expression <p>Code</p> <pre><code>def func(n=0):\n    return [a**2 for a in range(n)]\n\nprint(func(20))\n</code></pre> Print Output<pre><code>[0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289, 324, 361]\n</code></pre> <p>Code</p> <pre><code>def func_gen(n=0):\n    for a in range(n):\n        yield a**2 #(1) !\n\nprint(list(func_gen(20)))\n</code></pre> <ol> <li>yield tidak mengebalikan nilai sekalius akan tetapi satu persatu.</li> </ol> Print Output<pre><code>[0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289, 324, 361]\n</code></pre> <p>Hasil dari kode diatas mengembalikan nilai yang sama, yang membuat beda ialah fungsi <code>func()</code> adalah fungsi klasik, dimana fungsi tersebut mengumpulkan dahulu semua nilainya dan mengembalikannya secara sekaligus. Disisi lain fungsi <code>func_gen()</code> adalah generators, dimana setiap interpreter menyentuh perintah yield eksekusinya akan berhenti (disuspend) dan mengebalikan nilai tersebut saja. Lalu pertanyaanya mengampa mengembalikan nilai yang sama ? </p> <p>Karena kita memasukan implementasi fungsi <code>func_gen()</code> kedalam sebuah <code>list()</code> yang membuat generator kehabisan baris dengan selalu memanggil fungsi <code>next()</code> hingga <code>StopIteration</code> muncul. Anda tidak melihat ini karena list bekerja demikian dibelakang. Dibawah ini pemanggilan generators menggunakan fungsi <code>next()</code>.</p> <p>Code</p> <pre><code>result_gen = func_gen(4)\nprint(next(result_gen))\nprint(result_gen.__next__()) #(1)!\nprint(next(result_gen))\nprint(next(result_gen))\nprint(next(result_gen)) #(2)!\n</code></pre> <ol> <li>Bisa menggunakan fungsi <code>next()</code> atau menggunakan attribute <code>__next__()</code>.</li> <li>Akan menghasilkan error StopIteration karena generators sudah habis.</li> </ol> Print Output<pre><code>0\n1\n4\n9\n\n---------------------------------------------------------------------------\nStopIteration                             Traceback (most recent call last)\nInput In [43], in &lt;cell line: 6&gt;()\n    4 print(next(result_gen))\n    5 print(next(result_gen))\n----&gt; 6 print(next(result_gen))\n\nStopIteration: \n</code></pre> <p>Jadi apa manfaatnya menggunakan generator function dibandingkan dengan fungsi klasik jika menghasilkan keluaran nilai yang sama ? jawabannya adalah untuk menghemat waktu dan terutama tempat penyimpanan.</p> <p>Info</p> <p>Sangat disarankan untuk menggunakan generator function sebisa munkin untuk menghemat penyimpanan dan waktu.</p>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#going-beyond-generator-function","title":"Going beyond generator function","text":"<p>Sebagaimana yang telah saya catat di Generators, bahwa generator berdiri diatas konsep iteration. Kita juga telah melihat salah satu fungsi <code>next()</code> yang digunakan untuk mengembalikan element selanjutnya dari sebuah iterators.</p> <p>Info</p> <p>Ketika memanggil fungsi <code>next()</code> pada sebuah objek iterator, dibelakang layar iterpreter menjalankan fungsi spesial <code>__next()__</code>dari objek tersebut.</p> <p>Selain fungsi <code>next()</code>, generator juga memliki fungsi laing yang dapat mengatur prilaku generator, yaitu fungsi <code>send()</code>, <code>close()</code>, dan <code>throw()</code></p> <p>Code</p> <pre><code>dir((a for a in range(1)))\n</code></pre> Print Output<pre><code>[ ... \n'close',\n'gi_code',\n'gi_frame',\n'gi_running',\n'gi_yieldfrom',\n'send',\n'throw'\n] \n</code></pre>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#generatornext-function","title":"<code>generator.next()</code> function","text":"<p>Deksripsi dari dokumentasi resmi, <code>next()</code> function.</p> <p>Info</p> <p>Return the next item from the iterator. If default is given and the iterator is exhausted, it is returned instead of raising StopIteration.</p> <p>Mengmbalikan item selanjutnya dari sebuah iterator dan jika iterator tersebut sudah habis, maka fungsi tersebu akan mengembalikan <code>StopIteration</code>.</p>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#generatorsend-function","title":"<code>generator.send()</code> function","text":"<p>Deskripsi dari dokumentasi resmi,</p> <p>Info</p> <p>send 'arg' into generator, return next yielded value or raise StopIteration.</p> <p>Fungsi ini berfungsi untuk mengirim sebuah sinyal dalam bentuk argumen kepada generator function yang diterima oleh statement <code>yield</code>, lalu mengembalikan nilai <code>yield</code> selanjutnya atau mengeluarkan <code>StopIteration</code>.</p> <p>Code</p> <pre><code>def gen_func(start=0):\nnumber = start\nwhile True:\n    yield number\n    number+=1\n\ngen = gen_func()\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\n# Tidak akan pernah habis, forever loop\n</code></pre> Print Output<pre><code>[ ... \n0\n1\n2\n] \n</code></pre> <p>Lihat fungsi <code>gen_func()</code> diatas. Pamanggilan elemen pada generator tersebut tidak akan pernah habis karena tidak ada sebuah kondisi yang membuat perulangan didalam generator function tersebut berhenti. Agar tidak terjadi infinite for loop kita harus menambahkan sebuah kondisi yang dapat kita atur dari luar fungsi tersebut kapan fungsi tersebut harus berhenti.</p> <p>Code</p> <pre><code>stop = False\ndef gen_func(start=0):\n    number = start\n    while True:\n        if stop:\n            print(\"Print Statement : Di stop\")\n            break\n        yield number\n        number+=1\n\ngen = gen_func()\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nstop = True\nprint(next(gen)) #(1)! \n</code></pre> <ol> <li>Memunculkan <code>StopIteration</code></li> </ol> Print Output<pre><code>0\n1\n2\nPrint Statement : Di stop\n\n---------------------------------------------------------------------------\nStopIteration                             Traceback (most recent call last)\nInput In [92], in &lt;cell line: 16&gt;()\n    14 print(next(gen))\n    15 stop = True\n---&gt; 16 print(next(gen))\n\nStopIteration: \n</code></pre> <p>Koda diatas dimodifikasi dengan membuat sebuah flag dengan name <code>stop</code> yang berisikan boolean value <code>False</code> sebagi penentuan kapan perulangan harus di <code>break</code> didalam generator function tersebut. </p> <p>Namun cara tersebut menyebabkan bugs yang nantinya sulit untuk terdeteksi karena kode python yang lainnya dapat tidak sengaja mengubah nilai dari name <code>stop</code> yang dapat mempengaruhi kode pada generator function tersebut. </p> <p>Cara aman untuk mengirim sinyal ke fungsi tersebut dapat menggunakan fungsi <code>send()</code> pada generator.</p> <p>Code</p> <pre><code>def gen_func(start=0):\n    number = start\n    while True:\n        status = yield number # 2\n        if status: # 3\n            print(\"Print Statement : Di stop\")\n            break # 4\n        number+=1\n\ngen = gen_func()\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\ngen.send(True) # 1\nprint(next(gen)) #(1)!\n</code></pre> <ol> <li>Memunculkan <code>StopIteration</code></li> </ol> Print Output<pre><code>0\n1\n2\nPrint Statement : Di stop\n\n---------------------------------------------------------------------------\nStopIteration                             Traceback (most recent call last)\nInput In [92], in &lt;cell line: 16&gt;()\n    14 print(next(gen))\n    15 stop = True\n---&gt; 16 print(next(gen))\n\nStopIteration: \n</code></pre> <p>Dibawah ini adalah penjelasan bagaimana fungsi <code>send()</code> memberikan sinyal ke generator function terhadap kode diatas.</p> <ol> <li>Pada baris ke 14 mengirim sinyal berupa nilai <code>True</code> ke generator function <code>gen_func()</code>.</li> <li>Sinyal ditangkap oleh statement <code>yield</code> dan di assign kepada name <code>status</code>.</li> <li>Kondisi pada baris 5 memenuhi syarat, sehingga body pada conditional if tersebut akan di jalankan.</li> <li>Memberhentikan iterator <code>while</code>.</li> </ol> <p>Untuk lebih memahami, lihatlah kode dibawah ini. Kode ini didapat dari sumber catatan ini pada bagian tetang generator.</p> <p>Code</p> <pre><code>def gen_func(start=0):\n    print(\"Memulai generator\")\n    print(\"-\"*30)\n    number = start\n    while True:\n        signal = yield number #(1)!\n        print(f'Tipe Sinyal : {type(signal)} | Nilai Sinyal : {signal}')\n        if signal == 'Q':\n            print(\"Print Statement : Di stop\")\n            print(\"-\"*30)\n            break\n        number+=1\n\ngen = gen_func()\nprint(next(gen))\nprint(next(gen))\nprint(gen.send(1))\nprint(gen.send(True))\nprint(gen.send([]))\nprint(next(gen))\nprint(gen.send('Q'))\n</code></pre> <ol> <li>Statement <code>yield</code> menunda pengembalian nilai hinggai pemanggilan fungsi next() </li> </ol> Print Output<pre><code>Memulai generator\n------------------------------\n0\nTipe Sinyal : &lt;class 'NoneType'&gt; | Nilai Sinyal : None\n1\nTipe Sinyal : &lt;class 'int'&gt; | Nilai Sinyal : 1\n2\nTipe Sinyal : &lt;class 'bool'&gt; | Nilai Sinyal : True\n3\nTipe Sinyal : &lt;class 'list'&gt; | Nilai Sinyal : []\n4\nTipe Sinyal : &lt;class 'NoneType'&gt; | Nilai Sinyal : None\n5\nTipe Sinyal : &lt;class 'str'&gt; | Nilai Sinyal : Q\nPrint Statement : Di stop\n------------------------------\n\n---------------------------------------------------------------------------\nStopIteration                             Traceback (most recent call last)\nInput In [117], in &lt;cell line: 21&gt;()\n    19 print(gen.send([]))\n    20 print(next(gen))\n---&gt; 21 print(gen.send('Q'))\n\nStopIteration: \n</code></pre> <p>Ingat</p> <p>Statement <code>yield</code> menunda (suspend) pengembalian nilai hingga pemanggilan fungsi <code>next()</code></p>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#generatorthrow-function","title":"<code>generator.throw()</code> function","text":"<p>Deskripsi dari dokumentasi resmi,</p> <p>Info</p> <p>raise exception in generator, return next yielded value or raise StopIteration.</p> <p>Fungsi <code>throw()</code> akan mengeluarkan sebuah exception dalam generator function. Lihat kode dibawah ini contoh pemanfaatan fungsi <code>throw()</code>.</p> <p>Code</p> <pre><code>class ExceptionBuatan(Exception):\n    \"\"\"Exception buatan\"\"\"\n\ndef gen_func(n=1):\n    number = n\n    try:\n        while True:\n            value = yield f'Ini angka {n} the value'\n            n+=1\n    except ExceptionBuatan:\n        yield \"Stop karena keinginan\" #(1)! masih dapat yielded value\n    except StopIteration:\n        yield \"Generator habis\"\n\ngen = gen_func()\nprint(next(gen))\nprint(next(gen))\nprint(next(gen))\nprint(gen.throw(ExceptionBuatan))\n</code></pre> <ol> <li>Pada block <code>Exception</code> tetap dapat me-return value dengan statement <code>yield</code></li> </ol> Print Output<pre><code>Ini angka 1 the value\nIni angka 2 the value\nIni angka 3 the value\nStop karena keinginan\n</code></pre> <p>Hmmm, saya menemukan sebuah jawabn dari pertanyaan pada website Stack overflow tentang implementasi yang cocok dari fungsi <code>.throw()</code>, look at this additional note.</p>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#generatorclose-function","title":"<code>generator.close()</code> function","text":"<p>Fungsi <code>.close()</code> akan memunculkan <code>GeneratorExit</code> exception pada generator function.</p> <p>Code</p> <pre><code>def gen_func(n=1):\n    number = n\n    try:\n        while True:\n            value = yield f'Ini angka {n} the value'\n            n+=1\n    except ExceptionBuatan:\n        yield \"Stop karena keinginan\"\n    except StopIteration:\n        yield \"Generator habis\"\n    except GeneratorExit:\n        print (\"Generator di close\")\n\ngen = gen_func()\nprint(next(gen))\ngen.close()\n</code></pre> Print Output<pre><code>Ini angka 1 the value\nGenerator di close\n</code></pre>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#statement-yield-from-expression","title":"Statement <code>yield from</code> expression","text":"<p>Python menyediakan statement <code>yield from</code> pada pola kode yang lebih kompleks. Dengan statement tersebut anda dapat mengembalikan nilai pada sub iterator atau generator lainnya.</p> <p>Katakan kita ingin membuat dua buah generator function, pertama <code>gen_1</code> yang berisikan kode memunculkan akar pangkat dari bilangan berurut yang diberikan pada argumen fungsi tersebut, dan kedua <code>pring_def_gen()</code> yang mengembalikan costume print dari fungsi pertama.</p> yield from sub generator functionyield from generator expression <p>Code</p> <pre><code>def gen_1 (n = 1):\n    for a in range(n):\n        yield a**2\n\ndef print_def_gen():\n    print(\"Start\")\n    yield from gen_1(3)\n    print(\"Akhir\")\n\nfor a in print_def_gen():\n    print(a)\n</code></pre> Print Output<pre><code>Start\n0\n1\n4\nAkhir \n</code></pre> <p>Untuk catatan generator expression setelah bagian catatan ini.</p> <p>Code</p> <pre><code>def print_def_gen(n = 1):\n    print(\"Start\")\n    yield from (a**2 for a in range(n))\n    print(\"Akhir\")\n\nfor a in print_def_gen(3):\n    print(a)\n</code></pre> Print Output<pre><code>Start\n0\n1\n4\nAkhir \n</code></pre>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#generator-expression","title":"Generator Expression","text":"<p>Syntax Generator Expression mirip dengan list comprehensions. Jika list comprehensions menggunakan open bracket, generator expression menggunakan round bracket. Dan yang perlu anda ingat adalah, expression ini mengembalikan generator object yang mana setiap elemenya hanya dapat dipanggil sekali.</p> <p>Code</p> <pre><code>gen_exp = (a**2 for a in range(4))\nprint (gen_exp)\nprint(list(gen_exp)) #(1)!\nprint(list(gen_exp)) #(2)!\n</code></pre> <ol> <li> <p>Setiap item pada generator akan dipanggil serta ditampung pada list hingga setiap element pada generator tersebut habis.</p> </li> <li> <p>List tidak akan menampung apa-apa,kerena generator sudah habis dipakai pada pemanggilan diatas.</p> </li> </ol> Print Output<pre><code>&lt;generator object &lt;genexpr&gt; at 0x7f77e2b21ac0&gt;\n[0, 1, 4, 9]\n[]\n</code></pre> <p>Dibawah ini mari kita perbandingan penggunaan fungsi <code>map()</code> dalam membuat sebuah algoritma dengan menggunakan generator expression.</p> Menggunakan <code>map</code>Menggunakan Generator Expression <p>Code</p> <pre><code>def add(*n): #(1)! ingat, variable positional parameter\n    return sum(n)\n\nhasil = map(add, range(100), range(1,101))\nprint(list(hasil))\n</code></pre> Print Output<pre><code>[1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199]\n</code></pre> <p>Code</p> <pre><code>def add(*n): #(1)! \n    return sum(n)\n\nhasil = (add(*a) #(2)! ingat, iterable unpacking\n        for a in zip(range(100),range(1,101)))\nprint(list(hasil))\n</code></pre> <ol> <li>Ingat, variable positional parameter</li> <li>Ingat, iterable unpacking</li> </ol> Print Output<pre><code>[1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199] \n</code></pre> <p>Sekarang, mari kita lihat perbedaan penggunaan pemecahan masalah menggunakan <code>filter</code> dan generator expression. Katakan, buat sebuah return value yang menampilkan \\((n,n^3)^1,(n,n^3)^2,(n,n^3)^3,...,(n,n^3)^n\\) untuk urutan jumlah n dalam bilangan berurut.</p> Menggunakan <code>map dan filter</code>Menggunakan Generator Expression <p>Code</p> <pre><code>hasil = map(lambda n : (n, n**3), filter(lambda n : not n%3 or not n%5, range(10)))\nprint(list(hasil))\n</code></pre> Print Output<pre><code>[(0, 0), (3, 27), (5, 125), (6, 216), (9, 729)]\n</code></pre> <p>Code</p> <pre><code>gen_exp = ((n,n**3) for n in range(10) if not n%3 or not n%5)\nprint(list(gen_exp))\n</code></pre> Print Output<pre><code>[(0, 0), (3, 27), (5, 125), (6, 216), (9, 729)]\n</code></pre> <p>Selain meninkatkan penulisan kode yang lebih sedikit dan lebih elegan, penggunaan dari generator expression juga meningkatkan kecepatan waktu proses. Dibawah ini perbandingan penggunaan list comprehension dengan generatro expression</p> Menjumlahkan hasil list comprehensionMenjumlahkan hasil generator expressions <p>Code</p> <pre><code>import time as tm\n\nbeg = tm.time()\nhasil = sum([a**2 for a in range (10**8)])\nprint(f'Waktu yang dibutuhkan {(tm.time()-beg):.4f} detik')\n</code></pre> Print Output<pre><code>Waktu yang dibutuhkan 31.9118 detik\n</code></pre> <p>Code</p> <pre><code>import time as tm\n\nbeg = tm.time()\nhasil = sum(a**2 for a in range (10**8))\nprint(f'Waktu yang dibutuhkan {(tm.time()-beg):.4f} detik')\n</code></pre> Print Output<pre><code>Waktu yang dibutuhkan 31.7187 detik\n</code></pre>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#name-localization","title":"Name Localization","text":"<p>Pada catatan tentang namespace telah dipelajari tentang LEGB (Local, Enclosing, Global, Built-in). Pada python3, interpreter akan me-localize variable atau names pada bentuk atau bentuk dari list comprehensions, dictionary comprehensions, set comprehensions dan generators. Namun tidak pada for loop,</p> <p>Code</p> <pre><code>a = 100\n\nhasil = sum(a for a in range(10))\nprint(f'Nilai a setelah generator expressions : {a}')\n\nhasil2 = sum([a for a in range(10)])\nprint(f'Nilai a setelah list comprehensions : {a}')\n\nhasil2 = sum({a for a in range(10)})\nprint(f'Nilai a setelah set comprehensions : {a}')\n\n\nlst = []\nfor a in range(10):\n    lst.append(a) #(1)!\n\nhasil3 = sum(lst)\nprint(f'Nilai a setelah for loop : {a}')\n</code></pre> <ol> <li>Merubah nilai gelobal name a</li> </ol> Print Output<pre><code>Nilai a setelah generator expressions : 100\nNilai a setelah list comprehensions : 100\nNilai a setelah set comprehensions : 100\nNilai a setelah for loop : 9\n</code></pre> <p>Liha pada baris ke-<code>15</code>. Nilai global names a ditiban dengan assign value pada for loop.</p>"},{"location":"Programming%20Language/Python/04.%20Comprehension%20and%20Generators/#latihan","title":"Latihan","text":"<p>Coba buatkan sebuah kode untuk membuat nomor urut fibonacci.</p> Penjelasan algo fibonacci <p></p> The not elegant oneMore elegantMore more elegant using generator <p>Code</p> <pre><code>lst = []\na = 0\n\nwhile a &lt;= 10:\n    if a in (0,1):\n        lst.append(a)\n    else:\n        lst.append(lst[a-1]+lst[a-2])\n    a+=1\n\nprint(lst)\n</code></pre> <p>Code</p> <pre><code># More elegan\ndef febon_v2 (n=1):\n\n    lst = [0]\n    next_append = 1\n    while len(lst) &lt; n:\n        lst.append(next_append)\n        next_append = sum(lst[-2:])\n\n    return lst\n\n\n\nprint(febon_v2(20))\n</code></pre> <p>Code</p> <pre><code># Menggunakan generator function\ndef fibon_gen(n=1):\n    count = 0\n    cur_value = 0\n    next_append = 1\n    while count &lt; n:\n        yield cur_value\n        cur_value,  next_append= next_append,next_append+cur_value\n        count+=1\ngen_fibon = fibon_gen(7)\n</code></pre>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/","title":"OPP,  Decorator, and Iterators","text":""},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#decorators","title":"Decorators","text":"<p>Sebelumnya kita membuat sebuah kode untuk mengukur waktu yang digunakan oleh interpreter dalam menjalankan kode python yang kita buat. Kita selelau menulis ulang kode tersebut ketika ingin mengukur waktunya. Jika penggunaan kode tersebut diguakan berulang kali kita dapat membungkus kode tersebu kedalam sebuah fungsi.</p> <p>Code</p> <pre><code>from time import sleep, time\ndef f():\n    sleep(0.5)\n\ndef g():\n    sleep(1)\n\ndef measure(func):\nt = time()\nfunc()\nprint(f'took : {time()-t}')    \n\nmeasure(f)\nmeasure(g)\n</code></pre> Print output<pre><code>took : 0.5009582042694092\ntook : 1.0015130043029785\n</code></pre> <p>Mekanisme penghitungan waktu yang dibutuhkan telah dibungkus kedalam sebuah fungsi. Namun bagaimana jika kita ingin membuat sebuah fungsi (bukan fungsi untuk <code>measure</code>-nya) agar menerima sebuah argumen.</p> <p>Code</p> <pre><code>from time import sleep, time\ndef f(time=0):\n    sleep(time)\n\ndef measure(func,*args,**kwargs):\n    t = time()\n    # print(args)\n    # print(kwargs)\n    func(*args,**kwargs)\n    print(f'took : {time()-t}')\n\nmeasure(f,time=1)\n</code></pre> Print output<pre><code>took : 1.0011773109436035\n</code></pre> <p>Info</p> <p>Kode diatas menggunakan dictionary unpacking, iterable unpacking, variabel positional parameter, dan variable keyword parameter</p> <p>Oke, namun bagaimana jika kita ingin pengukuran waktu tersebut berada didalam fungsi <code>f()</code> bukan dengan memanggil fungsi <code>measure()</code>?</p> <p>Code</p> <pre><code>from time import sleep, time\ndef f(time=1):\n    \"\"\"This is doc of function f\"\"\"\n    sleep(time)\n\ndef measure(func):\n    \"\"\"This is doc of function measure\"\"\"\n    def wraper(*args, **kwargs):\n        \"\"\"This is doc of function wrapper\"\"\"\n        t = time()\n        func(*args,**kwargs)\n        print(f'took : {time()-t}')\n    return wraper\n\nf = measure(f) #(1)!\nf(1)\nf(time=1.5)\nf.__doc__\n</code></pre> <ol> <li>Decorator point</li> </ol> Print output<pre><code>took : 1.0011024475097656\ntook : 1.5006706714630127\n\n'This is doc of function wrapper'\n</code></pre> <p>Mari kita jabarkan kode diatas. Yang terpenting dari kode diatas adalah decorator point. Kita me-reassign name <code>f</code> dengan apapun yang dikembalikan oleh fungsi <code>measure()</code> dengan argumen fungsi <code>f()</code> itu sendiri. Didalam fungsi <code>!#python measeure()</code> kita membuat sebuah fungsi dengan nama <code>wrapper()</code> dan mengembalikan fungsi tersebut. Sehingga terjadilah the net effec setelah decorator point, ketika kita memanggil fungsi <code>f()</code> sebenarnya kita memanggil fungsi <code>wrapper()</code>, dapat kita buktikan dengan memanggi attribut <code>__doc__</code> interpreter mengeluarkan dokumentasi dari fungsi <code>wrapper()</code>. Karena didalam fungsi <code>wrapper()</code> memanggil fungsi <code>func()</code>, yaitu fungsi <code>f()</code> maka perulangan ditutup.</p> <p>Fungsi <code>wrapper()</code> adalah sebuah pembungkus, fungsi tersebut menerima variabel positional dan keyword arguments serta menjalankan fungsi <code>f()</code> dan juga melakukan pengukuran waktu didalamnya.</p> <p>Teknik tersebut disebut dengan decoration dan fungsi <code>measure()</code> adalah decorator-nya. Paradigma ini menjadi sangat terkenal dan akhirnya pada versi 2.4 python menambahkan special syntax untuk mendapatkan hasil yang sama dengan decoration itu.</p> <p>Dibawah ini adalah beberapa syntax cara menggunakan decorator, satu decorator, dua decorator dan satu decorator yang dapat menerima sebuah argumen.</p> Satu decoratorDua decoratorSatu decorator yang menerima sebuah argumen <pre><code>def func(arg1, arg2, ...):\n    pass\n\nfunc = decorator(func)\n\n# Setara dengan\n@decorator\ndef func(arg1, arg2, ...):\n    pass\n</code></pre> <pre><code>def func(arg1, arg2, ...):\n    pass\n\nfunc = decorator1(decorator2(func))\n\n# Setara dengan\n@decorator1\n@decorator2\ndef func(arg1, arg2, ...):\n    pass\n</code></pre> <pre><code>def func(arg1, arg2, ...):\n    pass\n\nfunc = decorator(arg_1,arg_2,...)(func)\n\n# Setara dengan\n@decorator(arg_1, arg_2, ...)\ndef func(arg1, arg2, ...):\n    pass\n</code></pre> <p>Oke, mari kita gunakan spesial syntax tersebut kepada kode sebelumnya.</p> <p>Code</p> <pre><code>from time import sleep, time\ndef measure(func):\n    \"\"\"This is doc of function measure\"\"\"\n    def wraper(*args, **kwargs):\n        \"\"\"This is doc of function wrapper\"\"\"\n        t = time()\n        func(*args,**kwargs)\n        print(f'took : {time()-t}')\n    return wraper\n\n@measure\ndef f(time=1):\n    \"\"\"This is doc of function f\"\"\"\n    sleep(time)\n</code></pre> Print output<pre><code>f(1.7)\nprint(f.__name__)\n</code></pre> <p>Oke, lebih simple menggunakan spesial synrax, Namun kita ingin membetulkan sedikit kode. kode diatas dan sebelumnya ketika kita memanggil attribute <code>__name__</code> dan <code>__doc__</code> fungsi yang didekor mengembalikan fungsi wrappernya. Kita dapat betulkan dengan mengimport <code>from functools import wraps</code> dan menggunakan spesial syntax <code>@wraps</code> pada wrapper.</p> <p>Code</p> <pre><code>from functools import wraps\ndef measure(func):\n    \"\"\"This is doc of function measure\"\"\"\n    @wraps(func)\n    def wraper(*args, **kwargs):\n        \"\"\"This is doc of function wrapper\"\"\"\n        t = time()\n        func(*args,**kwargs)\n        print(f'took : {time()-t}')\n    return wraper\n\n@measure\ndef f(time=1):\n    \"\"\"This is doc of function f\"\"\"\n    sleep(time)\n\nf(1)\nprint(f'function name : {f.__name__},', f'docs : {f.__doc__}')\n</code></pre> Print output<pre><code>took : 1.0004987716674805\nfunction name : f, docs : This is doc of function f\n</code></pre> <p>Alhamdulillah, sekaramg kita tidak kehilangan attribute dari fungsi <code>f()</code>.</p> <p>Oke, sekarang mari kita buat contoh lain, katakan kita ingin membuat sebuah fungsi yang mengembalikan luas sebuah kotak dari nilai sisi yang diberikan pada sebuah parameter. Dan kita juga ingin tetap ada pengukura waktu yang dibutuhkan dan ada sebuah fungsi juga yang mengelarkan error jika hasil yang dikeluarkan dari fungsi utama lebih dari 100.</p> CodeMore detail with comments <p>Code</p> <pre><code>from time import sleep, time\nfrom functools import wraps\n\ndef measure(func):\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        t = time()\n        result = func(*args,**kwargs)\n        print(f'took : {time()-t}')\n        return result\n    return wrapper\n\ndef max_result(func):\n    @wraps(func)\n    def wrapper(*args,**kwargs):\n        result = func(*args,**kwargs)\n        if result &gt; 100:\n            print(f\"Hasil melebihi nilai seharusnya {result}\")\n        return result\n    return wrapper\n\n@max_result #(2)!\n@measure #(1)!\ndef cube(value=0):\n    return value*value\n\nprint(cube(11))\nprint(f'function name attribute : {cube.__name__}')\n</code></pre> <ol> <li>Decorator function <code>measure</code> lebih dulu dijalankan</li> <li>Decorator function <code>max_result</code> dijalankan setelah <code>measure</code></li> </ol> Print output<pre><code>took : 1.6689300537109375e-06\nHasil melebihi nilai seharusnya 121\n121\nfunction name attribute : cube\n</code></pre> <p>Code</p> <p><pre><code>from time import sleep, time\nfrom functools import wraps\n\ndef measure(func):\n    print(1)\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        print(4)\n        t = time()\n        result = func(*args,**kwargs)\n        print(\"6.\",\"Hasil dari step 5 akan kesini\")\n        print(f'\\ttook : {time()-t}')\n        return result\n    print(\"1.2\")\n    return wrapper\n\n\ndef max_result(func):\n    print(\"2\")\n    @wraps(func)\n    def wrapper(*args,**kwargs):\n        print(\"3\")\n        result = func(*args,**kwargs)\n        print(\"7.\", \"Hasil dari step 6 akan kesini\")\n        if result &gt; 100:\n            print(f\"\\tHasil melebihi nilai seharusnya {result}\")\n        return result\n    print(\"2.2\")\n    return wrapper\n\n@max_result \n@measure \ndef cube(value=0):\n    print(5)\n    return value*value\n\n\nprint(\"=\"*20)\nprint(cube(4))\nprint(f'function name attribute : {cube.__name__}')\n</code></pre> Print output<pre><code>1\n1.2\n2\n2.2\n====================\n3\n4\n5\n6. Hasil dari step 5 akan kesini\n    took : 8.726119995117188e-05\n7. Hasil dari step 6 akan kesini\n16\nfunction name attribute : cube\n</code></pre></p> <p>Bingung, lihat detail dengan comen pada snipet diatas.</p>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#a-decorator-factory","title":"A decorator factory","text":"<p>Katakan kita ingin membuat sebuah decorator function yang dapat menerima sebuah argumen. Cara tersebut disebut dengan decorator factory. Agar decorator function dapat menerima sebuah function, kita harus membungkus fungsi decorator dengan fungsi lain yang menerima argumen untuk decorator fungsi tersebut. Lihatlah baris yang di hightlight dibawah ini.</p> <p>Code</p> <pre><code>def measure(func):\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        t = time()\n        result = func(*args,**kwargs)\n        print(f'took : {time()-t}')\n        return result\n    return wrapper\n\ndef maxresult(treshold):\n    def decorator(func):\n        @wraps(func)\n        def wrapper(*args,**kwargs):\n            result = func(*args,**kwargs)\n            sleep(1)\n            if(result &gt; treshold):\n                print(f\"Hasil {result} melebih treshold {treshold}\")\n            else:\n                print(f\"Hasil {resukt}\")\n            return result\n        return wrapper\n    return decorator\n\n@measure\n@maxresult(2)\ndef cube2(c=1):\n    return c ** c\n\n\ncube2(4)\n</code></pre> Print output<pre><code>took : 1.0004987716674805\nfunction name : f, docs : This is doc of function f\n</code></pre>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#object-oriented-programming","title":"Object Oriented Programming","text":"<p>Tip</p> <p>Dibawah ini adalah penggunaan istilah yang memliki maksud yang sama, namun terkadang penggunaanya sering tertukar dan tidak masalah selama maksudnya sama.</p> <ol> <li>Attribute = Propertiy</li> <li>Behavior = Method</li> <li>Instance = Object</li> <li>Parameter = Argument</li> </ol> <p>Segelanya didalam python adalah objek. Dua pemain utama dalam OOP adalah object dan class. Class digunakan untuk membuat objek (objek adalah instance dari class). Ketika objek dibuat dari sebuah class, objek tersebut menurunkan atribut dan method dari class tersebut.</p> <p>Code</p> <pre><code>class Simple:\npass\n\ninst_simple = Simple()\nprint(type(Simple))\nprint(type(inst_simple))\nprint(type(inst_simple) is Simple)\n</code></pre> Output<pre><code>&lt;class 'type'&gt;\n&lt;class '__main__.Simple'&gt;\nTrue\n</code></pre> <p>(<code>__main__</code> adalah nama scope dimana top-level code dieksekusi). Class sebenarnya adalah objek. Agar lebih jelasnya, class adalah instance dari Type. Penjelasan tentang konsep tersebut akan mengarah perbincangan tentang metaclasses dan metaprogramming.</p> <p>Dapat kita lihat, syntax untuk membuat sebuahinstance sama dengan syntax untuk memanggil sebuah fungsi. Pada baris terakhir kodetersebut, kita menguji dan memverifikasi apakah objek <code>inst_simple</code> instance dari class <code>Simple</code>.</p> <p>Tip</p> <p>Ada cara lain yang lebih baik untuk menverifikasi instance dari sebuah objek yang akan ada dicatatan selanjutnya.</p>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#class-and-object-namespaces","title":"Class and object namespaces","text":"<p>Setelah class object dibuat (biasanya terjadi saat module pertama kali di import), objek tersebut merepresentasi <code>namespace</code>. Kita dapat memanggil class tersebut untuk membuat instance class tersebut. Setiap instance menurunkan attribute dan method clas tersebut dan memberikan namespace-nya sendiri. kita telahmengatahui untuk merujuk ke namespace, yang kita butuhkan adalah menggunakan operator dot <code>.</code></p> <p>Code</p> <pre><code>class Person:\n    species = 'Human'\n\nprint(Person.species) # Human\nPerson.alive = True # Added dynamically!\nprint(Person.alive) # True\n\nman = Person()\nprint(man.species) # Human (inherited)\nprint(man.alive) # True (inherited)\nPerson.alive = False\nprint(man.alive) # False (inherited)\nman.name = 'Darth'\nman.surname = 'Vader'\nprint(man.name, man.surname)\n# Darth Vader\n</code></pre> <p>Contoh diatas, kita membuat sebuah class atribute dengan nama <code>species</code>. Setiap variabel yang didefinisikan di badan dari class  menjadi sebuah attribute classtersebut. pada kode diatas, kita juga membuat attribute <code>Person.alive</code> secara dinamik. Selanjutnya kita juga membuat sebuah instace dari class person dengan nama <code>man</code>. Instance tersebut menurunkan attribute dari class Person.</p> <p>Instance <code>man</code> memliki isntace attribute, yang mana hanya bisa diakese oleh instance tersebut sendiri. Instance attribute tersebut adalah <code>name</code> dan <code>surname</code>. Attribute ini tidak bisa diakses dari instnce lainnya.</p> <p>Code</p> <pre><code># Create instance\nwoman = Person()\ntry:\n    print(woman.species)\n    print(woman.alive)\n    print(woman.surname) # Will rain an exception\nexcept Exception as e:\n    print (e)\n</code></pre> Output<pre><code>Human\nFalse\n'Person' object has no attribute 'surname'\n</code></pre> <p>Info</p> <p><code>Class attribute</code> dapat diakses oleh seluruh instance, sedangkan <code>instance attribute</code> tidak. Namun, anda harus menggunakan class attribute untuk menyediakan parameter dan method yang dapat diakases oleh semua instance dan gunakan instance attribute untuk membuat data spesifik untuk setiap individu objek.</p>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#attribute-shadowing","title":"Attribute Shadowing","text":"<p>Ketika kita mencari sebuah attribute pada sebauh objek. Jika atribute tersebut tidak ditemukan, python akan melanjutkannya ke attributepada class yang digunakan untuk membuat objek tersebut (dan terus berlanjut hingga ketemu atau akhir dari turunan). Prilak ini disebut dengan shadowing behavior.</p> <p>Code</p> <pre><code>class Point:\nx = 10\ny = 7\np = Point()\nprint(p.x) # 10 (from class attribute)\nprint(p.y) # 7 (from class attribute)\np.x = 12 # p gets its own `x` attribute\nprint(p.x) # 12 (now found on the instance)\nprint(Point.x) # 10 (class attribute still the same)\ndel p.x # we delete instance attribute\nprint(p.x) # 10 (now search has to go again to find class attr)\np.z = 3 # let's make it a 3D point\nprint(p.z) # 3\nprint(Point.z)\n# AttributeError: type object 'Point' has no attribute 'z'\n</code></pre>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#the-self-argument","title":"The self argument","text":"<p>Dari dalam method class, kita dapat merujuk ke instance menggunakan special argument yang disebut dengan self. self selalu menjadi attribute pertama dari sebuah instance method.</p> <p>self is always the first attribute of an instance method</p> <p>Code</p> <pre><code>class Square:\nside = 8\n    def area(self): #(1)!\n        return self.side*self.side\n\n\nsquare = Square()\nsquare.area()\n</code></pre> <ol> <li>Sepecial argument <code>self</code> harus menjadi attribute pertama dari instance method. Berguna untuk mengambil attribute atau behavior dari instance tersebut.</li> </ol> <p>Lihat dibawah ini untuk contoh yang insyaAllah membuat kita lebih paham tentang behavior yang python lakukan terhadap special argument <code>self</code> ini.</p> <p>Code</p> <pre><code>class Price:\n\ndef price_after_tax(self, tax):        \n    return (self.pricing) * ((100+tax)/100)\n\n\np1 = Price()\np1.pricing = 20_000 # Set instance property\n\n#------------------------------------------\n# Memanggil method price_after_tax melalui\n# instance dari Price\n# -----------------------------------------\np1.price_after_tax(10) \n\n\n#-------------------------------------------\n# Memanggil method price_agter_tax lansung\n# dari class.\n#\n# Menggunakan p1 sebagai special argument\n# untuk mendapatkan instance property \n# `pricing`\n#-------------------------------------------\nPrice.price_after_tax(p1,10)\n</code></pre> <p>Kalau pusing, lihat contoh diatas aja hehe </p>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#initializing-an-instance","title":"Initializing an instance","text":"<p>Sebelumnya, tepat pada code snippet diatas kita membuat sebuah behavior yang memerlukan attribute <code>pricing</code>. Dan attribut <code>pricing</code> tersebut kita buat setelah instace class <code>Price</code> terbuat. Ada cara yang lebih baik, yaitu menggunakan constructor.</p> <p>Namun di python tidak disebut dengan constructor, melainkan initializer, karena initializer berjalan tepat setelah instance dibuat, dan langsung memanggil method special <code>__init__</code>. Method tersebut langsung berjalan setelah objek dibuat. Python object juga memliki method <code>__new__</code> yang mana method tersebutlah constructor yang sebenarnya.</p> <p>Info</p> <p>Pada prakteknya, penggunakan method <code>__new__</code> tidak sering digunakan (di ovveride); teknik tersebut banyak digunakan ketika membuat metaclasses.</p> <p>Code</p> <pre><code>class Rectangel:\n\n    count_side = 4 # class property\n\n    def __init__(self,side1,side2):\n        self.side1 = side1 # instance property\n        self.side2 = side2 # instance property\n\n    def area(self):\n        return self.side1 * self.side2\n\n\nr1 = Rectangel(2,3)\nprint(r1.area()) # 6\n\nr2 = Rectangel(3,5)\nprint(r2.area()) # 15\n\n\nprint(r1.count_side == r2.count_side) # True\n</code></pre> <p>Ketika objek dibuat, <code>__init__</code> method secara otomatis akan berjalan. Pada kasus diatas, kita membuat method tersebut menerima dua buah argument dan badan dari method tersebut kita gunakan untuk membuat sebuah instance property. </p> <p>MasyAllah, dapat kita lihat juga, pemanggilan fungsi <code>area()</code> dari objek <code>r1</code> dan <code>r2</code> merefleksikan hasil dari instance argument yang berbeda.</p> <p>Pada kode tearkhir diatas kita memverifikasi bahwa instance r1 dan r2 berbagi class property yang sama.</p>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#oop-is-about-code-reuse","title":"OOP is about code reuse","text":"<p>Inheritance and composition</p> <p>Inhereitance terjadi ketiak dua objek saling berhubungan dengan tipe relasi <code>Is-A</code> </p> <p>Composition terjadi ketia dua objek saling berhubung dengan tipe relasi <code>Has-A</code></p> <p>Bismila, mari kita lihat kode dibawah ini agar lebih mudah untuk memahami apa itu inheritance dan composition.</p> <p>Code</p> <pre><code>class Engine:\n    def start(self):\n        pass\n    def stop(self):\n        pass\n\nclass ElectricEngine(Engine): # Is-a Engine\n    pass\nclass V8Engine(Engine): # Is-a Engine\n    pass\n\n\nclass Car:\n    engine_cls = Engine\n    def __init__(self):\n        self.engine = self.engine_cls() # Has-A Engine\n    def start(self):\n        print(\n        'Starting engine {0} for car {1}... Wroom, wroom!'.format(self.engine.__class__.__name__, self.__class__.__name__))\n        self.engine.start()\n\n    def stop(self):\n        self.engine.stop()\n\nclass RaceCar(Car): # Is-A Car\n    engine_cls = V8Engine\n\nclass CityCar(Car): # Is-A Car\n    engine_cls = ElectricEngine\n\nclass F1Car(RaceCar): # Is-A RaceCar and also Is-A Car\n    pass # engine_cls same as parent\n\ncar = Car()\nracecar = RaceCar()\ncitycar = CityCar()\nf1car = F1Car()\ncars = [car, racecar, citycar, f1car]\n\nfor a in cars:\n    a.start()\n</code></pre> Output <pre><code>Starting engine Engine for car Car... Wroom, wroom!\nStarting engine V8Engine for car RaceCar... Wroom, wroom!\nStarting engine ElectricEngine for car CityCar... Wroom, wroom!\nStarting engine V8Engine for car F1Car... Wroom, wroom!\n</code></pre> <p>Kode diatas menujunkan pada komen hubungan relasi <code>Is-A</code> dan <code>Has-A</code> antar objek. Pertama, mari kita lihat class <code>Engine</code>. Class sederhana yang memliki dua buah methods, <code>start</code> dan <code>stop</code>.</p> <p>Selanjunya kita membuat class <code>ElectriceEngine</code> dan <code>V8Engine</code> yang mana keduanya turunan dari class <code>Engine</code>. Dapat kita lihat penentuan turunan tersebut dari class <code>Engine</code> setelah nama class <code>ElectricEngine</code> dan <code>V8Engine</code>. Dengan demikian, kedua class tersebut menurunkan attribute dan method dari class <code>Engine</code>, yg mana <code>Engine</code> class adalah base class dari <code>ElectricEngine</code> dan <code>V8Engine</code>.</p> <p>Sama dengan class <code>Car</code>, class tersebut adalah base class untuk kedua class <code>RaceCar</code> dan <code>CityCar</code>. <code>RaceCar</code>juga base class dari <code>F1Car</code>. Dengan kata lain, <code>F1Car</code> menurunkan semua attribute dan method dari <code>RaceCar</code> yang mana juga turunan dari <code>Car</code>. Artinya <code>F1Car</code> Is-A <code>RaceCar</code> Is-A <code>Car</code>, sehingga disimpulkan <code>F1Car</code> Is-A <code>Car</code>. Sedengkan <code>CityCar</code> Is-A <code>Car</code>.</p> <p>Ketika kita mendefinisikan <code>class A(B)</code>: artinya, <code>A</code> adalah child dari <code>B</code>, dan <code>B</code> adalah parent dari <code>A</code>. Parent class sinonim dengan Base class. Dan terkadang juga dikatakan sebuah class turunan dari class lain, atau dikatakan dalam inggrinsya selain <code>inherits</code> juga disebut dengan <code>extends</code>.</p> <p>Mekanisme diatas disebut dengan inheritance</p> <p>Setiap class memliki class attribute, yaitu, <code>engine_cls</code> yangmana refresi ke engine class yang nantinya kita ingin assign untuk setiap tipe mobil. <code>Car</code> memliki class <code>Engine</code> uumum, dimana <code>RaceCar</code> memliki <code>V8Engine</code> dan <code>CityCar</code> memliki <code>ElectriEngine</code>.s</p> <p>Ketika objek car dibuat, intializer method, <code>__init__()</code> akan membuat instance dari engine class yang di assign ke mobil yang bersangkutan, dan akan dipasang menjadi instace attribute.</p> <pre><code>...\nclass Car:\n        engine_cls = Engine\n        def __init__(self):\n            self.engine = self.engine_cls() # Has-A Engine\n            # Menjadi instance attribute engine\n...\n</code></pre> <p>Tipe relasi antara <code>Car</code> dan <code>Engine</code> adalah <code>Has-A</code>. Aspek ini disebut dengan composition, dan merefleksikan bahwa objek-objek dapat terdiri dari banyak objek. Car has-A engine, gears, wheels, frame doors, seats, dan seterusnya.</p> <p>Tip</p> <p>When designing OOP code, it is important to describe objects in this way so that we can use inheritance and composition correctly, to structure our code in the best way.</p> <p>Oke, sekarang mari kita verifikasi terkait objek instansi dari class yang mana</p> <p>Code</p> <pre><code>car = Car()\nracecar = RaceCar()\ncitycar = CityCar()\nf1car = F1Car()\n\ncars = [(\"[car]\",car), (\"[race car]\",racecar), (\"[city car]\",citycar), (\"[F1 car]\",f1car)]\nclass_cars = [Car,RaceCar,F1Car,CityCar]\n\nfor car in cars:\n    for _class in class_cars:\n\n        is_instance = isinstance(car[1], _class)\n\n        msg = \"instansi dari\" if is_instance else \"bukan instansi dari\"\n        print(f\"{car[0]} {msg} {_class.__name__}\")\n    print(\"\\n\")\n</code></pre> Output<pre><code>[car] instansi dari Car\n[car] bukan instansi dari RaceCar\n[car] bukan instansi dari F1Car\n[car] bukan instansi dari CityCar\n\n[race car] instansi dari Car\n[race car] instansi dari RaceCar\n[race car] bukan instansi dari F1Car\n[race car] bukan instansi dari CityCar\n\n[city car] instansi dari Car\n[city car] bukan instansi dari RaceCar\n[city car] bukan instansi dari F1Car\n[city car] instansi dari CityCar\n\n[F1 car] instansi dari Car\n[F1 car] instansi dari RaceCar\n[F1 car] instansi dari F1Car\n[F1 car] bukan instansi dari CityCar\n</code></pre> <p>Sebagaimana yang kita lihat, car adalah instance dari <code>Car</code>, sedangkan race car adalah instance dari <code>Car</code> dan <code>RaceCar</code>.</p> <p>Oke, mari sekarang kita check apakah sebuah class turunan dari base class atau parent class tertentu menggunakan fungsi <code>issubclass()</code>.</p> <p>Code</p> <pre><code>car = Car()\nracecar = RaceCar()\ncitycar = CityCar()\nf1car = F1Car()\n\nclass1 = [Car,RaceCar,F1Car,CityCar]\nclass2 = [Car,RaceCar,F1Car,CityCar]\n\nfor cls1 in class1:\n    for cls2 in class2:\n\n        is_instance = issubclass(cls1, cls2)\n\n        msg = \"subclass dari\" if is_instance else \"bukan subclass dari\"\n        print(f\"[{cls1.__name__}] {msg} {cls2.__name__}\")\n    print(\"\\n\")\n</code></pre> Output<pre><code>[Car] subclass dari Car\n[Car] bukan subclass dari RaceCar\n[Car] bukan subclass dari F1Car\n[Car] bukan subclass dari CityCar\n\n\n[RaceCar] subclass dari Car\n[RaceCar] subclass dari RaceCar\n[RaceCar] bukan subclass dari F1Car\n[RaceCar] bukan subclass dari CityCar\n\n\n[F1Car] subclass dari Car\n[F1Car] subclass dari RaceCar\n[F1Car] subclass dari F1Car\n[F1Car] bukan subclass dari CityCar\n\n\n[CityCar] subclass dari Car\n[CityCar] bukan subclass dari RaceCar\n[CityCar] bukan subclass dari F1Car\n[CityCar] subclass dari CityCar\n</code></pre> <p>Dapat kita lihat, ternyata sebuah class adalah subclass dari dirinya sendiri .</p> <p>Dibawah ini adalah gambar yang insyaAllah mempermudah pemahaman tentang perbadaan dari hubungan Is-A dan Has-A.</p> <p></p>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#accessing-a-base-class","title":"Accessing a base class","text":"<p>When we don't specify a base class explicitly, Python will set the special object class as the base class for the one we're defining. Ultimately, all classes derive from object</p> <p>Info</p> <p>Therefore, writing class A: pass or class A(): pass or class A(object): pass is exactly the same thing.</p> <p>The object class is a special class in that it hosts the methods that are common to all Python classes, and it doesn't allow you to set any attributes on it.</p> <p>Let's see how we can access a base class from within a class</p> <p>Code</p> <pre><code>class Book(object):\n    def __init__(self,title, publisher, pages):\n        self.title = title\n        self.publisher = publisher\n        self.pages = pages\n\nclass EBook(Book):\n    def __init__(self, title, publisher, pages, _format):\n        self.title = title\n        self.publisher = publisher\n        self.pages = pages\n        self.format = _format\n\n\nb1 = EBook(\"Perjalanan menuju surga\",\"Cahaya Sunnah\", 220,\"PDF\")\n</code></pre> <p>Lihatlah kode diatas, tiga nilai masukan paramter class <code>Book</code> di duplikasi pada class <code>Ebook</code>. Cara ini tidak terlalu baik, karena, kita harus membuat dua instruksi yang sama persis pada dua class tersebut. Terlebih lagi, setiap perubahan yang ada pada <code>Book.__init__()</code> tidak akan merefleksi pada <code>Ebook</code>. Kita telah ketahui, <code>Ebook</code> Is-A <code>Book</code>, maka seharusnya perubahan yang terjadi pada base class merefleksikan pada child class-nya.</p> <p>Code</p> <pre><code>class Book(object):\n\n    def __init__(self,title, publisher, pages):\n        self.title = title\n        self.publisher = publisher\n        self.pages = pages\n\n\nclass EBook(Book):\n\n    def __init__(self, title, publisher, pages, _format):\n        Book.__init__(Book, title, publisher,pages)\n        self.format = _format\n\n\nb1 = EBook(\"Perjalanan menuju surga\",\"Cahaya Sunnah\", 220,\"PDF\")\n</code></pre> <p>Sekarang, kode menjadi lebih baik. Kita telah menghapus duplikasi penulisan. Pada kode ini, kita memberitahu python untuk memanggil <code>__init__()</code> dari class <code>Book</code>; Kita memberikan argument <code>self</code> dengan class Book itu sendiri. Jika kita memodifikasi logika didalam <code>__init__()</code>, kita tidak perlu lagi mengubah logika pada class Ebook.</p> <p>Pendekatan tersebut lebih baik, namun kita masih menulis kode yang lebih baik. Alih-alih memanggil <code>Book.__init__()</code> kita bisa menggunakan method <code>super()</code>.</p> <p>Code</p> <pre><code>class Book:\n    def __init__(self,title, publisher, pages):\n        self.title = title\n        self.publisher = publisher\n        self.pages = pages\n\nclass EBook(Book):\n    def __init__(self, title, publisher, pages, _format):\n        super().__init__(title, publisher,pages)\n        self.format = _format\n\nb1 = EBook(\"Perjalanan menuju surga\",\"Cahaya Sunnah\", 220,\"PDF\")\n</code></pre> <p><code>super()</code> adalah sebuah funsi yang mengembalian sebuah proxy object yang mendelegasi pemanggilan method pada parent class atau sibling class. Pada kasus ini, <code>super()</code> akan melimpahkan pemanggilan <code>__init__()</code> dari class <code>Book</code>.</p>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#multiple-inheritance","title":"Multiple Inheritance","text":"<p>Lihatlah gambar dibawah ini;</p> <p></p> <p>Dari gambar diatas, <code>Shape</code> dan <code>Plotter</code> adalah base class dari semua class dibawahnya. <code>Polygon</code> adalah turunan dari kedua base class tersebut, <code>RegulerPolygon</code> turunan dari <code>Polygon</code> dan <code>RegulerHexagon</code> serta <code>Square</code> turunan dari <code>RegulerPolygon</code>. Sebagai catatan, class <code>Shape</code> dan <code>Plotter</code> secara implisit adalah turunan dari <code>object</code>. Dari gambar diatas, kita dapat ketahui pola turunan tersebut menjadi pola diamond, dimana ada lebih dari satu jaur untuk sampai ke <code>base class</code>. Oke mari kita transformasi gambar diatas menjadi kode.</p> <p>Code</p> <pre><code>class Shape:\n    geometric_type = \"generic\"\n\n    def area(self): # Placeholder of interface\n        raise NotImplementedError\n\n    def get_geometric_type(self):\n        return self.geometric_type\n\nclass Plotter:\n    def plot(self, ratio, topleft):\n        print (f\"Plotting at {topleft}, ration {ratio}\")\n\n\nclass Polygon(Shape,Plotter): # Base class untuk polygon\n    geometric_type = \"Polygon\"\n\nclass RegulerPolygon(Polygon): # Is-A Polygon\n    geometric_type = \"RegulerPolygon\"\n\n    def __init__(self, side):\n        self.side = side\n\nclass RegularHexagon(RegulerPolygon): # Is-A RegulerPolygon and Is-A Polygon\n    geometric_type = \"RegulerHexagon\"\n    def area(self):\n        return 1.5* (3**.5*self.side**2)\n\nclass Square(RegulerPolygon): # Is-A RegulerPolygon and Is-A Polygon\n    geometric_type = \"Square\"\n    def area (self):\n        return self.side * self.side\n\n\ns1 = Square(2)\nprint(s1.get_geometric_type())\nprint(s1.area())\ns1.plot(0.95,(27,12))\n\nprint(\"---------------\\n---------------\")\n\nr_hexagon = RegularHexagon(20)\nprint(r_hexagon.get_geometric_type())\nprint(r_hexagon.area())\nr_hexagon.plot(0.89,(67,85))\n</code></pre> Output<pre><code>Square\n4\nPlotting at (27, 12), ration 0.95\n---------------\n---------------\nRegulerHexagon\n1039.2304845413264\nPlotting at (67, 85), ration 0.89\n</code></pre> <p>Bismillah, lihatlah kode diatas, class <code>Shape</code> memiliki satu buah attribute <code>geometric_type</code> dan dua buah method, <code>area()</code> dan <code>get_geometric_type</code>. Sangat umum terjadi pada sebuah kode menggunakan bases classes (seperti <code>Shape</code> pada contoh kita) untuk mendefinisikan sebuah interface, kumpulan method yang haris di implementasi oleh class children.</p> <p>Tip</p> <p>There are different and better ways to do this, but we want to keep this example as simple as possible.</p> <p>yang unik adalah <code>Plot()</code>. method tersebut membuat kita dapat menambahkan objek dengan kemampuan yang tidak dimiliki. Teknik ini sangat populer pada webgramework seperti Django yang mana memiliki special classes dengan nama <code>mixins</code>.</p>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#method-resolution-order","title":"Method Resolution Order","text":"<p>By now, we know that when we ask for someobject.attribute and attribute is not found on that object, Python starts searching in the class that someobject was created from. If it's not there either, Python searches up the inheritance chain until either attribute is found or the object class is reached. This is quite simple to understand if the inheritance chain is only made of single-inheritance steps, which means that classes have only one parent, all the way up to object. However, when multiple inheritance is involved, there are cases when it's not straightforward to predict what will be the next class that will be searched for if an attribute is not found.</p> <p>Python provides a way to always know the order in which classes are searched on attribute lookup: the method resolution order (MRO).</p> <p>let's see the MRO for the Square class:</p> <p>code</p> <pre><code>for a in Square.__mro__:\n    print(a)\n</code></pre> Output<pre><code>&lt;class '__main__.Square'&gt;\n&lt;class '__main__.RegulerPolygon'&gt;\n&lt;class '__main__.Polygon'&gt;\n&lt;class '__main__.Shape'&gt;\n&lt;class '__main__.Plotter'&gt;\n&lt;class 'object'&gt;\n</code></pre> <p>Tip</p> <p>COntoh diatas saya menggunakan nama class langsung dan memanggil attribute <code>__mro__</code>, dibawah ini adalah cara lain untuk mendapatkan list method resolution order</p> <pre><code>square_instance = Square(2) # Instance\nsquare_instance.__class__.__mro__\n# Equal to\nsquare_instance.__class__.mro()\n</code></pre> <p>Merujuk ke gambar Multiple Inheritance, poin yang membingungkan setelah class <code>Polygon</code>, dimana class tersebut turunan dari dua buah class <code>Shape</code> dan <code>Plotter</code>. Berdasarkan hasil MRO, kita mengetahui, class <code>Square</code> akan dicari terlebih dahulu dari pada class <code>Plotter</code>.</p> <p>Info</p> <p>Mengapa fungsi <code>dir()</code> pada sebuah class tidak menampilkan attribute <code>__mro__</code>. Here the answer</p> <p>Mengapa urutan pencarian ini penting ? oke, mari kita lihat kode dibawa ini.</p> <p>Code</p> <pre><code>class A:\n    label = \"A\"\n\nclass B(A):\n    label = \"B\"\n\nclass C(A):\n    label = \"C\"\n\n\nclass D(B,C):\n    pass\n\n\npoint = D()\nprint(point.label) # Merujuk ke class B terlebih dahulu\n\n# Yup, urutannya\n# D =&gt; B =&gt; C =&gt; D\nfor a in point.__class__.mro():\n    print(a)\n</code></pre> Output<pre><code>B\n&lt;class '__main__.D'&gt;\n&lt;class '__main__.B'&gt;\n&lt;class '__main__.C'&gt;\n&lt;class '__main__.A'&gt;\n&lt;class 'object'&gt;\n</code></pre> <p>Dari hasil diatas kita dapatkan class B adalah yang dicari terlebih dahulu karena class <code>D</code> menurunkan B terlebih dahulu dibandingkan <code>C</code>. Hal tersebut juga didorong dengan hasil dari method resolution order, Namun bagaimana jika property <code>label</code> pada class <code>B</code> kita hapus ? Jawabannya adalah python akan mencari ke class <code>C</code> terlebih dahulu sebelum ke class <code>A</code> sesuai dengan urutan dari MRO.</p>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#class-and-static-method","title":"Class and static method","text":"<p>Sebelumnya kita telah membuat instance method, namun ada dua tipe method lainya, yaitu static method dan class method.</p>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#static-method","title":"Static method","text":"<p>Sebagai pengingat,ketika kita membuat sebuah objek dari sebuah class, Python akan memberikan nama pada objek tersebut. Nama tersebut akan menjadi sebuah <code>namespace</code>, dan terkadang sangat baik untuk mengelompokan fungsi-fungsi dibawah namespace tersebut. <code>Static Method</code> adalah fitur yang berguna untuk pengelompokan fungsi-fungsi. </p> <p>Tidak seperti instance method, mereka tidak menerima special argument seperti <code>self</code>, dan kita juga tidak peru membuat sebuah instace dari class jika ingin memanggil fungsi tersebut.</p> <p>Code</p> <pre><code>class StringUtil:\n\n    @staticmethod\n    def is_palindrome(word,/,case_sensitive=True):\n\n        # Filter comprehension list \n        word = [a.lower() if not case_sensitive else a for a in word if not a.isalnum()]\n\n        for a in range(len(word) // 2):\n            if word[a] != word[-a -1]:\n                return False\n        return True\n\n    @staticmethod\n    def get_unique_word(word):\n        return set(word)\n\nword = 'In Girum Imus Nocte Et Consumimur Igni'\nprint(StringUtil.is_palindrome(word, False))\nprint(StringUtil.get_unique_word(word))\n</code></pre> Output<pre><code>True\n{'s', 'I', 'c', 'g', 'r', 'n', 'm', 'G', 'N', 't', 'C', 'e', 'o', 'i', 'u', ' ', 'E'}\n</code></pre> <p>Static meethod dibuat dengan hanya memberikan decorator <code>@staticmethod</code> tepat diatas nama fungsi. Kita dapat melihat bahwa fungsi tersebut tidak menerima special argumen, kecuali hanyak penambahan decorator saja.</p>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#class-method","title":"Class method","text":"<p>Class method sedikit berbeda dengan static method. Mirip dengan instance method, mereka menerima special argumen, pada kasus class method ini, spesial argumenya adalah class object itu sendiri, bukan instance. Penggunaan class method ini sering digunakan untuk menyediakan factory capability pada sebuah class, maksdudnya, kita menyediakan beberapa alternatif untuk membuat instance dari sebuah class.</p> <p>Code</p> <pre><code>class Point:\n\n    provider = \"Base\"\n\n    def __init__(self,x,y):\n        self.x = x\n        self.y = y\n\n    @classmethod\n    def from_tuple(cls, datas):\n        cls.provider = \"tuple\"\n        return cls(*datas)\n\n    @classmethod\n    def from_point(cls, point):\n        cls.provider = \"point\"\n        return cls(point.x, point.y)\n\n    @classmethod\n    def from_dict(cls, kwargs):\n        cls.provider = \"kwargs\"\n        return cls(**kwargs)\n\n    def show(self):\n        print(f\"Dibuat melalui {self.provider}\",self.x,self.y)\n\n\np1 = Point(1,2)\np1.show() # Dibuat melalui Base 1 2\n\np2 = Point.from_tuple((2,4))\np2.show() # Dibuat melalui tuple 2 4\n\np3 = Point.from_point(p1)\np3.show() # Dibuat melalui point 1 2\n\np4 = Point.from_dict({\"y\":9,\"x\":8})\np4.show() # Dibuat melalui kwargs 8 9\n</code></pre> <p>Didalam setiap class method,  <code>cls</code> argument merujuk pada class <code>Point</code>. Sebagaimana <code>instance method</code>, yang mana menerima <code>self</code> argument, class method menerima <code>cls</code> argument.</p> <p>Static method sangat berguna untuk memecah logika dari sebuah method class untuk meningkatkan layout.</p> <p>... Not yet finished in this part ...</p>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#private-method-and-name-mangling","title":"Private method and name mangling","text":"<p>Didalam bahasa programming lain seperti Java,C#, atau C++ memiliki sebuah fitur privacy pada attributenya (method ataupun property).</p> <p>Didalam python tidak ada hal tersebut, everything is public . Namun dipython memliki fitur yang mirip dengan itu, yaitu convention dan untuk privacy memliki fitur yang disebut dengan mangling. Convention adalah, jika sebuah attribute tidak diawali dengan underscore <code>_</code> maka dapat dikatakan attribute tersebut adalah public, artinya kita dapat mengakses atribute tersebut dan dapat mengubah nilainya. Namun ketika nama attribute diawali dengan underscore, maka attribute tersebut menjadi private, artinya attribtue tersebut hanya digunakan oleh internal class dan kita tidak dapat memodifikasi nilai attribute tersebut atau memanggilanya dari luar class tersebut. Name mangling ini paling sering digunakan untuk membuat sebuah helper method yang hanya bisa diakases dari dalam class untuk membantun method yang diset secara public.</p> <p>Attribute disini adalah, property dan method dari sebuah class</p> <p>Code</p> <pre><code>class A:\n    def __init__ (self, factor):\n        self.factor = factor\n\n    def op1(self):\n        print(f\"This is my factor {self.factor}\")\n\nclass B(A):\n    def op2(self, factor):\n        self.factor = factor\n        print(f\"This is my factor ({self.factor}) from {self.__class__.__name__}\")\n\nob1 = B(24)\nob1.op1()\nob1.op2(27)\nob1.op1()\n</code></pre> Output<pre><code>This is my factor 24\nThis is my factor (27) from B\nThis is my factor 27 # nilai ini akan tertiban oleh method op2()\n</code></pre> <p>Pada kode snippet diatas, kita membuat class B yang mana turunan dari class A. Saat membuat instance class B, secara otomatis kita akan membuat sebuah property <code>factor</code> dengan nilai 24 kara initializer function dari class parent (A). Lalu kita memanggil class <code>op1</code> yang menampilkan property <code>factor</code>. Hasilnya adalah 24 sesuai dengan argumen yang diberikan oleh initializer function. Selanjutnya kita memangil method <code>op2</code> yang mana pada method tersebut kita membuat property baru dengan nama yang sama, yaitu factor dengan nilai 27. Yang kita inginkan, property factor dari class parent dan child memliki nilai yang terpisah, artinya ketika memanggil dua fungsi <code>op1</code> dari class parent dan <code>op2</code> pada class child mengeluarkan nilai factor yang berbeda. Namun, kode snippet diatas, nilai factor akan tertiban pada method <code>op2</code>, <code>self.factor = factor</code>.</p> <p>Untuk mencapai yang kita inginkan, kita gunakan name mangling.</p> <p>Code</p> <pre><code># Using name mangling\nclass A:\n    def __init__ (self, factor):\n        self.__factor = factor\n\n    def op1(self):\n        print(f\"This is my factor {self.__factor}\")\n\nclass B(A):\n    def op2(self, factor):\n        self.__factor = factor\n        print(f\"This is my factor ({self.__factor}) from {self.__class__.__name__}\")\n\nob1 = B(24)\nob1.op1()\nob1.op2(27)\nob1.op1()\n</code></pre> Output<pre><code>This is my factor 24\nThis is my factor (27) from B\nThis is my factor 24\n</code></pre> <p>Alhamdulilah, dengan penggunaan dua kali underscore <code>__</code> kita telah membuat property factor menjadi private.</p> <p>Oia, berbicara tentang <code>name mangling</code>, nama tersebut artinya, ketika nama variabel dari attribute memliki dua underscore awalan seperti <code>__myattr</code>, maka nama variabel tersebut diartikan oleh python dengan nama yang memliki awalan classname diikut dengan nama variable tersebut, sehingga nama variable <code>__myattr</code> menjadi <code>_ClassName__myattr</code>.</p> <p>Artinya, ketika kita membuat class turuna dari sebuah class lain, mekanisme mangling ini menjadi private attribute pada setiap class, parent dan child class yang menghindari name collision. Setiap class dan instance menyimpan refrensi ke special attribute <code>__dict__</code>. Mari kita coba inspeksi special attribute pada class pada kode snippet diatas untuk melihat efek dari name mangling.</p> <p>Code</p> <pre><code>print(getattr(ob1,\"__dict__\"))\n\n# equal\n# print(ob1.__dict__)\n</code></pre> Output<pre><code>{'_A__factor': 24, '_B__factor': 27}\n</code></pre> <p>Mekanisme ini memastikan bahwa ketika kode menjalankan <code>ob1.__factor = 42</code>,  __factor pada class A tidak berganti karena kita mengganti _B__factor, yang mana property __factor pada class A aman dan private.</p> <p>Untuk meyakinkan, mari kita lihat special attribtue <code>__dict__</code> pada instance pada kode snippet sebelumnya yang tidak menggunakan mekanisme mangling.</p> <p>Code</p> <pre><code>print(ob1.__dict__)\n</code></pre> Output<pre><code>{'factor': 27}\n</code></pre> <p>Kita bisa lihat, instance tersebut hanya memliki satu buah attribute dari dua class A dan class B.</p> Implementasi memkanisme mangling dalam membuat helper method <p>Dibawah ini adalah implementasi class method, static method dan mekanisme mangling dalam membuat sebuah static method dan helper method.</p> <pre><code># is palindrome\nclass StringUtils:\n\n    @classmethod\n    def is_palindrome(cls,words,/ ,case_sensitive=False):\n        if case_sensitive:\n            words = words.lower()\n\n        words =  cls.__get_only_alpa_numeric(words)\n        for a in range(len(words) // 2):\n            if words[a] != words[-a-1]:\n                return False\n        return True\n\n    @staticmethod\n    def __get_only_alpa_numeric(words): # method ini tidak bisa diakses dari luar class\n        return [a for a in words if a.isalnum()]\n\ntry:\n    words = \"In Girum Imus Nocte Et Consumimur Igni\"\n    print(StringUtils.is_palindrome(words, True)) # True\n    print(StringUtils.__get_only_alpa_numeric(\"Test 123\")) # Raise an exception\nexcept Exception as e:\n    print(e)\n</code></pre>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#the-property-decorator","title":"The property decorator","text":"<p>Sekarang kita akan bahas tentang property decorator. Katakan kita memliki attribute <code>age</code> pada class <code>Person</code> dan kita ingin memastikan adanya validasi terlebih dahulu sebelum merubah nilai pada attribute <code>age</code>. Untuk itu, kita harus membuat sebuah accessor method  seperti <code>get_age()</code> dan <code>set_age()</code>dan memasukan logika untuk validasi pada method tersebut (biasanya disebtu dengan setter dan getter)</p> <p>Namun, masalahnya, kita akan menulis kode yang banyak untuk mengakses attribute dan mengganti nilai attribut tersebut. Bahasa seperti Java menghadapi masalah ini, dimana kita harus membuat accessor method untuk memenuhi apa yang kita inginkan diatas. Baiknya, banyak dari Java Integrated Development Evnironment (IDEs) memliki fitur autocomplete untuk membuat access method.</p> Accessor method on java <pre><code>class Accessor{\n    public static void main (String[] args){\n        Person orang =  new Person(50);\n\n        System.out.println(orang.get_age());\n        orang.set_age(70);\n        System.out.println(orang.get_age());\n        orang.set_age(150);\n    }       \n\n    static class Person {\n\n        int age;\n\n        public Person(int age){\n            this.age = age;\n        }\n\n\n        public void set_age(int age){\n            if (age &gt;=90){\n                System.out.println(\"Age must be less then 90\");\n            }\n            else {\n                this.age = age;\n            }\n        }\n\n        public int get_age(){\n            return this.age;\n        }\n    }\n}\n</code></pre> <p>Python mmeliki cara yang lebih jenius denga fitur property decorator-nya. Ketika kita men-decorate sebuah method dengan property, kita dapat menggunakan  nama dari method dan menggangpanya sebagai data attribute.</p> Pythonic way to solve problem of accesor methodThe old waysThe bad ways <pre><code>class PersonPythonic:\n    def __init__(self, age):\n        self.__age = age\n\n    @property\n    def age(self):\n        return self.__age\n\n    @age.setter\n    def age(self,age):\n        if age &gt;= 80:\n            raise ValueError(\"Umur harus rentang (0-79)\")\n        self.__age = age\n</code></pre> <pre><code>class PersonWithAccessor:\ndef __init__(self, age):\n    self.__age = age # mekanisme mangling\n\ndef get_age(self):\n    return self.__age\n\ndef set_age(self, age):\n    if age &gt;= 80:\n        raise ValueError(\"Umur harus rentang (0-79)\")\n    self.__age = age\n</code></pre> <pre><code>class Person:    \n    def __init__(self, age):\n        self.age = age # dapat dirubah\n</code></pre>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#the-cached_property-decorator","title":"The cached_property decorator","text":"<p>Manfaat lain pada penggunaan <code>properties</code> adalah ketika kita ingin menjalankan sebuah kode dengan tujuan untuk menyetel objek yang nantinya akan digunakan, katakan kita ingin terhubung kesebuah database atau kedalam sebuah API.</p> <p>Pada kedua kasus diatas, kita harus menyetel sebuah objek client menggunakan sebuah property, dengan <code>property decotrator</code> tesrsebut kita dapat menyembunyikan kode yang kompleks saat menyetel client.  Dibawah ini adalah comtoh dari penjelasan diatas.</p> <p>Code</p> <pre><code>class Client:\n    def __init__(self):\n        print(\"Setting up client . . .\")\n\n    def kueri(self, **test):\n        print(f\"Menjalankan kueri . . .\")\n        print(test)\n\n\nclass Manager:\n    @property\n    def client(self):\n        return Client()\n\n    def perform_kueri(self,**test):\n        return self.client.kueri(**test)\n\nclient = Manager()\nquery = {\"query_select\":\"SELECT * FROM USERS\"}\nclient.perform_kueri(**query)\nclient.perform_kueri(query_update=\"UPDATE USER VALUES(\\\"NAME\\\",\\\"DATE\\\")\")\n</code></pre> Output<pre><code>Setting up client . . .\nMenjalankan kueri . . .\n{'query_select': 'SELECT * FROM USERS'}\nSetting up client . . .\nMenjalankan kueri . . .\n{'query_update': 'UPDATE USER VALUES(\"NAME\",\"DATE\")'}\n</code></pre> <p>Dari contoh diatas kita membuat sebuah dummy class dengan nama<code>Client</code> yang mana initializernya menampilkan kalimat Setting up the client . . . setiap membuat instance dari class tersebu dan juga memliki method <code>kueri</code> yang juga menampilkan kalimat.</p> <p>Selanjutnya kita membuat class <code>Manager</code> yang memliki <code>client</code> property yang mana method property (<code>client()</code>) tersebut yang akan membuat sebuah instance baru dari class <code>Client</code> setiap property tersebut di panggil</p> <p>Jika kita menjalankan kode. kita akan melihat bahwa setiap kita memanggil method <code>perform_kueri</code> pada instance <code>Manager</code>, kita akan melihat kalimat Setting up the client . . . ditampilkan. Namun dengan cara ini, setiap kita membuat sebuah client akan sangat memakan resource, maka sebab itu ada cara yang lebih baik yaitu meng- cache client tersebut, caranya seperti dibawah ini.</p> <p>Code</p> <pre><code>class Client:\n    def __init__(self):\n        print(\"Setting up client . . .\")\n\n    def kueri(self, **test):\n        print(f\"Menjalankan kueri . . .\")\n        print(test)\n\nclass ManualCacheManager:\n    @property\n    def client(self):\n        if not hasattr(self,'_client'):\n            self._client = Client()\n        return self._client\n\n    def perform_kueri(self,**test):\n        # print(\"perform\")\n        return self.client.kueri(**test)\n\nclient = ManualCacheManager()\nquery = {\"query_select\":\"SELECT * FROM USERS\"}\nclient.perform_kueri(**query)\nclient.perform_kueri(query_update=\"UPDATE USER VALUES(\\\"NAME\\\",\\\"DATE\\\")\")\n</code></pre> Output<pre><code>Setting up client . . .\nMenjalankan kueri . . .\n{'query_select': 'SELECT * FROM USERS'}\nMenjalankan kueri . . .\n{'query_update': 'UPDATE USER VALUES(\"NAME\",\"DATE\")'}\n</code></pre> <p><code>ManualCacheManager</code> jauh lebih baik dibandingkan sebelumnya. Porperty <code>client</code> pada pertama kali di check apakah attribute <code>_client</code> sudah ada pada class atau tidak dengan menggunakan built-in function <code>hasattr</code>. Jika tidak maka buat attribute <code>_client</code> dan isi dengan instance baru dari class <code>Client</code>. Selanjutnya return attribute tersebut. Dengan demikian ketika kita memanggil fungsi <code>perform_kueri</code> kita tidak selalu membuat instance buar dari class <code>Client</code>. </p> <p>Baiknya, pada python 3.8, modul functool menambahkan decorator <code>cache_property</code>. Menggunakan decorator tersebut kita tidak perlu lagi membuat chace secara manual. Dibawah ini adalah cara memanfaatkan dekorator tersebut. </p> <p>Code</p> <pre><code>from functools import cached_property\nclass Client:\n    def __init__(self):\n        print(\"Setting up client . . .\")\n\n    def kueri(self, **test):\n        print(f\"Menjalankan kueri . . .\")\n        print(test)\n\nclass Manager:\n    @cached_property\n    def client(self):\n        return Client()\n\n    def perform_kueri(self,**test):\n        return self.client.kueri(**test)\n\nclient = Manager()\nquery = {\"query_select\":\"SELECT * FROM USERS\"}\nclient.perform_kueri(**query)\nclient.perform_kueri(query_update=\"UPDATE USER VALUES(\\\"NAME\\\",\\\"DATE\\\")\")\n</code></pre> Output<pre><code>Setting up client . . .\nMenjalankan kueri . . .\n{'query_select': 'SELECT * FROM USERS'}\nMenjalankan kueri . . .\n{'query_update': 'UPDATE USER VALUES(\"NAME\",\"DATE\")'}\n</code></pre> <p>Info</p> <p>Pada python3.9 ada fitur baru dengan nama <code>cache decorator</code>, yang dapat digunakan hampir sama dengan <code>property decorator</code> dan meliputi sekenarion yang tidak cocok jika menggunakan <code>cache_property</code>.</p>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#operator-overloading","title":"Operator Overloading","text":"<p>Sekarang kita bahas tentang python overloading. Untuk overload an operator (meniban operator) artinya adalah memberikan operator tersebut berdasarkan kontek yang digunakan. Contohnya, operator tambah <code>+</code> akan menjadi penambah jika konteksnya adalah angka namun akan menjadi penghubung katajika berurusan dengan squance.</p> <p>Pada python, ketika kita menggunakan operator, maka kita sama saja memanggil special method dari objek tersebut dibelakangnya. Sebagai contoh, <code>a[k]</code> pada sebuah dictionary <code>a</code> ditranslate oleh python menjadi <code>type(a).__getitem__(a,k)</code>. Dan hebatnya, kita dapat meniban special method tersebut untuk tujuan tertentu.</p> <p>Code</p> <pre><code>m_dict = {'a':'satu'}\n\nprint(m_dict['a']) # satu\n# Equal\nprint(type(m_dict).__getitem__(m_dict,'a')) # satu\n</code></pre> <p>Sebagai contoh overloading method, mari kita buat sebuah class yang menyimpang string dan mengevaluasi, <code>True</code> jika didalam string tersebut terdapat angka dalam tipe huruf 42 dan <code>False</code> jika sebaliknya. Juga kita buat sebuah property yang meyimpang panjang dari kalimat tersebut.</p> <p>Code</p> <pre><code>class Weird:\n\n    def __init__(self, n):\n        self.__s = n\n\n    def __bool__(self):\n        return '42' in self.__s\n\n    def __len__(self):\n        return len(self.__s)\n\nobj = Weird(\"Halo umur saya 42\")\nprint(len(obj)) # 17\nprint(bool(obj)) # True\n</code></pre> <p>Untuk implementasi lebih lanjut untuk overload special method anda dapat melihat ke official documentation Python data model.</p>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#polymorphhism","title":"Polymorphhism","text":"<p>Kata Polymorphism berasal dari yunani yan artinya oulys (banyak) dan morph\u0113 (bentuk), yang artinya adalah menyediakan banyak implemetasi dengan hanya satu interface.</p> <p>Contoh yang telah kita lakukan menggunakan polymorphism adalah saat kita membuat sebuah class Car dimana kita memanggil method <code>engine.start()</code> pada sesi OOP code reuse, Tanpa memperhatikan tipe engine tersebut, selama instance tersebut memliki method <code>start()</code> kita dapat memanggilnya. Itu adalah manfaat dari polymorphism.</p> <p>Pada bahasa lain seperti Java, untuk memberia sebuah fungsi meneriman tipe yang berbeda dan memanggil sebuah method pada setiap tipe objek, class tersebut haris dijadikan apa yang disebut dengan interface dan class lain yang ingin menerima method yang sama harus meng-implement interface tersbut.</p> How java handle polymorphism <pre><code>interface Engine{\n    public void start();\n}\n\nclass ElectricEngine implements Engine{\n    public void start(){\n        System.out.println(\"Electric engine started\");  \n    }\n\n}\n\nclass V8Engine implements Engine{\n\n    public void start(){\n        System.out.println(\"V8Engine started, vrooooom\");\n    }\n}\nclass CityCar extends ElectricEngine {}\nclass DragCar extends V8Engine {}\n\nclass Poly{\n\n    public static void main(String args[]){\n\n        CityCar tesla = new CityCar();\n        tesla.start(); // Electric engine started\n\n        DragCar mustang = new DragCar();\n        mustang.start(); // V8Engine started, vrooooom\n\n    }   \n\n}\n</code></pre> <p>Di python berbeda, Polymorphism implicit, dan tidak ada yang menghalangi kita memanggil sebuah method dari sebuah objek tanpah harus meng implementasi interface atau pattern lainnya.</p> <p>Ada juta polymorphism yang disebut dengan ad hoc polymorphism yang mana telah kita lihat pada sesi operator overloading. Fitur ini membuat kita dapat merubah implementasi dari sebuah method berdasarkan tipe data yang diberikan.</p>"},{"location":"Programming%20Language/Python/05.%20OPP%2C%20%20Decorator%2C%20and%20Iterators/#data-classes","title":"Data classes","text":"<p>Pada python 3.7, PEP 557, dapat dideskripsikan sebagai Mitable named tuples with defaults.</p> <p>Code</p> <pre><code>from dataclasses import dataclass\n\n@dataclass\nclass Body:\n\n    name: str\n    mass: float = 0.\n    speed: float = 1.\n\n    def kinetic_energy(self) -&gt; float:\n        return (self.mass * self.speed ** 2)/2\n\nbody = Body(\"Bola\",19,3.1415)\nprint(body.kinetic_energy())\nprint(body)\n</code></pre> Output<pre><code>93.755711375\nBody(name='Bola', mass=19, speed=3.1415)\n</code></pre> <p>Perhatikan, propety <code>name</code> harus bertipe string dan disisi lain <code>mass</code> dan <code>speed</code> harus bertipe float dan keduanya diberikan nilai bawaan. Hal lain yang menarik bawa kita tidak menulis method <code>__init__</code>, karena initializer telah dihandel oleh dataclass decorator bersamaan dengan method untuk komparasi dan untuk menhasilkan representasi dari objek (lihat pada baris akhir saat <code>print(body)</code>)</p> <p>Info</p> <p>Untuk mendalami lebih lanjute tentang data clasess anda dapat meruju ke PEP 557</p>"},{"location":"Programming%20Language/Python/06.%20Exception%20and%20context%20manager/","title":"Exception and Context Manager","text":"<p>Sangatlah krusial untuk mempelajari caranya mendeteksi dan menangani errors. Dangat sangat bermanfaat untuk selalu meluangkan kan waktu untuk memikirkan error yang mungkin terjadi serta membuat respone atas error tersebut.</p> <p>Pada bagian ini insyaAllah kita akan membahas dua hal, yaiut exception dan context manager</p>"},{"location":"Programming%20Language/Python/06.%20Exception%20and%20context%20manager/#exception","title":"Exception","text":"<p>Ketika error terjadi saat eksekusi, error tersebut disebut dengan exception.</p> <p>Umumnya, jika kita tidak membuat penanganan atas sebua exception, exception tersebut akan membuat aplikasi berhenti. Terkadang, kondisi tersebut la yang diinginkan, namun pada kasus lain, kita ingin mengehindar berhentinya aplikasi dengan menangani masalah tersebut. katakan, seperti jika terjadi error kita memberikan alert kepada user bahwa file yang ingin dibuka corrup sehingga user dapat memperbaiki atau mengupload file yang betul tanpa harus membuat aplikasi berhenti berkerja. Mari kita lihat contoh exception dibawah ini.</p> Stop IterationZeroDivisionErrorIndexErrorKeyErrorNameError <p>Code</p> <pre><code>gen = (a for a in range(1))\nprint(next(gen))\nprint(next(gen))\n\n---------------------------------------------------------------------------\nStopIteration                             Traceback (most recent call last)\nInput In [5], in &lt;cell line: 3&gt;()\n    1 gen = (a for a in range(1))\n    2 print(next(gen))\n----&gt; 3 print(next(gen))\n\nStopIteration: \n</code></pre> <p>Code</p> <pre><code>1/0\n\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\nInput In [6], in &lt;cell line: 1&gt;()\n----&gt; 1 1/0\n\nZeroDivisionError: division by zero\n</code></pre> <p>Code</p> <pre><code>_list = [1,2,3]\nprint (_list[3])\n\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\nInput In [8], in &lt;cell line: 2&gt;()\n    1 _list = [1,2,3]\n----&gt; 2 print (_list[3])\n\nIndexError: list index out of range\n</code></pre> <p>Code</p> <pre><code>_dict = {'a':1,'b':2}\nprint(_dict['c'])\n\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\nInput In [11], in &lt;cell line: 2&gt;()\n    1 _dict = {'a':1,'b':2}\n----&gt; 2 print(_dict['c'])\n\nKeyError: 'c'\n</code></pre> <p>Code</p> <pre><code>name = \"farras\"\nprint(no_name)\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nInput In [12], in &lt;cell line: 2&gt;()\n    1 name = \"farras\"\n----&gt; 2 print(no_name)\n\nNameError: name 'no_name' is not defined\n</code></pre> <p>Sebagaimana yang kita lihat, python shell (saya menggunakan jupyter lab) memberikan clue yang membantu kita, dapat kita lihat pada Traceback, pada tracebackkita dapat melihat informasi mengenai error yang terjadi. Namun shellitu sendiri berjalan dengan normmal. Ini adalah special behavior yang ada pada shell python. Akan tetapi pada umumnya, sendainya menjalankan kode diatas seluruhnya pada satu file maka python akan berhenti tepat setelah exception terjadi, dengan catatan kita tidak membuat penanganan terhadap exception. Mari kita lihat contoh dibawah ini.</p> <p>Code</p> <pre><code>1 + \"one\"\nprint(\"This line will never be reached\")\n</code></pre> Output<pre><code>---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nInput In [13], in &lt;cell line: 1&gt;()\n----&gt; 1 1 + \"one\"\n    2 print(\"This line will never be reached\")\n\nTypeError: unsupported operand type(s) for +: 'int' and 'str'\n</code></pre> <p>Karena kita tidak membuat penanganan maka baris kode yang menampilkan kalimat \"This line will nerver be reached\" tidak akan pernah ditampilkan.</p>"},{"location":"Programming%20Language/Python/06.%20Exception%20and%20context%20manager/#raising-exception","title":"Raising exception","text":"<p>Exception yang terjadi diatas sejauh ini di keluarkan oleh Python interpreter ketika error terdeteksi. Akan tetapi, kita juga dapat mengeluarkan expcetion sendiri, dimana ketika pada kondisi tertentu pada kita mengininkan python mengeluarkan exception. Kita dapat menggunakan statement <code>raise</code></p> <p>Code</p> <pre><code>raise NotImplementedError(\"error buatan\")\n\n---------------------------------------------------------------------------\nNotImplementedError                       Traceback (most recent call last)\nInput In [16], in &lt;cell line: 1&gt;()\n----&gt; 1 raise NotImplementedError(\"error buatan\")\n\nNotImplementedError: error buatan # (1)!\n</code></pre> <ol> <li>Argumen pada exception class dimuat disini.</li> </ol> <p>Kita dapata menggunakan tipe expcetion yang kita inginkan, namun yang terbaik adakan menggunakan tipe exception yang paling tepat menjelaskan kondisi yang menyebabkan error terjadi. Kitajuga dapat menggunakan tipe exception sendiri (yang inysaAllah akan ada dicatatan ini juga). Perhatikan pada argumen yang kita pakai pada class Exception yang kita gunakan juga di print pada bagian pesan error.</p>"},{"location":"Programming%20Language/Python/06.%20Exception%20and%20context%20manager/#defining-your-own-exception","title":"Defining your own exception","text":"<p>Untuk membuat class exception sendiri kita harus membuat class yang menurunkan class exception yang lain. Sebenarnya, semua exception class yang ada pada built-in bersumber pada class <code>BaseException</code>, namun,class ini tidak diperuntukan secara langsung diturunkan, maka dari itu baiknya menurunkan dari class <code>Exception</code>.</p> <p>Info</p> <p>Semua exception bawaan adalah turunan dari <code>Exception</code>. Dan jika ada exception yang tidak turunan dari <code>Exception</code> artinya digunakan untuk penggunaan internal oleh Python interpreter.</p> <p>Code</p> <pre><code>class MyOwnException(Exception):\n    \"\"\"My Own exception class\"\"\"\n    pass\n\nraise MyOwnException(\"Ini class exception buatan\")\n\n---------------------------------------------------------------------------\nMyOwnException                            Traceback (most recent call last)\nInput In [25], in &lt;cell line: 5&gt;()\n    2     \"\"\"My Own exception class\"\"\"\n    3     pass\n----&gt; 5 raise MyOwnException(\"Ini class exception buatan\")\n\nMyOwnException: Ini class exception buatan\n</code></pre>"},{"location":"Programming%20Language/Python/06.%20Exception%20and%20context%20manager/#traceback","title":"Traceback","text":"<p>Traceback yang ditampilkan oleh python sangat berguna untuk memahami apa yang terjadi dan yang menjadi penyebab terjadinya exception. Mari kita lihat traceback dan apa yang dapat kita gali dari informasi yang disediakan.</p> <p>Code</p> <pre><code>def avoid_nol(n):\n    if n != 0:\n        return n\n    raise Exception(\"Nila dilarang nol yah\")\n\ndef calcs_all(a,b,c):\n    return (avoid_nol(a)*2, avoid_nol(b) / 2, avoid_nol(c) ** 2)\n\nprint(calcs_all(1,0,3))\n</code></pre> Output<pre><code>---------------------------------------------------------------------------\nException                                 Traceback (most recent call last)\nInput In [31], in &lt;cell line: 9&gt;()\n    6 def calcs_all(a,b,c):\n    7     return (avoid_nol(a)*2, avoid_nol(b) / 2, avoid_nol(c) ** 2)\n----&gt; 9 print(calcs_all(1,0,3))\n\nInput In [31], in calcs_all(a, b, c)\n    6 def calcs_all(a,b,c):\n----&gt; 7     return (avoid_nol(a)*2, avoid_nol(b) / 2, avoid_nol(c) ** 2)\n\nInput In [31], in avoid_nol(n)\n    2 if n != 0:\n    3     return n\n----&gt; 4 raise Exception(\"Nila dilarang nol yah\")\n\nException: Nila dilarang nol yah\n</code></pre> <p>Dari traceback diatas kita dapat ketahui, kesalahan terjadi pertama kali pada baris <code>9</code> yang terus mendalam hingga baris ke <code>4</code> dimana kita membuat sebuah raise exception jika nilai yang diberikan adalah 0.</p>"},{"location":"Programming%20Language/Python/06.%20Exception%20and%20context%20manager/#handling-exception","title":"Handling exception","text":"<p>Untuk menangani exception di python kita menggunakan <code>try</code> statement.</p> <p><code>try</code> statement terdiri dari try clause adalah pembuka statment yang diikut dengan satu atau lebih except cluase dan opsional diikut dengan else clause yang akan dijalankan jika try cluase berhasil berjalan tanpa adanya expcetion yang dikelarkan.</p> <p>Setelah excep dan else cluase, kita juga bisa membuat finally clause (opsional) yang mana kode yang ada pada cluase ini akan dieksekusi dengan tidak memperhatikan apa yang terjadipada <code>try statement</code>.</p> <p>Tidak diharuskan menggunakan <code>try</code> diikut dengan <code>except</code>. Kita juga dapat hanya menggunakan cluase <code>try</code> dan <code>finally</code>. Cara ini berguna jika kita ingin exception ditangani ditempat lain namun kita ingin meng-cleanup membersihkan kode yang harus dieksekusi tidak melihat apakah exception terjadi atau tidak.</p> <p>Urutan cluase sangat penting, harus berurutam</p> <ol> <li>try</li> <li>except</li> <li>else</li> <li>finally</li> </ol> <p>Dan juga harus diingat, <code>try</code> harus diikut dengan setidaknya satu buah <code>except</code> atau satu buah <code>finally</code>. Let us see an example:</p> <p>Code</p> Function<pre><code>def try_syn(bilangan, pembagi):\n    try:\n        print(f\"Ini di badan try: {bilangan} / {pembagi}\")\n        result = bilangan / pembagi\n    except ZeroDivisionError as ex:\n        print (ex)\n    else:\n        print(f\"Hasilnya adalah {result}\")\n        return result\n    finally:\n        print(\"Ini badan final\")\n</code></pre> Example 1Example 2 <p><pre><code>hasil  =try_syn(2,4)\nprint(hasil)\n</code></pre> Output<pre><code>Ini di badan try: 2 / 4 # try clause\nHasilnya adalah 0.5 # else cluase\nIni badan final # finally clause\n0.5\n</code></pre></p> <p><pre><code>hasil  =try_syn(2,0)\nprint(hasil)\n</code></pre> Output<pre><code>Ini di badan try: 2 / 0 # try clause\ndivision by zero # else clause\nIni badan final # finally clause\nNone\n</code></pre></p> <p>Kita juga dapat membuat lebih dari satu buah exception. </p> <p>Code</p> Example 1Example 2 <p><pre><code>args = (1,\"a\")\ntry:\n    hasil = divmod(*args)\n    print(hasil)\nexcept (ZeroDivisionError, TypeError) as ex:\n    print (f\"Class : {ex.__class__.__name__}\")\n    print(f\"Error message : {ex}\")\n</code></pre> Output<pre><code>Class : TypeError\nError message : unsupported operand type(s) for divmod(): 'int' and 'str'   \n</code></pre></p> <p><pre><code>args = (1,0)\ntry:\n    hasil = divmod(*args)\n    print(hasil)\nexcept (ZeroDivisionError, TypeError) as ex:\n    print (f\"Class : {ex.__class__.__name__}\")\n    print(f\"Error message : {ex}\")\n</code></pre> Output<pre><code>Class : ZeroDivisionError\nError message : integer division or modulo by zero\n</code></pre></p> <p>Dan kita juga dapat menangani exception yang berbeda dengan penanganana yang berbeda</p> <p>Code</p> Example 1Example 2 <p><pre><code>args = (1,\"a\")\ntry:\n    hasil = divmod(*args)\n    print(hasil)\nexcept ZeroDivisionError as zde:\n    print (f\"Pembagi tidak boleh {args[1]}\")\nexcept TypeError as te:\n    print (te)\n</code></pre> Output<pre><code>unsupported operand type(s) for divmod(): 'int' and 'str'\n</code></pre></p> <p><pre><code>args = (1,0)\ntry:\n    hasil = divmod(*args)\n    print(hasil)\nexcept ZeroDivisionError as zde:\n    print (f\"Pembagi tidak boleh {args[1]}\")\nexcept TypeError as te:\n    print (te)\n</code></pre> Output<pre><code>Pembagi tidak boleh 0\n</code></pre></p> <p>Yang perlu diingat bahwa, exception akan ditangani dari block pertama yang cocok dengan exception class atau dari base classes nya. Dengan demikian, saat kita membuat multiple except clause sebagaimana contoh diatas, pastikan kita menggunakan class exception yang paling speisifk pada block yang paling atas dan semakin kebawah semakin generic. Pada pola OOP, children on top, grandparent at the bottom. Ingat, hanya satu buah expcetion yang akan dikeluarkan pada satubuah try clause.</p> <p>Dibawah ini adalah hal yang kita hindari ketika membuat mutiple exception, dimana exception generic meniban exception class yang lebih spesifik</p> <p>Code</p> <pre><code>args = (1,0)\n\ntry:\n    hasil = divmod(*args)\n    print(hasil)\nexcept Exception as ex:\n    print (\"This is the generic one\") # Meniban Zero Division Error\nexcept ZeroDivisionError as zde:\n    print (f\"Pembagi tidak boleh {args[1]}\")\nexcept TypeError as te:\n    print (te)\n</code></pre> Output<pre><code>This is the generic one\n</code></pre> <p>Kita juga dapat mengeluarkan exception dari dalam except cluase. Contoh, kita ingin meniban built-in exception (atau dari third-party libaray) dengan costume exception kita. Ini adalah teknik yang sering ketika menulis sebuah pustaka (library) yang membantu penggunakan untuk mendapatkan informasi yang lebih detail jika terjadi sebuah error. Contohnya</p> <p>Code</p> <pre><code>class NotFoundError(Exception):\n    pass\n\n_dict = {'a':1,'b':2}\n\ntry:\n    _dict['c']\nexcept KeyError as ke:\n    error = f'Dictionary {ke.args[0]} tidak tersedia' # (1)!\n    raise NotFoundError(error)\n</code></pre> <ol> <li>Mengambil argumen daru KeyError</li> </ol> Output<pre><code>---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\nInput In [106], in &lt;cell line: 6&gt;()\n    6 try:\n----&gt; 7     _dict['c']\n    8 except KeyError as ke:\n\nKeyError: 'c'\n\nDuring handling of the above exception, another exception occurred:\n\nNotFoundError                             Traceback (most recent call last)\nInput In [106], in &lt;cell line: 6&gt;()\n    8 except KeyError as ke:\n    9     error = f'Dictionary {ke.args[0]} tidak tersedia'\n---&gt; 10     raise NotFoundError(error)\n\nNotFoundError: Dictionary c tidak tersedia\n</code></pre> <p>Asalnya, Python mengasumsikan exception yang terjadi didalam except cluase adalah error yang tidak terduga dan python membatu kita dengan mengelarkan tracebacks untuk keda exception tersebut. Kita juga dapat memberitahu interpreter bahwa kita dengan sengaja mengeluarkan exception baru menggunakan <code>raise from statement</code>.</p> <p>Code</p> <pre><code>try:\n    _dict['c']\nexcept KeyError as ke:\n    error = f'Dictionary {ke.args[0]} tidak tersedia'\n    raise NotFoundError(error) from ke\n</code></pre> Output<pre><code>---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\nInput In [107], in &lt;cell line: 6&gt;()\n    6 try:\n----&gt; 7     _dict['c']\n    8 except KeyError as ke:\n\nKeyError: 'c'\n\nThe above exception was the direct cause of the following exception:\n\nNotFoundError                             Traceback (most recent call last)\nInput In [107], in &lt;cell line: 6&gt;()\n    8 except KeyError as ke:\n    9     error = f'Dictionary {ke.args[0]} tidak tersedia'\n---&gt; 10     raise NotFoundError(error) from ke\n\nNotFoundError: Dictionary c tidak tersedia\n</code></pre> <p>Pesan errornya berubah, namun kita masih mendapatkan kedua tracebacks, yang mana sebenernya sangat dibutuhkan saat debugging. Jika kita ingin benar menekan-kan pada exception aslinya, kita harus menggunakan <code>None</code> dari pada menggunakan <code>from e</code>.</p> <p>Code</p> <pre><code>try:\n    _dict['c']\nexcept KeyError as ke:\n    error = f'Dictionary {ke.args[0]} tidak tersedia'\n    raise NotFoundError(error) from None\n</code></pre> Output<pre><code>---------------------------------------------------------------------------\nNotFoundError                             Traceback (most recent call last)\nInput In [109], in &lt;cell line: 1&gt;()\n    3 except KeyError as ke:\n    4     error = f'Dictionary {ke.args[0]} tidak tersedia'\n----&gt; 5     raise NotFoundError(error) from None\n\nNotFoundError: Dictionary c tidak tersedia\n</code></pre> <p>Membuat programm menggunakan exception sangat tricky. Anda bisa secara tidak sengaja menyembunyikan bug dengan cara penggunaan exception yang buruk yang mana seharunsya memberitahukita bahwa ada bugs tersebut, bukan malah menyembunyikannya. Gunakan exception dengan baik, ikut araha ini inysaAllah membuat kode program kita menjadi lebih baik.</p> <ul> <li> <p>Buatlah try clause se simple mungkin. Clause tersebut harus berisi hanya kode yang hanya dapat menimbulkan expcetion(s) yang ingin kita tangani.</p> </li> <li> <p>Buatlah sebuah except clause sespesifik mungkin. Mungkin akan membuat menulis banyak kode saat menulis excepton, namun akan mempermudah anda nantinya jika terjadi error yang tidak terduga.</p> </li> <li> <p>Gunakan <code>tests</code> untuk memastika error ditanganin dengan baik, error yang diduga dan tidak diduga. InsyaAllah dibagian selanjutnya ada catatan tentang Testing.</p> </li> </ul>"},{"location":"Programming%20Language/Python/06.%20Exception%20and%20context%20manager/#context-managers","title":"Context managers","text":"<p>Ketika kita menggunakan external resources atau global state, sering kali kita harus melakukan pembersihan (clean satate) yaitu membuang semua resource atau mengembalikan ke kondisi semula (restoring the original state) setelah selesai dibutuhkan. Jika proses restoring tidak dilakukan dengan baik akan menimbulkan bugs. Makadari itu, kita harus memastikan cleanup code dieksekusi walaupun terjadi sebuah exception. Kita dapat memanfaatkan <code>try/finnaly</code> statement, namun menggunakan statement tersebut tidak selalu tepat jika berhadapan dengan kasus ini, karena kita harus menulis statement tersebut berulang-ulang jika berhadapat dengan jenis resource yang perlu untuk di clean up. Disinilah context manager hadir sebagai solusi, yaitu dengan membuat execution context  kita dapat menggunakan resource atau memodifikasi state dan secara otomatis akan melakukan cleanup ketika kita keluar dari context tersebut, bahkan jika exception muncul.</p> <p>Contoh dari global state yang mungkin kita butuhkan hanya sesaat adalah presisi dari perhitungan desimal. Katakan kita ingin melakukan perhitungan untuk spesifik presisi pada beberapa perhitungan tertentu dan mengambalikan ke default setelahnya.</p> <p>Code</p> Context manager <pre><code>from decimal import getcontext, setcontext, Decimal, Context\n\ndefault_context = getcontext()\ncostume_context = Context(prec=3)\n\nbil_1 = Decimal(10)\nbil_2 = Decimal(3)\n\n# Value of Default state\nprint(bil_1/bil_2)\n\n# Set Costume state\nsetcontext(costume_context)\n\n# value of costume state\nprint(bil_1/bil_2)\n\n# Cleanup\nsetcontext(default_context) # (1)!\n</code></pre> <ol> <li>Cleanup context disini Output<pre><code>3.333333333333333333333333333\n3.33\n</code></pre></li> </ol> <p>dari kode diatas kita menyimpan state bawaan pada variabel <code>default_context</code> dan kita membuat state dengan presisi 3 pada variable <code>costume_context</code>. Dapat kita lihat hasil dari dua kali pembagian pada kondisi state original dan costume diatas mengeluarkan hasil yang berbeda tergantung state tertentu. Dan pada akhir baris kode kita mengembalikan ke presisi bawaan dari python. Akan tetapi, jika terjadi exception sebelum sampai baris <code>#python setcontext(default_context)</code> maka dapat menimbulkan komputasi yang tidak sesuai yang kita harapkan. Jika demikian kita harus menggunakan <code>try/finally</code> statement.</p> <p>Code</p> Example 1 <pre><code>try:\n    print(bil_1/bil_2) # Value of Default state\n    setcontext(costume_context) # Set Costume state\n    print(bil_1/bil_2) # value of costume state\nfinally:\n    setcontext(default_context)\n</code></pre> <p>kode diatas jauh lebih aman dari bugs tak terduga. Kode diatas akan me-restore original context tidak melihat apapun yang terjadi pada try block statement. Namun ada cara yang lebih baik, yaitu menggunakan context managers. Module <code>decimal</code> menyediakan local context manager yang mana menagani pengaturan dan pengembalian (restoring) context.</p> <p>Code</p> Example 1 <pre><code>from decimal import localcontext,Context,Decimal\n\nwith localcontext(ctx=Context(prec=3)):\n    print(bil_1/bil_2)\nprint(bil_1/bil_2)\n</code></pre> <p><code>with</code> statement digunakan untuk masuk kedalam <code>runtime context</code> yang didefinisikan oleh context manager. Setelah kode keluar dari <code>with</code> statement, operasi cleanup yang terdefinisi oleh context manager secara otomatis akan dieksekusi.</p> <p>Dan sangat memungkinkan mengkombinasi beberapa context manager dalam satu buah <code>with</code> statement. Cara tersebut sangat berguna dimana anda harus menggunakan dua resource pada waktu yang bersamaan.</p> <p>Code</p> Combine multople context manager <pre><code>with localcontext(Context(prec=5)), open(\"out.txt\", \"w\") as out_f:\n    out_f.write(f\"{one} / {three} = {one / three}\\n\")\n</code></pre> <p>Kode diatas, kita masuk ke local context dan membuka sebuah file (berlaku sebagai context manager) dalam sebuah <code>with</code> statement. Kita melakukan kalkulasi dan menulis hasinya ke sebuah file. Ketika selai melakukan operasi, file otomatis ditutup dan default decimal context dikembalikan.</p> <p>Selain decimal contexts dan file, banyak objek di python (standard) dapat menggunakan context managers. Contohnya: *   Socket objects, yang mana mengimplementasi low-level networking interface, dapat digunakan sebagai context manager yang secara otomatis menutup networking connections. * Lock classes digunakan untuk synkronasi pada concurrent programming menggunakan context manager protocol agar otomatis menghapus locks.</p>"},{"location":"Programming%20Language/Python/06.%20Exception%20and%20context%20manager/#class-based-context-managers","title":"Class-based context managers","text":"<p>COntext managers berkerja melalui dua magic method, <code>__enter__</code> dan <code>__exit__</code>. Fungsi <code>__enter__()</code> akan dipanggil tepat sebelum masuk ke bada dari <code>with</code> statement sedangkan <code>__exit__()</code> akan dipanggil tepat kode keluar dari badan <code>with</code> statement. Dengan begitu kita dapat membuat costume context manager dengan mengimplementasi kedua method tersebut.</p> <p>Code</p> Create context manager <p><pre><code>class MyContextManager:\n    def __init__(self):\n        print(f'INITIALIZE : {self.__class__.__name__} {id(self)}')\n\n    def __enter__(self):\n        print('Display before enter with body')\n        return self\n\n    def __exit__(self,exc_type,exc_value,exc_tb):\n        if exc_type != None:\n            print(f'Exit context')\n            print(f'{exc_type=} {exc_value=} {exc_tb=}')\n            print('Exiting with context')\n            return False\n        return True\n\ncm = MyContextManager()\n\nwith cm as cm:\n    print('Inside with')\n    print(f'hasil return method __enter__ : {cm}') # Diambil dari return value pada method __start__()\n    raise(Exception('Exception inside with'))\n    print('This line will never reached')\n\nprint('Outside with')\n</code></pre> Output<pre><code>INITIALIZE : MyContextManager 139990031845600\nDisplay before enter with body\nInside with\nhasil return method __enter__ : &lt;__main__.MyContextManager object at 0x7f51f81ec8e0&gt;\nExit context\nexc_type=&lt;class 'Exception'&gt; exc_value=Exception('Exception inside with') exc_tb=&lt;traceback object at 0x7f51e8f64a00&gt;\nExiting with context\n</code></pre></p> <p>Kode diatas kita membuat sebuah class MyContextManager yangmana untuk tujuan membuat context manager sendiri. Class tersebut mengimplementasi 3 sepcial method buah;</p> <ol> <li> <p><code>__init__</code>, method yang digunakan untuk membuat sebuah instance dari class. pada method ini menampilkan nama class dan id dari class tersebut.</p> </li> <li> <p><code>__start__</code>, method harus diimplementasi untuk membuat sebuah context manager. Method ini dapat mengambilikan nilai apapun, pada kode diatas kita mengambalikan statement <code>self</code>. Nilai kembalian ini dapat diakses melalui instance didalam badan dari <code>with</code> statement.</p> </li> <li> <p><code>__exit__</code>, method ini pun harus diimplementasi, pada method ini memliki 3 buah parameter, paramater pertama adalah jenis exception (exception type) jika terjadi (jika tidak mengambalikan <code>None</code>), parameter kedua adalah nilai dari exception (exception value) jika terjadi (jika tidak mengambalikan <code>None</code>), dan parameter ketiga adalah exception traceback jika terjadi (jika tidak mengambalikan <code>None</code>). Method ini mengambilakn tipe data boolean <code>True</code> atau <code>False</code>. Jika method ini mengembalikan nilai <code>True</code> maka jika terjadi exception maka tidak akan menampilkan pesan error, sedangkan <code>False</code> akan menampilkan pesan error, Traceback.</p> </li> </ol>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/","title":"Files and Data Persistance","text":""},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#working-with-files-and-directories","title":"Working with files and directories","text":""},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#opening-files","title":"Opening files","text":"<p>Membuka file didalam python cukup mudah, kita hanya perlu menggunakan built-in function yaitu fungsi <code>open()</code></p> <p>Code</p> Opening file <pre><code>fh = open('important.txt',mode='rt')\n\nfor a in fh.readlines():\n    print (a.strip())\n\nfh.close()\n</code></pre> Output<pre><code>Dari Abu Hurairah radhiallahu \u2018anhu, Rasulullah Shallallahu Alaihi Wassalam bersabda\n... #(1)!\n</code></pre> <ol> <li>Isi dari file dihapus agar tidak memnuhi catatan</li> </ol> <p>Kode diatas, kita memanggil fungsi <code>open</code> dan memberikan nama file dan kita ingin membaca file tersebut dengan mode menggunakan nilai read text <code>rt</code>.</p> <p>Setalah file telah dibuka, kita mendapatkan objek file tersebut, yang kita taruh di names <code>fh</code> yang mana kita dapat memanfaatkan konten dari file tersebut. Selanjutnya kita menggunakan fungsi <code>readlines()</code> (menghasilkan list) yang dapat kita manfaatkan untuk meng-iterate hingga semua baris pada file tersebut habis dan kita menampilkan nilai dari setiap baris tersebut. Kita juga menggunakan fungsi <code>strip()</code> pada setiap baris untuk menghilangkan extra space pada konten file tersebut termasuk karakter pemisah baris pada setiap baris file. Karena dengan perintah print diatas sudah menambah baris baru.</p> <p>Info</p> <p>Alternatif tidak jika tidak ingin men-sanitasi isi dari file namu tetap ingin menampilkan kondisi tanpa baris tambahan baru dari perintah <code>print</code> adalah menggunakan argumen <code>end</code> dengan isi non-space pada perintah tersebut <code>print</code>, <code>print (a,end='')</code>.</p> <p>Closing file sangatlah penting, karena kita tidak ingin berisiko gagal dalam menghapus resource. Karena jika terjadi, kita bisa menghadapi masalah seperti memory leaks. Maka dari itu, kita harus mempersiapkan kode untuk menghindari masalh tersebut dengan membungkus open file menggunakan <code>try/finally</code> block. Dengan demikian, apapun yang terjadi pada kode dengan adanya error kita memastika file tersebut ditutup.</p> <p>Code</p> Safe opening file with try/finally <pre><code>fh = open('important.txt',mode='rt')\n\ntry:\n    for a in fh.readlines():\n        print (a.strip())\nexcept:\n    fh.close()\n</code></pre> <p>Kode diatas menghasilkan nilai keluaran yang sama namun dengan cara yang lebih aman. Sekarang lihatlah kode dibawah ini</p> <p>Code</p> Safe opening file with try/finally <pre><code>fh = open('important.txt') # Tidak mengguakan parameter mode\n\ntry:\n    for a in fh: # Tidak menggunakan readlines()\n        print (a.strip())\nexcept:\n    fh.close()\n</code></pre> <p>Pada kode diatas kita tidak menggunakan parameter mode dengan nilai <code>rt</code>, karena parameter terebut sudah memiliki nilai default <code>rt</code>, dengan demikian kita tidak perlu lagi menspesifikasikannya lagi jika hanya ingin read a text. Selanjutnya kita juga menghapus fungsi <code>readlines()</code>, inilah kemudahan yang ditawarkan python dalam menulis kode, yaitu dengan menawarkan shorthands agar kode jauh lebih pendek dan ringkas.</p>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#using-a-context-manager","title":"Using a context manager","text":"<p>Sebelumnya kita telah membaca catatan tentang context maanger, dimana fungsi <code>open</code> juga memliki context manager. Dengan demikian kita dapat meenggunakan <code>#pthon with</code> statement untuk membaca file.</p> <p>Code</p> Read a file using <code>with</code> <pre><code>with open('important.txt',mode='rt') as fh:\nfor a in fh.readlines():\n    print(a.strip())\n</code></pre> <p>Memanfaatkan context manager membuat kita tidak khawatir untuk meng-close file karena sudah secara otomatis ditanganin oleh context manager ketika kode keluar dari block <code>with</code> statement.</p>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#read-and-writing-a-file","title":"Read and writing a file","text":"<p>Dibawah ini adalah cara kita menulis kedalam sebuah file</p> <p>Code</p> Example 1 <pre><code>from time import sleep\nwith open('write_file.txt', mode='w') as wf:\n    sleep(5)\n    print (\"bismillah\", file=wf)\n</code></pre> <p>Untuk menulis kedalams sebauh file, kita menggunakan nilai <code>w</code> (write) pada parameter <code>mode</code>. Dan kita menggunakan fungsi <code>print</code> namun dengan menggati parameter <code>file</code> dengan objek dari file yang telah kita buka, kode diatas menggunakan objek <code>wf</code>.</p> <p>Kode diatas akan membuat sebuah file baru dengan nama <code>write)file.txt</code> dan isi text bismillah jika file tersebut tidak ada dan akan di truncate jika file tersebut tidak ada. Truncate disini, python tidak menghapus file, namun mengkosongkan file tersebut lalu mengisi dengan nilai pada kode.</p> <p>Code</p> Truncating file <pre><code>from time import sleep\n# write_file.txt sudah ada sebelumnya\nwith open('write_file.txt', mode='w') as wf:\n    sleep(5) # buka wilfe write_file.txt sebelum 5 detik berlalu\n    print (\"bismillah\", file=wf)\n</code></pre> <p>Cobalah buka file write_file.txt sebelum 5 detik, maka anda akan melihat file tersebut kosong.</p> <p>Info</p> <p>Di python, standard input, output atau error streams direpresentasi dengan <code>sys.stdin</code>, <code>sys.stdout</code> dan <code>sys.stderr</code>. Jika input atau output tidak diarahkan kearah lain, maka <code>sys.stdin</code> akan membaca nilai dari keyboard dan <code>sys.stdout</code> dan <code>sys.stderr</code> akan menampilkan nilai pada layar. pada contoh diatas kita mengarahkan output ke dalam objek file.</p> <p>Selain menggunakan fungsi <code>print</code> dengan mengisi file objek pada argumen <code>file</code>, kita juga dapat memanfaatkan fungsi <code>write</code> pada file objek.</p> <p>Code</p> Menulis file menggunakan <code>write</code> <pre><code>with open('write_file.txt') as wf:\n    lines = [a for a in wf]\n\nwith open('write_file(2).txt', mode='w') as wf:\n    wf.write(''.join(lines))\n</code></pre>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#read-and-writing-in-binary-mode","title":"Read and writing in binary mode","text":"<p>Contoh kode sebleumnya kita memberikan nilai <code>t</code> pada parameter <code>mode</code>. Artinya bahwa, konteks pada file kita anggap sebagai sebuah text.</p> <p>Jika kita ingin menulis bytes pada sebuah file, kita dapat <code>open</code> file menggunakan binary mode. Cara ini wajib dilakukan ketika kita menghadapi sebuah file yang tidak hanya mengandung text, seperti images, audio atau video, dan secara umum semua tipe format lain. Untuk menangani file dalam binary mide, kita dapat mensepsifikasikan nilai <code>b</code> saat membuat file pada parameter <code>mode</code>.</p> <p>Code</p> Open binary fileWriting binary text to a file <pre><code>with open('example.png', mode='rb') as wf:\n    for a in wf:\n        print(a)\n</code></pre> Output<pre><code>b'\\x89PNG\\r\\n'\nb'\\x1a\\n'\nb'\\x00\\x00\\x00\\rIHDR\\x00\\x00\\x03)\n...\n</code></pre> <pre><code>with open('file_binnary.bin', mode='wb') as wf:\n    wf.write(b'bismillah in binary')\n</code></pre>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#protecting-against-overwriting-an-existing-file","title":"Protecting against overwriting an existing file","text":"<p>Sebagaimana yang telah kit alihat, python menawarkan kemampuan untuk menulis file menggunakan flag <code>w</code>. File tersebut dibuka dan di truncate kontennya. Artinya, file tersebut akan ditiban dengan file kosong sehingga koten sebelumnya akan hilang. Jika kita tidak ingin itu terjadi, kita dapat menggunakan flag <code>x</code>, denga demikian python hanya akan writing kepada file yang belum ada eksistensinya.</p> <p>Code</p> Write a file using <code>x</code> flag <pre><code># Percobaan 1\nwith open ('adakah.txt', mode='xt') as wf:\n    wf.write('bismillah')\n\n# Percobaan 2\nwith open ('adakah.txt', mode='xt') as wf: # will raise an error\n    wf.write('alhamdulillah')\n</code></pre> Output<pre><code>---------------------------------------------------------------------------\nFileExistsError                           Traceback (most recent call last)\nInput In [85], in &lt;cell line: 6&gt;()\n    3     wf.write('bismillah')\n    5 # Percobaan 2\n----&gt; 6 with open ('adakah.txt', mode='xt') as wf:\n    7     wf.write('alhamdulillah')\n\nFileExistsError: [Errno 17] File exists: 'adakah.txt'\n</code></pre>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#checking-file-and-directory-existance","title":"Checking file and directory existance","text":"<p>Jika anda ingin memastika sebuah file atau direktori ada atau tidak anda bisa menggunakan modul <code>pathlib</code>.</p> <p>Code</p> Checking file and directory existance <pre><code>from pathlib import Path\npath = Path('adakah.txt')\n\nprint(path.is_file())\nabsolute_path = path.parent.absolute()\nprint(absolute_path)\nprint(absolute_path.is_dir())\n</code></pre> Output<pre><code>True\n/home/maruffarras/Documents/Notes/kertas-pena\nTrue\n</code></pre> <p>Ada cara lain untuk melakukan operasi diatas, yaitu menggunakan <code>os.path</code> module dari pustaka bawaan. <code>os.path</code> berkerja menggunakan strings, namun <code>pathlib</code> menawarkan class-class yang merepresentasikan paths pada filesystem untuk operating system yang berbeda. Maka dari itu sangat disarankan penggunaan <code>pathlib</code> sebisa mungkin.</p>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#manipulating-files-and-directories","title":"Manipulating files and directories","text":"<p>Sekarang lihat contoh dibawah ini, kita memanipulasi operasi disk, yang mana kita menggunakan module <code>shutil</code>.</p> <p>Code</p> Manipulati file and directory <pre><code>import shutil\nfrom pathlib import Path\n\npath_lib = Path('ops_example')\n\n# Memabersihkan folder dan file pada direktori \"ops_example\"\nif path_lib.is_dir() and path_lib.exists():\n    shutil.rmtree(path_lib) # Menghapus semua folder secara recursive hingga akar\n\npath_lib.mkdir() # Buat folder root\n\npath_A = path_lib / 'Home' / 'A'\npath_B = path_lib / 'Home' / 'B'\npath_C = path_lib / 'Home' / 'C'\n\n# Membuat folder path_A,B,C\npath_A.mkdir(parents=True) # parameter parents digukana untuk membuat folder \"Home\"\npath_B.mkdir() # Tidak perlu memnggunakan parameter parents lagi karena filder \"Home\" sudah dibat\npath_C.mkdir()\n\n# Membuat file pada folder \"ops_example/Home/A\"\nfor file_name in ('file_a.txt','file_b.txt','file_c.txt'):\n    with(open(path_A / file_name, mode='w') as wf):\n        wf.write(f\"This content is from file {file_name}\")\n\n# Before move\n!tree ops_example\n\n# Memindahkan folder secara recursive, seperti command mv in unix        \nshutil.move(path_A, path_C)\n\n# # Renaming file \"file_c.txt\" pada path_B\nfile_c_in_path_C = path_C /'A'/'file_c.txt'\n# file_c_in_path_C.rename(file_c_in_path_C.parent / 'file_c_renamed.txt')\n\n# After move\n!tree ops_example\n</code></pre> Output<pre><code>ops_example\n\u2514\u2500\u2500 Home\n    \u251c\u2500\u2500 A\n    \u2502   \u251c\u2500\u2500 file_a.txt\n    \u2502   \u251c\u2500\u2500 file_b.txt\n    \u2502   \u2514\u2500\u2500 file_c.txt\n    \u251c\u2500\u2500 B\n    \u2514\u2500\u2500 C\n\n4 directories, 3 files\nops_example\n\u2514\u2500\u2500 Home\n    \u251c\u2500\u2500 B\n    \u2514\u2500\u2500 C\n        \u2514\u2500\u2500 A\n            \u251c\u2500\u2500 file_a.txt\n            \u251c\u2500\u2500 file_b.txt\n            \u2514\u2500\u2500 file_c.txt\n\n4 directories, 3 files\n</code></pre> <p>Pada kode diatas untuk memanipulias file dan direktori kita menggunakan sebuah fungsi bawaan <code>shutil</code>. Fungsi tersebut digunakan untuk menyalin, meng-archive file-file dan direktori-direktori secara recursive (tree).</p> <p>Kita menggunakan operator slash ++/++ untuk meng-concatenate direktori; <code>pathlib</code> yang menangani seperator yang tepat untuk kita pada belakang layar (seperator direktori berbeda-beda pada operating system).</p> <ul> <li><code>shutil.rmtree</code> Recursively delete a directory tree.</li> <li><code>shutil.mv</code> Recursively move a file or directory to another location. This is similar to the Unix \"mv\" command. Return the file or directory's destination.</li> </ul>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#manipulating-pathnames","title":"Manipulating pathnames","text":"<p>Untuk mengatahui fungsi-fungsi yang ada didalam <code>pathlib</code> dapat dengan cara melihat niali kembalian dari method yang dipanggil.</p> <p>Code</p> Metode pada module <code>pathlib</code> <pre><code>from pathlib import Path\nfile = Path('important.txt')\n\nprint(file.absolute())\nprint(file.name)\nprint(file.parent.absolute())\nprint(file.suffix)\n\nprint(file.parts)\nprint(file.absolute().parts)\n\nread_path = Path('ops_example/Home/C/A')\nimportant_path = Path(read_path.absolute() / '..' / '..'/ '..' / '..' / 'important.txt' )\n\nprint(important_path)\nprint(important_path.resolve())\n\n\nwith open(important_path) as pwf:\n    for a in pwf:\n            print(a)\n</code></pre> Output<pre><code>/home/maruffarras/Documents/Notes/kertas-pena/important.txt\nimportant.txt\n/home/maruffarras/Documents/Notes/kertas-pena\n.txt\n('important.txt',)\n('/', 'home', 'maruffarras', 'Documents', 'Notes', 'kertas-pena', 'important.txt')\n/home/maruffarras/Documents/Notes/kertas-pena/ops_example/Home/C/A/../../../../important.txt\n/home/maruffarras/Documents/Notes/kertas-pena/important.txt\nDari Abu Hurairah radhiallahu \u2018anhu, Rasulullah Shallallahu Alaihi Wassalam bersabda\n...\n</code></pre> <p>Pada baris 15 dan 16 kita menampilkan direktori dari names <code>important_path</code> dimana <code>..</code> artinya adalah mundur ke direktori sebelumnya. Dengan menggunakan fungsi <code>resolve</code> paython langsung menggantikan kealamat yang lebih mudah dibaca.</p>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#temporary-files-and-directory","title":"Temporary files and directory","text":"<p>Terkadanga sangat beruguna jika kita dapat membuat sebuah file atau direktori sementara ketika menjalankan sebuah kode. Misalkan ketika kita membuat sebua test code yang mempengaruhi disk, ruang peyimpanan, kita dapat menggunakan temporary file dan diretories untuk menjalankan logika yang kita buat. Dan pastinya file dan direktori tersebut akan secara otomatis terhapus setelah menjalankan kode tersebut.</p> <p>Code</p> Create temporary folder and file <pre><code>from tempfile import NamedTemporaryFile, TemporaryDirectory\nfrom time import sleep\n\nwith TemporaryDirectory(dir='.') as td:\n    print('This is temporary value', td)\n\n    with NamedTemporaryFile(mode='w', dir=td) as tf:\n        name = tf.name\n        print(name)\n        sleep(5) # Add sleep to see temporary file and temporary directory\n</code></pre> Output<pre><code>This is temporary value ./tmpml1adclu\n/home/maruffarras/Documents/Notes/kertas-pena/tmpml1adclu/tmpw_k8rl2c\n</code></pre> <p>Diatas kita membuat sebuah direktori sementara pada direktori dimana python code dijalankan karena kita memberikan nilai parameter <code>dir</code> dengan nilai dot <code>.</code></p>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#directory-content","title":"Directory content","text":"<p>Dengan python kita juga dapat meng-inspeksi isi dari sebuah folder. Ada dua cara, pertama kita dapat menggunakan fungsi <code>glob</code> dari module <code>Path</code>, kedua menggunakan <code>os.walk</code>.</p> <p>Code</p> Menggunakan <code>path.glob</code>Menggunakan <code>os.walk</code> <pre><code>path = Path('.')\n\nfor entry in path.glob('*'):\n    print('file : ' if entry.is_file() else 'folder : ',entry)\n</code></pre> Output<pre><code>folder :  .github\nfile :  Untitled.ipynb\nfile :  mkdocs.yml\nfolder :  ops_example\nfolder :  docs\nfolder :  .git\nfile :  adakah.txt\nfile :  important.txt\nfolder :  .ipynb_checkpoints\n</code></pre> <pre><code>import os\n\nfor root, _dir, file in os.walk('./ops_example'):\n    root_path = os.path.abspath(root)\n    # print(root_path)\n\n    if _dir:\n        for a in _dir:\n            print('Directories : ',a)\n\n    if file:\n        for a in file:\n            print('File : ',a)\n</code></pre> Output<pre><code>Directories :  Home\nDirectories :  B\nDirectories :  C\nDirectories :  A\nFile :  file_a.txt\nFile :  file_b.txt\nFile :  file_c_renamed.txt\n</code></pre>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#file-and-directory-compression","title":"File and directory compression","text":"<p>Pada catatan kali ini kita akan membahas bagaimana mengompres file. Kita dapat mengkompresnya menjadi zip atau tar.gz. Python menyediakan berbagai cara dan format yang berbeda dalam mengkompres file dan direktori, namun pada catatan kali ini hanya menggunakan cara yang paling umum, <code>ZIP</code>.</p> <p>Berikut adalah struktur folder beserta file pada direktori tersebut yang akan kita kompress. <pre><code>ops_example\n\u2514\u2500\u2500 Home\n    \u251c\u2500\u2500 B\n    \u2514\u2500\u2500 C\n        \u2514\u2500\u2500 A\n            \u251c\u2500\u2500 file_a.txt\n            \u251c\u2500\u2500 file_b.txt\n            \u2514\u2500\u2500 file_c_renamed.txt\n</code></pre></p> <p>Code</p> Compress files and directories <pre><code>with ZipFile ('zipped.zip', mode='w') as zp:\nfor root,_dir,files in os.walk('ops_example'):\n    zp.write(root)\n    print(root)\n    for f in files:\n        file = f'{root}/{f}'\n        print(file)\n        zp.write(file)\n</code></pre> Output<pre><code>ops_example\nops_example/Home\nops_example/Home/B\nops_example/Home/C\nops_example/Home/C/A\nops_example/Home/C/A/file_a.txt\nops_example/Home/C/A/file_b.txt\nops_example/Home/C/A/file_c_renamed.txt\n</code></pre> <p>Info</p> <p>Jika anda tertarik untuk belajar lebih lanjut tentang data compression, anda dapat membaca di Data Compression and Archiving section pada standard library python [https://docs.python.org/3.9/library/</p> <p>archiving.html](https://docs.python.org/3.9/library/ archiving.html)</p>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#data-interchange-formats","title":"Data interchange formats","text":"<p>Pada saat ini, arsitektur perangkat lunak sedang tenar dengan memecah aplikasi kedalam beberapa komponen. Apakah itu service-oriented architecture paradigm atau bahkan kedalam microservices realm, komponen tersebut akan saling bertukar data. Namun, walaupun kita membuat codebase tunggal untuks satu buah aplikasi yang ada dalam satu buah project, pasti tetap kita membutuhkan perturakan data menggunakan APIs, program lain atau bahkan hanya sekedar pertukaran data antara frontend dan backend pada sebuah website yang mana bisa jadi frontend dan backend tidak menggunakan bahasa pemprogramman yang sama. </p> <p>Memilih format yang digunakan untuk pertukaran informasi sangatlah penting. Memilih format <code>langauge-agnostic</code> adalah pilihan yang paling tepat, dimana format tersebut dapat berkomunikasi dengan semua (hampir semua) bahasa pemprogramman.</p> <p>Pada dunia pengembangan aplikasi, beberapa format yang populer menjadi standar mutlak (de facto) untuk pertukaran data. Yang paling tenar adalah <code>XML</code>, <code>YAML</code>, dan <code>JSON</code>. Pada lingkungan python, JSON adalah yang paling sering digunakan. Menurut pendapat saya, karena JSON mudah untuk dibaca dan dilakukan operasi pada data tersebut, berbeda dengan XML.</p>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#working-with-json","title":"Working with JSON","text":"<p>JSON adalah akronim dari JavaScript Object Notation dan bagian dari bahasa pemprogramman JavaScript.</p> <p>JSON terdiri dari dua buah struktur: sebuah collection dari nama dan nilai yang berpasangan, dan list of values yang berurutan. JSON sangat mirip dengan <code>dict</code> dan <code>list</code> pada python. Berbicara tentang tipe data, JSON dapat menampung strings, numbers, dan nilai yang terdiri dari true atau false serta null.</p> <p>Code</p> Json <code>dumps</code> &amp; <code>loads</code> <pre><code>import sys\nimport json\n\ndata = {\n'big_number' : 2**3141,\n'max_float' : sys.float_info.max,\n'_list' : [1,2,3,4,5]\n}\n\njson_data = json.dumps(data) # Dict to JSON (STRING)\nback_data = json.loads(json_data) # Json(String) to Dict\n\n\nprint(type(json_data))\nprint(type(back_data))\n</code></pre> Output<pre><code>&lt;class 'str'&gt;\n&lt;class 'dict'&gt;\n</code></pre> <p>Kode diatas kita mulai dengan meng- <code>import</code> module <code>sys</code> dan <code>json</code>. Selanjutnya kita membuat sebuah dictionary sederhana dengan beberap nilai didalaman nya sebuah list. Kita ingin mencoba untuk me- serialize dan deserialize angka yang besar dari kedua tipe data <code>int</code> dan <code>float</code>, maka dari itu kita memberikan nilai 23141 dan nilai float terbesar yang sistem dapat tampung.</p> <p>Kita me-serialize menggunakan <code>json.dumps()</code> yang mana membutuhkan parameter data dan menkonversinya kedalam bentu JSON (String). Data tersebut lalu kita masukan lagi kedalam fungsi <code>json.loads()</code>, yang mana melakukan operasi kebalikannya, yaitu merubah JSON(String) kedalam dictionary python lagi.</p> <p>Sekarang mari kita lihat hasil serialize berupa JSON(String)</p> <p>Code</p> Dumps dict to json <pre><code>addres_info = {\n    'street': '221B Baker St',\n    'zip': 'NW1 6XE',\n    'city': 'London',\n    'country': 'UK'\n}\n\npersonal_info = {\n'name':'farras',\n'birth_date': {\n    'date' : 27,\n    'month' : 12,\n    'year' : 1995\n},\n'address' : addres_info\n}\n\njson_data = json.dumps(personal_info, indent=2)\nprint(json_data)\n</code></pre> Output<pre><code>{\n    \"name\": \"farras\",\n    \"birth_date\": {\n        \"date\": 27,\n        \"month\": 12,\n        \"year\": 1995\n    },\n    \"address\": {\n        \"street\": \"221B Baker St\",\n        \"zip\": \"NW1 6XE\",\n        \"city\": \"London\",\n        \"country\": \"UK\"\n    }\n}\n</code></pre> <p>Python menawarkan shortcut yang sangat membantu kita termasuk saat kita berurusan dengan data collection. Namun kesalahan kecil yang kita tulis pada kode kita dapat membuat bugs yang terkirakan. Misalkan contoh dibawah ini.</p> <p>Code</p> Undetected bugs.....Seharusnya <pre><code>dict_1 = {'name':'faris','place':'bogor','married':False}, #(1)!\n\njson_dict_1 = json.dumps(dict_1, indent=2)\nprint(json_dict_1)\n</code></pre> <ol> <li>Penulisan <code>,</code> koma yang tidak sengaja mengubah tipe data <code>dict_1</code> menjadi <code>tuple</code>, sehingga <code>dumps()</code> akan mengkonversinya menjadi JSON list.</li> </ol> Output<pre><code>[\n    {\n        \"name\": \"faris\",\n        \"place\": \"bogor\",\n        \"married\": false\n    }\n]\n</code></pre> <pre><code>dict_1 = {'name':'faris','place':'bogor','married':False}\n\njson_dict_1 = json.dumps(dict_1, indent=2)\nprint(json_dict_1)\n</code></pre> Output<pre><code>{\n    \"name\": \"faris\",\n    \"place\": \"bogor\",\n    \"married\": false\n}\n</code></pre>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#lost-information-due-to-excahnge-data","title":"Lost information due to excahnge data","text":"<p>Mari sekarang kita lihat kode menarik dibawah ini.</p> <p>Code</p> Loss of information due to data transformation <pre><code>numbers_tuple = tuple(a for a in range (0,5))\nnumbers_list = [a for a in range(0,5)]\n\nprint(f'numbers_tuple : {type(numbers_tuple)}')\nprint(f'number_list : {type(numbers_list)}')\n\nback_numbers_tuple = json.loads(json.dumps(numbers_tuple))\nback_numbers_list = json.loads(json.dumps(numbers_list))\n\nprint(f'back_numbers_tuple : {type(back_numbers_tuple)}')\nprint(f'back_number_list : {type(back_numbers_list)}')\n</code></pre> Output<pre><code>numbers_tuple : &lt;class 'tuple'&gt;\nnumber_list : &lt;class 'list'&gt;\nback_numbers_tuple : &lt;class 'list'&gt;\nback_number_list : &lt;class 'list'&gt;\n</code></pre> <p>Pada kode diatas kita membuat tuple dan list yang ditampung dengan names <code>numbers_tuple</code> dan<code>number_list</code>, hasilnya dapat dilihat dengan cara memanggil built-in function <code>type</code> untuk menge-check tipe data kedua variable tersebut. Pada baris selanjutnya kita juga menggunakan fungsi <code>type</code> pada variabel yang kita serialize ke JSON dan deserialize kembali ke python objek. Ternyata untuk variable dengan tipe data <code>tuple</code> setelah kembali dirubah dari JSON ke python objek kehilangan tipe data aslinya. </p> <p>Ini adala masalah yang umu terjadi. Misalkan, kita tidak selalu dapat me-serialize semua python objek kedalam python karena tidak terlau jelas bagi python mengetahui JSON tersebut dikembalikan seperti apa kedalam python. Katakan, <code>datetime</code>, sebagai contoh. Instance dari class tersebut adalah sebuah objek pada python yang JSON tidak dapat serialize. Jika kita mengtransformasi kedalam sebuah string seperti <code>2018-03-04T12:00:30Z</code> (ISO 8601) yang merepresentasikan sebuah tanggal dengan waktu dan timzone, maka, apa yang harus JSON lakukan untuk me-deserialize ? haruskah mengembalikannya kembali ke datetime object ?</p> <p>Jawabannya adalah, jika kita berusan dengan data yang berubah, kita harus selalu mengubahnya objek kita kedalam format yang lebih simple sebelum me-serialize kedalam JSON. Semakin kita mampu memanage data kedalam bentuk yang lebih simple, semakin mudah bagi kita untuk merepresentasikan data kedalam sebuah format seperti JSON yang mana memliki batas.</p> <p>Pada kasus tertentu, mungkin untuk penggunan internal, sangat berguna jika kita dapat men-serialize constum object. insyaAllah kita akan membahas pada catatan ini, yaitu membuat Costume Encoder / Decoder.</p>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#custom-encodingdecoding-with-json","title":"Custom encoding/decoding with JSON","text":"<p>Python mendukung perubahan tipe data dari data python ke JSON sebagai berikut;</p> Python Json <code>dict</code> <code>object</code> <code>tuple</code> <code>array</code> <code>list</code> <code>array</code> <code>str</code> <code>string</code> <code>int</code> <code>number</code> <code>float</code> <code>number</code> <code>True</code> <code>true</code> <code>False</code> <code>false</code> <code>None</code> <code>null</code> <p>Lalu bagaimana jita kita men-serialize objek pada python ? akan muncul <code>TypeError</code></p> <p>Code</p> Type Error due to serialize unsuported data <pre><code>from datetime import date\n_date = date(2023,1,31)\ndata = {'_id_product':'HP 14-s','series':'241hdfhh2h7aui7','price':15760000,'date_price':_date}\n\ntry:\n    respone_json = json.dumps(_date, indent=2)\nexcept TypeError as te:\n    print(te)\n</code></pre> Output<pre><code>Object of type date is not JSON serializable\n</code></pre> <p>Berdasarkan dokumentasi, dikatakan jika kita ingin men-serialize objek lain maka,</p> <p>To extend this to recognize other objects, subclass and implement a<code>.default()</code> method with another method that returns a serializable object for <code>o</code> if possible, otherwise it should call the superclass implementation (to raise <code>TypeError</code>).</p> <p>Code</p> Using costume json encoder to perform unsuported serialize data <pre><code>from datetime import date\n\nclass CostumeJSON(json.JSONEncoder):\n    def default(self,obj):\n        print(f'Masuk kedalam Consume Enconder {obj=}',end='\\r\\n'*2)\n        if isinstance(obj,date):\n            return {'-meta':'_date','tanggal':obj.day,'bulan':obj.month,'tahun':obj.year}\n        return self.default(obj)\n\n_date = date(2023,1,31)\ndata = {'_id_product':'HP 14-s','series':'241hdfhh2h7aui7','price':15760000,'date_price':_date}\n\ntry:\n    respone_json = json.dumps(data, cls=CostumeJSON, indent=2)\n    print(respone_json)\nexcept TypeError as te:\n    print(te)\n</code></pre> Output<pre><code>Masuk kedalam Consume Enconder obj=datetime.date(2023, 1, 31)\n\n{\n\"_id_product\": \"HP 14-s\",\n\"series\": \"241hdfhh2h7aui7\",\n\"price\": 15760000,\n\"date_price\": {\n    \"-meta\": \"_date\",\n    \"tanggal\": 31,\n    \"bulan\": 1,\n    \"tahun\": 2023\n    }\n}\n</code></pre> <p>Lalu bagaimana mengembalikan JSON(String) kembali kedalam data di python ? kita dapat menggunakan function costume yang diberikan pada parameter <code>object_hook</code> pada fungsi <code>json.loads()</code>.</p> <p>Dibawah ini adalah penjelasan official dari python tentang <code>object_hook</code>.</p> <p><code>object_hook</code> is an optional function that will be called with the result of any object literal decode (a <code>dict</code>). The return value of <code>object_hook</code> will be used instead of the <code>dict</code>. This feature can be used to implement custom decoders (e.g. JSON-RPC class hinting).</p> <p>Code</p> Using costume function to deserialize JSON to desired python object <pre><code>class CostumeJSON(json.JSONEncoder):\n    def default(self,obj):\n        # Sama dengan method pada class CostumeJSON diatas\n        pass\n\n    @staticmethod\n    def costume_decoder(obj):\n        try:\n            if obj['_meta'] == '_date':\n                return date(obj['tahun'],obj['bulan'],obj['tanggal'])\n        except KeyError: #(1)! return obj when KeyError is raised is a must\n            return obj\n\n# respone_json adalah JSON hasil serialize pada contoh sebelumnya        \ndata_out = json.loads(respone_json, object_hook=CostumeJSON.costume_decoder)\nprint(data_out)\n</code></pre> Output<pre><code>{'_id_product': 'HP 14-s', 'series': '241hdfhh2h7aui7', 'price': 15760000, 'date_price': datetime.date(2023, 1, 31)}\n</code></pre>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#io-streams-and-request","title":"I/O, streams, and request","text":"<p>I/O artinya adala Input/Output, I/O digunakans ecara luas untuk komunikasi antara komputer dan dunia luar. Ada beberapa tipe dari I/O, namun insyaAllah kita hanya membahas beberapa jenis I/O saja, tidak semuanya.</p> <p>Yang pertama adana <code>io.StringIO</code> class, adalah semua _in-memory stream` untuk text I/O. Kedua yang ada dicatatan ini adalah HTTP request.</p>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#using-an-in-memory-stream","title":"Using an in-memory stream","text":"<p>In-memory objects can be useful in a multitude of situations. Memory is much faster than a disk, it's always available, and for small amounts of data can be the perfect choice.</p> <p>Code</p> Stream StringIO <pre><code>import io\n\nstream = io.StringIO()\n\n# Menggunakan method write\nstream.write(\"Bismillah.\\n\")\n\n# Menggunakan parameter file dengan nilai stream pada function print\nprint('Dengan menyebut nama Allah', file=stream)\n\nprint(stream.getvalue())\nstream.close()\n</code></pre> Output<pre><code>Bismillah.\nDengan menyebut nama Allah\n</code></pre> <p>Pada kode diatas, kita <code>import</code> module <code>io</code> dari standard library. Yang sangat menarik adalah, modul tersebut memiliki banyak tools yang berhubungan dengan stream dan Input/Output. Salah satunya adalah <code>StringOP</code> adalah sebuah in-memory buffer yang akan kita gunakan untuk membuat dua kalimat menggunakan dua metode yang berbeda, sebagaimana yang kita menulis pada sebuah file. Samah halnya, kita dapat menggunakan method <code>StringIO.write()</code> atau kita dapat menggunakan <code>print</code> dan mengarahkan outputnya langsung ke datastream.</p> <p>Dengan memanggil fungsi <code>getvalue()</code> kita dapat mengambil konten dari stream. Selanjutnya kita print hasilnya, dan diakhir baris kita menutup stream menggunakan <code>close()</code> yang menyebabkan text buffre langsung dibuang.</p> <p>Ingat, adacara lain yang lebih elgan mengingat kita mungkin lupa menutup nya menggunakan fungsi <code>close()</code>. Yup, menggunakan context manager.</p> <p>Code</p> I/O Menggunakan context manager <pre><code>import io\n\ndef read_from_io():\n    with io.StringIO() as st:\n        # Menggunakan method write\n        st.write(\"Bismillah.\\n\")\n\n        # Menggunakan parameter file dengan nilai stream pada function print\n        print('Dengan menyebut nama Allah', file=st)\n\n        return st.getvalue()\n\nprint(read_from_io())\n</code></pre>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#making-http-request","title":"Making HTTP request","text":"<p>Pada bagian catatan ini, insyaAllah kita akan mengekspolirasi dua contoh pada HTTP request. Kita akan menggunakan <code>request</code> library untuk contoh berikut, yang mana anda dapat menginstallnya menggunakan perintah <code>pip install requests</code>. Atau jika anda menggunakan anaconda anda dapat menggunakan <code>conda install requests</code>. </p> <p>Kita akan melakukan HTTP reuqest ke httpbn.org yang mana dikembangkan oleh Kenneth Reitz, pembuat dari pustaka <code>request</code> juga. </p> <p>Code</p> Example 1 <pre><code>from requests import request\n\nurls = {\n    \"get\": \"https://httpbin.org/get?t=learn+python+programming\",\n    \"headers\": \"https://httpbin.org/headers\",\n    \"ip\": \"https://httpbin.org/ip\",\n    \"user-agent\": \"https://httpbin.org/user-agent\",\n    \"UUID\": \"https://httpbin.org/uuid\",\n    \"JSON\": \"https://httpbin.org/json\",\n}\n\n\ndef get_content(title,url):\n    print(f'Request for {title}')    \n    rsp = request('GET',url).json()\n    print(rsp)\n    print(f'{type(rsp)=}') # check type\n    print('-'*30)\n\nfor title, url in urls.items():\n    get_content(title,url)\n</code></pre> Output<pre><code>Request for get\n{'args': {'t': 'learn python programming'}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate, br', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.27.1', 'X-Amzn-Trace-Id': 'Root=1-6498e2e6-0a209958522fd24b68f6dc8d'}, 'origin': '140.213.134.96', 'url': 'https://httpbin.org/get?t=learn+python+programming'}\ntype(rsp)=&lt;class 'dict'&gt;\n------------------------------\nRequest for headers\n{'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate, br', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.27.1', 'X-Amzn-Trace-Id': 'Root=1-6498e2e7-320394a203f804d672c40689'}}\ntype(rsp)=&lt;class 'dict'&gt;\n------------------------------\nRequest for ip\n{'origin': '140.213.136.102'}\ntype(rsp)=&lt;class 'dict'&gt;\n------------------------------\nRequest for user-agent\n{'user-agent': 'python-requests/2.27.1'}\ntype(rsp)=&lt;class 'dict'&gt;\n------------------------------\nRequest for UUID\n{'uuid': 'a89a1d04-5d0d-45fd-b2fc-74949ba7f75a'}\ntype(rsp)=&lt;class 'dict'&gt;\n------------------------------\nRequest for JSON\n{'slideshow': {'author': 'Yours Truly', 'date': 'date of publication', 'slides': [{'title': 'Wake up to WonderWidgets!', 'type': 'all'}, {'items': ['Why &lt;em&gt;WonderWidgets&lt;/em&gt; are great', 'Who &lt;em&gt;buys&lt;/em&gt; WonderWidgets'], 'title': 'Overview', 'type': 'all'}], 'title': 'Sample Slide Show'}}\ntype(rsp)=&lt;class 'dict'&gt;\n------------------------------\n</code></pre> <p>Ketika kita melakukan request ke sebuah website atau API, kita mendapatkan objek respone. Contoh diatas kita langsung menggunakan method <code>request.json()</code> dibandingkan menggunakan <code>request.text</code> lalu menggunakan <code>json.loads</code> untuk mengubahnya ke <code>dict</code> pada python. Dengan method <code>request.json()</code> kita mengambil jalan pintas langsung merubahnya menjadi <code>ditct</code>.</p> <p>Info</p> <p>ketika kita melakukan operasi request pada aplikasi kita, kita akan sangat membutuhkan pendekatan yang lebih bagus dalam menangani error dan semisalnya, insyaAllah kita akan membahas pada sub catatan Introduction to API development</p> <p>GET adalah salah satu dari metode dari HTTP dan yang paling sering digunakan. sekarang mari kita gunakan metode lainnya yaitu POST. Ini dalah tipe request yang digunakan ketika kita ingin mengirim sebuah data ke server. Biasanya, setiap kita men-submit form pada sebuah web, kita membuat sebuah POST request.</p> <p>Code</p> Example 1 <pre><code>url = 'http://httpbin.org/post'\ndata = {'title':'Mulia dengan manhaj salaf'}\n\nrsp = request('POST',url, data=data)\n\nprint(rsp.json())\n</code></pre> Output<pre><code>{'args': {}, 'data': '', 'files': {}, 'form': {'title': 'Mulia dengan manhaj salaf'}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate, br', 'Content-Length': '31', 'Content-Type': 'application/x-www-form-urlencoded', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.27.1', 'X-Amzn-Trace-Id': 'Root=1-6498e50e-4579f68554ba761a646f5d26'}, 'json': None, 'origin': '140.213.136.102', 'url': 'http://httpbin.org/post'}\n</code></pre> <p>Kode diatasn hanya berbeda sedikit dengan tipe GET. Pada POST ini kita mengganti parameter pertama dengan post dan kita juga mengirim data dalam betuk <code>dict</code> kedalam parameter <code>data</code>.</p>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#persisting-data-on-disk","title":"Persisting data on disk","text":"<p>Persist data adalah, data yang ditulis pada penyimpanan permanen (tidak mudah hilang) seperti hard drive, contohnya, dan data tersebut tidak akan terhapus setelah peroses penulisan tersebut berakhir.</p>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#serializing-data-using-py-pickle","title":"Serializing data using <code>py pickle</code>","text":"<p>Modul <code>pickle</code> dari pustaka bawaan python, menawarkan tools yang berguna untuk mengkonversi Python objects kedalam byte streams dan sebaliknya. Modul ini, di sisilain, tidak bisa dibaca oleh orang, menterjemah ke bytes, dan spesifik ke python jika dibandingkan dengan JSON yang dapat dibaca manusia, terjemah ke string dan universal specific. Untungmya (pickle), python interospection capabilities mendukung banya tipe data, tidak seperti dengan JSON hanya mendungkung beberapa data, dan jika tidak maka kita harus membuat costume class turunan dari JSONEncoder. Baca lebih lanjut tentang JSON disini</p> <p>Selain yang telah dipaparkan pada catatan diatas tentang perbeedaan antara picke dan json, ada satu hal juga yang tidak kalah penting, yaitu fokus kemanan yang harus dikhawatirkan jika kita mempertimbangkan untuk menggunakan <code>pickle</code>. Unpickling data yang mencurigakan dan sangat berbahana, makadari itu, jika kita menetapkan penggunakan <code>pickle</code> pada aplikasi kita, maka kita harus ekstra hati2 dalam unpickling data dari luar.</p> <p>Warning</p> <p>Please, mohon gunakan cryptographic signatur untuk memastika data yang telah di pickle tidak dirusak (berubah tanpa kengininan yang sendiri dan baik). InsyaAllah kita akan ada catatan tentang Cryptography dan Tokens.</p> <p>Code</p> Pesisting data using <code>pickle</code> <pre><code>from dataclasses import dataclass\nimport pickle\n\n@dataclass\nclass Person:\n    first_name:str\n    last_name:str\n    _id:int\n\n    def greets(self):\n        print(f'Assalamualiakum, my name is {self.first_name} {self.last_name} and my id number is {self._id}')\n\npeople = [\n    Person('Muhamad','Farras',27),\n    Person('Tania','Dwi',11),\n    Person('Muhamad','Faris',5),\n    Person('Nu\\'man','Noah',13)\n]\n\n# Writting to binnary\nwith open('my_fam.pickle', mode='wb') as stream:\n    pickle.dump(people, stream)\n\n# Load the data\nwith open('my_fam.pickle', mode='rb') as stream:\n    loaded_data = pickle.load(stream)\n\nfor a in loaded_data:\n    a.greets()\n</code></pre> Output<pre><code>Assalamualiakum, my name is Muhamad Farras and my id number is 27\nAssalamualiakum, my name is Tania Dwi and my id number is 11\nAssalamualiakum, my name is Muhamad Faris and my id number is 5\nAssalamualiakum, my name is Nu'man Noah and my id number is 13\n</code></pre> Output<pre><code>.\n\u251c\u2500\u2500 adakah.txt\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 important.txt\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 my_fam.pickle #(1)! \n\u2514\u2500\u2500 Untitled.ipynb\n</code></pre> <ol> <li><code>my_fam.pickle</code> persist in hardware</li> </ol> <p>Pada kode diatas saya membuat sebuah class menggunakan <code>dataclass</code> decorator. yang menampung 3 property dan membuat sebuah function untuk menge-print sebuah salam berdasarkan data dari property tersebut. Selanjutnya saya membuat sebuah list yang menampung objek inisialisasi dari class <code>#!Person</code>. Selanjutnya kita menulis python objek kesebuah file menggunakan <code>pickle.dump(objek, stream)</code>, disini tidak perlu melakukan perulangan jika objek yang ingin dibentuk filenya berada didalam sebauh list. Samah halnya saat load data, menggunakan fungsi <code>pickle.load(stream)</code> tidak perlu membuat for loop untuk mengambil sebua python objek pada file tersebut.</p> <p>Dalam aplikasi sehari-hari, <code>pickle</code> digunakan ketika kita ingin mempertahankan pyhon data object yang tidak digunakan oleh aplikasi lain. (khusus untuk aplikasi tersebut) . Dalam praktiknya, kita sangat jarang menggunakan libary ini</p>"},{"location":"Programming%20Language/Python/07.%20Files%20and%20data%20persistance/#saving-data-with-shelve","title":"Saving data with shelve","text":"<p><code>shelf</code> mempertahankan <code>dictionary-like object</code>. Bagusnya adalah, nilai-nilai yang kita simpan didalam <code>shelf</code> dapat dalam bentuk objek yang dapat kita <code>pickle</code>, sehingga tidak terbatas terhadapt tipe data sebagaimana kita menggunakan database.</p> <p>Code</p> Example 1 <pre><code>import shelve\n\nclass Student:\n    def __init__(self, id, name):\n        self.id = id\n        self.name = name\n\n    def information(self):\n        print(f'Id\\'s {self.name} is {self.id}')\n\n\nwith shelve.open('my_data.shelve') as db:\n    db['frs'] = Student(27,'Farras')\n    db['tna'] = Student(11,'Tania')\n    db['list'] = [1,2,3,4,5]\n    db['delete'] = 'We have to delete this one latter'\n\n    del db['delete']\n    list_1 = db['list']\n    list_1.extend((5,6,7,8,9))\n    db['list'] = list_1\n    print(db['list'])\n    print(list(db.keys()))\n</code></pre> Output<pre><code>[1, 2, 3, 4, 5, 5, 6, 7, 8, 9]\n['frs', 'tna', 'list']\n</code></pre> <p>Perhatikan baris yang di hight line, yaitu bagaiman kita meng-extract list dari shelf, memodifikasinya dan menyimpannya lagi. Jika kita langsung mengubah nilai list tanpa harus meng-extract dan memberikan nilai yang baru maka kita harus memberikan nilai <code>True</code> pada pameter <code>writeback</code>.</p> <p>Code</p> Using tracebackWithout traceback <pre><code>import shelve\n\nclass Student:\n    def __init__(self, id, name):\n        self.id = id\n        self.name = name\n\n    def information(self):\n        print(f'Id\\'s {self.name} is {self.id}')\n\n\nwith shelve.open('my_data.shelve', writeback=True) as db:\n    db['frs'] = Student(27,'Farras')\n    db['tna'] = Student(11,'Tania')\n    db['list'] = [1,2,3,4,5]\n    db['delete'] = 'We have to delete this one latter'\n\n    del db['delete']\n    db['list'].extend((5,6,7,8,9)) # work\n    print(db['list'])\n    print(list(db.keys()))\n</code></pre> Output<pre><code>[1, 2, 3, 4, 5, 5, 6, 7, 8, 9]\n['frs', 'tna', 'list']\n</code></pre> <pre><code>import shelve\n\nclass Student:\n    def __init__(self, id, name):\n        self.id = id\n        self.name = name\n\n    def information(self):\n        print(f'Id\\'s {self.name} is {self.id}')\n\n\nwith shelve.open('my_data.shelve') as db:\n    db['frs'] = Student(27,'Farras')\n    db['tna'] = Student(11,'Tania')\n    db['list'] = [1,2,3,4,5]\n    db['delete'] = 'We have to delete this one latter'\n\n    del db['delete']\n    db['list'].extend((5,6,7,8,9)) # Doesny work\n    print(db['list'])\n    print(list(db.keys()))\n</code></pre> Output<pre><code>[1, 2, 3, 4, 5]\n['frs', 'tna', 'list']\n</code></pre> <p>Alasan mengapa fitur ini tidak aktif bawaanya karena, fitur ini membutuhkan konsumsi memori yang banyak dan memperlambat penutupan context shelf.</p> <p>sample</p> <p>Code</p> Example 1 <pre><code>\n</code></pre> Output<pre><code>\n</code></pre> <p>Code</p> Example 1Example 2 <pre><code>\n</code></pre> Output<pre><code>\n</code></pre> <pre><code>\n</code></pre> Output<pre><code>\n</code></pre> <p>Code</p> <pre><code>\n</code></pre> Example 1Example 2 <pre><code>\n</code></pre> Output<pre><code>\n</code></pre> <pre><code>\n</code></pre> Output<pre><code>\n</code></pre>"},{"location":"Programming%20Language/Python/99.%20Hackerrank/","title":"99. Hackerrank","text":""},{"location":"Programming%20Language/Python/99.%20Hackerrank/#collection-counter","title":"Collection Counter","text":"<pre><code>&gt;&gt;&gt; from collections import Counter\n&gt;&gt;&gt; \n&gt;&gt;&gt; myList = [1,1,2,3,4,5,3,2,3,4,2,1,2,3]\n&gt;&gt;&gt; print Counter(myList)\nCounter({2: 4, 3: 4, 1: 3, 4: 2, 5: 1})\n&gt;&gt;&gt;\n&gt;&gt;&gt; print Counter(myList).items()\n[(1, 3), (2, 4), (3, 4), (4, 2), (5, 1)]\n&gt;&gt;&gt; \n&gt;&gt;&gt; print Counter(myList).keys()\n[1, 2, 3, 4, 5]\n&gt;&gt;&gt; \n&gt;&gt;&gt; print Counter(myList).values()\n[3, 4, 4, 2, 1]\n</code></pre> <p>Quiz</p> <p>Pertanyaan kunjungi https://www.hackerrank.com/challenges/designer-door-mat/problem?isFullScreen=true</p> Answer <pre><code># Enter your code here. Read input from STDIN. Print output to STDOUT\nn,m = map(lambda n : int(n), tuple(input().split(\" \")))\n\nmidle_m = (m // 3)\nmidle_m_unorm = [midle_m // 2]\n\nmidle_row = (n // 2)\nmidle_row_unorm = midle_row // 2\n\nx_norm = '---'\nx_unorm = '.|.'\n# print (n, midle_row)\n\ntry:\n    for a1 in range (n):\n        # print (midle_m_unorm)\\\n\n        if a1 == midle_row:\n            words = \"WELCOME\"\n            dash = int((m - len(words)) / 2)\n            # print(dash)\n            print('-'*dash,words,'-'*dash,sep='',end='')\n        else:\n            for a in range (midle_m):\n                print (x_unorm if a in midle_m_unorm else x_norm, end='')\n\n        if a1 &lt; midle_row-1:\n            midle_m_unorm.append(midle_m_unorm[-1]+1)\n            midle_m_unorm.append(midle_m_unorm[0]-1)\n        if a1 &gt; midle_row:\n            midle_m_unorm.pop(0)\n            midle_m_unorm.pop()\n        midle_m_unorm.sort()\n\n        # print(a1,  midle_row)\n        print()\nexcept IndexError as ie:\n    pass\n</code></pre> <p>Quiz</p> <p>Pertanyaan https://www.hackerrank.com/challenges/capitalize/problem?isFullScreen=true</p> Answers <pre><code># Complete the solve function below.\ndef solve(s):\n    # return(s.capitalize())\n    return ' '.join([a.capitalize() for a in s.split(\" \")])\n</code></pre> <p>Quiz</p> <p>Pertanyaan https://www.hackerrank.com/challenges/python-string-formatting/problem?isFullScreen=true</p> <p>Info : Python f-string source</p> Answers <pre><code>def print_formatted(number):\nmx_bn = len(bin(number).removeprefix('0b'))\n\nfor a in range (1,number+1):\n    hx = hex(a).removeprefix('0x').upper()\n    oc = oct(a).removeprefix('0o')\n    bn = bin(a).removeprefix('0b')\n    print (f'{a:&gt;{mx_bn}} {oc:&gt;{mx_bn}} {hx:&gt;{mx_bn}} {bn:&gt;{mx_bn}}')\n</code></pre>"},{"location":"Programming%20Language/Python/additional_note/","title":"Additional note","text":""},{"location":"Programming%20Language/Python/additional_note/#recursion","title":"Recursion","text":"<p>Source : https://www.programiz.com/python-programming/recursion</p> <p>Di python, sebuah fungsi dapat memanggil fungsi lainnya. Fungsi tersebut juga dapat memanggil dirinya sendiri. Gambar dibawah ini menjelaskan bagaimana recursive function bekerja.</p> <p></p> <p>Dibawah ini adalah contoh penggunaan recursive function untuk menemukan fakotrial dari sebuah angka. Misalkan faktorial dari 6 (ditandai dengan \\(6!\\) ) <code>1 x 2 x 3 x 4 x 5 x 6 = 720</code></p> <p>Code</p> <pre><code>def factorial(x):\n    \"\"\"This is a recursive function\n    to find the factorial of an integer\"\"\"\n\n    if x == 1:\n        return 1\n    else:\n        return (x * factorial(x-1))\n\n\nnum = 3\nprint(\"The factorial of\", num, \"is\", factorial(num))\n    ```\n\n```{.pyton .no-copy title=\"Print Output\"}\nThe factorial of 3 is 6\n</code></pre> <p>Penjelasan langkah-langkah fungsi <code>factorial()</code> diatas:</p> <p></p> <p>Keuntungan menggunakan recursion</p> <ol> <li>Penggunaan recursive function membuat kode terlihat lebih keren dan elegan</li> <li>Tugas kompleks dapat dipecah menjadi masalah kecil menggunakan recursive function</li> <li>Squance generation lebih mudah dilakukan dari pada menggunakna iteration (perulangan).</li> </ol> <p>Keburukan dari recursion</p> <ol> <li>Seringkali logika dibalik recursive sangat sulit untuk dipahami</li> <li>Pemanggilan recursive memakan waktu dan tempat penyimpanan yang lebih banyak</li> <li>Recursive function sangat sulit untuk didebug jika terjadi masalah.</li> </ol>"},{"location":"Programming%20Language/Python/additional_note/#implementasi-nyata-fungsi-generatorthrow","title":"Implementasi nyata fungsi <code>generator.throw()</code>","text":"<p>Source : Stack Overflow</p> <p>Let's say I use a generator to handle adding information to a database; I use this to store network-received information, and by using a generator I can do this efficiently whenever I actually receive data, and do other things otherwise.</p> <p>So, my generator first opens a database connection, and every time you send it something, it'll add a row:</p> <pre><code>def add_to_database(connection_string):\n    db = mydatabaselibrary.connect(connection_string)\n    cursor = db.cursor()\n    while True:\n        row = yield\n        cursor.execute('INSERT INTO mytable VALUES(?, ?, ?)', row)\n</code></pre> <p>That is all fine and well; every time I <code>.send()</code> my data it'll insert a row.</p> <p>But what if my database is transactional? How do I signal this generator when to commit the data to the database? And when to abort the transaction? Moreover, it is holding an open connection to the database, maybe I sometimes want it to close that connection to reclaim resources.</p> <p>This is where the <code>.throw()</code> method comes in; with <code>.throw()</code> I can raise exceptions in that method to signal certain circumstances:</p> <pre><code>def add_to_database(connection_string):\n    db = mydatabaselibrary.connect(connection_string)\n    cursor = db.cursor()\n    try:\n        while True:\n            try:\n                row = yield\n                cursor.execute('INSERT INTO mytable VALUES(?, ?, ?)', row)\n            except CommitException:\n                cursor.execute('COMMIT')\n            except AbortException:\n                cursor.execute('ABORT')\n    finally:\n        cursor.execute('ABORT')\n        db.close()\n</code></pre> <p>The <code>.close()</code> method on a generator does essentially the same thing; it uses the GeneratorExit exception combined with <code>.throw()</code> to close a running generator.</p> <p>All this is an important underpinning of how coroutines work; coroutines are essentially generators, together with some additional syntax to make writing a coroutine easier and clearer. But under the hood they are still built on the same yielding, and sending. And when you are running multiple coroutines in parallel, you need a way to cleanly exit those coroutines if one of them has failed, just to name an example.</p>"},{"location":"Technology/Catatan%20Apache%20Kafka/","title":"Strkutr","text":"<p>Producer -&gt; Broker -&gt; Topic -&gt; Partition</p>"},{"location":"Technology/Catatan%20Apache%20Kafka/#kafka-topics","title":"Kafka topics","text":"<p>Topics : particular stream of data * Seperti tabel pada databases * Dapat memliki opik yang banyak * Topik teridentifikasi dengan name * Dapat berisi format apapun, JSON, XML dsb * Kumpulan message disetbut dengan data stream * Tidak dapat langusng query topics, gunakan Kafka Producers untuk menbaca dan mengirim data asd Misal</p> <p>Terisi dari  0 logs 0 Purchases 0 Twitter Tweets 0 truck_gps</p>"},{"location":"Technology/Catatan%20Apache%20Kafka/#partisi-dan-offserts","title":"Partisi dan Offserts","text":"<p>Topic dipecah dalam bentuk partisi. Message yang ada didalam partisi tersusun berurut. Setiap message didalam partisi memliki id, yang disebut offset.</p> <ul> <li>Kafka topic immutable, tidak dapat dirubah.</li> <li>Data disimpan sementara, bawaanya selama 7 hari (retention)</li> <li>Data terurut hanya dijamin didalam topics, tidak dengan cross topics</li> <li>Dapat memliki lebih dari satu partition didalam satu topic</li> <li>Data di set secara acak kdalam partition kecuaili key is porvided (offset kah ?)</li> </ul>"},{"location":"Technology/Catatan%20Apache%20Kafka/#producers","title":"Producers","text":"<p>Producers write dat aain topic</p>"},{"location":"Technology/Catatan%20Apache%20Kafka/#membuat-topic","title":"Membuat topic","text":"<pre><code>kafka-topics.sh --bootstrap-server localhost:9092 --topic topic_A --create\n</code></pre> <pre><code>kafka-topics.sh --bootstrap-server localhost:9092 --topic topic_B --create --partitions 3\n</code></pre> <pre><code>kafka-topics.sh --bootstrap-server localhost:9092 --topic topic_C --create --partitions 3 --replication-factor 2 #(1)!\n\nkafka-topics.sh --bootstrap-server localhost:9092 --topic topic_C --create --partitions 3 --replication-factor 1 #(2)!\n</code></pre> <ol> <li>Due error, karena hanya memliki satu buah broker</li> <li>Tidak error</li> </ol> <p>Melihat informasi semua topics <pre><code>kafka-topics.sh --bootstrap-server localhost:9092 --topic topic_A --describe\n</code></pre></p> <p>Untuk melihat informasi dari topics tertentu <pre><code>kafka-topics.sh --bootstrap-server localhost:9092 --topic topic_A --describe #(1)!\n</code></pre></p>"},{"location":"Technology/Catatan%20Apache%20Kafka/#menahpus-topic","title":"Menahpus topic","text":"<pre><code># Menghapus topic C\nkafka-topics.sh --bootstrap-sever localhost:9092 --topic topic_B --delete\n</code></pre>"},{"location":"Technology/Catatan%20Apache%20Kafka/#kafka-console-producer","title":"Kafka console producer","text":"<p>Untuk mengirimkan message ataupun producer <pre><code>kafka-console-producer.sh --bootstrap-server localhost:9092 --topic topic_C\n</code></pre></p> <p>Menggunakan producer property</p> <p>Info</p> <p>--producer-property  A mechanism to pass user-defined properties in the form key=value to the producer. <pre><code>kafka-console-producer.sh --bootstrap-server localhost:9092 --topic topic_C --producer-property acks=1  \n</code></pre>"},{"location":"Technology/Catatan%20Arduino/","title":"Learn Arduino","text":""},{"location":"Technology/Catatan%20Arduino/#sumber-ilmu","title":"Sumber Ilmu","text":"<p>Catatan utama yang ada pada repositori ini diambil dari sebuah buku yang berjudul Arduino For Dummies karya Jhon Nussey. Tidak menutup kemungkinan catatan ini bersumber selain dari buku ini.</p> <p>**Bonus Chapter ** http://www.dummies.com/go/arduinofd</p>"},{"location":"Technology/Catatan%20Arduino/#daftar-isi","title":"Daftar Isi","text":"<p>Pada buku tersebut terdapat lima bagian, setiap bagian (part) memliki chapter, berikut adalah hal yang akan dipelajari pada repositori ini.</p>"},{"location":"Technology/Catatan%20Arduino/#bagian-1","title":"Bagian 1","text":"<ul> <li> Mengenal Arduino</li> <li> Papan Arduino</li> <li> Membuat LED berkedip</li> </ul>"},{"location":"Technology/Catatan%20Arduino/#mengenal-perangkat-perangkat-dari-ardino","title":"Mengenal perangkat-perangkat dari Ardino","text":"<ul> <li> Peralatan untuk beroperasi (Belum Lengkap)</li> <li> Elektrik dan Sirkuit</li> <li> Sketsa dasar: Masukan, Keluaran dan Komunikasi</li> <li> Sketssa dasar lainnya : Motion dan Suara</li> </ul>"},{"location":"Technology/Catatan%20Arduino/#membuat-pondasi","title":"Membuat pondasi","text":"<ul> <li> Belajar dengan contoh</li> <li> Men-solder</li> <li> Membuat kode</li> <li> Common Sense with Common Sensors</li> <li> Spesialis dengan Shields dan Pustaka (Library)</li> </ul>"},{"location":"Technology/Catatan%20Arduino/#mendalami-software","title":"Mendalami Software","text":"<ul> <li> Mengenal proses</li> <li> Memproses kata fisik</li> </ul>"},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/","title":"Introduce to Arduino","text":""},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/#mengenal-arduino","title":"Mengenal Arduino","text":"<p>Ardiono dibuat dari komponon kasar dan lunak. Papan Arduino adalah sebuah PCB (Printed Circuit Board), suatu board yang mengkoneksikan komponen-komponen elektronik secara konduktif dengan jalur (track), pads, dan via dari lembaran tembaga yang dilaminasikan pada substrat non konduktif.</p> <p>Komponen-komponen dari papan tersebut dibutuhkan agar microcontroller dapat berfungsi atau memperluas kemampuannya.</p> <p>Microcontroller adalah sebuah komputerkecil yang didalamnya memiliki lintasan yang saling tersambung atau cip komputer. Microcontroller digunakan untuk memprogram dan mengatur elektornik. Papan Mincrocontroller memliki sebuah cip microcontroller dan penghubung lainnya yang berguna dan komponen yang membuat pengguna dapat menempelkan masukan atau keluarna. Contohnya wiring board*, PIC, dan Basic Stamp.</p>"},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/#mengenal-papan-arduino-komponen-dari-papan-arduino","title":"Mengenal Papan Arduino &amp; Komponen dari Papan Arduino","text":""},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/#otak-dari-arduino-atmega328p-microcontroller-chip","title":"Otak dari Arduino : ATmega328P microcontroller chip","text":"<p> Cip microcontroller adalah otak dari papan Andruino. Cip ini juga dapat disebut dengan Integrated Circuit atau IC</p>"},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/#header-sockets","title":"Header sockets","text":"<p>Soket dari microcotroller menghubungkan semua kaki tangan dari cip ATmega328 microcontroller ke soket yang lainnya. Merujuk pada header socket yang diatur di sekitar tepi papan dan diberi label untuk kemudahan penggunaan. Soket hitam ini dibagi menjadi tiga kelompok. digital pins, analog input pins, dan power pins. Ketiga pins tersebut mentransfer voltaget, bisa mentransfer keluar ataupun menerimanya sebagai nilai masukan.</p> <p>Mengapa pins ini sangat penting ?</p> <p>Karena pins tersebut membuat kita dapat terhubung dengan cepat dan mudah ke sirkuit tambahan ketika kita membuat prototype dengan breadboard dan untuk mendesain papan tambahan (shields).</p> <p>Proses yang sama ini dari mengirim dan menerima sinyal elektrik seperti yang kita dapati dalam komputer moderen. Namun karena komputer sangat kompleks dan \"\" dibandingkan dengan sebuah Arduino maka sangat sulit untuk secara langsung menghubungkan komputer yang terbiasa dengan digital sinyal (0s dan 1s) ke sirkuit elektronik yang berhubungan dengan rentang tegangan (ov sampai dengan 5v ATmega329P)</p> <p>Yang membuat Arduino sangat spesial adalah, Arduino dapat menafsirkan (meng interpret) sinyal elektronik dan mengubahnya kedalam sinyal digital yang dapat dipahami oleh komputer. Dan juga dapat menulis sebuah program menggunakan perangkat lunak pada sebuah komputer dimana Arduino IDE mengkonversinya atau mengkompilenya ke sinyal elektrit yang dapat dipahami oleh sirkuit.</p> <p></p>"},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/#digital-pins","title":"Digital Pins","text":"<p>Berguna untuk mengirim dan menerima sinyal digital. Digital menyiratkan bahwa pins memliki dua pernyataan : <code>off</code> atau <code>on</code>. Pada istilah elektornik, pernyataan ini di terjemahkan ke sebuah nilai dari <code>0</code>atau <code>5</code> volts, tidak ada nilai diantaranya.</p>"},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/#analog-in-pins","title":"Analog in Pins","text":"<p>Berguna untuk menerima nilai analog. Nialai analog didapatkan dari jarak nilai. Pada kasus ini jaraknya sama dengan jarak Digital Pins, antara <code>0V</code> ke <code>5V</code>, namun yang membedekan nilainya bisa diantara jarak nilai tersebut, `0.1, 0.2, 0.3, dan seterusnya.</p>"},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/#bagaiamana-dengan-analog-out-pins","title":"Bagaiamana dengan analog out pins ?","text":"<p>Jika dilihat pada papan Arduino tidak ada label yang bertuliskan analog out*. Faktanya analog out ada namun tersembunyi diantara digital pins yang ditandai dengan <code>PWM</code> menggunakan simbil <code>~</code>. <code>PWM</code> adalah pulse-width modulation, yang mana adalah sebuah tekhnik yang dapat kita gunakan untuk memberikan kesan output analog menggunakan digital pin. Pembahasan tentang <code>PWM</code> akan dibahasi nanti. Simbol <code>~</code> muncuk setelah digital pin <code>3,5,6,7,10 dan, 11</code> yang menunjukan kita memliki enam pin yang mampu <code>PWM</code>.</p>"},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/#power-pins","title":"Power Pins","text":"<p>Berguna untuk mendistribusikan tenaga ke masukan atau keluaran dimana tenaga dibutuhkan.</p> <p><code>vin</code> (voltage in) dan digunakan untuk menyuplai sebuah volatase yang setera dengan satu pasok yang disuplai oleh jack eksternal (12v). Kita juga dapat menggunakan pin ini untuk menyuplai tenaga ke Arduino dari sumber lain.</p> <p><code>GND</code> yang ditandai dengan ground pins penting untuk melengkapi sirkuit. Ada juga ground ke 3 dekat dengan pin 13 pada digital pins. Semua pin ini terhubung dan membagi <code>ground</code> yang sama.</p> <p>Kita dapat menggunakan 5V atau 3.3V untuk memasok catu daya 5 volt atau 3,3 volt, masing-masing, untuk komponen atau sirkuit.</p>"},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/#usb-socket","title":"USB Socket","text":"<p>Berguna untuk memberitahu microcontroller didalam papan Arduino apa yang harus dilakukan. Kita harus mengirimkan program kedalamnya. Papan Arduino menggunakan USB socket tersebut untuk daya dan untuk mengtransfer data. Menggunakan kabel USB sangat sempurna untuk aplikai yang membutuhkan tenaga sedikit dan ketika data dikirimkan ke komputer atau menerima data dari komputer.</p>"},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/#power-socket","title":"Power Socket","text":"<p>Socket ini berguna untuk memberikan tenaga ke Arduino yang bearasal dari luar. Suplai tenaga ini bisa berasal dari AC atau DV adaptor, batre atau solar panel. Tegangan (volatase) yang direkomendasikan untuk papan UNO adalah antara 7v sampai dengan 12v. Jika kita mensuplai tegangan yang lebih rendah papan uno tidak akan bekerja secara maksimal dan jika kita memberikan tegangan terlalu tinggi bisa menyebabkan uno rusak.</p>"},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/#leds","title":"LEDs","text":"<p>Papan arduino memilki empat lampu LED yang ditandai dengan <code>L</code>, <code>TX</code>, <code>RX</code>, dan <code>ON</code>. LED adalah sebuah komponen yang mengeluarkan cahaya ketika arus elektrik melewatinya.</p> <p>Ke-empat lampu LED digunakan untuk mengidikasikan sebuah aktivitas didalam papan, penjelasnya setiap lampu sebagai berikut; 1. <code>ON</code> akan berwarna hijau yang mengindikasikan Arduino memiliki daya. 2. <code>RX</code>dan <code>TX</code> memberitahu kita data sedang ditransfer (menerima atau mengirim data dari papan). 3. <code>L</code> adalah lampu LED yang terkoneksi dengan digital PIN no 13. Digunakan untuk menguji apakah papan bekerja sesuai dengan yang kita inginkan.</p>"},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/#reset-button","title":"Reset button","text":"<p>Berguna untuk mereset program didalam Arduino atau menghentikannya secara total dengan menekan dalam beberapa waktu. Mereset program juga dapata dilakukan dengan cara menyambungkan kabel antara <code>reset pin</code> dan <code>GND</code>.</p>"},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/#membuat-led-berkedip","title":"Membuat LED berkedip","text":"<pre><code>// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n\n// the loop function runs over and over again forever\nvoid loop() {\n  digitalWrite(LED_BUILTIN, HIGH);   // turn the LED on (HIGH is the voltage level)\n  delay(100);                       // wait for a second\n  digitalWrite(LED_BUILTIN, LOW);    // turn the LED off by making the voltage LOW\n  delay(100);                       // wait for a second\n}\n</code></pre>"},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/#fungsi-setup","title":"Fungsi Setup","text":"<p><code>Setup</code> adalah fungsi pertama yang dibaca oleh program Arduino, dan fungsi tersebut hanya dijalankan satu kali saja. Tujuan untuk mempersiapkan perangkat Arduino, mengisi sebuah nilai atau properti kedalam papan arduino yang nilainya tidak akan berganti selama operasi berlanjut.</p>"},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/#pinmode","title":"PinMode","text":"<p><code>Fungsi</code>pinMode<code>mengkonfigurasi pin tertentu untuk masukan (menerima data) atau keluaran (mengirim data). Fungsi ini membutuhkan dua buah parameter. 1.</code>pin<code>: Nomor dari pin yang kita ingin atur. 2.</code>mode<code>: berisi nilai</code>INPUT<code>atau</code>OUTPUT`.</p> <p><pre><code>pinMode(LED_BUILTIN, OUTPUT);\n</code></pre> Berikut adalah implementasi penggunaan fungsi <code>pinMode</code> pada contoh blinK. <code>LED_BUILTIN</code> memberitahu sebuah fungsi kita ingin mengkontrol LED pada papan Arduino (yang tidandai dengan tanda L) dan menyetelnya mode pin tersebut ke <code>OUTPUT</code>.</p>"},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/#loop","title":"Loop","text":"<p><code>Loop</code> adalah sebuah fungsi yang berjalan terus menerus hingga tombol reset ditekan atau papan Arduino kehilangan tenaga. Berikut adalah penggunaan fungsi <code>Loop</code> pada contoh ini.</p> <pre><code>oid loop() {\n digitalWrite(LED_BUILTIN, HIGH); // turn the LED on (HIGH is the voltage level)\n delay(1000); // wait for a second\n digitalWrite(LED_BUILTIN, LOW); // turn the LED off by making the voltage LOW\n delay(1000); // wait for a second\n}\n</code></pre>"},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/#digitalwrite","title":"DigitalWrite","text":"<p>fungsi ini berguna untuk mengirim nilai digital ke sebuah pin. Sebagaimana yang telah dibahas sebelumnya, pin digital hanya mengerti dua kondisi; <code>on</code> atau <code>off</code>. Namun didalam kelistrikan dapat disamakan dengan <code>HIGH</code> atau <code>LOW</code>. Papan Arduino membutuhkan 5v untuk berjalan yang mana berasal dari sebuah USB atau suplai tenaga dari luar. Nilai <code>HIGHT</code> sama dengan <code>5v</code> dan <code>LOW</code> sama dengan <code>0V</code>. Fungsi ini membutuhkan dua parameter. 1. <code>pin</code>: Nama dari pin yang ingi diintegrasikan. 2. <code>value</code>: Nilainya dapat berupa <code>HIGHT</code> atau <code>LOW</code>.</p> <p>Maka fungsi berikut <code>digitalWrite(LED_BUILTIN, HIGH);</code> didalam bahasa inggri memberitahukan `kirim 5v ke papan Arduino yang ada LED didalamnya.</p>"},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/#delay","title":"Delay","text":"<p>Fungsi tersebut memberhentikan aktifias diluar rumahnya.</p>"},{"location":"Technology/Catatan%20Arduino/01.%20What%20is%20arduino/#blinking-bighter","title":"Blinking Bighter","text":"<p>Lampu LED yang ditandi dengan huruf <code>L</code> sebenarnya tersambung sebelum sebelum mencapai pin nomor 13. Papan Arduino awalan kita wajib menyediakan lampu LED sendiri (tidak ada lampu LED di papan). Namun kare lampu LED sangat penting dan berguna untuk debugging dan signaling, sekarang lampu LED ditambahkan secara permanen untuk membatu kita.</p> <p>Sekarang kita ingin menambahkan lampu LED eksternal kedalam papan Arduino. Jika kita lihat pada gambar lampu LED, kedua kakinya tidak sama, ada yang lebih panjang dan ada yang lebih pendek. Kaki yang lebih panjang dapat dikatakan anoda (+) dan kaki yang lebih pendek adalah <code>cathode atau nd</code>. Letakan anoda pada pin 13 dan cathode pada pin GND (ground). </p> <p>Sebagaimana yang telah dibahas sebelumnya, variabel <code>LED_BUILTIN</code> adalah variabel yang telah didefinisikan diawal yang mengacu ke LED pada papan. Karena LED dikendalikan oleh pin no 13, sangat memungkikan untuk mengedalikan komponen lain dengan menghubungkan ke pin no 13. Suplai voltase oleh semua pin dapat terlalu tinggi untuk kebanyakan lampu LED. Untungnya fitur lain dari pin no 13 adalah pin bawaan dan pull-down resistor. Resistor ini menahan LED kita tetap pada tegangan volt yang stabil dan memastika lampu LED memliki umur yang pangjang dalam penggunaanya.</p>"},{"location":"Technology/Catatan%20Arduino/02.%20Getting%20physical%20with%20arduino/","title":"Getting physical with arduino","text":"<p>Pada bagian ini kita akan menambah pemahaman tentang prototiping dan bagaimana cara menggunakan alat prototiping pada Arduino. Alat prototipe dapat digunakan untuk membuat sirkuit sementara dalam penambahan komponen baru, menguji sirkuit dan membuat prototipe sederhana. Pada bagian ini kita akan mengenali beberapa perlengkapan dan tekhnik yang dibutuhkan untuk membuat sirkuit dan ide prototipe.</p>"},{"location":"Technology/Catatan%20Arduino/02.%20Getting%20physical%20with%20arduino/#alat-yang-tepa-untuk-bekerja","title":"Alat yang tepa untuk bekerja","text":"<p>Prototiping adalah tentang mengeksplorasi ide-ide, yang mana hal tersebut adalah inti dari Arduino. Meskipun teori sangatlah penting, namun seringkali belajar akan lebih cepat dan efektif dari pengalaman.</p> <p>Pada seksi ini kita akan mengenali beberapa alat prototiping dan komponen yang dapat digunakan untuk membuat sebuah sirkuit.</p> <ol> <li>Breadboard</li> </ol> <p></p> <ol> <li>Jump wires</li> </ol> <p></p> <ol> <li>Multimeter</li> </ol> <p></p>"},{"location":"Technology/Catatan%20Arduino/02.%20Getting%20physical%20with%20arduino/#pembahasan-penting-tentang-listrik-dan-sirkuit","title":"Pembahasan penting tentang listrik dan sirkuit","text":"<p>Pada bagian ini kita akan membahas ilmu dasar dari litrik dan sirkuit</p>"},{"location":"Technology/Catatan%20Arduino/02.%20Getting%20physical%20with%20arduino/#mengenal-listrik","title":"Mengenal Listrik","text":"<p>Listrik adalah sebuah bentuk energi yang dihasilkan dari keadaan partikel bermuatan (elektron dan proton), baik secara statis sebagai akumulasi muatan atau dinamis sebagai arus.</p> <p>Definisi listri tersebut dideskripsikan listrik pada level atom (terkecil), yang mana akan lebih kompleks jika berhadapan dengan sirkuti pada Projek Arduino.</p> <p>Untuk mengetaui ide dari arus listrik, lihat gambar dibawah ini.</p> <p></p> <p>Pada rangkaian ini terdapat sumber tenaga listrik berupa baterai. Tenaga disuplai dalam watt dan terdiri dari tegangan (dalam volt) dan arus (dalam amp). Tegangan dan arus disuplai ke rangkaian melalui ujung positif (+) dari baterai.</p> <p>Kita menggunakan switch untuk mengatur tenagak ke sirukit (rangkaian). Switch dapat terbuka (open), yang mana akan memutus dan memberhentiikan arus listrik atau tertutup (close) yang mana akan menyambungkan arus listrik.</p> <p>Tenaga dapat digunakan untuk beberapa komponen atau tujuan. Pada gambar tersebut, rangkaian menyalurkan tenaga untuk menyala sebuah lampu LED. Baterai sebagai sumber energi atau tenaga mensuplai 4.5V, yang mana lebih dari cukup untuk menyalakan lampu LED. Jika LED disuplai dengan tenaga sebanyak tersebut akan muncul resiko lampu LED akan rusak, maka sebab itu kita membutuhkan kompenen lain, yaitu resistor yang berguna untuk menahan tegangan sebelum arus mengaliri lampu LED. Dan jika tegangan lebih rendah dari pada yang dibutuhkan oleh lampu LED, maka lampu LED tidak akan terang secara sempurna.</p> <p>Untu menyelesaikan rangkaian, tenaga harus kembali ke ground pada titik negatif (-) dari batre. Lampu LED menyerap arus (current) sebanyak yang dibutuhkan untuk menyalakan dirinya.</p> <p>Dengan menyerap arus listrik, lampu LED juga menahan flow, memastika hanya aliran yang dibutuhkan yang diserap. Kecuali aliran digunakan atau ditahan oleh komponen lainnya. Rangkaian menyerap aliran yang tersedia denga cepat. Ini dikenal dengan short circuit. Contoh dari short circuit adalah  menghubungkan positif secara langsung ke negatif tanpa ada komponen diantaranya.</p> <p>Prisip yang wajib dikuasai</p> <ul> <li> Sirkuit atau rangkaian</li> <li> Sirkuit membutuhkan daya atau tenaga sebelum mengembalikannya ke sumber daya.</li> <li> Jika sirkut yang dibuat tidak menggunakan tenaga yang teralirkan, maka daya tidak akan tahu pergi kemana dan dan merusak sirkuit tersebut. </li> <li> Cara termudah untuk berinteraksi dengan sirkuit adalah dengan memutusnya. Dengan mengontrol kapan dan di mana kekuatannya, Anda memiliki kontrol instan atas output.</li> </ul>"},{"location":"Technology/Catatan%20Arduino/02.%20Getting%20physical%20with%20arduino/#menggunakan-persamaan-untuk-membangun-sirkut-atau-rangakaian","title":"Menggunakan persamaan untuk membangun sirkut atau rangakaian","text":"Entitas Satuan Power (P) Watts Voltage (V) tegangan volts Current (I) arus ampers Resistance (R) hambatan ohms <p>Kempat entitas tersebut dapat ditentukan nilainya dan dimasukan kedalam sebuah persamaan sehingga dapat membuat sirkuit menjadi lebih seimbang dan bekerja dengan baik. Selanjut kita akan mebahas dua persamaan yang paling sering digunakan. <code>ohm's laws</code> &amp; <code>Joule's law</code>.</p>"},{"location":"Technology/Catatan%20Arduino/02.%20Getting%20physical%20with%20arduino/#ohms-law","title":"Ohm's Law","text":"<p>Apa gunanya ohm's law ini pada konteks arduino ?</p> <p>Digital pin yang ada pada arduino dapat mensuplai hingga 5V, ini adalah suplai tenaga yang biasa kita gunakan. Sebuah lampu LED biasanya membutuhkan 2V dan sekitar 30 milli ampers (30mA atau 0.03A).</p> <p>Jika kita memasang LED tersebut langsung pada power suplai maka akan terjadi koslet yang dapat menyebabkan lampu LED rusak. Untuk menghindari hal tersebut kita harus menambahkan resistor pada sirkuit tersebut.</p> <p>Merujuk pada ohm's law</p> <pre><code>R = V / I\n</code></pre> <p>Namun kita harus memasukan dua volatage yang berbeda, voltage dari power suplai (supply voltage) dan voltage yang dibutuhkan dari lampu LED (forward voltage). Forward voltage adalah istilah yang sering ditemukan dilembar data, terutama ketika mengacu pada diodes, menunjukan jumlah tegangan yang direkomendasi yang dapat diterima oleh komponen kearah yang dimaksudkan untuk mengalir. Untuk LED, arahnya dari anode ke cathode, dengan anode terhubung ke positif dan cathode menjadi negatif.</p> <p>Saat mengacu pada dioda non-pemancar cahaya , Anda menggunakan mereka untuk menahan aliran arus dalam arah yang berlawanan, dari katoda ke anoda. Dalam hal ini, istilahnya adalah tegangan balik, yang menunjukkan nilai dalam volt bahwa rangkaian harus melebihi arus yang mengalir melalui dioda.</p> <p>Pada kasus ini tegangan masing-masing ditandai dengan Vsupply dan Vforward. Persamaan Ohm's law membutuhkan tegangan melintasi resitor yang mana seimbang dengan Vsupply dikurangi dengan LED Vforward. atau  <pre><code>Vsupply - Vforward\n</code></pre> Sehingga persamaanya menjadi <pre><code>R = (Vsupply - Vforward) / I\n\nR = (5v - 2v) / 0.03A = 100\u03a9\n</code></pre> Hasil persamaan tersebut memberitahu kita bahwa kita membutuhkan 100-ohm resistor untuk menyalakan lampu LED. Berikut adalah ilustasi penggunaan resistor untuk menyalakan lampu LED. </p>"},{"location":"Technology/Catatan%20Arduino/02.%20Getting%20physical%20with%20arduino/#menghitung-power","title":"Menghitung Power","text":"<p>untuk menghitung power yang dikonsumsi oleh sirkuit dalam satua watss, kita dapat mengkalikan voltage dan current dari sirkuit. <pre><code>P = V * I\n\natau\n\nP = (Vsupply - Vforward) * I\n\nV = P / I\n\nI = P / V\n\n# Contoh lanjutan\n\nP = (5V - 2V) * 0.03A = 0.09 Watts\n</code></pre></p> <p>Persamaan ini sangatlah berguna, karena ada beberapa komponene seperti lampu bohlam, hanya menampilkan nilai power dan voltage. Dan Perhitungan ini sangat berguna jika Anda mencoba (atau gagal) untuk menjalankan perangkat yang haus daya, seperti lampu atau motor, lepas dari pin Arduino Anda. Arduino bertenaga USB mampu memasok arus 500mA, tetapi Arduino Uno hanya dapat memasok maksimum 40mA per pin dan total 200mA dari semua pin yang digunakan, yang tidak banyak sama sekali.</p>"},{"location":"Technology/Catatan%20Arduino/02.%20Getting%20physical%20with%20arduino/#diagram-sirkuit","title":"Diagram Sirkuit","text":"<p>Diagram sirkuit seperti peta dari sebuah perjalanan, menampilkan setiap koneksi dari komponen2 didalamnya.</p>"},{"location":"Technology/Catatan%20Arduino/02.%20Getting%20physical%20with%20arduino/#diagram-sirkuit-sederhana","title":"Diagram Sirkuit Sederhana","text":""},{"location":"Technology/Catatan%20Arduino/02.%20Getting%20physical%20with%20arduino/#resistor-color-chart","title":"Resistor Color Chart","text":"<p>Resistor sangatlah dibutuhkan pada projek arduino. Resistor sangatlah kecil sehingga sulit untuk menempelkan nilai resistensi pada resistor. Untuk itu, resisotr diberikan 4 warna yang dapat kita gunakan untuk mengetahui berapa nilai resistensi dari resistor tersebut. Berikut adalah bagan yang dapat kita gunakan untuk menghitung resistensi.</p> <p></p> <p>Contoh : </p> <p></p>"},{"location":"Technology/Catatan%20Arduino/03.%20Basic%20Sketches-input%20output%20and%20communication/","title":"Basic Sketches-input, output and communication","text":""},{"location":"Technology/Catatan%20Arduino/03.%20Basic%20Sketches-input%20output%20and%20communication/#pulse-width-modulation-pwm","title":"Pulse-Width Modulation (PWM)","text":"<p>Pada bagian pertama kita telah menyinggung tentag pulse-width modulation, yaitu salah satu tekhnik yang membuat arduino yang kita kenal sebagai mesin digital (digital device) bertingkat sebagai mesin analog (analog device). Sehingga arduino kita dapat mengirim nilai analog menggunakan teknik ini. Dengan PWM anda dapat membuat lampu LED menyela redup dan terang dari pada hanya mematikan dan menyalakan lampu.</p> <p>Beginilah cara kerjanya. Sebuah digital output selalu dalam kondisi mati atau menyala, <code>turn on</code> or <code>turn off</code>. Akan tetapi, digital output ini dapat berubah dari nyala dan mati serta kebalikannya dalam waktu yang sangat amat cepat (atas kehebatan dari silicon chips). Jika keluaran dari digital output menyala setengah dari waktu (on half the time) dan mati setengah dari waktu (off half the time) maka kondisi tersebut dapat di deskripsikan memiliki 50 duty cycle.</p> <p>Duty cycle adalah periode waktu dimana output dalam keadaan aktif, bisa dalam bentuk prosentase - 20 persen, 30 persen, 40 persen dan seterusnya. Misalkan outputnya adalah lampu LED, duty cycle memliki efek khusus, karena LED berkedip sangat cepat melebihi kemampuan mata dalam menangkapnya, lampu LED tersebut dengan daya 50 persen duty cyle terlihat seperti setengah bersinar. </p> <p>Contoh lain adalah DC motor, 50 persen dari duty cycle akan berdampak pada kecepatan motor sebesar 60 persen. Dengan demikian, Pulse Widh Modultaion dapat mengatur kecepatan dari sebuah motor dengan memompanya (pulsing) dengan kecepatan yang sanga ceoat.</p> <p>Jadi meskipun PWM adalah sebuah digitan function, pwm disebut sebagai analogWrite karena dari efek yang dirasakan itu pada komponen lain (modul).</p>"},{"location":"Technology/Catatan%20Arduino/03.%20Basic%20Sketches-input%20output%20and%20communication/#led-fade-sketch","title":"LED Fade Sketch","text":"<p>Pada saat ini insyaAllah kita akan membuat lampu led yang memudar dan menyalan dalam waktu tertentu. Ada beberapa alat yang dibutuhkan.</p> <ol> <li>Arduino Uno</li> <li>Lampu LED</li> <li>Beardboard</li> <li>Resistor</li> <li>Jump wires</li> </ol> <p>Dibawah ini adalah layout sirkuit untuk membuat sketsan ini. Sirkuti dibawah ini simple, mirip dengan sketas blinking LED, bedanya, sketsa ini menggunakan analog output PWM nomor 9. Maka dari itu perlu menggunakan resistor untuk mengatur jumlah arus (current).</p> <p>Info</p> <p>Pin 13 pada papan Arduino sudah tertanam resistor.</p> <p></p> <p>Pada gambar diatas, jumpware yang panjang menghubungkan <code>pin 9</code> (Analog Output) degan beardboard yang menyabung juga dengan lampu LED. Selanjutnya, sirkuit diteruskan dengan menanam resistor<sup>1</sup> lalu berlanjut dengan jumpwire kedua kearah pin ground <code>GND</code>.</p> Penggunaan resistor yang tepat <p>Kita harus tepat dalam menggunakan resistor pada cirkuti yang dibangun dengan tujuan agar arus yang diterima oleh komponen cukup, tidak kurang yang menyebabkan daya kerja komponen berkurang atau tidak lebih yang membuat komponen tersebut rusak karena arusnya yang terlalu besar. Anda harus dapat menentukan resistor mana yang tepat dengan menggunakan persamaan ohm laws. Niali dari persamaan tersebut dapat anda gunakan untuk menetukan resistor mana yang dipakai. Penentua tersebut dapat dilihat pada gambar pada bagian catatan Resistor Color Chart </p> <p>Pada sirkuit yang dibangun ini, arduino menerima tegangan sebesar 5 volt dan daya yang dapat ditampung oleh LED sekitar 2.1 volt maka dibutuhkan resistor untuk melindungi komponen LED ini. Lampu LED membutuhkan arus (current) dengan nilai maksimal 25mA (25 milli ampers) dengan demikian kita dapat mengetahui jumlah hambatan yang seharusnya.</p> \\[ R = \\frac{(V_Supply - V_LED)}{I} = \\frac{(5 - 2.1)}{0.025} = 116 ohms \\] <p>Jadi kita dapat menggunakan resistor dengan nilai terdekat yaitu 120 ohms, yaitu resistor dengan warna <code>brown red brown</code>. Jika anda tidak memilikinya anda juga dapat menggunakn resistor yang lebih tinggai. Resistor yang lebih tinggi tersebut semakin banyaj menahan daya (voltage) yg menyebabkan arus yg diterima LED lebih sedikit. Namun lampu LED anda tetap aman.</p> <p>Sekarang pasang semua komponen yang dibutuhkan menggunakan jumpwire, setelah terpasang selanjutnya akan diupload script untuk menayala dan redupkan lampu LED.</p> <p>Perhatian</p> <p>Dalam memasang setiap komponen pada sirkui. Sangat disaranakan mengikuti standar yang disaranakan. Seperti penggunaan kabel jumpwire untuk power menggunakan warna merah dan ground menggunakan warna hitam. Atau terkadang dapat ditemui juga penghubung kabel power menggunakan warna putih dan ground menggunakan warna hitam. Ada tipe lainya juga yang insyaAllah akan ada dicatatan ini yaitu signal wire yang di khusukan untuk kabel yang mengatur arus masuk dan keluar sinyal elektrik antara arduino dan komponen lainnya. Untuk signal wire menggunakan warna lain selain warna yang digunakan untuk power dan ground.    </p> <p>Untuk script Led fade sudah tersedia pada Arduino IDE, anda dapat menuju ke menu <code>File -&gt; Examples -&gt; Basic -&gt; Fade</code></p> Script LED fade<pre><code>/*\n  Fade\n\n  This example shows how to fade an LED on pin 9 using the analogWrite()\n  function.\n\n  The analogWrite() function uses PWM, so if you want to change the pin you're\n  using, be sure to use another PWM capable pin. On most Arduino, the PWM pins\n  are identified with a \"~\" sign, like ~3, ~5, ~6, ~9, ~10 and ~11.\n\n  This example code is in the public domain.\n\n  https://www.arduino.cc/en/Tutorial/BuiltInExamples/Fade\n*/\n\nint led = 9;           // the PWM pin the LED is attached to\nint brightness = 0;    // how bright the LED is\nint fadeAmount = 5;    // how many points to fade the LED by\n\n// the setup routine runs once when you press reset:\nvoid setup() {\n  // declare pin 9 to be an output:\n  pinMode(led, OUTPUT);\n}\n\n// the loop routine runs over and over again forever:\nvoid loop() {\n  // set the brightness of pin 9:\n  analogWrite(led, brightness);\n\n  // change the brightness for next time through the loop:\n  brightness = brightness + fadeAmount;\n\n  // reverse the direction of the fading at the ends of the fade:\n  if (brightness &lt;= 0 || brightness &gt;= 255) {\n    fadeAmount = -fadeAmount;\n  }\n  // wait for 30 milliseconds to see the dimming effect\n  delay(30);\n}\n</code></pre>"},{"location":"Technology/Catatan%20Arduino/03.%20Basic%20Sketches-input%20output%20and%20communication/#understanding-led-fade-sketch","title":"Understanding LED fade sketch","text":"<p>Dibagian ini akan dibahas bagaimana lampu LED dapat menyala redup dan terang.</p> <p>Pada kalimat yang dikomen pada script diatas dikatakan ada sebuah fungsi dengan nama <code>analogWrite()</code> yang menggunakan Puls-width modulation yang mana pada script ini menggunakan pin nomor 9 yang membuat lampu LED menyala dan meredup.</p> <p>Setelah komen tersebut terdapat tiga deklarasi dan assignment pada variabel yang mana nantinya varibel ini akan digunakan.</p> <pre><code>...\nint led = 9;           // the PWM pin the LED is attached to\nint brightness = 0;    // how bright the LED is\nint fadeAmount = 5;    // how many points to fade the LED by\n...\n</code></pre> <p>Lalu selanjutnya pada fungsi setup(), pin nomor 9 di tetapkan menjadi pin keluaran (output) digital ouput.</p> <pre><code>// the setup routine runs once when you press reset:\nvoid setup() {\n  // declare pin 9 to be an output:\n  pinMode(led, OUTPUT);\n}\n</code></pre> <p>Setelah ditetapkan pin untuk digital ouput, maka selanjutnya dilakukan perulangan pada fungsi <code>loop()</code> untuk mengeluarkan nilai analog dalam bentuk sinyal listrik melalui fungsi <code>analogWrite()</code> yang membuat lampu menyela dengan kondisi dibawah nya yang merubah nilai dari variable <code>brightness</code> yang juga menentukan tegangan (voltage) listrik yang dikeluarkan pada PIN 9 dalam bentuk sinyal analog. Perulang ini terus berlanjut hingga mesin arduion di matikan atau di reset.</p> <pre><code>// the loop routine runs over and over again forever:\nvoid loop() {\n// set the brightness of pin 9:\nanalogWrite(led, brightness);\n// change the brightness for next time through the loop:\nbrightness = brightness + fadeAmount;\n// reverse the direction of the fading at the ends of the fade:\nif (brightness &lt;= 0 || brightness &gt;= 255) {\nfadeAmount = -fadeAmount;\n}\n// wait for 30 milliseconds to see the dimming effect\ndelay(30);\n}\n</code></pre> <p>fungsi <code>analogWrite()</code> dapat mengirim nilai dalam rentan 0 - 255 ke PWM pin pada arduiono. Nilai 0 setara dengan 0v dan 255 setara dengan 5v dan nilai diataran 0 dan 255 senilai dengan proposional. Maka itulah lampu LED diatas nyala terang dan redup karena nilai variable <code>brightness</code> yang dinamis dan menjadi parameter fungsi <code>analogWrite</code>.</p>"},{"location":"Technology/Catatan%20Arduino/03.%20Basic%20Sketches-input%20output%20and%20communication/#another-fade-sketch","title":"Another fade sketch","text":"<p>Lihat script dibawah ini Example -&gt; analog -&gt; fade<pre><code>/*\n  Fading\n\n  This example shows how to fade an LED using the analogWrite() function.\n\n  The circuit:\n  - LED attached from digital pin 9 to ground through 220 ohm resistor.\n\n  created 1 Nov 2008\n  by David A. Mellis\n  modified 30 Aug 2011\n  by Tom Igoe\n\n  This example code is in the public domain.\n\n  https://www.arduino.cc/en/Tutorial/BuiltInExamples/Fading\n*/\n\nint ledPin = 9;    // LED connected to digital pin 9\n\nvoid setup() {\n  // nothing happens in setup\n}\n\nvoid loop() {\n  // fade in from min to max in increments of 5 points:\n  for (int fadeValue = 0 ; fadeValue &lt;= 255; fadeValue += 5) {\n    // sets the value (range from 0 to 255):\n    analogWrite(ledPin, fadeValue);\n    // wait for 30 milliseconds to see the dimming effect\n    delay(30);\n  }\n\n  // fade out from max to min in increments of 5 points:\n  for (int fadeValue = 255 ; fadeValue &gt;= 0; fadeValue -= 5) {\n    // sets the value (range from 0 to 255):\n    analogWrite(ledPin, fadeValue);\n    // wait for 30 milliseconds to see the dimming effect\n    delay(30);\n  }\n}\n</code></pre></p> <p>Berbeda dengan script LED fade sebelumnya, script ini jauh lebih efesien. Didalam script ini menggunakan for loop didalam fungsi <code>void loop()</code> dan pengguna varibel yang menentukan tingkat kecerahan berada didalam for loop itu sendiri.</p>"},{"location":"Technology/Catatan%20Arduino/03.%20Basic%20Sketches-input%20output%20and%20communication/#button-sketch","title":"Button Sketch","text":"Example -&gt; digital -&gt; button<pre><code>/*\n  Button\n\n  Turns on and off a light emitting diode(LED) connected to digital pin 13,\n  when pressing a pushbutton attached to pin 2.\n\n  The circuit:\n  - LED attached from pin 13 to ground through 220 ohm resistor\n  - pushbutton attached to pin 2 from +5V\n  - 10K resistor attached to pin 2 from ground\n\n  - Note: on most Arduinos there is already an LED on the board\n    attached to pin 13.\n\n  created 2005\n  by DojoDave &lt;http://www.0j0.org&gt;\n  modified 30 Aug 2011\n  by Tom Igoe\n\n  This example code is in the public domain.\n\n  https://www.arduino.cc/en/Tutorial/BuiltInExamples/Button\n*/\n\n// constants won't change. They're used here to set pin numbers:\nconst int buttonPin = 2;     // the number of the pushbutton pin\nconst int ledPin =  13;      // the number of the LED pin\n\n// variables will change:\nint buttonState = 0;         // variable for reading the pushbutton status\n\nvoid setup() {\n  // initialize the LED pin as an output:\n  pinMode(ledPin, OUTPUT);\n  // initialize the pushbutton pin as an input:\n  pinMode(buttonPin, INPUT);\n}\n\nvoid loop() {\n  // read the state of the pushbutton value:\n  buttonState = digitalRead(buttonPin);\n\n  // check if the pushbutton is pressed. If it is, the buttonState is HIGH:\n  if (buttonState == HIGH) {\n    // turn LED on:\n    digitalWrite(ledPin, HIGH);\n  } else {\n    // turn LED off:\n    digitalWrite(ledPin, LOW);\n  }\n}\n</code></pre> <ol> <li> <p>Pada sirkuti ini resistor dapat ditempatkan sebelum atau sesudah lampu LED.\u00a0\u21a9</p> </li> </ol>"},{"location":"Technology/Catatan%20Git/","title":"Preface Git and Github","text":""},{"location":"Technology/Catatan%20Git/#kembali-ke-commit-tertentu","title":"Kembali ke commit tertentu","text":"<p>This depends a lot on what you mean by \"revert\".</p>"},{"location":"Technology/Catatan%20Git/#temporarily-switch-to-a-different-commit","title":"Temporarily switch to a different commit","text":"<p>If you want to temporarily go back to it, fool around, then come back to where you are, all you have to do is check out the desired commit:</p> <pre><code># This will detach your HEAD, that is, leave you with no branch checked out:\ngit checkout 0d1d7fc32\n</code></pre> <p>Or if you want to make commits while you're there, go ahead and make a new branch while you're at it:</p> <pre><code>git checkout -b old-state 0d1d7fc32\n</code></pre> <p>To go back to where you were, just check out the branch you were on again. (If you've made changes, as always when switching branches, you'll have to deal with them as appropriate. You could reset to throw them away; you could stash, checkout, stash pop to take them with you; you could commit them to a branch there if you want a branch there.)</p>"},{"location":"Technology/Catatan%20Git/#hard-delete-unpublished-commits","title":"Hard delete unpublished commits","text":"<p>If, on the other hand, you want to really get rid of everything you've done since then, there are two possibilities. One, if you haven't published any of these commits, simply reset:</p> <pre><code># This will destroy any local modifications.\n# Don't do it if you have uncommitted work you want to keep.\ngit reset --hard 0d1d7fc32\n\n# Alternatively, if there's work to keep:\ngit stash\ngit reset --hard 0d1d7fc32\ngit stash pop\n# This saves the modifications, then reapplies that patch after resetting.\n# You could get merge conflicts, if you've modified things which were\n# changed since the commit you reset to.\n</code></pre> <p>If you mess up, you've already thrown away your local changes, but you can at least get back to where you were before by resetting again.</p>"},{"location":"Technology/Catatan%20Git/#undo-published-commits-with-new-commits","title":"Undo published commits with new commits","text":"<p>On the other hand, if you've published the work, you probably don't want to reset the branch, since that's effectively rewriting history. In that case, you could indeed revert the commits. In many enterprise organisations, the concept of \"protected\" branches will even prevent history from being rewritten on some major branches. In this case, reverting is your only option.</p> <p>With Git, revert has a very specific meaning: create a commit with the reverse patch to cancel it out. This way you don't rewrite any history.</p> <p>First figure out what commits to revert. Depending on the technique chosen below, you want to either revert only the merge commits, or only the non-merge commits.</p> <pre><code># This lists all merge commits between 0d1d7fc and HEAD:\ngit log --merges --pretty=format:\"%h\" 0d1d7fc..HEAD | tr '\\n' ' '\n\n# This lists all non merge commits between 0d1d7fc and HEAD:\ngit log --no-merges --pretty=format:\"%h\" 0d1d7fc..HEAD | tr '\\n' ' '\n</code></pre> <pre><code># This will create three separate revert commits, use non merge commits only:\ngit revert a867b4af 25eee4ca 0766c053\n\n# It also takes ranges. This will revert the last two commits:\ngit revert HEAD~2..HEAD\n\n#Similarly, you can revert a range of commits using commit hashes (non inclusive of first hash):\ngit revert 0d1d7fc..a867b4a\n\n# Reverting a merge commit. You can also use a range of merge commits here.\ngit revert -m 1 &lt;merge_commit_sha&gt;\n\n# To get just one, you could use `rebase -i` to squash them afterwards\n# Or, you could do it manually (be sure to do this at top level of the repo)\n# get your index and work tree into the desired state, without changing HEAD:\ngit checkout 0d1d7fc32 .\n\n# Then commit. Be sure and write a good message describing what you just did\ngit commit\n</code></pre> <p>The <code>git-revert</code> manpage actually covers a lot of this in its description. Another useful link is this git-scm.com section discussing git-revert.</p> <p>If you decide you didn't want to revert after all, you can revert the revert (as described here) or reset back to before the revert (see the previous section).</p> <p>You may also find this answer helpful in this case: https://stackoverflow.com/questions/34519665/how-to-move-head-forward-checkout-revet-reflog-reset/34519716#34519716</p>"},{"location":"Technology/Catatan%20Graphql/","title":"Preface Grapql","text":"<p>Bismillah dengan menyebut nama Allah</p>"},{"location":"Technology/Catatan%20Graphql/#pembukaan","title":"Pembukaan","text":"<p>Dari Abu Hurairah, Rasulullah -shallallahu \u2018alaihi wa sallam- bersabda,</p> <p>\u0627\u0644\u0652\u0645\u064f\u0624\u0652\u0645\u0650\u0646\u064f \u0627\u0644\u0652\u0642\u064e\u0648\u0650\u0649\u0651\u064f \u062e\u064e\u064a\u0652\u0631\u064c \u0648\u064e\u0623\u064e\u062d\u064e\u0628\u0651\u064f \u0625\u0650\u0644\u064e\u0649 \u0627\u0644\u0644\u0651\u064e\u0647\u0650 \u0645\u0650\u0646\u064e \u0627\u0644\u0652\u0645\u064f\u0624\u0652\u0645\u0650\u0646\u0650 \u0627\u0644\u0636\u0651\u064e\u0639\u0650\u064a\u0641\u0650 \u0648\u064e\u0641\u0650\u0649 \u0643\u064f\u0644\u0651\u064d \u062e\u064e\u064a\u0652\u0631\u064c \u0627\u062d\u0652\u0631\u0650\u0635\u0652 \u0639\u064e\u0644\u064e\u0649 \u0645\u064e\u0627 \u064a\u064e\u0646\u0652\u0641\u064e\u0639\u064f\u0643\u064e \u0648\u064e\u0627\u0633\u0652\u062a\u064e\u0639\u0650\u0646\u0652 \u0628\u0650\u0627\u0644\u0644\u0651\u064e\u0647\u0650 \u0648\u064e\u0644\u0627\u064e \u062a\u064e\u0639\u0652\u062c\u0650\u0632\u0652 \u0648\u064e\u0625\u0650\u0646\u0652 \u0623\u064e\u0635\u064e\u0627\u0628\u064e\u0643\u064e \u0634\u064e\u0649\u0652\u0621\u064c \u0641\u064e\u0644\u0627\u064e \u062a\u064e\u0642\u064f\u0644\u0652 \u0644\u064e\u0648\u0652 \u0623\u064e\u0646\u0651\u0650\u0649 \u0641\u064e\u0639\u064e\u0644\u0652\u062a\u064f \u0643\u064e\u0627\u0646\u064e \u0643\u064e\u0630\u064e\u0627 \u0648\u064e\u0643\u064e\u0630\u064e\u0627. \u0648\u064e\u0644\u064e\u0643\u0650\u0646\u0652 \u0642\u064f\u0644\u0652 \u0642\u064e\u062f\u064e\u0631\u064f \u0627\u0644\u0644\u0651\u064e\u0647\u0650 \u0648\u064e\u0645\u064e\u0627 \u0634\u064e\u0627\u0621\u064e \u0641\u064e\u0639\u064e\u0644\u064e \u0641\u064e\u0625\u0650\u0646\u0651\u064e \u0644\u064e\u0648\u0652 \u062a\u064e\u0641\u0652\u062a\u064e\u062d\u064f \u0639\u064e\u0645\u064e\u0644\u064e \u0627\u0644\u0634\u0651\u064e\u064a\u0652\u0637\u064e\u0627\u0646\u0650</p> <p>\u201cMukmin yang kuat lebih baik dan lebih dicintai oleh Allah daripada mukmin yang lemah. Namun, keduanya tetap memiliki kebaikan. Bersemangatlah atas hal-hal yang bermanfaat bagimu. Minta tolonglah pada Allah, jangan engkau lemah. Jika engkau tertimpa suatu musibah, maka janganlah engkau katakan: \u2018Seandainya aku lakukan demikian dan demikian.\u2019 Akan tetapi hendaklah kau katakan: \u2018Ini sudah jadi takdir Allah. Setiap apa yang telah Dia kehendaki pasti terjadi.\u2019 Karena perkataan law (seandainya) dapat membuka pintu syaithon.\u201d</p> <p>(HR. Muslim)</p> Amanah dan Kuat <p>Kriteria-Kriteria Memilih Pekerja dan Pegawai</p> <p>Landasan dalam memilih seorang pegawai atau pekerja hendaklah ia seorang yang kuat lagi amanah. Karena dengan kekuatan ia sanggup melaksanakan pekerjaan yang diembankan kepadanya, dan dengan amanah ia menunaikan sesuai dengan tugas dan tanggung jawabnya. Dengan amanah ia akan meletakkan perkara-perkara pada tempatnya. Dan dengan kekuatan ia sanggup menunaikan kewajibannya.</p> <p>Allah telah memberitakan tentang salah seorang putri penduduk Madyan bahwasanya ia berkata kepada bapaknya tatkala Musa mengambilkan air untuk keduanya.</p> <p>\u0642\u064e\u0627\u0644\u064e\u062a\u0652 \u0625\u0650\u062d\u0652\u062f\u064e\u0627\u0647\u064f\u0645\u064e\u0627 \u064a\u064e\u0627 \u0623\u064e\u0628\u064e\u062a\u0650 \u0627\u0633\u0652\u062a\u064e\u0623\u0652\u062c\u0650\u0631\u0652\u0647\u064f \u06d6 \u0625\u0650\u0646\u0651\u064e \u062e\u064e\u064a\u0652\u0631\u064e \u0645\u064e\u0646\u0650 \u0627\u0633\u0652\u062a\u064e\u0623\u0652\u062c\u064e\u0631\u0652\u062a\u064e \u0627\u0644\u0652\u0642\u064e\u0648\u0650\u064a\u0651\u064f \u0627\u0644\u0652\u0623\u064e\u0645\u0650\u064a\u0646\u064f</p> <p>\u201cYa bapakku, ambillah ia sebagai orang yang bekerja kepada kita. Karena sesungguhnya orang yang paling baik yang kamu ambil untuk bekerja (pada kita) ialah orang yang kuat lagi dapat dipercaya\u201d [Al-Qashash/28:26]</p> <p>Dan Allah berfirman tentang Ifrit dari bangsa Jin yang mengutarakan kesanggupannya kepada Sulaiman Alaihissalam untuk mendatangkan singgasana Balqis.</p> <p>\u0642\u064e\u0627\u0644\u064e \u0639\u0650\u0641\u0652\u0631\u0650\u064a\u062a\u064c \u0645\u0650\u0651\u0646\u064e \u0627\u0644\u0652\u062c\u0650\u0646\u0650\u0651 \u0623\u064e\u0646\u064e\u0627 \u0622\u062a\u0650\u064a\u0643\u064e \u0628\u0650\u0647\u0650 \u0642\u064e\u0628\u0652\u0644\u064e \u0623\u064e\u0646 \u062a\u064e\u0642\u064f\u0648\u0645\u064e \u0645\u0650\u0646 \u0645\u0651\u064e\u0642\u064e\u0627\u0645\u0650\u0643\u064e \u06d6 \u0648\u064e\u0625\u0650\u0646\u0650\u0651\u064a \u0639\u064e\u0644\u064e\u064a\u0652\u0647\u0650 \u0644\u064e\u0642\u064e\u0648\u0650\u064a\u0651\u064c \u0623\u064e\u0645\u0650\u064a\u0646\u064c</p> <p>\u201cAku akan datang kepadamu dengan membawa singgasana itu kepadamu sebelum kamu berdiri dari tempat dudukmu ; sesungguhnya aku benar-benar kuat untuk membawanya lagi dapat dipercaya\u201d [An-Naml/27:39]</p> <p>Maknanya, ia menggabungkan antara kemampuannya untuk membawa dan mendatangkannya serta menjaga apa yang dibawanya.</p> <p>Allah juga telah menceritakan tentang Yusuf Alaihissalam bahwasanya ia berkata kepada raja.</p> <p>\u0642\u064e\u0627\u0644\u064e \u0627\u062c\u0652\u0639\u064e\u0644\u0652\u0646\u0650\u064a \u0639\u064e\u0644\u064e\u0649\u0670 \u062e\u064e\u0632\u064e\u0627\u0626\u0650\u0646\u0650 \u0627\u0644\u0652\u0623\u064e\u0631\u0652\u0636\u0650 \u06d6 \u0625\u0650\u0646\u0650\u0651\u064a \u062d\u064e\u0641\u0650\u064a\u0638\u064c \u0639\u064e\u0644\u0650\u064a\u0645\u064c</p> <p>\u201cJadikanlahlah aku bendaharawan negara (Mesir). Sesungguhnya aku adalah orang yang pandai menjaga lagi berpengetahuan\u201d [Yusuf/12:55] Referensi : https://almanhaj.or.id/13821-bagaimana-menjadi-pegawai-yang-amanah.html</p> <p>Maka dari itu, selain kita menanamkan pada diri kita bahwa amanah itu adalah tanggung jawab yang berat dan menjadi salah satu faktor bahwa seorang pekerja tersebut baik maka kita juga perlu memperkuat diri kita dengan menambah ilmu-ilmu baru yang bermanfaat bagi kita.</p> <p>Semoga Allah mudahkan ilmu ini bagi kita, Aamiin...</p>"},{"location":"Technology/Catatan%20Graphql/#graphql-x-spring-boot","title":"Graphql x Spring Boot","text":"<p>Pada catatan kali ini saya bersumber dari Youtube Untuk soruce code pada catatan ini dapat diclone di </p>"},{"location":"Technology/Catatan%20Graphql/#what-is-graphql","title":"What is GraphQL","text":"<ul> <li>Sebuah bahasa query dari Application Programming Interface</li> <li>Dikembangkan oleh Meta pada tahun 2012 dan pada tahun 2015 menjadi sumber daya terbuka (Open Source)</li> </ul>"},{"location":"Technology/Catatan%20Graphql/#mengapa-menggunakan-gtaphql","title":"Mengapa menggunakan GtaphQL","text":"<ul> <li>Efesiensi pengambilan data</li> <li>Skema data yang kuat</li> <li>Tidak perlu lagi pembuatan versi API ketika ada perubahan pada sisi backend (karena engguna yang menentukan ingin mengambil field apa saja)</li> </ul>"},{"location":"Technology/Catatan%20Graphql/#graphql-v-rest","title":"Graphql V REST","text":"Fitur GraphQL REST Date fetching Client yang menentukan struktur server yang menentukan struktur Over fetching or  under fetching Client dapat menentukan data apa saja yang dapat dibutuhkan Bisa over atau under tergantung balikan dari server Endpoint Single endpoint multiple endpoint Versioning Tidak perlu versioning Perlu ada-nya pem versian jika ada perubahan service, misalkan <code>api/v2/getdata</code> dan <code>aoi/v3/getdata</code> payload size minimal payload Terkadang mengirim data atau menerima data yang tidak diperlukan"},{"location":"Technology/Catatan%20Graphql/#setup-awalan-graphql","title":"Setup awalan grapHQL","text":"<p>Dibawah ini adalah depedency standar untuk menggunakan Spring dan GraphQL</p> <p>pom.xml</p> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-graphql&lt;/artifactId&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n&lt;/dependency&gt;\n</code></pre>"},{"location":"Technology/Catatan%20Graphql/#ayo-mulai","title":"Ayo mulai","text":"<p>Dalam menggunakan graphQL kita harus membuat sebuah schema yang mana representasi dari objek yang dapat kita ambil dari sebuah service. Schema adalah sebuah file yang berisikan struktur yang dapat di query oleh client termasuk semua field dan sub field.</p> <p>Code github</p> <p>Clone branch Pertama pada repository https://github.com/muhammadfarras/Learn-Graphql</p>"},{"location":"Technology/Catatan%20Graphql/#membuat-schema","title":"Membuat Schema","text":"<p>Buat file dengan nama <code>schema.graphqls</code> pada path <code>/resources/graphql/schema.graphqls</code></p> <p>Code</p> schema.graphqls <pre><code>type Query {\n    books:[Book] ## will return list of type Book\n}\n\ntype Book {\n    id:ID\n    name:String\n    pageCount:Int\n}\n</code></pre>"},{"location":"Technology/Catatan%20Graphql/#buat-object-java","title":"Buat object java","text":"<p>Selanjutnya buat sebuah object java (kotlin) yang memiliki struktur yg sama dengan schema yang telah kita buat sebelumnya</p> <p>Code</p> com.farras.LearnGraphql.model <pre><code>data class Book(\n        var id:Int, \n        var name:String, \n        var pageCount:Int\n    )\n</code></pre>"},{"location":"Technology/Catatan%20Graphql/#membuat-controller","title":"Membuat controller","text":"<p>Seperti REST API, Spring Boot menawarkan anotasi <code>@Controller</code> untuk mengimplementasi GraphQL. Spring Boot akan membaca anotasi <code>@Controller</code> dan akan meregister handler method didalamnya seperti <code>@QueryMapping</code> atau <code>@SchemaMapping</code> (kedua anotasi tersebut disebut dengan DataFetcher/Resolver)<sup>1</sup>.</p> <p>DataFetcher atau Resolfer sendiri bertanggungjawab mengisi data untuk field tunggal didalam schema GraphQL.</p> <p>Code</p> com/farras/LearnGraphql/controllers/BookController <pre><code>@Controller\nclass BookController {\n\n    @QueryMapping\n    fun books():List&lt;Book&gt;{\n        return  Book.books\n    }\n}\n</code></pre>"},{"location":"Technology/Catatan%20Graphql/#lets-start-the-first-testing","title":"Lets start the first testing","text":"<p>Jalankan spring boot lalu menuju ke url berikut <code>http://localhost:8080/graphiql</code>, selanjutnya akan tampil browers tool untuk menguji graphql kita.</p> Image <p></p> <p>sebagai acuan utama dalam belajar ada baiknya untuk merujuk ke sumber asli GraphQL</p> <p>Added Note</p> <p>GraphQL menyedikan fitur documentatione explorer, disini kita dapat melihat schema dan filed dari setiap schema.</p> <p></p> <p>Code</p> Example 1Example 2 <pre><code>{\n    books {\n        id\n        name\n        pageCount\n    }\n}\n</code></pre> Output<pre><code>{\n    \"data\": {\n        \"books\": [\n        {\n            \"id\": \"1\",\n            \"name\": \"Al Quran\",\n            \"pageCount\": 656\n        }\n        ]\n    }\n}\n</code></pre> <p>Jika kita memisahkan field yg sama menjadi beberapa bagian, GraphQL akan menggabungkannya menjadi satu response JSON</p> <pre><code>{\n    books {\n        id\n    }\n    books {\n        name\n        pageCount\n    }\n}\n</code></pre> Output<pre><code>{\n    \"data\": {\n        \"books\": [\n        {\n            \"id\": \"1\",\n            \"name\": \"Al Quran\"\n        },\n        {\n            \"id\": \"2\",\n            \"name\": \"Pytorch\"\n        },\n        {\n            \"id\": \"3\",\n            \"name\": \"Machine Learning using TensorFlow\"\n        }\n        ]\n    }\n}\n</code></pre>"},{"location":"Technology/Catatan%20Graphql/#another-example","title":"Another example","text":"<p>Selain mengambil seluruh data, kita juga dapat mendefinisikan DataFetcher untuk mengambil sebuah value dari sebuah request lalu mengambelikan value berdasarkan value yang diterima. </p> <p>Code github</p> <p>Clone branch Kedua pada repository https://github.com/muhammadfarras/Learn-Graphql</p>"},{"location":"Technology/Catatan%20Graphql/#menambah-query-pada-schema","title":"Menambah query pada schema","text":"<p>Sekarang kita akan mendefinisikan query yang menerima parameter <code>id</code> dengan tipe integer dan mengembalikan type <code>Book</code>. </p> <p>Code</p> schema.graphqls <pre><code>type Query {\n    books:[Book] ## will return list of type Book\n    booksById ## Menerima parameter id(integer) return value book\n}\n\ntype Book {\n    id:ID\n    name:String\n    pageCount:Int\n}\n</code></pre>"},{"location":"Technology/Catatan%20Graphql/#setup-the-model","title":"Setup the model","text":"<p>Selanjutnya kita buat dummy model untuk mengambil objek buku dengan filter id.</p> <p>Code</p> com.farras.LearnGraphql.model <pre><code>data class Book(var id:Int,\n   var name:String,\n   var pageCount:Int){\n\n    companion object {\n\n        // ... Dihaus agar tidak menuhin catatan\n        fun booksById(idBook:Int):Book?{\n            return books.stream().filter{it.id == idBook}\n                .findFirst()\n                .orElse(null)\n        }\n    }\n}\n</code></pre>"},{"location":"Technology/Catatan%20Graphql/#back-to-the-controller","title":"Back to the controller","text":"<p>Mari kita panggil paramter yg diterima oleh data fetcher dan teruskan ke model yg sudah kita buat diatas. Untuk menerima argumen kita harus menambahkan anotasi <code>@Argument</code> pada parameter controller.</p> <p>Added Note</p> <p>Additionally, if you keep the method name as same as the <code>field</code> name then you can omit the field from @SchemaMapping. Namun penggunaan <code>@QueryMapping</code> adalah yang paling disaranakan. Dimana kita tidak perlu mendifinisikan anotasi <code>typeName</code> atau <code>field</code>.</p> <p>Code</p> com/farras/LearnGraphql/controllers/BookController <pre><code>@Controller\nclass BookController {\n    // .... \n    @SchemaMapping(typeName = \"Query\", field = \"bookById\")\n    fun getBookById(@Argument id:Int):Book?{\n        println(\"Called ${id}\")\n        return Book.booksById(id)\n    }\n}\n</code></pre>"},{"location":"Technology/Catatan%20Graphql/#lets-start-the-another-testing","title":"Lets start the another testing","text":"<p>Jalankan spring boot lalu menuju ke url berikut <code>http://localhost:8080/graphiql</code>, </p> <p>Code</p> Example 1Example (Using alias) <pre><code>{\n    books {\n        id\n        name\n    }\n    bookById(id:1){\n        id\n    }\n}\n</code></pre> Output<pre><code>{\n    \"data\": {\n        \"books\": [\n        {\n            \"id\": \"1\",\n            \"name\": \"Al Quran\"\n        },\n        {\n            \"id\": \"2\",\n            \"name\": \"Pytorch\"\n        },\n        {\n            \"id\": \"3\",\n            \"name\": \"Machine Learning using TensorFlow\"\n        }\n        ],\n        \"bookById\": {\n        \"id\": \"1\"\n        }\n    }\n}\n</code></pre> <p>Jika kita memanggil query menggunakan nama field yg sama, katakan kita ingin mengambil value menggunakan field <code>booksById</code> namun dengan parameter yg berbeda. Maka kita akan mendapatkan error Validation error (FieldsConflict) : 'bookById' : fields have different arguments. Untuk itu kita dapat menggunakan Aliases yaitu dengan syntax <code>[alias name]:field_name</code>. More detail dapat dibaca disini</p> <pre><code>{\n    books {\n        id\n        name\n    }\n    buku1: bookById(id: 1) {\n        id\n        name\n    }\n    buku2: bookById(id: 2) {\n        id\n        name\n        pageCount\n    }\n}\n</code></pre> Output<pre><code>{\n    \"data\": {\n        \"books\": [\n        {\n            \"id\": \"1\",\n            \"name\": \"Al Quran\"\n        },\n        {\n            \"id\": \"2\",\n            \"name\": \"Pytorch\"\n        },\n        {\n            \"id\": \"3\",\n            \"name\": \"Machine Learning using TensorFlow\"\n        }\n        ],\n        \"buku1\": {\n        \"id\": \"1\",\n        \"name\": \"Al Quran\"\n        },\n        \"buku2\": {\n        \"id\": \"2\",\n        \"name\": \"Pytorch\",\n        \"pageCount\": 450\n        }\n    }\n}\n</code></pre>"},{"location":"Technology/Catatan%20Graphql/#another-relation-child-and-parents","title":"Another, relation child and parents","text":"<p>Kita sudah memiliki type <code>Book</code>, buku pasti ada penulis-nya, maka kita perlu membuat sebuah Schema yang mengembalkan nilai autor dari buku yang diambil. Object dari <code>author</code> yang akan kita buat dinataranya ;</p> <ol> <li>Id</li> <li>Nama Penulis</li> <li>Tempat Lahir</li> <li>Tanggal Lahir</li> </ol> <p>Code github</p> <p>Clone branch Ketiga pada repository https://github.com/muhammadfarras/Learn-Graphql</p>"},{"location":"Technology/Catatan%20Graphql/#lets-create-data-modle-for-the-authors","title":"Lets create data modle for the Authors","text":"<p>Kita buat dummy data dan membuat function untuk mengambil author berdasarkan object Book</p> <p>Code</p> com/farras/LearnGraphql/model/Autor <pre><code>data class Author(var id:Int, var name:String, var placeBirth:String, var dateBirth:String){\n\n    companion object {\n        val authors = Arrays.asList(\n            Author(1,\"Allah Azza Waa Jalla\",\"Unknown\",\"Unknown\"),\n            Author(2,\"Muhammad Farras Ma'ruf\",\"Jakarta\",\"1995-12-27\"),\n            Author(3,\"Rumaisha Hilyah Ma'ruf\",\"Unknown\",\"2023-12-15\")\n        )\n\n        fun authorByBook(book:Book){\n            authors.stream().filter { it -&gt; it.id == book.id }\n                .findFirst()\n                .orElse(null)\n        }\n    }\n\n}\n</code></pre>"},{"location":"Technology/Catatan%20Graphql/#lets-change-the-book-model-added-the-author","title":"Lets change the book model, added the author","text":"<p>Sekarang kita perlu memodifikasi model dari class <code>Book</code> agar sang author tampil saat ada client yang meng-query <code>Book</code>.</p> <p>Code</p> com/farras/LearnGraphql/model/Book <pre><code>data class Book(\n    var id: Int,\n    var name: String,\n    var pageCount: Int,\n    var author: Int\n) {//....}\n</code></pre>"},{"location":"Technology/Catatan%20Graphql/#extend-code-the-book-controller","title":"extend code the book controller","text":"<p>Kita perlu membuat sebuah SchemaMapping yg merujuk pada type <code>Book</code> dan Field pada <code>author</code>. Yang menjadi catatan ketika query nested adalah, object anakan tidak perlu menggunakan anotasi <code>@Argument</code> kembali... (Gua menghabiskan waktu mencari errornya ternyata pada sisi argument yang tidak perlu pada nested query)</p> <p>Code</p> com/farras/LearnGraphql/controllers/BookController <pre><code>@Controller\nclass BookController {\n    // ......\n\n    @SchemaMapping(typeName = \"Book\", field = \"author\")\n    fun author(book: Book):Author?{\n        println(\"Author of : ${book.name}\")\n        return Author.authorByBook(book)\n    }\n}\n</code></pre>"},{"location":"Technology/Catatan%20Graphql/#builtd-the-schema","title":"Builtd the schema","text":"<p>Jika kita masih bingung dalam penggunakans <code>schemaMapping</code>, kita pasti akan bertanya, kemana kita merujuk type dan field, jawabannya adalah pada schema. Type <code>Book</code> merujuk pada baris ke 6 dan field <code>author</code> merujuk pada baris ke 10</p> <p>Code</p> schema.graphqls <pre><code>type Query {\n    books:[Book] ## will return list of type Book\n    bookById(id:Int):Book ## Menerima parameter id(integer) return value book\n}\n\ntype Book {\n    id:ID\n    name:String\n    pageCount:Int\n    author:Author\n}\n\ntype Author{\n    id:ID,\n    name:String,\n    placeBirth:String,\n    dateBirth:String\n}\n</code></pre>"},{"location":"Technology/Catatan%20Graphql/#lets-start-again-and-again","title":"Lets start again and again","text":"<p>Jalankan spring boot lalu menuju ke url berikut <code>http://localhost:8080/graphiql</code>, </p> <p>Code</p> Example 1Example 2 <pre><code>{\n    books {\n        id\n        name\n        pageCount\n        author {\n        id\n        name\n        placeBirth\n        dateBirth\n        }\n    }\n}\n</code></pre> Output<pre><code>{\n    \"data\": {\n        \"books\": [\n        {\n            \"id\": \"1\",\n            \"name\": \"Al Quran\",\n            \"pageCount\": 656,\n            \"author\": {\n            \"id\": \"1\",\n            \"name\": \"Allah Azza Waa Jalla\",\n            \"placeBirth\": \"Unknown\",\n            \"dateBirth\": \"Unknown\"\n            }\n        },\n        {\n            \"id\": \"2\",\n            \"name\": \"Pytorch\",\n            \"pageCount\": 450,\n            \"author\": {\n            \"id\": \"2\",\n            \"name\": \"Muhammad Farras Ma'ruf\",\n            \"placeBirth\": \"Jakarta\",\n            \"dateBirth\": \"1995-12-27\"\n            }\n        },\n        {\n            \"id\": \"3\",\n            \"name\": \"Machine Learning using TensorFlow\",\n            \"pageCount\": 752,\n            \"author\": {\n            \"id\": \"3\",\n            \"name\": \"Rumaisha Hilyah Ma'ruf\",\n            \"placeBirth\": \"Unknown\",\n            \"dateBirth\": \"2023-12-15\"\n            }\n        }\n        ]\n    }\n}\n</code></pre> <pre><code>{\n    bookById(id:3) {\n        id\n        name\n        pageCount\n        author {\n        id\n        name\n        placeBirth\n        dateBirth\n        }\n    }\n}\n</code></pre> Output<pre><code>{\n    \"data\": {\n        \"bookById\": {\n        \"id\": \"3\",\n        \"name\": \"Machine Learning using TensorFlow\",\n        \"pageCount\": 752,\n        \"author\": {\n            \"id\": \"3\",\n            \"name\": \"Rumaisha Hilyah Ma'ruf\",\n            \"placeBirth\": \"Unknown\",\n            \"dateBirth\": \"2023-12-15\"\n        }\n        }\n    }\n}\n</code></pre>"},{"location":"Technology/Catatan%20Graphql/#test-step","title":"Test Step","text":"<p>Untuk membuat code test kita perlu melakuakn beberapa setup;</p> <ol> <li> <p>Kita perlu membuat schema khusus untuk test pada folder test.</p> <pre><code>\u2514\u2500\u2500\u2500test\n\u251c\u2500\u2500\u2500java\n\u2502   \u2514\u2500\u2500\u2500com\n\u2502       \u2514\u2500\u2500\u2500farras\n\u2502           \u2514\u2500\u2500\u2500LearnGraphql\n\u2502               \u2514\u2500\u2500\u2500controllers\n\u2514\u2500\u2500\u2500resources\n    \u2514\u2500\u2500\u2500graphql-test\n</code></pre> </li> <li> <p>Menggunakan anotasi <code>@GraphQLTest</code> pada class name</p> </li> <li>Field injection interface <code>GraphQlTester</code></li> </ol> <p>Viola sekarang kita dapat membuat test script</p> <p>Code</p> com/farras/LearnGraphql/controllers/BookControllerTest.kt <pre><code>@GraphQlTest\nclass BookControllerTest  {\n\n\n    @Autowired\n    private lateinit var graphqlTester:GraphQlTester\n\n    @Test\n    fun canGetBooksById() {\n        /**\n        * Test menghitung nama buku berdsarkan Id\n        */\n\n        val theBookName = \"Machine Learning using TensorFlow\"\n\n        val theValueTester = graphqlTester.documentName(\"books\")\n            .execute()\n            .path(\"getBooksById\")\n            .entity(Book::class.java).get().name\n\n        println(theValueTester)\n\n        assertTrue(theValueTester == theBookName)\n    }\n\n    @Test\n    fun getTotalBooks(){\n        /**\n        * Test menghitung jumlah buku\n        */\n        graphqlTester.documentName(\"books\")\n            .execute().path(\"getAllBooks\")\n            .entityList(Book::class.java)\n            .hasSize(3)\n    }\n}\n</code></pre>"},{"location":"Technology/Catatan%20Graphql/#lets-start-the-test-script","title":"Lets start the test script","text":"<p>Jalankan spring boot lalu menuju ke url berikut http://localhost:8080/graphiql, selanjutnya akan tampil browers tool untuk menguji graphql kita.</p> Image <p></p>"},{"location":"Technology/Catatan%20Graphql/#go-to-the-real-world","title":"Go to the real world","text":"<p>Pada catatan ini saat menguji query dan mendapatkan response kita menggunakan <code>GraphiQL</code>. GraphiQL<sup>2</sup> sendiri adalah IDE (Integrated Development Environment) dari GraphQL. Kita menggunakan dengan mengakases <code>http://localhost:8080/graphiql?path=/graphql</code>.</p> <p>Namun implementasinya kita tidak menggunakan URL tersebut untuk mengakases Gprahql, kita menggunakan endpoint dan payload yg kurang lebih sama saat kita menggunakan REST API. Pada catatan ini kita akan mengakses endpoint <code>http://localhost:8080/graphql</code> dan sekaligus payload yg kita kirimkan pada url atau pada body http (tergantung method yg kita gunakan, ex GET / POST).</p> <p>For more detail about this path of notes, we can go visit the official documentation here</p>"},{"location":"Technology/Catatan%20Graphql/#testing-the-snake-python","title":"Testing the snake Python","text":"<p>Ya, client pertama pada catatan ini adalah pyhon. Pertama2 kita akan setup <code>virtualenv</code> agar tidak ada bentrok depedency diantara env python....</p> <pre><code>virtualenv  env-graphql\n</code></pre> <p>Setelah menjalankan scrip diatas maka akan muncul folder virtual env dengan nama py-graphql.</p> <p>Selanjutnya kita tinggal aktifkan virtualenv. <code>.\\py-graphql\\Scripts\\activate.bat</code></p>"},{"location":"Technology/Catatan%20Graphql/#choosing-client-library-for-client-python-graphql","title":"Choosing Client Library for Client Python Graphql","text":"<p>Sebenarnya kita tidak perlu menggunakan library, pilihan ini hanyalah opsional. Akan tetapi kita perlu memikirkan request JSON body, HTTP header parameter yg harus dikirim seperti yg tertera pada official documentation Graphql. Jadi untuk kemudahan tersebut ada beberapa penyedia library client yg dapat kita gunakan mengikut bahasa apa yang kita gunakan. Daftar nya dapat diliha dimari Client GraphQL Library.</p> <p>Karena kita menggunakan python, ada beberapa library, diantaranya;</p> <ol> <li>gql</li> <li>sgqlc</li> <li>Ariadne Codegen</li> </ol> <p>InsyaAllah pada catatan ini kita akan menggunakan gql karena yg paling luas komunitasnya. Link documentation nya dapat dilihat di mari</p>"},{"location":"Technology/Catatan%20Graphql/#install-the-depedency","title":"Install the depedency","text":"<p>Pada dokumentasi kita bisa melihat bahwa kita dapat meng-install seluruh depedency transport yg diesediakan, namun karena kita hanya menggunakan transport HTTP kita hanya perlu install depedency yg diperlukan</p> <pre><code>pip install gql[aiohttp]\n</code></pre>"},{"location":"Technology/Catatan%20Graphql/#lets-code-and-run-the-snake","title":"Lets code and run the snake","text":"<p>Code</p> client\\python\\main.py<pre><code>from gql import Client, gql\nfrom gql.transport.aiohttp import AIOHTTPTransport\n\ntransport = AIOHTTPTransport(url='http://localhost:8080/graphql')\n\nclient = Client(transport=transport, fetch_schema_from_transport=True)\n\nquery = gql(\"\"\"\nquery {\n    books{\n        id\n        name\n        pageCount\n        author {\n            id\n            name\n            placeBirth\n            dateBirth\n        }\n    }\n}\n\"\"\")\n\nresult = client.execute(query)\nprint(type(result))\nprint(\"-\" * 10, \"Result\", \"-\" * 10, sep=\"\")\nprint(result)\n\nprint(\"-\" * 12, \"Result\", \"-\" * 12, sep=\"\")\n\nfor a in result['books']:\n    print(a)\n</code></pre> Output<pre><code>python main.py ## Run python code main.py\n\n&lt;class 'dict'&gt;\n----------Result----------\n{'books': [{'id': '1', 'name': 'Al Quran', 'pageCount': 656, 'author': {'id': '1', 'name': 'Allah Azza Waa Jalla', 'placeBirth': 'Unknown', 'dateBirth': 'Unknown'}}, {'id': '2', 'name': 'Pytorch', 'pageCount': 450, 'author': {'id': '2', 'name': \"Muhammad Farras Ma'ruf\", 'placeBirth': 'Jakarta', 'dateBirth': '1995-12-27'}}, {'id': '3', 'name': 'Machine Learning using TensorFlow', 'pageCount': 752, 'author': {'id': '3', 'name': \"Rumaisha Hilyah Ma'ruf\", 'placeBirth': 'Unknown', 'dateBirth': '2023-12-15'}}]}\n------------Result------------\n{'id': '1', 'name': 'Al Quran', 'pageCount': 656, 'author': {'id': '1', 'name': 'Allah Azza Waa Jalla', 'placeBirth': 'Unknown', 'dateBirth': 'Unknown'}}\n{'id': '2', 'name': 'Pytorch', 'pageCount': 450, 'author': {'id': '2', 'name': \"Muhammad Farras Ma'ruf\", 'placeBirth': 'Jakarta', 'dateBirth': '1995-12-27'}}\n{'id': '3', 'name': 'Machine Learning using TensorFlow', 'pageCount': 752, 'author': {'id': '3', 'name': \"Rumaisha Hilyah Ma'ruf\", 'placeBirth': 'Unknown', 'dateBirth': '2023-12-15'}}\n</code></pre> <ol> <li> <p>Sumber : https://pankaj02.medium.com/spring-for-graphql-schemamapping-and-querymapping-3db89bae696a \u21a9</p> </li> <li> <p>https://www.gatsbyjs.com/docs/how-to/querying-data/running-queries-with-graphiql/ \u21a9</p> </li> </ol>"},{"location":"Technology/Catatan%20Linux%20Bible/","title":"Ubuntu Linux Bible","text":"<p>Oke farras, mempelajari linux sangatlah penting jika kamu mau mendalami tentang security, network dan lainnya. dan yang paling keren, orang yang pakai Linux lebih dianggap sebagai anak IT dari pada yang hanya paham sebatas window. ehehehh</p> <p>Oke, kita coba belajar dan kita catat ilmu dari buku yang berjudul Ubuntu Linux Bible yang ditulis oleh David Clinton, dan Christopher Negus dan diterbitkan oleh Wiley</p> <p>Oke, semogal Allah berikan kemudahan untuk memahami dan semoga apa yang kita pelajari ini bermanfaat.</p> <p> Dari Abu Hurairah radhiallahu 'anhu, Rasulullah Shallallahu Alaihi Wassalam bersabda:</p>       \u0627\u0644\u0652\u0645\u064f\u0624\u0652\u0645\u0650\u0646\u064f \u0627\u0644\u0652\u0642\u064e\u0648\u0650\u0649\u0651\u064f \u062e\u064e\u064a\u0652\u0631\u064c \u0648\u064e\u0623\u064e\u062d\u064e\u0628\u0651\u064f \u0625\u0650\u0644\u064e\u0649 \u0627\u0644\u0644\u0651\u064e\u0647\u0650 \u0645\u0650\u0646\u064e \u0627\u0644\u0652\u0645\u064f\u0624\u0652\u0645\u0650\u0646\u0650 \u0627\u0644\u0636\u0651\u064e\u0639\u0650\u064a\u0641\u0650 \u0648\u064e\u0641\u0650\u0649 \u0643\u064f\u0644\u0651\u064d \u062e\u064e\u064a\u0652\u0631\u064c \u0627\u062d\u0652\u0631\u0650\u0635\u0652 \u0639\u064e\u0644\u064e\u0649 \u0645\u064e\u0627 \u064a\u064e\u0646\u0652\u0641\u064e\u0639\u064f\u0643\u064e \u0648\u064e\u0627\u0633\u0652\u062a\u064e\u0639\u0650\u0646\u0652 \u0628\u0650\u0627\u0644\u0644\u0651\u064e\u0647\u0650 \u0648\u064e\u0644\u0627\u064e \u062a\u064e\u0639\u0652\u062c\u0650\u0632\u0652 \u0648\u064e\u0625\u0650\u0646\u0652 \u0623\u064e\u0635\u064e\u0627\u0628\u064e\u0643\u064e \u0634\u064e\u064a\u0652\u0621\u064c \u0641\u064e\u0644\u0627\u064e \u062a\u064e\u0642\u064f\u0644\u0652 \u0644\u064e\u0648\u0652 \u0623\u064e\u0646\u0651\u0650\u0649 \u0641\u064e\u0639\u064e\u0644\u0652\u062a\u064f \u0643\u064e\u0627\u0646\u064e \u0643\u064e\u0630\u064e\u0627 \u0648\u064e\u0643\u064e\u0630\u064e\u0627. \u0648\u064e\u0644\u064e\u0643\u0650\u0646\u0652 \u0642\u064f\u0644\u0652 \u0642\u064e\u062f\u064e\u0631\u064f \u0627\u0644\u0644\u0651\u064e\u0647\u0650 \u0648\u064e\u0645\u064e\u0627 \u0634\u064e\u0627\u0621\u064e \u0641\u064e\u0639\u064e\u0644\u064e \u0641\u064e\u0625\u0650\u0646\u0651\u064e \u0644\u064e\u0648\u0652 \u062a\u064e\u0641\u0652\u062a\u064e\u062d\u064f \u0639\u064e\u0645\u064e\u0644\u064e \u0627\u0644\u0634\u0651\u064e\u064a\u0652\u0637\u064e\u0627\u0646\u0650            \"Mukmin yang kuat lebih baik dan lebih dicintai oleh Allah daripada mukmin yang lemah. Namun, keduanya tetap memiliki kebaikan. Bersemangatlah atas hal-hal yang bermanfaat bagimu. Minta tolonglah pada Allah, jangan engkau lemah. Jika engkau tertimpa suatu musibah, maka janganlah engkau katakan: \u2018Seandainya aku lakukan demikian dan demikian.\u2019 Akan tetapi hendaklah kau katakan: \u2018Ini sudah jadi takdir Allah. Setiap apa yang telah Dia kehendaki pasti terjadi.\u2019 Karena perkataan law (seandainya) dapat membuka pintu setan\""},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/","title":"Using the shell command","text":"","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#menggunakan-virtual-console","title":"Menggunakan Virtual Console","text":"<p>Kebanyakan Linux system yang memliki dekstop interface memulai beberapa virtual console yang berjalan pada komputer. Virtual consol adalah cara untuk memliki beberapa shell session yang dibuka berbarengan dengan grafik interface yang digunakan. Artinya, virtual console ini berjalan berbarengan dengan dibukanya grafik interface saat menjalankan linux</p> <p>Kita dapat mengganti antara virtual console dengan mekenan Ctrl dan Alt dan menekang function key antara F3 dan F6. Sedangkan untuk F1 dan F2 akan membuat anda kembali kedalam GUI session. </p> <pre><code># ctr + alt + f3\nUbuntu 21.10 BrownTofu tty3\nBrownTofu Login:\n\n# ctr + alt + f4\nUbuntu 21.10 BrownTofu tty4\nBrownTofu Login:\n\n# ctr + alt + f5\nUbuntu 21.10 BrownTofu tty5\nBrownTofu Login:\n</code></pre>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#choosing-your-shell","title":"Choosing Your Shell","text":"<p>Pada umumnya, shell bawaan yang ada pada linux adalah Bash Shell. Untuk mengetahuinya, gunakan perintah dibawah ini <pre><code>$ grep $(whoami) /etc/passwd \n# Output (1)\n</code></pre></p> <ol> <li>maruffarras1000:1000:maruffarras,,,:/home/maruffarras:/bin/bash</li> </ol> <p>Perintah <code>whoami</code> berfungsi untuk menampilakan username. Hasil dari perintah tersebut digunakan untuk parameter perintah <code>grep</code>, yang mana berfungsi untuk mencari pola pada parameter yang tersedia pada sebuah file. Pada bagian akhir dari gabunga commad tersebut menunjukan Bash shell adalah shell bawaan anda.</p> <p>Memungkinkan, namun sangat jarang, anda mungkin memliki shell bawaan yang berbeda (bukan Bash). Untuk mencoba shell yang berbeda, mudahnya ketik nama dari shell tersebut pada terminal (seperti dash, atau yang lainnya, dengan asumsi sudah terinstall).</p> <pre><code>maruffarras@BrownTofu:~$ dash\n$ echo \"This is dash shell\"\n# Output (1) \n</code></pre> <ol> <li>This is dash shell</li> </ol> <p>Meskipun kebanyakan pengguna linux lebih condong ke satu shell saja, jika anda sudah paham satu shell, anda dapat dengan cepat mempelajara shell lainnya dengan sesekali merujuk ke shell's man page. Perintah <code>man</code> menyediakan dokumentasi dari sebuah commands (perintah), file formats, dan komponen lainnya pada linux.</p> <pre><code>maruffarras@BrownTofu:~$ man nmap\n# Output (1)\n</code></pre> <ol> <li>NMAP(1)  Nmap Reference Guide  NMAP(1) NAME nmap - Network exploration tool and security / port scanner</li> </ol> <p>Bash memliki fitur asli yang dikembangkan awalnya untuk shell sh dan ksh pada awal UNIX systems, sebagaimana fitur-fitur pada csh, harapannya Bash menjadi login shell bawaan pada banyak Linux Systems, terkecuali beberapa Linux System tertentu (seperti shell yang berjalan pada perangkat yang tertanam, emebedded system) yang tidak memakan memori besar dan tidak perlu terlalu banyak fitur.</p>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#id-and-who-command","title":"<code>id</code> and <code>who</code> Command","text":"<p>Ketika anda login kedalam linux, linux membaca informasi identitas anda seperti username, group name, user ID dan Group ID (look at id command).</p> <pre><code>maruffarras@BrownTofu:~$ id\n</code></pre> <p>Output</p> <pre><code>uid=1000(maruffarras) gid=1000(maruffarras) groups=1000(maruffarras),4(adm),20(dialout),24(cdrom),27(sudo),30(dip),46(plugdev),122(lpadmin),133(lxd),134(sambashare)\n</code></pre> <p>Berdasarkan hasil perintah <code>id</code> diatas, username adalah maruffarras, yang mana direpresentasikan dengan ID numerik <code>(uid) 1000</code>  Group pertama user maruffarras juga memliki nama <code>maruffarras</code> yang mana memiliki <code>gid 1000</code>. Umum terjadi di Ubuntu jika group user memliki nama yang sama dengan user. User maruffarras juga memiliki group lain, <code>4(adm)</code>, <code>20 (dialout)</code> dst. Angka tersebut merepresentasikan hak akses (permission) yang dimiliki maruffarras pada sistem.</p> <p>Linux juga selalu melacak session login anda, linux mengetahui ketika anda masuk dan berapa lama session tersebut digunakan, serta dari mana anda masuk kedalam sistem linux (tty). Gunakan perintah <code>who -uH</code> untuk melihat login session user anda yang sedang berlangsung.</p> <pre><code>who -uH\n</code></pre> <p>Output</p> <pre><code>maruffarras@BrownTofu:~$ who -uH\n\nNAME        LINE         TIME             IDLE          PID COMMENT\nmaruffarras tty2         2022-11-28 21:16 00:16        2055 (tty2)\nmaruffarras tty4         2022-11-28 21:30   .          4510\n</code></pre> <p>Informasi yang diberikan oleh perintah <code>who</code> bahwa user maruffarras telah masuk/login pada tty2 dan tty4, session login tersebut dimulai dari 2022-11-28 21:16. IDLE menunjukan berapa lama shell terbuka. PID menunjukan process ID dari login sell user.</p>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#locating-commands","title":"Locating Commands","text":"<p>Dalam menjalankan sebuah perintah yang kita ketik, shell akan merujuk pada sebuah daftar yang kita ketahui sebagai alamat <code>$PATH</code>. Namun anda juga dapat menuliskan langsung alamat lengkap dari command yang ingin dijalankan, dengan cara ini berarti anda tidak menggunakan pintasan yang disediakan oleh <code>$PATH</code>. Contoh penulisan alamant lengkap, misalkan command date berada pada lokasi /bin, anda dapat mengetik date langsung, atau dilengkapi dengan alamat, menjadi <code>/bin/date</code>.</p> <p>Dalam mencari command yang diperintahkan, shell akan merujuk pada $PATH anda. Namuun untuk command yang tidak ada dalam variabel $PATH, anda dapat menulis dengan lengkap lokasi dari command tersebut. Misalkan, command date berada pada lokasi /bin, anda dapat mengetik date ataupun dilengkapi dengan alamat dari command date.</p> <pre><code>maruffarras@BrownTofu:~$ /bin/date \n# Output (1)\n</code></pre> <ol> <li>Sen 28 Nov 2022 09:39:37  WIB</li> </ol> <p>Namun, cara tersebut sangat tidak efesien, apalagi jika alamat dari command tersebut sangat panjang. Cara yang terbaik adalah menyimpan alamat lengkap dari perintah tersebut pada variabel $PATH environment variable. Anda dapat memanggil command date menggunakan tanpa menggunakan alamat lengkap asalakan direktori command tersebut berada di varaibel $PATH.</p> <pre><code>maruffarras@BrownTofu:~$ date \n# Output (1)\n</code></pre> <ol> <li>Sen 28 Nov 2022 09:39:37  WIB</li> </ol> <p>$PATH terdiri dari daftar direktori yang akan dilihat oleh shell ketika kita memulai untuk menjalan command.</p> <pre><code>echo $PATH\n# Output (1)\n</code></pre> <ol> <li>/home/maruffarras/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin :/usr/games:/usr/local/games</li> </ol> <p>Daftar direktori-direktori dipisahkan menggunakan colon :, Hampir semua command dari linux tersimpan di <code>/bin</code>, <code>/usr/bin</code> atau <code>/usr/local/bin</code>. Command yang berhubungan tugas dengan administrasi terkumpul pada direktori <code>/sbin</code> dan <code>/usr/sbin</code>.</p> <p>Note</p> <p>Linux mencari command date tanpa penulisan alamat lengkapnya di daftar direktori yang ada pada variabel $PATH. Perhatikan ada alamat <code>/bin</code> didalamnya.</p> <p>Jika anda ingin membuat sebuah command untuk user maruffarras, anda harus memasukan script didalam direktori <code>/home/maruffarras/.local/bin</code>, jika command tersebut ingin diakses oleh semua user anda dapat menaruhnya di <code>/usr/local/bin</code>.</p> <p>Urutan alamat direktori pada $PATH dibaca dari kiri ke kanan (left \u2192 right), jadi jika terdapat commad dengan nama foo berlokasi di <code>/usr/bin</code> dan <code>/bin</code>, maka command yang akan dieksekusi adalah foo yang berada dalam direktori <code>/usr/bin</code>. Jika anda ingin mengeksekusi command ditempat tertentu anda harus menggunakan alamat yang lengkap atau mengubah urutan dari $PATH.</p> <p>Tidak semua command ditempatkan pada direktori yang ada pada variable $PATH. Beberapa command tertanam didalam shell. Perintah juga dapat ditiban dengan membuat aliases yang dapat mendefinisikan command serta opsi-opsinya yang ingin dijalankan. Ada beberapa cara lain untuk mendifinisikan function yang terdiri dari beberapa kumpulan command. Dibawah ini adalah daftar urut yang mana shell akan menge-check command yang dipakai;</p> <ul> <li> <p>Aliases Kumpulan nama dari perintah alias yang merepresentasikan beberapa perintah dan opsi-opsinya. Seringkali aliases digunakan untuk membuat shortcut untuk command dan opsi-opsinya yang panjang. Untuk melihat daftar aliases gunakan command alias. <pre><code>maruffarras@BrownTofu:/usr/sbin$ alias\n\n# Output\nalias android='./IDE/android-studio/bin/studio.sh'\nalias egrep='egrep --color=auto'\nalias fgrep='fgrep --color=auto'\nalias grep='grep --color=auto'\nalias intellij='/opt/idea-IC-212.5457.46/bin/idea.sh'\nalias l='ls -CF'\nalias la='ls -A'\nalias laravel='~/./.config/composer/vendor/bin/laravel '\nalias ll='ls -alF'\nalias ls='ls --color=auto'\nalias pycharm='./IDE/pycharm\\ IDE/bin/pycharm.sh'\n</code></pre></p> </li> <li> <p>Shell reserved word Command tersebut tersimpan didalam shell. Banyak dari perintah ini kita gunakan dalam bahasa pemprogramman, seperti <code>do</code>, <code>while</code>, <code>case</code> dan <code>else</code></p> </li> <li> <p>Function, Ini adalah kumpulan dari command yang dieksekusi bersamaan didalam current shell.</p> </li> <li> <p>Builtin-command, command ini adalah command bawaan yang tertanam didalam shell, seperti <code>cd</code> (change directory), <code>echo</code> (untuk menampilkan text pada layar), <code>exit</code>(untuk keluar dari shell), <code>fg</code>(untuk mengembalikan command yang berjalan pada background), <code>history</code>(untuk menampilkan riwayat command yang pernah dijalankan), <code>pwd</code>(menampilkan direktori yang sedang bekerja), <code>set</code> (untuk menyetel opsi dari shell) dan <code>type</code> (menampilkan lokasi dari command). <pre><code>maruffarras@BrownTofu:~$ type python3\npython3 is /usr/bin/python3\n\nmaruffarras@BrownTofu:~$ echo \"Bismillah\"\nBismillah\n\nmaruffarras@BrownTofu:~$ pwd\n/home/maruffarras\n</code></pre></p> </li> <li> <p>Filesystem command, command ini tertanam dan dijalankan dari pada filesystem</p> </li> </ul> <p>Untuk menampilkan lokasi dari sebuah command tertentu anda dapat menggunakan command <code>type</code>, namun jika anda menggunakan shell selain bash, anda dapat menggunakan command <code>which</code>. contohnya</p> <pre><code>maruffarras@BrownTofu:~$\u00a0type\u00a0python3\npython3\u00a0is\u00a0/usr/bin/python3\n\nmaruffarras@BrownTofu:~$ which -a python3\n/usr/bin/python3\n/bin/python3\n</code></pre> <p>JIka sebuah command terdapat dibeberapa lokasi dan anda ingin mengetahui semua lokasinya, gunakan opsi <code>-a</code> pada command <code>type</code></p> <pre><code>maruffarras@BrownTofu:~$ type -a python3\npython3 is /usr/bin/python3\npython3 is /bin/python3\n</code></pre> <p>Jika command tidak berada pada direkotori yang terdaftar pada variabel $PATH, anda dapat menggunakan command <code>locate</code> untuk mencarinya. Dengan <code>locate</code> anda dapat mencari  bagian dari system namun dengan syarat anda memliki hak akses. Karena ada beberapa file yang hanya bisa diakses menggunakan root user.</p> <pre><code>maruffarras@BrownTofu:~$\u00a0locate\u00a0python3\n...\n/snap/gnome-3-38-2004/115/usr/lib/python3.9/lib2to3/fixes/fix_repr.py\n/snap/gnome-3-38-2004/115/usr/lib/python3.9/lib2to3/fixes/fix_set_literal.py\n/snap/gnome-3-38-2004/115/usr/lib/python3.9/lib2to3/fixes/fix_standarderror.py\n/snap/gnome-3-38-2004/115/usr/lib/python3.9/lib2to3/fixes/fix_sys_exc.py\n/snap/gnome-3-38-2004/115/usr/lib/python3.9/lib2to3/fixes/fix_throw.py\n/snap/gnome-3-38-2004/115/usr/lib/python3.9/lib2to3/fixes/fix_tuple_params.py\n/snap/gnome-3-38-2004/115/usr/lib/python3.9/lib2to3/fixes/fix_types.py\n/snap/gnome-3-38-2004/115/usr/lib/python3.9/lib2to3/fixes/fix_unicode.py\n...\n</code></pre> <p>JIka diperhatikan, command <code>locate</code> tidak hanya menemukan command python3, akan tetapi juga menemukan beberap file yang didalamnya mengandung command yang dicari. Command <code>locate</code> mencari diseluruh filesystem, tidak hanya pada direktori yang mengandung commands. </p> <p>Note</p> <p>Jika pada kasus tertentu perintah <code>locate</code> digunakan pada file yang baru saja ditambahkan pada system, bisajadi perintah tersebut tidak akan menemukannya pada filesystem. Untuk itu jalankan command <code>updatedb</code> sebagai user root untuk memperbarui locate database.</p>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#recalling-commands-using-command-history","title":"Recalling Commands Using Command History","text":"<p>Dengan perintah <code>history</code>, anda dapat melihat daftar riwayat perintah yang pernah digunakan pada user anda. Serta anda juga dapat memangging kembali perintah tertentu dari daftar riwayat tersebut dan mengganti beberapa parameter pada perintah yang pernah digunakan sesuai yang dibutuhkan.</p> <p>Selanjuta, pada sesi ini kita akan menjelaskan bagimana meng-edit command-line, bagaimana menyelesaikan bagian-bagian dari command-lines dan bagaimana memanggil kembali perinah yang ada pada daftar riwayat command line.</p> <pre><code>maruffarras@BrownTofu:~$ history | tail\n 2033  which python3\n 2034  which -a python3\n 2035  updatedb\n 2036  sudo updatedb\n</code></pre>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#command-line-editing","title":"Command-line Editing","text":"<p>Jika anda salah mengetik beberapa perintah yang panjang pada terimanal, Bash shell memiliki fitur yang membuat anda tidak harus menghapus perintah panjang tersebut, melainkan hanya meng-edit-nya. Selain itu, anda juga dapat memanggil perintah yang pernah anda tulis dan mengganti elemen-elemen tertentu dan membuatnya menjadi perintah yang baru.</p> <p>Bash shell (bawaanya) menggunakan command-line editing (text-editor) yang didasarkan pada emacs text editor. More abouts emacs</p>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#keystrokes-for-navigating-command-lines","title":"Keystrokes for Navigating Command Lines","text":"Keystroke Name Fungsi Ctrl + <code>F</code> Character Forward Go forward one character Ctrl + <code>B</code> Character Backward Go backward one character Alt + <code>F</code> Word Forward Go forward one word Alt + <code>B</code> Word Backward Go backward one word Ctrl + <code>A</code> Beginning of Line Go to the beginning of the current line Ctrl + <code>E</code> End of Line Go to the end of line Ctrl + <code>L</code> Clear Screan Clear the scren","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#keystrokes-for-editing-command-lines","title":"Keystrokes for Editing Command Lines","text":"Keystroke Name Fungsi Ctrl + <code>D</code> Delete current Delete the current character Backspace Delete previouse Delete the previous character Ctrl + <code>T</code> Transpose character Switch positions of current and previous characters Alt + <code>T</code> Transpose word Switch positions of current and previous words Alt + <code>U</code> Uppercase word Change the current word to uppercase Alt + <code>L</code> Lowercase word Change the current word to lowercase Alt + <code>C</code> Capitalize word Change the current word to an initial capital Ctrl + <code>V</code> Insert special character Add a special character","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#keystrokes-for-cutting-and-pasting-text-from-within-command-lines","title":"Keystrokes for Cutting and Pasting Text from within Command Lines","text":"Keystroke Full Name Meaning Ctrl + <code>K</code> Cut end of line Cut text to the end of the line Ctrl + <code>U</code> Cut beginning of line Cut text to the beginning of the line Ctrl + <code>W</code> Cut previous word Cut the word located behind the cursor Alt + <code>D</code> Cut next word Cut the word following the cursor Ctrl + <code>Y</code> Paste recent text Paste most recently cut text Alt + <code>Y</code> Paste earlier text Rotate back to previously cut text and paste it Ctrl + <code>C</code> Delete whole line Delete the entire line","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#command-line-completion","title":"Command-line completion","text":"<p>Bash shell memiliki fitur completion untuk memudahkan kita mengetik perintah. Misalkan adan ingin mengetik perintah yang panjang seperti python3, anda hanya perlu mengetik py lalu anda tekan Tab, maka shell akan menampilkan daftar perintah yang diawali dengan py jika ada beberapa perintah dengan awal tersebut, namun jika hanya satu perintah makan shell akan mengeluarkan pada command line satu perintah yang diawali dengan py.</p> <p>Dibawahini adalah beberapa nilai yang dapat diketik sebagian dari bashshell:</p> <code>Command, alias atau function</code> Jika kita menuliskan awalan karakter dengan karakter umum (alfanumerik) maka shell akan mencoba menampilkan kemungkinan command, alias atau nama fungsi dari sebagian karakter yang ditulis. Seperti diatas, ketika anda mengetik py pada terminal lalu menekan Tab, shell akan memberikan sugesti perintah atau alias atau nama yang diawali dengan huruf py, <code>Variable</code> <p>Jika menuliskan text diawal dengan tanda dolar $, shell akan memberikan sugesti nama variable. Misalkan anda mengetik <code>$P</code> lalu menekan Tab, shell akan memberikan sugesti nama varriable dimana salah satunya adalah variable <code>$PATH</code>. <pre><code>maruffarras@BrownTofu:~$ $P # (1)!\n$PATH        $PPID        $PS2         $PWD         \n$PIPESTATUS  $PS1         $PS4 \n</code></pre></p> <ol> <li>Mengetik $P + Tab</li> </ol> <code>Username</code> <p>Dengan awalan ~, shell akan memberikan sugesti username. <pre><code>maruffarras@BrownTofu:~$ ~m # (1)!\n~mail/        ~man/         ~maruffarras/ ~messagebus   ~mysql     \n</code></pre></p> <ol> <li>Mengetik ~m + Tab</li> </ol> <code>Hostname</code> Dengan awala @, shell akan memberikan sugesti daftar host yang ada pada file <code>/etc/hosts/</code>. Hasil dibawah isi dari file <code>etc/hosts</code> <pre><code>maruffarras@BrownTofu:~$ cat /etc/hosts\n127.0.0.1   localhost\n127.0.0.1   BrownTofuMe\n127.0.1.1   BrownTofu\n\n# The following lines are desirable for IPv6 capable hosts\n::1     ip6-localhost ip6-loopback\nfe00::0 ip6-localnet\nff00::0 ip6-mcastprefix\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\n</code></pre>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#command-line-recall","title":"Command-line recall","text":"<p>Setelah anda mengetik sebuah perintah pada terminal, command tersebut akan disimpan pada history list pada shell tersebut. Daftar riwayat perintah tersebut tersimpan hinggal shell tersebut dikeluarkan (exit). Setelah itu, riwayat perintah akan disimpan pada file yang dapat dipanggil kembali pada sesi shell lainya. Pemanggilan perintah dari riwayat tersebut dapat dirubah dan dijalankan kembali.</p> <p>Untuk melihat daftar riwayat perinah gunakan perintah <code>history</code>.</p> <pre><code>maruffarras@BrownTofu:~$ history\n  996  which -a pip\n  997  pip list\n  998  conda activate\n  999  pip list\n</code></pre> <p>Anda dapat menggunakan opsi \\(n\\) dengan tipe angka setelah perintah <code>history</code> untuk memberitahu shell menampilkan \\(n\\) baris kahir dari daftar riwayat perintah.</p> <pre><code>maruffarras@BrownTofu:~$ history 5\n 1992  cat /etc/hosts\n 1993  echo $HOSTFILE\n 1994  exit\n 1995  history\n 1996  history 5\n</code></pre> <p>Anda dapat memanggil riwayat command tersebut dengan tanda seri exclamation point ! diikut dengan angka \\(n\\) yang menentukan nomor berapa perintah yang ingin dipanggil. Namung penggunakan tanda seru tersebut langsung menjalankan command tanpa kita bisa merubah command tersebut.</p> <pre><code>maruffarras@BrownTofu:~$ !1992 # (1)!\ncat /etc/hosts\n127.0.0.1   localhost\n127.0.0.1   BrownTofuMe\n127.0.1.1   BrownTofu\n\n# The following lines are desirable for IPv6 capable hosts\n::1     ip6-localhost ip6-loopback\nfe00::0 ip6-localnet\nff00::0 ip6-mcastprefix\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\n</code></pre> <ol> <li>Menjalankan id 1992 pada daftar history yang berisikan perintah <code>cat /etc/hosts</code>. </li> </ol> <p>Untuk menjalankan perintah sebelumnya (previous command) gunakan <code>!!</code>.</p> <pre><code>maruffarras@BrownTofu:~$ !! # (1)!\ncat /etc/hosts\n127.0.0.1   localhost\n127.0.0.1   BrownTofuMe\n127.0.1.1   BrownTofu\n\n# The following lines are desirable for IPv6 capable hosts\n::1     ip6-localhost ip6-loopback\nfe00::0 ip6-localnet\nff00::0 ip6-mcastprefix\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\n</code></pre> <ol> <li>Persis menajalankan perintah sebelumnya saat memanggil perintah riawaya 1992</li> </ol> <p>Anda juga dapat menajalankan perintah dari history list dengan parameter mengandung string tertentu, dengan syntax <code>#shell !string_command!</code></p> <pre><code>maruffarras@BrownTofu:~$ !?dat? #(1)!\ndate\nJum 24 Feb 2023 11:49:27  WIB\n</code></pre> <ol> <li>Mermanggil perintah <code>date</code> pada percobaan ini.</li> </ol> <p>Oke, contoh penggunaan <code>!12</code>, <code>!!</code>, dan <code>!?dat?</code> akan memanggil history command dan langsung menjalankan. Ada baikmya memanggil perintah dari history list dan tidak langsung menjalankannya, akan tetapi anda dapat mengeditnya atau hanya memastikan perintah yang dipanggil tersebut benar.</p> <p>Untuk itu anda dapat menggunakan keys atau beberapa kombinasi keys dibawah ini.</p> Key(s) Function Name Description Arrow keyts Up or Down Press the up and down arrow keys to step through each command line in your history list to arrive at the one you  ant. (Ctrl + <code>P</code> and Ctrl + <code>N</code> do the same functions, respectively.) Ctrl + <code>R</code> Reverse incremental search After you press these keys, you enter a search string to do a reverse  earch. As you type the string, a matching command line appears that you can run or edit. Ctrl + <code>S</code> Forward incremental search This is the same as the preceding function but for forward search. (It may not work in all instances.) Alt + <code>P</code> Reserve search After you press these keys, you enter a string to do a reverse search. Type a string and press Enter to see the most recent command line that includes that string. Alt + <code>N</code> Forward search This is the same as the preceding function but for forward search. (It may not work in all instances.) <p>Setelah sesion shell telah selesai, history list akan disimpan pada file <code>.bash_history</code> yang berlokasi pada home direktori.</p> <pre><code>maruffarras@BrownTofu:~$ tail ~/.bash_history\ncat /etc/hosts\n@\ncat /etc/hosts\nvim /etc/hosts\nsudo vim /etc/hosts\nsource /etc/hosts\ncat /etc/hosts\necho $HOSTFILE\n\nexit\n</code></pre>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#connecting-and-expanding-command","title":"Connecting and Expanding Command","text":"<p>Salah satu hal yang mempermudah kita dalam menggunakan shell adalah kita dapat menggunakan keluaran nilai dari satu command untuk dijadikan sebagai argumen pada command yang lainnya. Itu menggunakan fitur tersebut shell menggunakan hal yang disebut dengan metacharacter, ialah karakter-karakter yang memliki arti khusus bagi shell khusus untuk menghubungkan command.</p> <p>Karakter-karakter tersebut adalah</p> Name Character pipe character <code>|</code> ampersand <code>&amp;</code> Semicolon <code>;</code> right and left parenthesis <code>(</code> and <code>)</code> less and greater than sign <code>&lt;</code> and <code>&gt;</code>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#piping-between-command","title":"Piping between command","text":"<p>Karakater pipe digunakan utnuk menghubungkan output dari satu command ke input command lainnya.</p> <pre><code>maruffarras@BrownTofu:~$ cat /etc/passwd | sort | tail -n 3\nuuidd:x:107:115::/run/uuidd:/usr/sbin/nologin\nwhoopsie:x:116:123::/nonexistent:/bin/false\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\n</code></pre> <p>Command diatas memilki tujuan sebagai berikut, barikan hasil ouput dari <code>cat</code> ke input <code>sort</code>, lalu hasil output tersebut menjadi input <code>tail</code>.</p> <p><code>cat</code> <code>sort</code> <code>tail</code>.</p>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#squential-command","title":"Squential command","text":"<p>Anda juga dapat membuat sebuah command berurutan. Command akan dijalankan jika ada command sebelumnya sudah selesai dieksekusi.</p> <p>Misalkan sayang ingin meng-check dua buah website dengan perintah <code>ping</code> dan menampilkan waktu sebelum memulai ping dan setelah selesainya.</p> <pre><code>date ; ping www.google -c 2 ; ping www.anakshalihbogor.sch.id -c 2 ; date\nJum 24 Feb 2023 03:45:19  WIB\nping: www.google: Name or service not known\nPING anakshalihbogor.sch.id (162.159.134.42) 56(84) bytes of data.\n64 bytes from 162.159.134.42 (162.159.134.42): icmp_seq=1 ttl=58 time=189 ms\n64 bytes from 162.159.134.42 (162.159.134.42): icmp_seq=2 ttl=58 time=32.7 ms\n\n--- anakshalihbogor.sch.id ping statistics ---\n2 packets transmitted, 2 received, 0% packet loss, time 1002ms\nrtt min/avg/max/mdev = 32.720/111.055/189.391/78.335 ms\nJum 24 Feb 2023 03:45:21  WIB\n</code></pre>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#background-command","title":"Background command","text":"<p>Bawaanya, command yang diketik dan djilankan berjalan di depan layar, foreground. Jika demikian, hingga proses command tersebut berjalan anda tidak dapat menggunakan terminal tersebut. Untuk tetap bisa menggunakan layar terminal tanpa harus membuka session baru anda dapat menggunakan metacharacter ampersand yang membuat shell menjalankan perintah dibalik layar.</p> <p><pre><code>maruffarras@BrownTofu:~$ sudo nmap -sU www.anakshalihbogor.sch.id &amp;\n[1] 13978\nmaruffarras@BrownTofu:~$ Starting Nmap 7.80 ( https://nmap.org ) at 2023-02-24 15:55 WIB\n</code></pre> Untuk mengembalikan proses yang berjalan di background kembali ke foreground gunakan perintah #!shell fg`</p>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#expanding-command","title":"Expanding command","text":"<p>Untuk memperluas perintah, disebut dalam unix dengan expanding command gunakan syntax  <pre><code>echo $(sudo docker inspect $(sudo docker ps -aq)) &gt; \"test.txt\"\n</code></pre></p>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#expanding-arithmetic-expression","title":"Expanding arithmetic expression","text":"<p>Kita juga melakukan operasi arimetik expression dalam shell mengguakaan syntax <code>$[expression</code>] <pre><code>maruffarras@BrownTofu:~$ ping -c $[4+1] www.google.com\nPING forcesafesearch.google.com (216.239.38.120) 56(84) bytes of data.\n64 bytes from any-in-2678.1e100.net (216.239.38.120): icmp_seq=1 ttl=116 time=44.7 ms\n64 bytes from any-in-2678.1e100.net (216.239.38.120): icmp_seq=2 ttl=116 time=58.4 ms\n64 bytes from any-in-2678.1e100.net (216.239.38.120): icmp_seq=3 ttl=116 time=42.3 ms\n64 bytes from any-in-2678.1e100.net (216.239.38.120): icmp_seq=4 ttl=116 time=41.1 ms\n64 bytes from any-in-2678.1e100.net (216.239.38.120): icmp_seq=5 ttl=116 time=140 ms\n\n--- forcesafesearch.google.com ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4004ms\nrtt min/avg/max/mdev = 41.144/65.366/140.272/37.955 ms\n</code></pre></p> <p>perintah diatas akan mengirimkan icmp sebanyak 5 kali, <code>$[4+1]</code></p>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#expanding-variable","title":"Expanding Variable","text":"<p>Nilai dari sebuah variable dapat digunakan didalam sebuah command. Panggil saja variable tersebut dan sisipkan pada parameter sebuah command.</p> <pre><code>maruffarras@BrownTofu:~$ echo  \"Java home location is here {$JAVA_HOME}\"\nJava home location is here {/opt/jdk-11}\n</code></pre>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#using-shell-variable","title":"Using Shell Variable","text":"<p>Shell menyimpan informasi yang berguna bagi shell session pada tempat yang dimanakan variable. Contoh variable seperti yang sering digunakan seperti <code>$PATH</code> atau <code>$USER</code>.</p> <p>Untuk melihat daftar shell anda dapaat menggunakan command <code>ser</code></p> <pre><code>maruffarras@BrownTofu:~$ set | head #(1)!\nBASH=/bin/bash\nBASHOPTS=checkwinsize:cmdhist:complete_fullquote:expand_aliases:extglob:extquote:force_fignore:globasciiranges:histappend:interactive_comments:progcomp:promptvars:sourcepath\nBASH_ALIASES=()\nBASH_ARGC=([0]=\"0\")\nBASH_ARGV=()\nBASH_CMDS=()\nBASH_COMPLETION_VERSINFO=([0]=\"2\" [1]=\"11\")\nBASH_LINENO=()\nBASH_SOURCE=()\nBASH_VERSINFO=([0]=\"5\" [1]=\"1\" [2]=\"8\" [3]=\"1\" [4]=\"release\" [5]=\"x86_64-pc-linux-gnu\")\n</code></pre> <ol> <li>Command <code>head</code> diatas hanya ingin menampilkan bagian paling atas saja</li> </ol>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#creating-and-using-aliases","title":"Creating and using aliases","text":"<p>Menggunakan <code>aliases</code> kita dapat membuat singkatan dari command yang panjang. Untuk membuat sebuah alias, gunakan perintah <code>alias</code> diikut dengan nama dari alias dan command yang ingin dibuat singkatannya. Misalkan</p> <pre><code>maruffarras@BrownTofu:~$ alias testp='echo \"this is test print\"'\nmaruffarras@BrownTofu:~$ testp\nthis is test print\n</code></pre> <p>Untuk melihat daftar alias gunakan perintah <code>alias</code> tanpa diberikan flag apapun. <pre><code>alias laravel='~/./.config/composer/vendor/bin/laravel '\nalias ll='ls -alF'\nalias ls='ls --color=auto'\nalias note-mkdocs='source '\\''/home/maruffarras/Virtual Env Python/notes/bin/activate'\\'''\nalias pycharm='./IDE/pycharm\\ s/bin/pycharm.sh'\nalias testp='echo \"this is test print\"'\n</code></pre></p> <p>Dapat dilihat alias <code>testp</code> yang dibuat terdaftar pada hasil output diatas.</p> <p>Untuk menghapus alias dari daftar alias gunakan perintah <code>unalias</code> diikut dengan nama alias.</p> <pre><code>maruffarras@BrownTofu:~$ unalias testp\nmaruffarras@BrownTofu:~$ testp\nCommand 'testp' not found,\n</code></pre> <p>Warning</p> <p>Membuat sebuah alias menggunakan <code>alias</code> hanya akan ada didalam system shell sementara,artinya jika session shell tersebut berakhir maka alias tersebut akan hilang. Jika menginginkan alias permanane buat alias didalam configuration file.</p>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#creating-your-shell-environment","title":"Creating Your Shell Environment","text":"<p>Anda dapat membuat sebuah environment yang mempermudah anda seperti membuat alias dari command panjang yang sering dipakai atau membuat shell variabel untuk menyimpan informasi yang sering dipakai. Dengan manambah setting pada shell configuration files, anda dapat menyimpan setting setiap anda membuka shell.</p> <p>Bash Configuration Shell</p> File Descriptions <code>/etc/profile</code> This sets up user environment information for every user. It is executed when you first log in. This  file provides values for your path in addition to setting environment variables for such things as the location of  our mailbox and the size of your history files. Finally, <code>/etc/profile</code> gathers shell settings from configuration files in the /etc/ for every user who runs the Bash shell each time a Bash shell is opened. It sets the default prompt and may add one or more aliases. Values in this file can be overridden by information in each user\u2019s <code>~/.bashrc file</code>. <code>/etc/bash.bashrc</code> This executes for every user who runs the Bash shell each time a Bash shell is opened. It sets the default prompt and may add one or more aliases. Values in this file can be overridden by information in each user\u2019s <code>~/.bashrc</code> file. <code>~/.profile</code> This is used by each user to enter information that is specific to his or her use of the shell. It is executed only once\u2014when the user logs in. By default, it sets a few environment variables and executes the user\u2019s .bashrc file. This is a good place to add environment variables because, once set, they are inherited by future shells. This file will be overruled if a <code>~/.bash</code> _ profile file exists. <code>~/.bashrcs</code> This contains the information that is specific to your Bash shells. It is read when you log in and also each time you open a new Bash shell. This is the best location to add aliases so that your shell picks them up. <code>~/.bash_logout</code> This executes each time you log out (exit the last Bash shell). <p>Untuk merubah file konfigurasi <code>/etc/bash.bashrc</code> atau <code>/etc/profile</code> harus menggunakan root user. Akan tetapi sangat disarankan untuk tidak membuat konfigurasi langsung pada kedua file tersebut namun buatlah sebuah file ekstensie sh dan diletakan pada alamat <code>/etc/profile.d/</code>. Anda dapat melihat kode dibawah ini bagaimana semua file sh pada <code>/etc/prfile.d</code> dieksekusi.</p> /etc/profile<pre><code># /etc/profile: system-wide .profile file for the Bourne shell (sh(1))\n# and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).\n\nif [ \"${PS1-}\" ]; then\n  if [ \"${BASH-}\" ] &amp;&amp; [ \"$BASH\" != \"/bin/sh\" ]; then\n    # The file bash.bashrc already sets the default PS1.\n    # PS1='\\h:\\w\\$ '\n    if [ -f /etc/bash.bashrc ]; then\n      . /etc/bash.bashrc\n    fi\n  else\n    if [ \"$(id -u)\" -eq 0 ]; then\n      PS1='# '\n    else\n      PS1='$ '\n    fi\n  fi\nfi\n\nif [ -d /etc/profile.d ]; then\n  for i in /etc/profile.d/*.sh; do\n    if [ -r $i ]; then\n      . $i\n    fi\n  done\n  unset i\nfi\n</code></pre> <p>Info</p> <p>yang perlu diingat<code>/etc/profile</code> dieksekusi saat system start, bukan saat login atau shell membuat shell baru.</p>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#setting-your-prompt","title":"Setting your prompt","text":"<p>Prompt anda terdiri dari beberapa kumpulan karakter yang muncul setiap kali shell siap untuk menerima perintah. Kumpulkan karakter pada environment variable <code>PS1</code> adalah yang digunakan pada prompt anda.</p> <p>Bawaanya pada system Ubunut, prompt yang dibentuk dari karakter-karakter memberikan informasi, seperti username, hostname, dan base name of current working directory lalu diikuti dengan tanda dolar <code>$</code> yang menunjukan reguler user dan <code>#</code> yang menunjukan root user.</p> <pre><code>maruffarras@BrownTofu:~$ #(1)!\n</code></pre> <ol> <li>username@hostname:~$</li> </ol> <p>Jika anda menggatin direktori, maka basename dari current direktori akan tampil pada prompt.</p> <pre><code>maruffarras@BrownTofu:~/Documents$ \n</code></pre> <p>Ada juga dapat membuat costume prompt sendiri dengan meng-export environment variabel <code>PS1</code>. Jika ingin merubahnya secara permanen export variabel tersebut pada file <code>~/.bashrc</code>. Namun perlu diingat export variable tersebut harus diletakan dibawah dari penetapan <code>PS1</code> bawaan dari ubuntu.</p> ~/.bashrc<pre><code>if [ \"$color_prompt\" = yes ]; then\n    PS1='${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ '\nelse\n    PS1='${debian_chroot:+($debian_chroot)}\\u@\\h:\\w\\$ '\nfi\nunset color_prompt force_color_prompt\n\n# costume prompt\nexport PS1='\\u@\\h'#(1)!\n\n# Output (2)\n</code></pre> <ol> <li>Letakan tempat dibawah inisiasi <code>PS1</code> bawaan dari Ubuntu</li> <li>Jika anda membuka shell baru maka prompt akan ditiban menjadi <code>maruffarras@BrownTofu</code></li> </ol> Dibawah ini adalah contoh pembuatan costume propt sementara, (tidak menulis didalam .bashrc) informasi prompt yang saya buat adalah sebagai berikut,  <p>nomor urut . Current Date-username @ hostname : userprompt display full path current direktory</p> <p><pre><code>maruffarras@BrownTofu:~$ export PS1='\\#.\\d-\\u@\\h:\\$\\w'\n2.Jum Mar 03-maruffarras@BrownTofu:$~pwd\n/home/maruffarras\n3.Jum Mar 03-maruffarras@BrownTofu:$~\n</code></pre> Dan dibawah ini adalah daftar karakter yang dapat menambah informasi pada prompt</p> Special Character Description <code>\\!</code> Menampilkan current history number. Termasuk semua perintah sebelumnya dari user anda <code>\\#</code> Menampilkan curretn history number. Hanya termasuk perintah dari shell yang aktif <code>\\$</code> Menampilkan user prompt <code>$</code> dan <code>#</code> untuk root user <code>\\W</code> Hanya menampilkan direktori saat ini, namun hanya basename saja. Contoh, misalkan alamatnya adalah <code>/opt/other/agent</code> maka hanya akan ditampilkan <code>agent</code> <code>\\[</code> This precedes a sequence of nonprinting characters. This can be used to add a terminal control sequence into the prompt for such things as changing colors, adding blink effects, or making characters bold. (Your terminal determines the exact sequences available.) <code>\\]</code> This follows a sequence of nonprinting characters. <code>\\\\</code> Menampilkan backslash <code>\\</code> <code>\\d</code> Menampilkan tanggal saat ini, <code>Jum Mar 03</code>. Format mengikuti system <code>\\h</code> Menampilkan hostname komputer tersebut <code>\\n</code> Membuat baris baru <code>\\nnn</code> Menambilkan bilangan yang berhubungan dengan ocatal number dengan menggati <code>nnn</code> <code>\\s</code> Menampilkan shell name saat ini, untuk Bash shell akan menjadi <code>bash</code> <code>\\t</code> Menampilkan waktu jam, menit dan detik saat ini, contoh, <code>09:04:23</code> <code>\\u</code> Menampilkan current username <code>\\w</code> Menampilkan alamat lengkap dari direktori saat ini","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#adding-environment-variables","title":"Adding environment variables","text":"<p>Kita telah mencoba mengedit environment variable saat membuat costume prompt pada file <code>~/.bashrc</code>. Dibawah ini contoh saya membuat environment variable untuk membuat JAVA_HOME. ~/.bashrc<pre><code>export JAVA_HOME=/opt/jdk-11\n</code></pre></p> <pre><code>maruffarras@BrownTofu:~$ echo $JAVA_HOME\n/opt/jdk-11\n</code></pre>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#getting-information-about-command","title":"Getting information about command","text":"<p>Sudah ada catatan pada location command bagaimana shell mencari command yang diketik dari alamat yang ada pada environment variabel <code>$PATH</code> dengan urutan dari kiri \u2192 kanan. Katakan kita ingin melihat daftar command yang ada pada folder bin</p> <pre><code>maruffarras@BrownTofu:~$ echo $PATH\n/home/maruffarras/anaconda3/condabin:/home/maruffarras/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/\nsbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin:/opt/jdk-11/bin:/opt/kafka/kafka_2.13-3.4.0/bin\n\nmaruffarras@BrownTofu:~$ ls /bin\n gtk4-encode-symbolic-svg             pygmentize\n 2to3-2.7                             gtk4-launch                        pyjwt3\n aa-enabled                           gtk4-query-settings                python2.7\n aa-exec                              gtk4-update-icon-cache             python3\n aa-features-abi                      gtk-builder-tool                   python3.9\n</code></pre> <ul> <li> Menggunakan perintah <code>help</code> Beberapa perintah tidak ada didalam direktori, artinya tertanam didalam shell. Perintah <code>help</code> menampilkan daftar command yang tertanam. Dan untuk mengetahui deskripsi dari perintaht tersebut anda dapat menambahkan nama perintahnya setalah perintah <code>help</code> <pre><code>maruffarras@BrownTofu:~$ help cd\n</code></pre> </li> <li> Menggunakan option <code>--help</code> Anda juga dapat menggunakna opsi <code>--help</code> untuk mengetahui informasi dari sebuah perintah. Biasanya didalam manual tersebut terdapat parameter dari perintah tersebut yang bisa diisi dengan argumen dan penjelsan dari setiap paramter tersebut. </li> <li> Menggunakan perintah <code>man</code> atau <code>info</code> Adalah tool yang dapat digunakan untuk melihat dokumentasi dari sebuah perintah. Biasanya, sebuah informasi dari perintah yang ada pada perintah <code>info</code> selalu lebih ada dibandingkan dengan yang ada pada perintah <code>man</code>. </li> </ul> <p>Perintah <code>man</code> memliki beberapa section, jika section tersebut disediakan dalam bentuk parameter maka <code>man</code> akan menuju langsung ke section tersebut. Bawaanya, jika tidak diberikan parameter section, man akan mencari dari seluruh section yang diberikan lalu mengembalikan halaman pertama yang ditemukan. Tabel dibawah ini adalah daftar section dari <code>man</code>.</p> Section number Section name Description 1 Executable programs or shell commands Command yang dapat dijalankan di shell oleh user umum (Biasanya tidak perlu akses administrative) 2 System calls Programming function yang digunakan didalam sebuah aplikasi untuk berinteraksi (memanggil) dengan kernel 3 Library calss (C Library function) Programming function yang menyediakan interface untuk pustaka programming tertentu (seperti graphical interface) 4 Device and Special files Filesystem nodes that represent hardware devices (such as terminals or CD drives) or software devices (such as random number generators) 5 File formats and Conventions Types of files (such as a graphics or word processing file) or specific configuration files (such as the passwd or group file) 6 Games Games available on the system 7 Miscellanous Overviews of topics such as protocols, filesystems, character set standards, and so on 8 System Administration Tools and Daemons Commands that require root or other administrative privileges to use <p>Perintah <code>man</code> memliki parameter <code>-k</code> yang berguna untuk mencari manual page yang mirip dengan parameter yang diberikan setelah flag <code>-k</code>. Katakan kita ingin melihat semua manual page yg tersedia dari perintah <code>passwd</code>.</p> <p>Deskripsi flag <code>-k</code></p> <p>you can search the name and summary sections of all man pages installed on the system</p> <pre><code>maruffarras@BrownTofu:~$ man -k passwd\nkpasswd (1)          - change a user's Kerberos password\nchgpasswd (8)        - update group passwords in batch mode\nchpasswd (8)         - update passwords in batch mode\nfgetpwent_r (3)      - get passwd file entry reentrantly\ngetpwent_r (3)       - get passwd file entry reentrantly\ngpasswd (1)          - administer /etc/group and /etc/gshadow\ngrub-mkpasswd-pbkdf2 (1) - generate hashed password for GRUB\nhtpasswd (1)         - Manage user files for basic authentication\nopenssl-passwd (1ssl) - compute password hashes\npam_localuser (8)    - require users to be listed in /etc/passwd\npasswd (1)           - change user password\npasswd (1ssl)        - compute password hashes\npasswd (5)           - the password file\npasswd2des (3)       - RFS password encryption\nupdate-passwd (8)    - safely update /etc/passwd, /etc/shadow and /etc/group\n</code></pre> <p>Angka yang ada didalam tanda kurung mengidikasi section dari manual page pada tabel diatas. Katakan kita ingin melihat file format dari perintah <code>passwd</code> dari pada inging melihat manual dari perintah shell commandnya. Untuk itu gunakan contoh berikut <code>man 5 passwd</code></p> <p>Saat anda menampilkan halama man page, anda dapat mencari text tertentu dengan mengetik forward slahs <code>/</code> diikuti dengan informasi yang ingin dicari. Anda juga dapat mencari previous atau next nilai yang dicari dengan menekan <code>N</code> for previous atau <code>n</code> for next. Untuk keluar dari manual page gunakan <code>q</code>.</p> <p>Note</p> <p>Jika <code>man -k</code> tidak mengeluar nilai sama sekali, bisa jadi database pada man page belum terinisiasi. Untuk itu ketik <code>mandb</code> sebagai root user untuk menginisialisasi man page databases.</p>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/01.%20Using%20the%20shell/#exercise","title":"Exercise","text":"Pertanyaan 1 <p>From your desktop, switch to the third virtual console and log in to your user account. Run a few commands. Then exit the shell and return to the desktop.</p> Jawaban <p>Gunakan shortcut Ctrl + Alt + <code>f2</code>, atau Ctrl + Alt + <code>f3</code> dan atau Ctrl + Alt + <code>f4</code>. Baca lebih lanjut di menggunakan virtual console</p> Pertanyaan 2 <p>Open a Terminal window and change the font color to red and the background to yellow.</p> Jawaban <p></p> Pertanyaan 3 <p>Find the location of the <code>mount</code> command and the <code>tracepath</code> man page.</p> Jawaban <pre><code>maruffarras@BrownTofu:~$ which -a mount\n/usr/bin/mount\n/bin/mount\nmaruffarras@BrownTofu:~$ which -a tracepath\n/usr/bin/tracepath\n/bin/tracepath\n</code></pre> <p>Baca lebih lanjut mengenail command <code>locate</code> dan <code>which -a</code> di Locating Command</p> Pertanyaan 4 <p>Type the following three commands, and then recall and change those command as described: <pre><code>$ cat /etc/passwd\n$ ls $HOME\n$ date\n</code></pre></p> <ol> <li>Use the command-line recall feature to recall the cat command and change /etc/passwd to /etc/group.</li> <li>Recall the ls command, determine how to list files by time (using the man page), and add that option to the ls $HOME command line.</li> <li>Add format indicators to the date command to display the date output as month/day/year.</li> </ol> Jawaban 1 <pre><code>maruffarras@BrownTofu:~$ cat /etc/group #(1)!\nroot:x:0:\ndaemon:x:1:\nbin:x:2:\nsys:x:3:\n</code></pre> <ol> <li>Pencet Up hingga muncul command yang dibutuhkan, lalu rubah command sesuai dengan perintah. Atau anda gunakan reverse search dengan menggunakan Ctrl + <code>r</code> lalu ketik beberapa kata perintah.</li> </ol> <p>Baca lagi tentang command-line recall</p> Jawaban 2 <pre><code>maruffarras@BrownTofu:~$ ls -tlar $HOME\ntotal 15280\n-rw-rw-r--  1 maruffarras maruffarras   57721 Sep 30  2021  composer-setup.php\n-rw-r--r--  1 maruffarras maruffarras     807 Des 30  2021  .profile\n-rw-r--r--  1 maruffarras maruffarras     220 Des 30  2021  .bash_logout\ndrwxr-xr-x  3 maruffarras maruffarras    4096 Des 30  2021 'Development Apps'\ndrwxr-xr-x  3 maruffarras maruffarras    4096 Des 30  2021  etcher\ndrwxr-xr-x  2 maruffarras maruffarras    4096 Des 30  2021  kotlin\n</code></pre> Jawaban 3 <pre><code>maruffarras@BrownTofu:~$ date +%D\n03/03/23\n</code></pre> Pertanyaan 5 <p>Run the following command, typing as few characters as possible (using tab completion): <code>basename /usr/share/doc/</code></p> <p>Tidak ada output</p> Pertanyaan 6 <p>Use the cat command to list the contents of the /etc/services file and pipe those contents to the less command so that you can page through it (type q to quit when you are finished).</p> Jawaban <pre><code>maruffarras@BrownTofu:~$ cat /etc/services | less\n</code></pre> <p>Baca lagi tentang piping command</p> Pertanyaan 7 <p>Run the <code>date</code> command in such a way that the output from that command produces the current day, month, date, and year. Have that read into another command line, resulting in text that appears like the following (your date, of course, will be different): Today is Thursday, December 19, 2019.</p> Jawaban <pre><code>maruffarras@BrownTofu:~$ echo \"Today is $(date)\"\nToday is Jum 03 Mar 2023 11:31:29  WIB\n</code></pre> <p>Baca lagi tentang expanding command</p> Pertanyaan 8 <p>Using variables, find out what your hostname, username, shell, and home directories are currently set to.</p> Jawaban <pre><code>maruffarras@BrownTofu:~$ echo $HOSTNAME\nBrownTofu\nmaruffarras@BrownTofu:~$ echo $USERNAME\nmaruffarras\nmaruffarras@BrownTofu:~$ echo $SHELL\n/bin/bash\nmaruffarras@BrownTofu:~$ echo $HOME\n/home/maruffarras\n</code></pre> <p>Baca lagi tentang creating and using aliases</p> Pertanyaan 9 <p>Create an alias called mypass that displays the contents of the <code>/etc/passwd</code> file on your screen in such a way that it is available every time you log in or open a new shell from your user account.</p> Jawaban <p>Agar <code>alias</code> selalu dapat diakses walaupun session shell sudah habis atau login baru maka buat alias didalam file <code>~/.bashrc</code> alih-alih  membuat langsung pada shell.</p> ~/.bashrc<pre><code>alias mypass='cat /etc/passwd'\n</code></pre> Pertanyaan 10 <p>Display the man page for the <code>mount</code> system call.</p> Jawaban <p><code>mount (2) - mount filesystem</code></p> <pre><code>maruffarras@BrownTofu:~$ man mount\n</code></pre> <p>Alhamdulillah segala puji bagi Allah, tuhan satu-satunya yang berhak disembah dengan benar. Semoga bagian catatan ini bermanfaat bagi diri saya, Aamiin.</p>","boost":0.5},{"location":"Technology/Catatan%20Linux%20Bible/02.%20File%20system/","title":"File System","text":"<p>Linux filesystem adalah sebuah strukturk yang mana semua informasi didalam komputer disimpan. Nyatanya, satu dari properti yang terdefinisi dari UNIX system yang mana linux berdasar hampir semua yang dibutuhkan untuk mengindefitikasi sistem direperesentasikan oleh item-item pada filesystem.</p> <p>Pada linux, file terorganisasi dalam bentuk heirarki direktori. Setiap direktori dapat mengandung file-file dan direktori-direktori. Dibawah ini adalah hierarki filesystem pada linux.</p> <pre><code>    stateDiagram-v2\n        [*] --&gt; bin\n        [*] --&gt; boot\n        [*] --&gt; dev\n        [*] --&gt; home\n        [*] --&gt; etc\n        [*] --&gt; media\n        [*] --&gt; lib\n        [*] --&gt; mnt\n        [*] --&gt; misc\n        [*] --&gt; proc\n        [*] --&gt; opt\n        [*] --&gt; sbin\n        [*] --&gt; root.\n        [*] --&gt; tmp\n        [*] --&gt; usr\n        [*] --&gt; var\n\n        home --&gt; maruffarras\n        maruffarras --&gt; Dekstop\n        maruffarras --&gt; Documents\n        maruffarras --&gt; Downloads\n        maruffarras --&gt; Music\n        maruffarras --&gt; Pictures\n        maruffarras --&gt; Data_Jobs\n        Data_Jobs --&gt; Vensys\n        Data_Jobs --&gt; AMN\n        AMN --&gt; Analis.docx</code></pre> <p>Anda juga dapat melihat folder parent dari setiap subfolder filesystem dengan perintah <code>ls</code> pada root folder. <pre><code>maruffarras@BrownTofu:~/Documents/Notes/kertas-pena$ ls /\nbin  boot  cdrom  dev  etc  home  lib  lib32  lib64  libx32  lost+found  media  mnt  opt  proc  root  run  sbin  \nsnap  srv  sys  tmp  usr  var\n</code></pre></p> <p>Dibawah ini adalah tabel yang menjelaskan fungsi dari direktori linux;</p> Direktori Keterangan <code>/bin</code> Mengandung perintah umum user, seperti <code>ls</code>, <code>date</code>, <code>sort</code> <code>/boot</code> Berisikan bootable linux kernel, initial RAM disk, dan bootloader configuration files (GRUB) <code>/dev</code> <code>/etc</code> Berisikan file untuk konfigurasi administrasi <code>/home</code> Berisikan direktori yang terikat dengan user ketika hanya user tersebut login (Namun user root sebuah pengecualians) <code>/media</code> Menyediakan lokasi standard untuk pemasanag driver otomatis <code>/lib</code> Berisikan pustaka bersama yang dibutuhkan oleh aplikasi pada <code>/bin</code> dab <code>/sbin</code> untuk menge-boot system <code>/mnt</code> <code>/opt</code> Struktur direktori yang digunakan untuk menyimpan add-on sebuah aplikasi <code>/proc</code> Berisikan informasi tentang systems resource <code>/root</code> Merepresentasikan direktori home dari root <code>/sbin</code> Berisikan perintah administrative dan daemon procesess <code>/snap</code> Direktori home untuk filesystem yang digunakan oleh snap package management system <code>/sys</code> Berisikan parameter seperti tuning block storage dan mengatur cgroups <code>/tmp</code> Berisikan file sementara yang digunakan oleh aplikasi <code>/usr</code> Berisikan user documentation, games, graphical files(<code>X11</code>), libraries(<code>lib</code>), dan berbagai macam perintah dan file yang tidak digunakan selamat program di boot. <code>/var</code> Berisikan direktori-direktori dari data yang digunakan oleh berbagai macam program. Seringkali digunakan untuk menyimpan file berbagi menggunakan FTP Server <code>/var/ftp</code> atau HTTP SERVER <code>/var/www</code>. Juga berisikan log dari file system <code>/var/log</code> dan spool files <code>/var/spool</code> seperti mail, cups,dan news"},{"location":"Technology/Catatan%20System%20Analys/0.%20Zeronote/","title":"0. Zeronote","text":"<p>Ada dua dokumen yang harus dibuat oleh sebuah System Analys diantaranya adalah Business Specification (BS) dan Function Specification (FS).</p> <p>BS, dibuat sebagai jembatan antara pengembang dengan client untuk mencapai persetujuan berjalannya sebuah projek. Jika persetujuan tersebut telah dilakukan maka selanjutnya dibuatlah FS. FS ini adalah dokumen komunikasi antara system analys dengan developer, karena dokumen tersebut berisikan detail hal-hal yang ada pada BS (tidak teralu mendalam)</p>"},{"location":"Technology/Catatan%20System%20Analys/1.%20The%20System%20Analyst%20and%20System%20Development/","title":"The System Analyst and System Development","text":"<p>Empat bagian utama dari System Development Life Cycle (SDLC) planing, analysis, design dan implementation berdiri sebagain sebuah framework untuk mengembangkan sistem informasi (System Information) selanjutnya disingkat menjadi IS. </p> <p>Cara sebuah organisasi untuk dapat mengidentifikasi dan memulai potensi projek dengan diskusi. Langkah awalnya adalah mengidentifikasi sebuah projek yang nantinya akan dideliver kedalam sebuah bisnis dan membuat system request yang menyediakan informasi dasar tentang sistem yang diajukan.</p>"},{"location":"Technology/Catatan%20System%20Analys/1.%20The%20System%20Analyst%20and%20System%20Development/#introduction","title":"Introduction","text":"<p>System Development Life Cycle (SDLC) adalah sebuah proses untuk menentukan bagaimana Information System dapat memenuhi kebutuhan bisnis, mendesain system, membuat system dan men-delivernya ke user.</p> <p>System Analyst memaikan peranan kunci dalam SDL, menganalis situasi bisnis, mengindetifikasi kesempatan untuk pengembangan, dan men-desain IS untuk mengimplementasi pengembangan tersebut. Sebagai system analys, kita akan berkerja dengan bermacam orang, termasuk pakar bisnis dan teknik.</p> <p>Sangat penting untuk diingat, objektif utama dari seorang sistem analis bukanlah membuat sistem yang mewah dan powerfull akan tetapi tujuan utamanya adalah membuat sistem yang bernilai untuk organisasi, pada umumnya meningkatkan profit dari perusahaan.</p> <p>Perhatian</p> <p>Banyak sebuah projek gagal karena sistem analis membuat sistem tanpa pemahaman yang jelas bagaimana sistem dapat  mendorong tujuan dari perusahaan, meningkatkan proses bisnis, dan mengintegrasikan sistem dengan sistem lainnya untuk menyediakan nilai.</p> <p>InsyaAllah, pada catatan akan dibahas tentang peranan dari sistem analis pada projek pengembangan sistem, diataranya yang dibahas.</p> <ul> <li>Skill yang harus dimiliki oleh sistem analis</li> <li>Basik SDLC yang harus diikuti oleh sistemanalis</li> <li>Membahas bagaimana projek diidentifikasi dan diinisiasi dalam sebuah organisasi dan bagaimana memulai untuk menjelaskan dalam bentuk system request</li> <li>Menmbahas bagaimana analisis kelayakan dijalankan, yang mana mengarah pada keputusan apakah melanjutkan sebuah projek</li> </ul>"},{"location":"Technology/Catatan%20System%20Analys/1.%20The%20System%20Analyst%20and%20System%20Development/#the-system-analyst","title":"The System Analyst","text":"<p>Sistem analaisi memiliki peranan pada pengembangan IS. Sistema analis bekerja dengan sebuah anggota pengembang tim sehingga team dapat mengembangakan sistem yang tepat dan efektif. Sistem analis harus dapat memahami bagaimana mengapalikasikan teknologi untuk menyelesaikan masalah bisnis.</p> <p>Sebagai tambahan,sistem analis adalah agen perubahan yang memahami kebutuhan informasi untuk perkembangan dari sebuah bisnis, men-desain sistem untuk memenuhi kebutuhan tersebut dan memotivasi pengguna untuk menggunakan sistem.</p>"},{"location":"Technology/Catatan%20System%20Analys/1.%20The%20System%20Analyst%20and%20System%20Development/#system-analys-skill","title":"System Analys Skill","text":"<p>Sistem yang baru akan merubah organisasi dan semua civitas didalamnya. Agar sebuah perubahan pada organsasi berhasil membutuhkan usahan yang tidak mudah. Memahami apa yang berubah, bagaimana merubahnya, dan meyakinkan orang lain tentang perlunya perubahan membutuhkan keterampilan yang luas. Keahlian tersebut dapat dipecah menjadi enam kategori besar;</p> <ol> <li>Technical</li> <li>Bussines</li> <li>Analytical</li> <li>Interpersonal</li> <li>Management</li> <li>Ethical</li> </ol> <code>Technical</code> Seorang analisis harus memliki keahlian teknik untuk memahami ruang lingkup teknologi yang eksis pada organisasi, pondasi dari sitem baru, dan bagaimana kedua sistem tersebut dapat cocok sehingga menjadi solusi teknik yang terintegrasi. <code>Bussiness</code> Keahlian bisnis juga diperlukan oleh seorang analis untuk mengetahui bagaimana sebuah teknologi dapat diterapkan didalam sebuah bisnis yang tentunya menghasilkan sebuah nilai dengan adanya terapan tersebut. <code>Analytical</code> Sistem analasi secara berjelanjutan memcahkan masalah pada sisi projek dan menejemen. Hasil analisa sistem analis yang memecah masalah keduanya. <code>Iterpersonal</code> &amp; <code>Management</code> Seringkali sistem analis harus berkomunikasi secara efektif, one-to-one dengan pengguna, manajer bisnis (sering kali memliki pengalaman yang sedikit tentang teknologi), dengan programer, dan pakar teknisi lainya. Seorang analis harus mampu mempresentasikan ke group besar atau kecil serta membuat laporan atas hasil presentasi tersebut. Bukan hanya sistem analis harus memliki kemampuan iterpersonal yang bagus,namun mereka juga harus mampu mengelola orang yang berkerja dengannya dan mereka harus mengelola tekanan dan resiko atas situasi yang tidak jelas. <code>Ethical</code> analis harus memiliki sifat adil, jujur, dan etis dengan anggota tim proyek lainnya, manajer, dan pengguna sistem. Analis sering berurusan dengan informasi atau informasi rahasia bahwa, jika dibagikan dengan orang lain, dapat menyebabkan kerugian (misalnya perbedaan pendapat di antara karyawan); itu penting untuk analis untuk menjaga keyakinan dan kepercayaan dengan semua orang."},{"location":"Technology/Catatan%20System%20Analys/1.%20The%20System%20Analyst%20and%20System%20Development/#system-analyst-roles","title":"System Analyst Roles","text":"<p>Semakin besar sebuah organisasi dan teknologi menjadi semakin kompleks, kebanyakan organisasi besar sekarang membangun sebuah projek tim dengan menggabungkan beberapa sistem analis dengan perbedaan peran yang saling melengkapi. Diorganisasi yang kecil, sistem analis memegan beberap peran sekaligus.</p> <code>System Analyst</code> <p>Peran System Analyst berfokus pada isu sekitaran system. Orang ini mengembangakan sebuah ide, dan saran tentang bagaimana sebuah IT dapat mendukung dan mengembangkan proses bisnis, membantu mendesain proses bisnis baru dengan dukungan IT, mendesai IS dan memastikan semua IS terawat.</p> <p>Skill yang harus dimiliki</p> <p>Memiliki keahilan dalam analisis, desain sistem dan bahasa pemrograman.</p> <code>Business Analyst</code> <p>Peran Business Analyst berfokus pada bisnis yang berkaitan dengan sistem. Orang ini mengeidentifikasi nilai bisnis yang dapat sistem buat, mengembangkan ide untuk meningkatkan proses bisnis, dan membantu mengembangkan proses bisnis baru dan kebijakan.</p> <p>Skill yang harus dimilikis</p> <p>Memiliki keahilan dalam bidan bisnis dan ditambah keahlikan analisis dan desain, desain.</p> <code>Infrastructured Analyst</code> <p>Analis ini berfokus pada isu teknik berkaitan dengan bagaimana sistem beriteraksi dengan teknik infrastruktur organisasi (hardward, software, network, dan database). Orang ini memastikan sistem yang baru sesuai dengan standar organisasi atau mengidentifikasi perubahan yang dibutuhkan pada sisi infrastruktur agar sistem baru dapat berjalan. </p> <p>Skill yang harus dimilikis</p> <p>Memiliki keahilan dalam networking, database administration, dan berbagaimacam produk perangkat keras dan lunak lainnya.</p> <code>Change Management Analyst</code> <p>Analis ini berfokuas pada ise terhadap orang atau managemen sekitaran penerapan sistem baru. Orang ini memastikan tersedianya dokumentasi yang memadai, dan support yang tersedia bagi user, serta mengembangkan cara penyelesaian atas hal yang menolak dalam perubahan sistem ini.</p> <p>Skill yang harus dimilikis</p> <p>Memiliki keahilan dalam prilaku bisnis, dan keahlian spesifik pada manajemen perubahan.</p> <code>Project Manager</code> Project manager memastikan sebuah projek selsai tepat waktu dan pengluaran biaya sesuai dengan budget. Project Manager biasanya analis musiman,artinya berdasarkan dengan adanya project.  <p>Macam-macam analis diatas mungkin berbeda dengan setiap perusahaan.</p>"},{"location":"Technology/Catatan%20System%20Analys/1.%20The%20System%20Analyst%20and%20System%20Development/#system-development-life-cycle-sdlc","title":"System Development Life Cycle (SDLC)","text":"<p>Mengembangkan sebuah SI mirip dengan membangun sebuah rumah. Pertama, pembeli menggambarkan rumah yang diingikan kepada developer pembangunan, pembeli mengatakan \"saya ingin rumah yang memliki 3 kamar,2 kamar mandi, garasi dalam, dan memliki ruang hijau\".</p> <p>Berdasarkan hasil diskusi tersebut, pengembang membuat gambaran awal atas permintaan model rumah dari pembeli dalam bentuk berkas gambar. Pada tahap ini, gambaran awal tersebut tidak salalu langsung disetujui, biasanya ada perubahan-perubahan gambaran awak yang disebabka bedanya persepsi bentuk rumah dari pembeli dan pengembang. Hingga pada titik tertentu gambaran awal tersebut disetujui oleh pihak pembeli dan pengembang.</p> <p>Selanjutnya, pengembang membuat gambaran yang lebih detaik dalam bentuk blueprint yang menjelaskan komponen bangunan, pemetaan kelistrikan dsb. Setelah itu rumah tersebut dibuat berdasarkan blueprint tersebut.</p> <p>Membangun sebuah aplikasi (SI) menggunakan SDLC mengikuti serangkain empat langkah (phase) fundamental: planning, analys, design, dan implementation.</p> <pre><code>flowchart LR\n    satu( Ide )\n    dua([ planning ])\n    tiga([ analys ])\n    empat([ desain ])\n    lima([ implementasi ])\n    enam(System Successs)\n    satu --&gt; dua --&gt; tiga --&gt; empat --&gt; lima --&gt; enam</code></pre> <p>Table is not completed</p>"},{"location":"Technology/Catatan%20System%20Analys/1.%20The%20System%20Analyst%20and%20System%20Development/#planning","title":"Planning","text":"<p>Fase perencanaan ini adalaha proses yang paling penting (fundamental) dalam memahami mengapa Sistem Informasi harus dibuat dan bagaiaman tim dalam projek tersebut membuat sistem tersebut. Fase ini memliki dua langkah:</p> <ol> <li> <p>Selama projek inisiasi, nilai sistem pada sebuah organisasi bisnis teridentifikasi dengan ? - bagaimana sebuah sistem dapat berkontribusi terhadap kesukesan organisasi dimasa yang akan datang ? Kebanyakan ide-ide dari sistem sering kali berasal dari luar area IS itu sendiri dan dicatat pada <code>system request</code>. System Request menyajikan rangkuman singkat dari kebutuhan bisnis dan bagaimana sistem informasi memenuhi kebutuhan tersebut sehingga membuat nilai bisnis. Departemen IS berkerja sama denga orang atau organisasi yang membuat permintaan untuk menghasilkan feasibility analysis. Analisis kelayakan memeriksa aspek-aspek kunci dari proyek yang diusulkan:</p> <ul> <li>Technical Feasibility (Dapatkah kita membuatnya ?)</li> <li>Economic Feasibility (Akankah sistem yang dibuat dapat menyediakan nilai bisnis ?)</li> <li>Organizational Feasbility (Jika kita buat, apakah akan digunakan ?)</li> </ul> <p>System request dan feasiblity analysis dipersembahkan pada komite persetujuan IS yang mana menentukan apakah projek harus diambil atau tidak ?</p> </li> <li> <p>Jika projek diterima, proses selanjutnya masuk ke bagian project management. Selama project management ini, project manager membuat rencana kerja, menyusun anggota untuk menyelesaikan projek tersebut dan membuat teknik-tekni untuk membatu mengontrol dan mengarah projek ke SDLC. Deliverable dari proses project management adalah project plan yang menjelaskan bagaimana tim projek mengembangkan sistem tersebut.</p> </li> </ol>"},{"location":"Technology/Catatan%20System%20Analys/1.%20The%20System%20Analyst%20and%20System%20Development/#analysis","title":"Analysis","text":"<p>Fase analisis harus menjawab pertanyakaan \"Siapa yang akan menggunakan sistem\", \"Apa yang sistem tersebut akan lakukan\", \"Kapan dan dimana sistem itu digunakan\". Pada fase ini project tim menginvestigasi sistem yang berjalan pada klien, menggali peluang pengembangan sistem, dan mengembangkan konsep untuk sistem yang baru. Fase ini ada tiga langkah;</p> <ol> <li> <p>Sebuah Strategi Analisis dikembangkan sebagai arahan dari project team termasuk mempelajari sistem yang sekarang ada (as-is-system), serta masalah-masalah dari sistem dahulu, dan membuat ide untuk mendesai system baru (to-be-system).</p> </li> <li> <p>Langkah selanjutnya adalah requirements gathering (informasi yang didapat melalui, interview, gorup workshops, dan atau kuisioner). Analisis informasi ini, dengan nilai masukan dari project sponsor atau orang lain yang terlibat, bertujuan mengembangkan konsep dari sistem baru (concept for new system). System requirement dijelaskan melalui kumpulan requirement statement dan kumpulan analisa model bisnis yang menjelaskan bagaimana operasi bisnis diajalankan jika sistem baru dikembangkan. Analisa model merepresentasikan penggunakan, interaksi sistem, data, dan proses yang dibutuhkan untuk mendukung proses bisnis saat yang sudah berjalan.</p> </li> <li> <p>Analisis, system concept, system requirement, dan model bisnis dikombinasikan kedalam sebuah dokumen yang disebut dengan system proposal yang nantinya dipresentasikan kepada project sponsor, dan pengambil keputusan (anggota approval comitte) yang akan memutuskan apakah project haris dilanjutkan atau dilewati.</p> </li> </ol>"},{"location":"Web%20Framework/React/","title":"Getting Started","text":""},{"location":"Web%20Framework/React/#getting-started-with-react","title":"Getting Started With React","text":"<p>Untuk membuat react app gunakan command dibawah ini</p> <pre><code>npx create-react-app kertas_pena_react #(1)!\n</code></pre> <ol> <li>Folder name (appliaction name)</li> </ol> <p>Setelah membuat project folder react, masuk ke folder tersebut</p>"},{"location":"Web%20Framework/React/#how-to-create-react-component","title":"How to create React Component","text":"<p>React adalah pustaka javascript untuk membuat user interfaces. React adalah Component-based, component bersifat independen dan dapat digunakan secara berulang. Component adalah balok bangunan dasar dari React. </p> <p>Ketika awal kita ingin membangun UI menggunakan react, sangat disaranakan untuk memulai dengan membuat mock interfaces. Karena dengan demikian akan memudahkan kita dalam mengidentifikasi jenis komponen apa yang harus dibuat dan bagaimana mereka saling berinteraksi.</p> <p></p> <p>Gambar diatas adalah mock UI, kita dapat melihat bagaimana UI dapat dipecah menjadi komponen-komponen yang terpisah. Dalam kasus ini, akan ada application root component, search bar component, table component dan table row component.</p> <p>Komponen-komponen dapat digambarkan dengan hierarki pohon, sebagaimana gambar yg ada dibawah ini. root component memliki dua komponen anak, serach komponen dan table component. Sedangkan table component memiliki satu komponen anak, row component. Penting untuk dipahami didalam react arus data memliki alur dari parent component menuju ke child component. InsyaAllah akan ada catatan juga yang membahas tentang bagaimana kita mengirim data dari parent component ke child component menggunakan<code>pros</code>.</p> <p></p> <p>React uses the virtual Document Object Model (VDOM) for selective re-rendering of the UI, which makes it more cost-effective. The VDOM is a lightweight copy of the DOM, and manipulation of the VDOM is much faster than it is with the real DOM. Afte the VDOM is updated, React compares it to a snapshot that was taken from the VDOM before updates were run. After the comparison, React will know which parts have been changed, and only these parts will be updated to the real DOM</p> <p>Komponen react dapat didefinisikan menggunakan Fungsi javascript atau ES6 JavaScript class</p> <p>Code</p> Function ComponentClass Component ES6 JavaScript class <pre><code>function App(){\n    return &lt;h1&gt;Judul&lt;/h1&gt;\n}\n</code></pre> <pre><code>class App extends React.component{\n    render(){\n        return &lt;h1&gt;Judl&lt;/h1&gt;\n    }\n}\n</code></pre> <p>Komponen yang diimplementasi menggunakan class membutuhkan fungsi <code>render()</code> untuk menampilkan dan memperbarui hasil render dari komponen. </p> <p>Info</p> <p>Jika kita lihat perbandingan App function dan class component, kita dapat lihat bahwa fungi <code>render()</code> tidak diperlukan didalam function component. Namun, sebelum React version 16.8, kita harus menggunakan class component jika ingin menggunakan states. Namun sekaramg kita dapat menggunakan hooks untuk membuat states pada function component.</p>"},{"location":"Web%20Framework/React/#lets-modified-appjs","title":"Lets modified App.js","text":"<p>Sekarang mari kita buat component <code>App</code> yang memiliki dua buah element <code>&lt;h1&gt;</code> dan <code>&lt;h2&gt;</code>. Jika komponen kita mengambalikan lebih daru satu elemen kita harus membungkusnya kedalam satu buah element parent seperti tag <code>&lt;div&gt;</code>. Namun semenjak react 16.2 kita juga dapat menggunakan fragments.</p> <p>Code</p> Using <code>div</code>Using <code>React.Fragments</code>Using shortcut <code>&lt;&gt;</code> <pre><code>function App() {\n    return (\n        &lt;div&gt;\n            &lt;h1&gt;Selamat Sore&lt;/h1&gt;\n            &lt;h2&gt;Kertas Pena React&lt;/h2&gt;\n        &lt;/div&gt;\n    );\n}\n\nexport default App;\n</code></pre> <pre><code>import React from \"react\";\n\nfunction App() {\n    return (\n        &lt;React.Fragment&gt;\n            &lt;h1&gt;Selamat Sore&lt;/h1&gt;\n            &lt;h2&gt;Kertas Pena React&lt;/h2&gt;\n            &lt;small&gt;&lt;i&gt;Ini menggunakan fragment&lt;/i&gt;&lt;/small&gt;\n        &lt;/React.Fragment&gt;\n    );\n}\n\nexport default App;\n</code></pre> <pre><code>import React from \"react\";\n\nfunction App() {\n    return (\n        &lt;&gt;\n            &lt;h1&gt;Selamat Sore&lt;/h1&gt;\n            &lt;h2&gt;Kertas Pena React&lt;/h2&gt;\n            &lt;small&gt;&lt;i&gt;Ini menggunakan fragment&lt;/i&gt;&lt;/small&gt;\n        &lt;&gt;\n    );\n}\n\nexport default App;\n</code></pre> <p>Pada akhir baris code, ada statement <code>export</code> yang meng-ekspor komponen tersebut serta dapat diakses oleh komponen lain menggunakan <code>import</code> statement. Hanya ada satu buah defailt export statement setiap file, namun dapat memiliki multiple named export statement.</p> <pre><code>export default React // Default export\nexport { name } // Named export\n</code></pre>"},{"location":"Web%20Framework/React/#inspect-indexjs","title":"Inspect index.js","text":"<p>Code</p> index.js <pre><code>import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n&lt;React.StrictMode&gt;\n    &lt;App /&gt;\n&lt;/React.StrictMode&gt;\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n</code></pre> <p>Pada awal baris kode diatas, terdapat <code>import</code> statements yang menge-load komponen komponen dan asssets untuk file tersebut. Misalkan, pada baris ke dua meng- <code>import react-dom-package</code> dari folder node_modules, dan pada baris ke 4 meng- <code>import</code> App component (App.js yang ada pada dirktori <code>src</code>). Package <code>react-dom</code> memberikan kita method-method **DOM-specific. Untuk me-render komponen react ke Data Obect Model (DOM), kita dapat menggunakan render method dari package <code>react-dom</code>. <code>React.StrictMode</code> digunakan untuk menemukan potensi masalah didalam React App dan akan mencetaknya pada browser console.</p>"},{"location":"Web%20Framework/React/#usefull-es6-feature","title":"Usefull ES6 Feature","text":"<p>ES6 dirilis pada tahun 2015 degnan mengenalkan banyak fitur. EXMAScripts adalah standarisasi scripting langauge, dna JavaScript dalah salah satu yang mengimplementasinya. Pada bagian catatan ini insyaAllah kita akan membahas fitur-fitur penting.</p>"},{"location":"Web%20Framework/React/#constants-and-variabels","title":"Constants and variabels","text":"<p><code>Constants</code> adalah _immutable variables, artinya setelah terdefinisi nilai tersebut tidak dapat berubah. Selain itu const adalah block-scoped yang mana const variable hanya dapat digunakan didalam block saat dimana terdefinisi.</p> <p>Namun, jika const mengandung object array, konten dalamnya tetap dapat diganti</p> <pre><code>const myObj = {foo: 3};\nmyObj.foo = 5; // This is ok\n</code></pre>"},{"location":"Web%20Framework/React/#arrow-functions","title":"Arrow functions","text":"<p>Code</p> Arrow function <pre><code>function(x) {\n    return x * 2;\n}\n\n// Equal dengan\n\nconst calc = x =&gt; x * 2\n</code></pre> <p>Penggunaan arrow function dan pemanggilan serta cara JavaScript-nya</p> <p>Code</p> Standard functionArrow function <pre><code>function call(x){\n    console.log(x**2)\n}\n\ncall(2) // Return : 2\n</code></pre> <pre><code>arrCal = x =&gt; x ** 2\n\narrCal(2) // Return : 2\n</code></pre> <p>Jika function body adalah sebuah ekspression, maka kita tidak peru menggunakan return statement (seperti contoh diatas). Karena expression selalu implisit mengembalikan niai. Akan tetapi, jika kita memiliki beberapa baris kode pada function body, maka kita harus menggunakan curl bracket <code>{}</code> dan mengambalikan nilainya menggunakan return statement.</p> <pre><code>const calcSum = (x, y) =&gt; {\n    console.log('Calculating sum');\n    return x + y;\n}\n</code></pre>"},{"location":"Web%20Framework/React/#template-literals","title":"Template literals","text":"<p>Cara tradisional untuk menggabungkan kalimat menggunakan operator <code>+</code>.</p> <pre><code>let person = {firstName: 'John', lastName: 'Johnson'};\nlet greeting = \"Hello \" + ${person.firstName} + \" \" + ${person.lastName};\n</code></pre> <p>Syntax template literals adalah sebagai berikut. Kita harus menggunakan single quote <code>' '</code></p> <pre><code>let person = {firstName: 'John', lastName: 'Johnson'};\nlet greeting = 'Hello ${person.firstName}\n${person.lastName}';\n</code></pre>"},{"location":"Web%20Framework/React/#clasess-and-inheritance","title":"Clasess and Inheritance","text":"<p>Class definition in ES6 is similar to other object-oriented (OO) languages, such as Java using <code>class</code>. A class can have fields, constructors, and class methods.</p> <p>Code</p> Person class <pre><code>class Person {\n    constructor(firstName, lastName) {//(1)! \n    this.firstName = firstName //(2)1\n    this.lastName = lastName\n    }\n\n    print_name(){ // (3)!\n        console.log('Hai '+${this.firstName})\n    }\n}\n</code></pre> <ol> <li>Constructor</li> <li>Field</li> <li>Method</li> </ol> <p>Code</p> <code>Employee</code> class menurunkan class <code>Person</code> <pre><code>class Employee extends Person {\n    constructor(firstName, lastName, title, salary) {\n        super(firstName, lastName);\n        this.title = title;\n        this.salary = salary;\n    }\n}\n</code></pre>"},{"location":"Web%20Framework/React/#jsx-and-styling","title":"JSX and Styling","text":"<p>JSX adalah syntax extension untuk JavaScript. Tidak wajib, namun memberikan banyak manfaat, misalkan mencegah injection (XSS) karena semua nilai diescape kedalam JSX sebelum di render. Dan yg paling pentingkan ada fitur yang membuat kita dapat menyisipkan JavaScript expression didalam pembungkins JSX <code>{}</code>.</p> <p>Code</p> we can access the component props when using JSX. <pre><code>function App() {\n    return &lt;h1&gt;Hello World {props.user}&lt;/h1&gt;;\n}\n</code></pre> <p>Code</p> You can also pass a JavaScript expression as props, as <pre><code>&lt;Hello count={2+2} /&gt;\n</code></pre> <p>Code</p> <p>=== \"You can use both internal and external styling with React JSX elements. Here are two</p> <p>examples of inline styling\"</p> <pre><code>    ```js\n    &lt;div style={{ height: 20, width: 200 }}&gt;\n        Hello\n    &lt;/div&gt;\n\n    // Atau\n\n    const divStyle = { color: 'red', height: 30 };\n    const MyComponent = () =&gt; (\n        &lt;div style={divStyle}&gt;Hello&lt;/div&gt;\n    );\n    ```\n</code></pre>"},{"location":"Web%20Framework/React/#props-and-state","title":"Props and State","text":"<p>Kita telah melihat sedikit tentang <code>props</code> dan <code>states</code> saat membahas hierarki dari komponen pada react.</p>"},{"location":"Web%20Framework/React/#props","title":"Props","text":"<p>Props adalah nilai masukan untuk components dan mereka adlah sebuah mekanisme untuk mengoper data dari parent component ke child component. Props berbentu objek JavaScript, artinya mereka dapat terdiri dari beberapa pasangan key dan value. Selain itu Props immutable, nilai tidak didalamnya tidak dapat diubah.</p> <p>Dibawa ini adalah prop life cycle</p> <p></p> <p>Code</p> Pass props from parent to child PropsAndState/SatuProps.js<pre><code>function SapaParentComponent(props){\n    return (\n        &lt;&gt;\n        &lt;Accordion&gt;\n            &lt;AccordionSummary\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"&gt;\n            &lt;Typography&gt;&lt;b&gt;Accordion 1&lt;/b&gt;&lt;/Typography&gt;\n            &lt;/AccordionSummary&gt;\n            &lt;AccordionDetails&gt;\n                &lt;Typography&gt;\n                    Selamat {props.waktu}\n                    &lt;NamaComponent name={props.name}/&gt;\n                &lt;/Typography&gt;\n            &lt;/AccordionDetails&gt;\n\n\n        &lt;/Accordion&gt;\n\n        &lt;/&gt;\n    )\n}\n\nfunction NamaComponent(props){\n    return (\n        &lt;&gt;\n            dan selamat datang {props.name}\n        &lt;/&gt;\n    )\n}\n</code></pre> <p>App.js sebagai parent class</p> ./App.js<pre><code>import SatuProps from './PropsAndState/SatuProps'\n\nfunction App() {\n    return (\n        &lt;&gt;\n            &lt;Container maxWidth=\"sm\"&gt;\n\n\n                &lt;h2&gt;Kertas Pena React&lt;/h2&gt;\n                &lt;small&gt;&lt;i&gt;Ini menggunakan fragment using only tag&lt;/i&gt;&lt;/small&gt;\n\n                &lt;hr&gt;&lt;/hr&gt;\n\n                &lt;SatuProps name='Muhammad Farras Maruf' waktu='Pagi'/&gt;\n            &lt;/Container&gt;\n        &lt;/&gt;\n    );\n}\n</code></pre>"},{"location":"Web%20Framework/React/#state","title":"State","text":"<p>Dibawah ini adalah state life cycle</p> <p></p> <p>Berbeda dengan Props, nilai dari State dapat diperbarui didalam component. State dibuat menggunakan hook function. Fungsi tersebut membutuhkan satu argumen yaitu nilai awal dari state. Fungsi yang digunakan adalah <code>useState</code>, dimana mengembalikan sebuah array dengan dua element. </p> <ul> <li>Element pertama berisikan nama dari state, </li> <li>dan element kedua adalah fungsi yang digunakan untuk memperbarui nilai dari state</li> </ul> syntax<pre><code>const [state, setState] = React.useState(intialValue);\n\n// atau\nimport React, { useState } from 'react';\nconst [state, setState] = useState(intialValue);\n</code></pre> <p>Selain itu, hook function hanya bisa digunakan didaalam function component, jika anda mendefinisikannya pada top level maka interpreter akan mengeluarkan error.</p> <p>Dibawah ini adalah snippet kode penggunaan state serta penggantian nilai dari variable tersebut menggunakan function kembalian dari <code>useState</code>.</p> <p>Code</p> PropsAndState/LearnState.js <pre><code>import { Accordion,AccordionDetails,AccordionSummary,Typography, Button } from '@mui/material';\nimport React, { useState } from 'react';\n\nfunction RootAccordian(props){\n\n    const [waktuState, setWaktuState] = useState(\"pagi\") //(1)\n\n    return (\n        &lt;Accordion&gt;\n        &lt;AccordionSummary\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"&gt;\n            &lt;Typography&gt;&lt;b&gt;{props.title}&lt;/b&gt;&lt;/Typography&gt;\n        &lt;/AccordionSummary&gt;\n        &lt;AccordionDetails&gt;\n\n            &lt;Button variant=\"outlined\" onClick = {(e)=&gt; setWaktuState(\"Sore\")}&gt; //(2)\n                Change Waktu\n            &lt;/Button&gt;\n\n            &lt;Typography&gt;\n                &lt;ParentComponent waktu={waktuState} /&gt;\n            &lt;/Typography&gt;\n        &lt;/AccordionDetails&gt;\n    &lt;/Accordion&gt;\n    )\n}\nfunction ParentComponent(props){\n\n\n\n    return(\n        &lt;&gt;\n            Selama {props.waktu}\n        &lt;/&gt;\n    )\n}\n\nexport default RootAccordian\n</code></pre> <ol> <li>Create state</li> <li>Change sate using function hook</li> </ol>"},{"location":"Web%20Framework/React/#define-state-with-objects","title":"Define state with objects","text":"<p>Kita juga dapat mendefinisikan state dengan nilai object.</p> <pre><code>const [name, setName] = useState({\n    firstName: 'Muhammad Farras',\n    lastName: 'Ma\\'ruf'\n});\n</code></pre> <p>Code</p> ropsAndState/LearnStateValueObject.js <pre><code>import { Accordion,AccordionDetails,AccordionSummary,Typography, Button } from '@mui/material';\nimport React, { useState } from 'react';\n\nfunction RootAccordian(props){\n\n    const namaLengkap = {\n        namaDepan : \"Muhammad Farras\",\n        namaBelakang : \"Ma'ruf\"\n    }\n    const [nama, setNama] = useState(namaLengkap)\n\n    return (\n        &lt;Accordion&gt;\n        &lt;AccordionSummary\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"&gt;\n        &lt;Typography&gt;&lt;b&gt;{props.title}&lt;/b&gt;&lt;/Typography&gt;\n        &lt;/AccordionSummary&gt;\n        &lt;AccordionDetails&gt;\n\n            &lt;Button variant=\"outlined\" onClick = {(e)=&gt; \n                setNama({\"namaDepan\" : \"Faris\",\"namaBelakang\" : \"Ma'ruf\"})}&gt;\n                Change Name\n            &lt;/Button&gt;\n\n            &lt;Typography&gt;\n                &lt;ChildComponent nama={nama} /&gt;\n            &lt;/Typography&gt;\n        &lt;/AccordionDetails&gt;\n    &lt;/Accordion&gt;\n    )\n}\nfunction ChildComponent(props){\n\n    return(\n        &lt;&gt;\n            Nama saya : {props.nama.namaDepan} {props.nama.namaBelakang}\n        &lt;/&gt;\n    )\n}\n\nexport default RootAccordian\n</code></pre>"},{"location":"Web%20Framework/React/#update-partial-object","title":"update partial object","text":"<p>Jika anda ingin melakukan perubahan sebagian, kita dapat menggunakan spread operator. Contoh dibawah ini menyalin <code>name</code> state objeckt dan memperbarui <code>firstName</code> dengan Jim. <pre><code>setName({ ...name, firstName: 'Jim' })\n</code></pre></p>"},{"location":"Web%20Framework/React/#stateless-component","title":"Stateless Component","text":"<p>React stateless compenent adalah murni fungsi javascript yang mengambil nilai props sebagai argument dan mengambalikanna dalam bentuk element react.</p> <p>Code</p> Contoh <pre><code>function HeaderText(props) {\nreturn (\n    &lt;h1&gt;\n        {props.text}\n    &lt;/h1&gt;\n    )\n}\nexport default HeaderText;\n</code></pre> <p>Contoh <code>HeaderText</code> component diatas adalah pure component. Sebuah component dikatakan pure (murni) jika nilai kembaliannya secara konsisten sama dengan nilai masukannya. React menyediakan <code>React.memo()</code> yang mana memberikan optimasi performa dari pure function components. Dibawah ini kita akan bungkus fungsi pure tersebut dengan <code>memo</code>.</p> <p>Code</p> Contoh <pre><code>import React, { memo } from 'react';\n\nfunction HeaderText(props) {\nreturn (\n    &lt;h1&gt;\n        {props.text}\n    &lt;/h1&gt;\n    )\n}\nexport default memo(HeaderText);\n</code></pre> <p>Sekarang komponen terender dan akan dihafal. Render selanjutnya, react akan me-render memoizednya jika <code>props</code> tidak berubah. Fungsi <code>React.memo()</code> memiliki argumen kedua yang mana kita dapat mengkostumasi kondisi render, <code>arePropsEqual()</code>.</p>"},{"location":"Web%20Framework/React/#conditional-rendering","title":"Conditional Rendering","text":"<p>Kita dapat menggunakan conditional statement untuk merender UI yang berbeda tergantung kondisi tertentu. Sebagai contohh, jika user terautentikasi maka munculkan komponen <code>&lt;Logout/&gt;</code> dan <code>&lt;Logit/&gt;</code> sebaliknya.</p> <p>Code</p> Traditional if statementLogical Operator <pre><code>function MyComponent(props) {\n    const isLoggedin = props.isLoggedin;\n    if (isLoggedin) {\n        return (\n            &lt;Logout /&gt;\n        )\n    }\n    return (\n        &lt;Login /&gt;\n    )\n}\n</code></pre> <pre><code>function MyComponent(props) {\n    const isLoggedin = props.isLoggedin;\n        return (\n        &lt;div&gt;\n            { isLoggedin ? &lt;Logout /&gt; : &lt;Login /&gt; }\n        &lt;/div&gt;\n    );\n}\n</code></pre>"},{"location":"Web%20Framework/React/#react-hooks","title":"React Hooks","text":"<p>There are certain important rules for using hooks in React. You should always call hooks at the top level in your React function component. You shouldn't call hooks inside loops, conditional statements, or nested functions.</p> <p>Ada beberapa aturan penting saat menggunakan hooks in React. </p> <ol> <li>Kita harus sellalu memanggil hooks pada tole level pada function component.</li> <li>Kita tidak dapat menggail hooks didalam perulangan</li> <li>Kita tidak dapat memanggil hooks pada conditional statements</li> <li>Atau pada nested function</li> </ol>"},{"location":"Web%20Framework/React/#usestate","title":"Usestate","text":"<p>Kita telah familiar dengan useState dimana telah ada pada catatan state.</p> <p>Code</p> PropsAndState/LearnStateLearnReactHookUseStateBatching.js <pre><code>import { Accordion,AccordionDetails,AccordionSummary,Typography, Button } from '@mui/material';\nimport React, { useState, useEffect } from 'react';\n\nfunction RootAccordian(props){\n\n    const [countSatu, setCountSatu] = useState(0)\n    const [countDua, setCountDua] = useState(0)\n\n    const countIncreament = () =&gt; {\n        setCountSatu(countSatu + 1)\n        setCountDua(countDua -1 )\n    }\n\n    // Called after every render\n    useEffect(() =&gt; {\n        console.log('Hello from useEffect')\n        // Membuktikan bahwa useState menggunakan batching\n    })\n\n    return (\n        &lt;Accordion&gt;\n        &lt;AccordionSummary\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"&gt;\n        &lt;Typography&gt;&lt;b&gt;{props.title}&lt;/b&gt;&lt;/Typography&gt;\n        &lt;/AccordionSummary&gt;\n        &lt;AccordionDetails&gt;\n\n            &lt;Button variant=\"outlined\" onClick={countIncreament} &gt;\n                Change\n            &lt;/Button&gt;\n\n            &lt;Typography variant=\"subtitle1\" gutterBottom&gt;\n                {countSatu}\n            &lt;/Typography&gt;\n            &lt;Typography variant=\"subtitle1\" gutterBottom&gt;\n                {countDua}\n            &lt;/Typography&gt;\n        &lt;/AccordionDetails&gt;\n    &lt;/Accordion&gt;\n    )\n}\n\nexport default RootAccordian\n</code></pre> <p>Component diatas, ketika kita meng-click button <code>Change</code> maka react akan melakukan render. Under the hood, react akan me-render ketika terjadi perubahan pada state</p> <p>Info</p> <p>There is also a hook function called that is useReducer recommended to use when you have a complex state</p> <p>Dimulai dari react versi 18, semua peribahan state akan di kumpulkan terlebih dahulu sebelum dirender, disebut dengan bactched. Jika kita tidak ingin batch updates pada kasus tertentu, kita dapat menggunakan pustaka <code>react-dom</code> API <code>flushSync</code>.</p> <p>Code</p> ropsAndState/LearnReactHookUseStateFlashSync.js <pre><code>const countIncreament = () =&gt; {\n\n    flushSync( () =&gt; {\n        setCountSatu(countSatu + 1) // Langsung dirender\n    })\n    setCountDua(countDua -1 ) // Render bersamaan dengan batch\n}\n</code></pre>"},{"location":"Web%20Framework/React/#useefect","title":"useEfect","text":"<p><code>useEffect</code> Hook function dapat digunakan untuk melakukan side-effects pada React Function component.</p> <pre><code>useEffect(callback, [dependencies])\n</code></pre> <p><code>callback</code> function terdiri dari side-effect logic dan <code>dependencies</code> adalah opsional array yang berisikan dependencies.</p> <p>callback function pada <code>useEffect</code> akan terpanggil setiap render dilakukan. Sebagaimana yang telah kita lihat pada snipped code pada Usestate yang mana akan menampilkan pesan kedalam console log.</p> <p>Pada kode tersebut, setiap terjadi perubahan pada state <code>countSatu</code> dan <code>countDua</code>. Namun jika argument kedua diisi dengan state tertentu, maka <code>useEffect</code> hanya akan berjalan jika kumpulan state pada argumen kedua berubah.</p> <p>Code</p> ropsAndState/LearnReactHookUseStateFlashSync.js <pre><code>// Called every render and change state countSatu\nuseEffect(() =&gt; {\n    console.log('Render flashSync')\n},[countSatu])\n</code></pre> <p>Jika argument opsional diisi dengan array kosong maka callback <code>useEffect</code> hanya akan jalan saat render pertama kali.</p> <p><code>useEffect function</code> juga dapat mengembalikan sebuah function yg mana function tersebut akan berjalan sebelum setiap effect berjalan.</p> <p>Code</p> ropsAndState/LearnReactHookUseStateFlashSync.js <pre><code>// Called every render and change state countSatu\nuseEffect(() =&gt; {\n    console.log('Render flashSync')\n\n    return () =&gt; {\n        console.log(\"This will run berfore effect\")\n    }\n},[countSatu])\n</code></pre>"},{"location":"Web%20Framework/React/#useref","title":"useRef","text":"<p>Hook <code>useRef</code> mengamblikan mutable object yang dapat digunakan. Syntax inisiasi sebagai berikut</p> <pre><code>const ref = useRef(initialValue)\n</code></pre> <p>Nilai kembalian ref memliki nilai current property yang dinisiasi dengan nilai yg diberikan pada argument <code>initialValue</code>. Namun pada contoh setelah ini, saya tidak langsung menaruh initial valuenya, akan tetapi pertama kita berikan nilai <code>null</code> lalu menggunakan JSX element ref property dan memberikan nilari ref tersebut ke useRef. Setelah itu maka input reff akan berisi Input Element dan kita gunakan untuk mengeksekusi focus function pada input tersebut.</p> <p>Code</p> ropsAndState/LearnReactHookUseRef.js <pre><code>import React, {useRef} from \"react\"\nimport { Accordion,AccordionDetails,AccordionSummary,Typography, Button, Input } from '@mui/material';\n\nfunction RootAccordian(props){\n\n    const inputRef = useRef(null)\n\n    const callBackuseRef = (e) =&gt; {\n        console.log(inputRef.current)\n        inputRef.current.focus()\n    }\n\n    return (\n        &lt;Accordion&gt;\n        &lt;AccordionSummary\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"&gt;\n        &lt;Typography&gt;&lt;b&gt;{props.title}&lt;/b&gt;&lt;/Typography&gt;\n        &lt;/AccordionSummary&gt;\n        &lt;AccordionDetails&gt;\n\n\n            &lt;Button variant=\"outlined\" onClick={callBackuseRef} &gt;\n                Change\n            &lt;/Button&gt;\n\n            &lt;Input inputRef={inputRef} id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" /&gt;\n\n        &lt;/AccordionDetails&gt;\n    &lt;/Accordion&gt;\n    )\n}\n\nexport default RootAccordian\n</code></pre> <p>Note</p> <p>Pada buku yg digunakan pada catatan ini menggunakan component <code>&lt;Input/&gt;</code> dari React, sedangkan pada catatan ini menggunakan Materail UI v.5.14.20 (pada saat catatan ini dibuat). Maka dari itu ada perbedaan saat meng-assign <code>useRef</code>. Pada MUI menggunakan attribute <code>inputRef</code> sendangkan pada buku menggunakan <code>ref</code>.</p>"},{"location":"Web%20Framework/React/#context-api","title":"Context API","text":"<p>Membagi data menggunakan Props dapat sangat merepotkan jika komponen kita sangat dalam dan kompleks. Kita harus mengopar data melalui semua komponen hingga ke yg paling dalam. Context API datang sebagai penolong, dan fitur tersebut sangat dianjurkan untuk menggunakan data yang global dan dibutuhkan oleh banyak komponen, sebagai contoh adalah autentikasi dari user </p> <p>Context dibuat menggunakan method dan method tersebut membutuhkan satu argumen yang mendifinisikan nilai default-nya. Kita dapat membuat file terpisah khusus untuk context.</p> <p>Code</p> PropsAndState/Contexts/AuthContext.js <pre><code>import React from \"react\"\n\nconst AuthContext = React.createContext('')\n\nexport { AuthContext }\n</code></pre> <p>Selanjutnya kita akan menggunakan context provider component untuk membuat context kita dapat diakses oleh component lain. Context provider component memiliki nilai <code>prop</code> yang akan dioper agar dapat dikonsumsi oleh component-component.</p> <p>Code</p> PropsAndState/LearnUsingContextAPI.js <pre><code>import React, {useRef} from \"react\"\nimport { Accordion,AccordionDetails,AccordionSummary,Typography, Button, Input } from '@mui/material'\nimport { AuthContext } from \"./Contexts/AuthContext\"\n\nconst myVariables = {nama:\"Farras\",skill:\"Spring boot and react\",hobby:\"Hiking\"}\n\nfunction RootAccordian(props){\n    const myContext = React.useContext(AuthContext)\n\n    return (\n        &lt;AuthContext.Provider value = {myVariables}&gt;\n\n            &lt;Accordion&gt;\n                &lt;AccordionSummary\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"&gt;\n                &lt;Typography&gt;&lt;b&gt;{props.title}&lt;/b&gt;&lt;/Typography&gt;\n                &lt;/AccordionSummary&gt;\n                &lt;AccordionDetails&gt;\n\n                    &lt;ParentComponent/&gt;\n\n                &lt;/AccordionDetails&gt;\n            &lt;/Accordion&gt;\n\n        &lt;/AuthContext.Provider&gt;\n    )\n}\n\n// .. cutted, isinya adalah comonent &lt;ParentComponent/&gt; dan child-nya\nexport default RootAccordian\n</code></pre> <p>Contoh diatas kita membungkus komponen <code>&lt;ParentComponent/&gt;</code> didalam <code>&lt;AuthContext.Provider/&gt;</code> menggunakan context provider component, sehingga object yang ditampung oleh <code>myVariables</code> dapat diakses oleh semua komponen termasuk child dari component <code>&lt;ParentComponent/&gt;</code></p> <p>Sekarag kita dapat mengakses nilai yang disediakan pada semua component anakan tersebut menggunakan syntax berikut. <code>const namaContext = React.useContext(AuthContext);</code></p> <p>Code</p> PropsAndState/LearnUsingContextAPI.js <pre><code>// ... lanjutan\nfunction ParentComponent(){\n    // We dont need any prop argument here\n    // Need to get Context\n    const myContext = React.useContext(AuthContext)\n    return (\n        &lt;&gt;\n            &lt;Typography&gt;\n                My name is {myContext.nama} (from parent)\n            &lt;/Typography&gt;\n            &lt;ChildComponent/&gt;\n        &lt;/&gt;\n    )\n}\n\nfunction ChildComponent(){\n    // We dont need any prop argument here\n    // Need to get Context\n    const myContext = React.useContext(AuthContext)\n    return (\n        &lt;&gt;\n            &lt;Typography&gt;\n                My Skill {myContext.skill} (From child 1)\n            &lt;/Typography&gt;\n            &lt;ChildComponent2/&gt;\n        &lt;/&gt;\n    )\n}\n\nfunction ChildComponent2(){\n    // We dont need any prop argument here\n    // Need to get Context\n    const myContext = React.useContext(AuthContext)\n    return (\n        &lt;&gt;\n            &lt;Typography&gt;\n                My Hobby {myContext.hobby} (From child 2)\n            &lt;/Typography&gt;\n        &lt;/&gt;\n    )\n}\n\nexport default RootAccordian\n</code></pre>"},{"location":"Web%20Framework/React/#handling-list-with-react","title":"Handling list with react","text":"<p>JavaScript memiliki method <code>map()</code> yang mana setara degan method pada java <code>stream.map()</code> yang mana mengamblikan nilai baru atas efek dari function pada argumen map.</p> <p>Note</p> <p>The best way to craete object</p> <pre><code>function createData(namaLengkap, namaPanggilan, tanggalLahir, umur){\n    return {namaLengkap, namaPanggilan, tanggalLahir, umur}\n}\n</code></pre> <p>Snipped kode diatas akan menghasilkan object dengan keu nama dari return value.</p> <p>Code</p> HandlingList/HandlingListWithReact.js <pre><code>import React from \"react\"\nimport { Accordion,AccordionDetails,AccordionSummary,Typography,\n    TableContainer,Table, TableHead, TableRow, TableCell, Paper, TableBody } from '@mui/material'\n\n\nfunction createData(namaLengkap, namaPanggilan, tanggalLahir, umur){\n    return {namaLengkap, namaPanggilan, tanggalLahir, umur}\n}\n\nconst myFamilyData = [\n    createData (\"Muhammad Farras Ma'ruf\",\"Farras\",\"27 Desember 1995\", 28),\n    createData (\"Tania Dwi Haryanti\",\"Tania\",\"11 Juli 1998\", 25),\n    createData (\"Muhammad Faris Ma'ruf\",\"Farras\",\"05 Juli 2020\", 3),\n    createData (\"Nu'man Noah Ma'ruf\",\"Farras\",\"13 Oktober 2021\", 2),\n    createData (\"Rumaysha Hilyah Ma'ruf\",\"Farras\",\"12 Desember 2023\", 0),\n]\n\nfunction RootAccordian(props){\n\n    return (\n        &lt;Accordion&gt;\n            &lt;AccordionSummary\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"&gt;\n            &lt;Typography&gt;&lt;b&gt;{props.title}&lt;/b&gt;&lt;/Typography&gt;\n            &lt;/AccordionSummary&gt;\n            &lt;AccordionDetails&gt;\n                &lt;CustomizedTables/&gt;\n            &lt;/AccordionDetails&gt;\n        &lt;/Accordion&gt;\n    )\n}\n\nfunction CustomizedTables() {   \n    return (\n        &lt;TableContainer component={Paper}&gt;\n            &lt;Table sx={{ minWidth: 700 }} aria-label=\"customized table\"&gt;\n                &lt;TableHead&gt;\n                    &lt;TableRow&gt;\n                        &lt;TableCell&gt;Nama Lengkap&lt;/TableCell&gt;\n                        &lt;TableCell align=\"left\"&gt;Nama Panggilan&lt;/TableCell&gt;\n                        &lt;TableCell align=\"left\"&gt;Tanggal Lahir&lt;/TableCell&gt;\n                        &lt;TableCell align=\"left\"&gt;Umur&lt;/TableCell&gt;\n                    &lt;/TableRow&gt;\n                &lt;/TableHead&gt;\n                &lt;TableBody&gt;\n                {myFamilyData.map((row,index) =&gt; (\n                    &lt;TableRow key={index}&gt;\n                        &lt;TableCell component=\"th\" scope=\"row\"&gt;\n                            {row.namaLengkap}\n                        &lt;/TableCell&gt;\n                        &lt;TableCell align=\"left\"&gt;{row.namaPanggilan}&lt;/TableCell&gt;\n                        &lt;TableCell align=\"left\"&gt;{row.tanggalLahir}&lt;/TableCell&gt;\n                        &lt;TableCell align=\"left\"&gt;{row.umur}&lt;/TableCell&gt;\n                    &lt;/TableRow&gt;\n                ))}\n                &lt;/TableBody&gt;\n            &lt;/Table&gt;\n        &lt;/TableContainer&gt;\n    );\n}\n\nexport default RootAccordian\n</code></pre>"},{"location":"Web%20Framework/React/#handling-event-react","title":"Handling Event React","text":"<p>Event handling di React mirip dengan handlin DOM element events. Bedanya dengan HTML handling adalah event naming menggunakan camlecase pada react.</p> <p>Code</p> HandlingEventWithReact/LearnHandlingEvent.js <pre><code>import React, {useState} from \"react\"\nimport { Accordion,AccordionDetails,AccordionSummary,Typography, Snackbar,Button } from '@mui/material';\n\nfunction RootAccordian(props){\n\n    const [openSb, setOpenSb] = useState(false)\n\n    const toastDisplay = (event) =&gt; {\n\n        // Event prevent default\n        event.preventDefault()\n\n        // Rubah state\n        setOpenSb (true)\n    }\n\n    const handleClose = (event, reason) =&gt; {\n\n        console.log(\"Ints handel close, must set open sb to false\")\n        setOpenSb(false);\n    };\n\n    return (\n        &lt;Accordion&gt;\n        &lt;AccordionSummary\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"&gt;\n        &lt;Typography&gt;&lt;b&gt;{props.title}&lt;/b&gt;&lt;/Typography&gt;\n        &lt;/AccordionSummary&gt;\n        &lt;AccordionDetails&gt;\n\n\n            &lt;Button variant=\"outlined\" onClick={toastDisplay} &gt;\n                Change\n            &lt;/Button&gt;\n\n            &lt;Snackbar\n                open={openSb}\n                autoHideDuration={6000}\n                onClose={handleClose}\n                message=\"Toast here\"\n            /&gt;\n        &lt;/AccordionDetails&gt;\n    &lt;/Accordion&gt;\n    )\n}\n\nexport default RootAccordian\n</code></pre>"},{"location":"Web%20Framework/React/#handling-react-form","title":"Handling React Form","text":"<p>Code</p> HandlingFormWithReact/LearnHandlingForm.js <pre><code>import React, {useState} from \"react\"\nimport { Accordion,AccordionDetails,AccordionSummary,Typography, Snackbar,Button,\n    TableContainer,Table, TableHead, TableRow, TableCell, Paper, TableBody,FormControl,TextField, Box, Stack, Grid  } from '@mui/material';\n\n\n\n// Fucntion to create data\nfunction createData(namaLengkap, namaPanggilan, tanggalLahir, umur){\n    return {namaLengkap, namaPanggilan, tanggalLahir, umur}\n}\n\nfunction RootAccordian(props){ \n\n    // State menampung array data\n    const [myFamilyData, setMyFamilyData]= useState([])\n\n    // State untuk menampilkan SnackBar\n    const [openSb, setOpenSb] = useState(false)\n\n    // State untuk menamping inputan user\n    const [user,setUser] = useState({\n        namaLengkap : '',\n        namaPanggilan : '',\n        tanggalLahir : '',\n        umur : ''\n    })\n\n\n    // Function to handle changeson input user\n    const inputChange = (event) =&gt; {\n        setUser({...user,[event.target.name]:event.target.value})\n    }\n\n    // Function to handle submit event\n    const handleSubmit = (event) =&gt; {\n\n        // Event prevent default\n        event.preventDefault()\n\n        // Push myFamily data\n        myFamilyData.push(createData(user.namaLengkap,user.namaPanggilan,user.tanggalLahir,user.umur))\n\n        // set to reder\n        setMyFamilyData (myFamilyData)\n\n        // Clearn input\n        setUser(createData('','','',''))\n        console.log(user)\n\n        // Rubah state\n        setOpenSb (true)\n    }\n\n    // State to handle close SB\n    const handleClose = (event, reason) =&gt; {\n        setOpenSb(false);\n    };\n\n    return (\n        &lt;Accordion&gt;\n        &lt;AccordionSummary\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"&gt;\n        &lt;Typography&gt;&lt;b&gt;{props.title}&lt;/b&gt;&lt;/Typography&gt;\n        &lt;/AccordionSummary&gt;\n        &lt;AccordionDetails&gt;\n\n            &lt;Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            sx={{\n                display: 'flex',\n                alignItems: 'center',\n                '&amp; &gt; :not(style)': { m: 1 },\n            }}&gt;\n\n                &lt;TextField\n                    onChange={inputChange}\n                    value={user.namaLengkap} // to store value from state\n                    name=\"namaLengkap\"\n                    id=\"outlined-multiline-flexible\"\n                    label=\"Nama Lengkap\"\n                    /&gt;\n                &lt;TextField\n                    onChange={inputChange}\n                    value={user.namaPanggilanp} // to store value from state\n                    name=\"namaPanggilan\"\n                    id=\"outlined-multiline-flexible\"\n                    label=\"Nama Panggilan\"\n                    /&gt;\n                &lt;TextField\n                    onChange={inputChange}\n                    value={user.tanggalLahir} // to store value from state\n                    name=\"tanggalLahir\"\n                    id=\"outlined-multiline-flexible\"\n                    label=\"Tanggal Lahir\"\n                    /&gt;\n                &lt;TextField\n                name=\"umur\"\n                    value={user.umur} // to store value from state\n                    onChange={inputChange}\n                    id=\"outlined-multiline-flexible\"\n                    label=\"Umur\"\n                /&gt;\n\n\n\n                &lt;Button type=\"submit\"  variant=\"outlined\"&gt;\n                Change\n                &lt;/Button&gt;\n\n            &lt;/Box&gt;\n\n            &lt;TableContainer component={Paper}&gt;\n            &lt;Table sx={{ minWidth: 700 }} aria-label=\"customized table\"&gt;\n                &lt;TableHead&gt;\n                    &lt;TableRow&gt;\n                        &lt;TableCell&gt;Nama Lengkap&lt;/TableCell&gt;\n                        &lt;TableCell align=\"left\"&gt;Nama Panggilan&lt;/TableCell&gt;\n                        &lt;TableCell align=\"left\"&gt;Tanggal Lahir&lt;/TableCell&gt;\n                        &lt;TableCell align=\"left\"&gt;Umur&lt;/TableCell&gt;\n                    &lt;/TableRow&gt;\n                &lt;/TableHead&gt;\n                &lt;TableBody&gt;\n                {myFamilyData.map((row,index) =&gt; (\n                    &lt;TableRow key={index}&gt;\n                        &lt;TableCell component=\"th\" scope=\"row\"&gt;\n                            {row.namaLengkap}\n                        &lt;/TableCell&gt;\n                        &lt;TableCell align=\"left\"&gt;{row.namaPanggilan}&lt;/TableCell&gt;\n                        &lt;TableCell align=\"left\"&gt;{row.tanggalLahir}&lt;/TableCell&gt;\n                        &lt;TableCell align=\"left\"&gt;{row.umur}&lt;/TableCell&gt;\n                    &lt;/TableRow&gt;\n                ))}\n                &lt;/TableBody&gt;\n            &lt;/Table&gt;\n        &lt;/TableContainer&gt;\n\n\n\n\n\n            &lt;Snackbar\n                open={openSb}\n                autoHideDuration={6000}\n                onClose={handleClose}\n                message=\"The data added\"\n            /&gt;\n        &lt;/AccordionDetails&gt;\n    &lt;/Accordion&gt;\n    )\n}\n\nexport default RootAccordian\n</code></pre>"},{"location":"Web%20Framework/React/#callback-handlers-in-jsx","title":"Callback Handlers in JSX","text":"<p>Info</p> <p>The Road to React hal 61</p> <p></p> <p>Informasi hanya dapat dikirim dari komponen tertinggi ke komponen bawahnya menggunakan prop. Namun menggunakan state dan call back handlers kita dapat membuat component atas dan bawah saling berkomunikasi bertukar informasi via prop.</p> <p>Code</p> ComunicateChildToParent/AppTest.js <pre><code>import { useState } from \"react\"\n\nfunction AppTest() {\n\n    const propDate = (event) =&gt; {\n        console.log(\"this is in parent\")\n        if (event != undefined){\n            console.log(event.target.value)\n            setValueFromChild (event.target.value)\n        }\n        return \"kosong\"\n\n    }\n\n    const [valueFromChild, setValueFromChild] = useState (propDate())\n\n    return (\n        &lt;&gt;\n            &lt;h1&gt;Judul&lt;/h1&gt;\n            &lt;p&gt;Search for (Parent Component): {valueFromChild}&lt;/p&gt;\n            &lt;Search data={propDate}/&gt;\n\n\n        &lt;/&gt;\n    )\n\n}\n\nconst Search = (prop) =&gt; {\n    console.log('Ini dari anakan '+prop.data())\n\n    const [searchText, setSearchText] = useState('')\n\n    const changeEvent = (event) =&gt; {\n\n        setSearchText(event.target.value)\n\n        prop.data(event)\n    }\n\n    return (\n        &lt;&gt;\n            &lt;label&gt;Search&lt;/label&gt;\n            &lt;input type=\"text\" id=\"input\" onChange={changeEvent} value={searchText}&gt;&lt;/input&gt;\n            &lt;p&gt;Search for (Child Component): {searchText}&lt;/p&gt;\n            &lt;hr&gt;&lt;/hr&gt;\n        &lt;/&gt;\n    )\n}\nexport default AppTest\n</code></pre> <p>Kode diatas menggunakan prop dan usestate sebagai cara berkomunukasi ke atas dari child ke parent component.</p> <p></p>"},{"location":"Web%20Framework/React/02.%20Consuming%20Rest%20API%20With%20React/","title":"Consuming REST API with React","text":"<p>InsyaAllah pada catatan kita akan belakar bagaimana membuat asynchornous code yang lebih bersih dan mudah dibaca. Lalu akan membahas tentang networking, kita akan gunakan pustaka <code>fetch</code> dan <code>axios</code>.</p> <p>Berkaitan dengan membuat dan mengirim request serta menerima respone, cara tradisional adalah menggunakan <code>XMLHttpRequest</code>. Namun tidak akan dibahas pada catatan ini. Anda dapat mencarinya di GOOGLEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE</p>"},{"location":"Web%20Framework/React/02.%20Consuming%20Rest%20API%20With%20React/#using-the-axios","title":"Using the axios","text":"<p>Pertama install axios melalui npm</p> <pre><code>npm install axios\n</code></pre> <p>Selanjutnya untuk menggunakan import axios dengan syntax berikut</p> <pre><code>import axios from 'axios';\n</code></pre> <p>Axios library memiliki beberapa manfaat, seperti transforasi otomatis untuk data JSON. Dibawah ini adalah contoh request menggunakan axios</p> <p>Code</p> contoh <pre><code>axios.get('http://someapi.com')\n.then(response =&gt; console.log(response))\n.catch(error =&gt; console.log(error));\n</code></pre> <p>Pustakan axios juga memliki beberapa HTTP method tersendiri. Contohnyam jika kita ingin mengirim request POST serta data object pada body kita dapat menggunakan kurleb kode dibawah ini.</p> <p>Code</p> contoh <pre><code>axios.post('http://someapi.com', { newObject })\n.then(response =&gt; console.log(response))\n.catch(error =&gt; console.log(error));\n</code></pre> <p>Note</p> <p>Dokumentasi configurasi axios</p> <p>sample</p> <p>Code</p> ropsAndState/LearnState.js <pre><code>\n</code></pre> Output<pre><code>\n</code></pre> <p>Code</p> Example.jsExample.js <pre><code>\n</code></pre> <pre><code>\n</code></pre> <p>Code</p> <pre><code>\n</code></pre> Example 1Example 2 <pre><code>\n</code></pre> Output<pre><code>\n</code></pre> <pre><code>\n</code></pre> Output<pre><code>\n</code></pre>"},{"location":"Web%20Framework/React/lain-lain/","title":"Lain-Lain (Catatan)","text":""},{"location":"Web%20Framework/React/lain-lain/#how-to-expand-item-using-one-method","title":"How to expand item using one method","text":"<p>lihat di sini</p>"},{"location":"Web%20Framework/React/lain-lain/#deploy-react-in-tomcat-to-prevent-link-to-error-404-by-server","title":"Deploy React in tomcat to prevent link to error 404 by server","text":"<p>Look at this</p>"},{"location":"Web%20Framework/SQLAlchemy/","title":"Index","text":""},{"location":"Web%20Framework/SQLAlchemy/#create-engine-mssql-and-pyodbc","title":"Create engine mssql and pyodbc","text":"<p>The file-based DSN string is being interpreted by SQLAlchemy as server name = <code>c</code>, database name = <code>users</code>.</p> <p>I prefer connecting without using DSNs, it's one less configuration task to deal with during code migrations.</p> <p>This syntax works using Windows Authentication:</p> <pre><code>engine = sa.create_engine('mssql+pyodbc://server/database')\n</code></pre> <p>Or with SQL Authentication:</p> <pre><code>engine = sa.create_engine('mssql+pyodbc://user:password@server/database')\n</code></pre> <p>SQLAlchemy has a thorough explanation of the different connection string options here.</p>"},{"location":"Web%20Framework/SQLAlchemy/#execuqtion-method","title":"Execuqtion Method","text":"<p>SQL Alchemy session objects have their own <code>execute</code> method:</p> <pre><code>result = db.session.execute('SELECT * FROM my_table WHERE my_column = :val', {'val': 5})\n</code></pre> <p>All your application queries should be going through a session object, whether they're raw SQL or not. This ensures that the queries are properly managed by a transaction, which allows multiple queries in the same request to be committed or rolled back as a single unit. Going outside the transaction using the engine or the connection puts you at much greater risk of subtle, possibly hard to detect bugs that can leave you with corrupted data. Each request should be associated with only one transaction, and using <code>db.session</code> will ensure this is the case for your application.</p> <p>Also take note that <code>execute</code> is designed for parameterized queries. Use parameters, like <code>:val</code> in the example, for any inputs to the query to protect yourself from SQL injection attacks. You can provide the value for these parameters by passing a <code>dict</code> as the second argument, where each key is the name of the parameter as it appears in the query. The exact syntax of the parameter itself may be different depending on your database, but all of the major relational databases support them in some form.</p> <p>Assuming it's a <code>SELECT</code> query, this will return an iterable of <code>RowProxy</code> objects.</p> <p>You can access individual columns with a variety of techniques:</p> <pre><code>for r in result:\n    print(r[0]) # Access by positional index\n    print(r['my_column']) # Access by column name as a string\n    r_dict = dict(r.items()) # convert to dict keyed by column names\n</code></pre> <p>Personally, I prefer to convert the results into <code>namedtuple</code>s:</p> <pre><code>from collections import namedtuple\n\nRecord = namedtuple('Record', result.keys())\nrecords = [Record(*r) for r in result.fetchall()]\nfor r in records:\n    print(r.my_column)\n    print(r)\n</code></pre> <p>If you're not using the Flask-SQLAlchemy extension, you can still easily use a session:</p> <pre><code>import sqlalchemy\nfrom sqlalchemy.orm import sessionmaker, scoped_session\n\nengine = sqlalchemy.create_engine('my connection string')\nSession = scoped_session(sessionmaker(bind=engine))\n\ns = Session()\nresult = s.execute('SELECT * FROM my_table WHERE my_column = :val', {'val': 5})\n</code></pre>"},{"location":"Web%20Framework/Spring%20Boot/","title":"Preaface Spring Boot","text":"<p>Bismillah, dengan menyebut nama Allah. Pada catatan ini akan berisi bagaimana membuat sebuah web menggunakan Framework Spring Boot menggunakan bahasa pemprograman Java.</p> <p>Info</p> <p>Untuk semua kode yang digunakan pada catatan ini dapat dilihat di Kertas Pena Spring Boot</p> <p>Untuk mengikuti catatan ini ada beberapa yang dibutuhkan, diantaranya;</p> <ol> <li>Java 17 (Minumum version)</li> <li>IDE, disaranakan menggunakan Intellij IDEA</li> </ol> <p>Catatan ini diambil dari buku Learning Spring Boot 3.0 karya Greg L. Turnquist</p> <p></p>"},{"location":"Web%20Framework/Spring%20Boot/02.%20creating%20use%20spring%20boot/","title":"Creating Web Application Using Spring Boot","text":""},{"location":"Web%20Framework/Spring%20Boot/02.%20creating%20use%20spring%20boot/#using-startspringio-to-build-apps","title":"Using <code>start.spring.io</code> to build apps","text":"<p>Banyak web stack diluarsana menggunakan banyak pustakan atau tools untuk membangun web application dan semuanya berisikan modul-modul yang saling berhubungan. Termasuk dengan Spring Boot, terdiri dari module-module.</p> <p>Dahulu, sebelum lahirnya spring boot, setidaknya programmer dalam membangun sebuah web application mereka harus mencari sample maven di stackoverflow atau beberapa blog yang menyediakan kumpulan modul yang sudah siap dipakai.</p> <p>Namun setelah hadirnya Spring Boot, kita dapat memanfaatkan start.spring.io. Website tersebut dibuat dan dimaintain oleh Spring Team.</p> <p>Sebelum membuat package, kita dapat memimilih yang disediakan, diantaranya;</p> <ol> <li>Kita dapat memilih versi dari Spring Boot</li> <li>Dapat memilih tool yang digunakan untuk membangun website, (Gradle atau Maven)</li> <li>Dapat memilih versi java (Minimum 17)</li> <li>Dapat memilih module (Spring atau third party module lainnya) untuk digunakan pada project</li> </ol> <p>Warning</p> <p>Saat memilih Packaging, Lebih baik memilih JAR files dari pada WAR files (hanya untuk beberapa aplikasi server) sebagai packaging mechanism.</p> <p><code>Setidaknya untuk bagian ini, ikuti pilihan dibawah ini</code></p> Choose Value Project Maven Langauge Java Spring Boot 3.08 Project Metadata Bebas, disesuaikan Depedencies Spring Web <p>Setelah memilih field yang tersedia maka secara otomatis web akan mendownload compress file  dengan ekstensi rar. Selanjutnya uncompress file tersebut lalu buka folder menggunakan IDE yang digunakan.</p>"},{"location":"Web%20Framework/Spring%20Boot/02.%20creating%20use%20spring%20boot/#creating-a-spring-mvc-web-controller","title":"Creating a Spring MVC web controller","text":"<p>Setelah membuat folder project tersebut menggunakan IDE (saya menggunakan Intellij). InsyaAllah pada bagian ini kita akan membuat web controller.</p> <p>Jadi apa itu web controller ? itu adalah sebuah kumpulan kode yang dapat menerima HTTP request dan dapat memberikan respone. Biasanya, respone yang diberikan oleh web controller adalah HTML namun web controller juga dapat memberikan respone dalam bentuk JSON (Java Script Object Notation). HTTP request yang diterima oleh web controller dapat bervariasi, umumnya menggunakan GET atau POST.</p> <p>Bagain dari Spring yang membuat kita dapat mambangu web controller adalah Spring MVC (Movel View Control). Spring MVC adalah Module dari spring framework yang membuat kita dapat membangun sebuah aplikasi web diatas servlet-based containers menggunakan paradigma MVC.</p> <p>Jika kita melihat file <code>pom.xml</code> yang berada pada root project. Pada bagian dependecies kita dapat melihat depedency Spring MVC</p> pom.xml <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n    &lt;scope&gt;test&lt;/scope&gt;\n&lt;/dependency&gt;\n</code></pre> <p>Dependency diatas membuat kita dapat menggunaka anotasi yang disedian oleh Spring MVC dan komponen lainnya, serta membuat kita dapat mendefinisikan web controller. Untuk membuat web controller pertama, mari kita buat sebuah class dengan nama <code>HomeController</code></p> <p>Code</p> HomeController.java <pre><code>@Controller\npublic class HomeController {\n\n    /**\n     * Anotasi untuk pemetaan HTTP GET alamat / untuk memanggil method ini\n     * @return\n     */\n    @GetMapping(\"/\")\n    public String index(Model model){\n        return \"index\";\n    }\n}\n</code></pre> <p>Deskripsi kode diatas sebagai berikut</p> <ul> <li> <p><code>@controller</code>: Anotasi Spring MVC untuk berkomunikasi ke Spring Boot bahwa class ini adalah web controller. Jadi, ketika aplikasi dijalankan, Spring Boot akan secara otomatis mendeteksi class ini melalau component scanning dan akan membuat instance class tersebut. (Dengan demikian, kita tidak perlu membuat instance dari class tersebut, karena hal itu sudah ditangani oleh Spring Boot)</p> </li> <li> <p><code>@GetMapping(\"/\")</code>: Anotasi Spring MVC untuk pemetaan HTTP GET pada alamat root /. Jika client mengirim request alamat root, maka Spring Boot akan memanggil method dengan anotasi ini.</p> </li> <li> <p><code>index</code>: Karena kita menggunakan anotasi <code>@Controller</code>, maka return nilai <code>index</code> akan menjadi nama dari template yang akan dirender.</p> </li> </ul> <p>Info</p> <p>Nama dari class atau method tidak terlalu penting, namun anda harus memberikan dengan nama yang menggambarkan fungsi dari class dan method tersebut. Yang paling penting adalah anotasi <code>@Controller`` dan`` @GetMapping</code> yang mana memberikan sinyal bahwa class ini adalah web controller dan method yang dipanggil saat menerima request.</p> <p>Alhamdulillah, kita sudah membaut sebuah web controller, namun ada yang terlewat, yaitu template. Dimana baru saja kita lihat pada catatan ini, method yang menggunakan <code>@GetMapping</code> mengembalikan nama dari template yang akan dirender. Pada bagian selanjutnya kita akan menambahkan module yang berguna untuk menrender template.</p>"},{"location":"Web%20Framework/Spring%20Boot/02.%20creating%20use%20spring%20boot/#leveraging-template-to-create-content","title":"Leveraging template to create content","text":"<p>Kita akan menggunakan module mustache. Saat awal membuat project di spring.initializr, kita dapat memilih mustache sebagai template engine.</p> <p></p> <p>Namun bagaimana jika kita sudah membuat web controller selama 3 bulan, dan apakah kita harus membuat project dari awal ?</p> <p>Tentu tidak, kita dapat menambahkan module tersebut pada exisiting project dengan cara menambahkan depdency pada file <code>pom.xml</code> pada root folder.</p> pom.xml <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n    &lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n        ...\n        &lt;dependencies&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n            &lt;/dependency&gt;\n\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-starter-mustache&lt;/artifactId&gt;\n            &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n        ...\n\n    &lt;/project&gt;\n</code></pre> <p>Jika module telah ada pada project kita, kita dapat langsung membuat sebuah template. </p> <p>Bawaanya, Spring Boot akan membaca semua template yang ada pada folder <code>src/resources/templates</code>. Setiap template engine<sup>1</sup> memiliki suffix masing-masing. Untuk template mustache akhirannya adalah <code>.mustache</code>. Ketika method pada controller kita mengambilan nilai <code>index</code>, spring boot akan mentransform kedalam <code>src/resources/templates/index.mustache</code>, lalu mengambil file tersebut dan mengirimnya ke Template Engine.</p> <p>Selanjutnya mari kita buat file <code>index.mustache</code> pada <code>src/resources/templates/</code>.</p> <p>Code</p> inde.mustache <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h3&gt;Bismillah&lt;/h3&gt;\n    &lt;p&gt;\n        Halo semuanya\n    &lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Selanjutnya kita jalankan aplikasi dan bukan alamat <code>localhost:8080</code><sup>2</sup>. Jika tidak ada error, insyaAllah kita dapat melihat tampilan web sedeharna. Alhamdulillah sekarang kita telah membuat web controller dan template hamalam HTML.</p> <p>Folder Contoh</p> <p>Kode dapat dilihat pada module <code>bagian_2_awal</code></p>"},{"location":"Web%20Framework/Spring%20Boot/02.%20creating%20use%20spring%20boot/#adding-demo-data-to-a-template","title":"Adding demo data to a template","text":"<p>Applikasi web sesungguhnya menyediakan data. Data tersebut bisa bersumber dari DataBase, file pada server atau semisalnya. Untuk contoh kali ini, kita akan membuat demo data yang nantinya akan kita tampilkan pada template. Dibawah ini adalah update dari file <code>HomeController.java</code></p> <p>Code</p> HomeController.java <pre><code>@Controller\npublic class HomeController {\n\n    // #1\n    record Video(String name){};\n\n    // #2\n    List&lt;Video&gt; videos = List.of(\n    new Video(\"Film 1\"),\n    new Video(\"Film 2\"),\n    new Video(\"Film 3\")\n    );\n\n    /**\n     * Anotasi untuk pemetaan HTTP GET alamat / untuk memanggil method ini\n     * @return\n     */\n    @GetMapping(\"/\")\n    public String index(Model model){ // #3\n        // #4\n        model.addAttribute(\"videos\",this.videos);\n        return \"index\";\n    }\n}\n</code></pre> <p>Pada kode diatas kita menambah beberapa baris kode;</p> <ol> <li>Kita membuat sebuah class baru dengan nama <code>Video</code>.</li> <li>Kita men-declare dan initiate property <code>videos</code> untuk class HomeController.</li> <li>Kita menambahkan parameter Model dari pada method dengan anotasi @GetMapping</li> <li>Kita menambahkan attribute menggunakan method <code>model.addAttribute</code> dan memberikan nama dengan nilai <code>videos</code> dan data dari property <code>this.videos</code>.</li> </ol> <p>Info</p> <p>Java 17 menyediakan beberapa fitur yang sangat membantu kita dalam mengambangkan aplikasi menggunakan Spring Boot. Salah satunya dapat kita lihat pada contoh diatas. Dimana kita membuat sebuah Object Video hanya dengan satu baris kode menggunakan statement record</p> <p>Tip</p> <p>Mengapa kita harus membuat <code>record</code> untuk meng- encapsulation data dengan elemen tunggal ?</p> <p>Karena Mustache beroperasi menggunakan attribute yang bernama. Kita dapat secara manual membuat JSON yang berisikan name dan value, namun dengan adanya Java 17 kita dapat langsung dengan mudah menggunakan <code>record</code>. Ditambah, fitur tersebut memberikan type safety.</p> <p>Untuk mengirim data ke template, kita membutuhkan objek yang dipahami oleh Spring MVC. Kita butuh holder untuk menyimpan data. Untuk itu, kita membutuhkan parameter <code>Model</code> pada method index. </p> <p>Spring MVC memiliki attribute opsional yang dapat kita gunakan untuk web method apapun, contoh ini kita menggunakan, <code>Model</code> yang berguna jika kita ingin mengirim data ke template enggine.</p> <p>Pada <code>HomeController.java</code> kita juga telah membuat data dummy <code>List&lt;Video&gt;.</code> dan mengirimnya menggunakan method attribute yang diberi nama videos. </p> <p>Untuk membaca data videos yang dikirim ke template enggine menggunakan fungsi <code>model.addAttribute()</code> kita perlu mengubah file <code>index.mustache</code> sebagai berikut,</p> <p>Code</p> index.mustache <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n... &lt;!-- dipersingkat --&gt;\n&lt;ul&gt;\n    {{#videos}}\n        &lt;li&gt;{{name}}&lt;/li&gt;\n    {{/videos}}\n&lt;/ul&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Penjelasan kode yang di- highlight diatas sebagai berikut;</p> <ul> <li> <p><code>{{#videos}}</code>: Directive untuk mengambil attribute <code>videos</code> yang kita berikan pada object <code>Model</code>. Karena yang kita berikan dalam bentuk data list maka mustache memperlebar sebanyak data yang ada pada list. It will iterate over each entry of the <code>List&lt;Video&gt;</code> collection stored in Model and create a separate HTML <code>&lt;li&gt;</code> entry.</p> </li> <li> <p><code>{{name}}</code>: Indicates we want the name field of the data construct. This lines up with our Video type\u2019s name field. In other words, for each entry of <code>List&lt;Video&gt;</code>, print out the name field between <code>&lt;li&gt;</code> and <code>&lt;/li&gt;</code>.</p> </li> <li> <p><code>{{/videos}}</code>: Indicates the end of the looping fragment.</p> </li> </ul> <p>Folder Contoh</p> <p>Kode dapat dilihat pada module <code>bagian_2</code></p>"},{"location":"Web%20Framework/Spring%20Boot/02.%20creating%20use%20spring%20boot/#building-our-app-with-a-better-design","title":"Building our app with a better design","text":"<p>Aplikasi terakhir yang kita buat masih sederhana. Secara gamblang kita membuat data model dan menyediakannya untuk ditampilkan pada template.</p> <p>Namun terdapat masalah kedepannya, dimana design kode kita tidak dapat digunakan kembali (not reusable). Maka dari itu kita butuh controller kedua dimana ada beberapa alasan mengapa kita melakukan itu;</p> <ol> <li> <p>Controller seharusnya tidak mengurusi definisi data. Karena tugas mereka hanyalah memberikan respone atas request lalau berinteraksi dengan service lain atau sistem, definisi ni harus berada pada tingkat bawah.</p> </li> <li> <p>Web controller yang menangani beban yang banyak (serving data, manage data, calculate data, etc) akan membuat kita kesuliat saat ada penyesuaian pada web. Maka dari itu, sangat disaranakan jika managemen data ditaruh pada tingkat yang lebih bawah.</p> </li> </ol> <p>Maka dari itu, kita akan memindahkan class <code>Video</code> ke file tersendiri, <code>Video.java</code>.</p> <p>Code</p> Video.java <pre><code>record Video (String name) { }\n</code></pre> <p>Selanjutnya, kita akan memisahkan daftar objek Videos kedalam service yang terpisah. Kita akan membuat class baru dengan nama VideoService dengan isi sebagai berikut;</p> <p>Code</p> VideoService.java <pre><code>@Service\npublic class VideoService{\n    private List&lt;Video&gt; videos = List.of(\n            new Video(\"Film 1\"),\n            new Video(\"Film 2\"),\n            new Video(\"Film 3\")\n    );\n\n    public List&lt;Video&gt; getVideos(){\n        return this.videos;\n    }\n};\n</code></pre> <p><code>@Service</code>: Anotasi yang menunjukan sebuah class yang harus diambil saat component scanning dan ditambahkan pada application context.</p>"},{"location":"Web%20Framework/Spring%20Boot/02.%20creating%20use%20spring%20boot/#injecting-dependencies-through-constructor-calls","title":"Injecting dependencies through constructor calls","text":"<p>Constructor injectiong adalah yang paling disukai oleh programmer untuk memberikan dependecies yang Spring bean butuhkan melalui constructor. Untuk itu, setiap kita membuat Java class yang diambil oleh Spring Boot sata componet scanning. Spring Boot secara ototmatis akan melihat apakah ada injection points, dan jika ada, maka Spring Boot akan melihat apllication contextnya dan menginject-nya. Metode tersebut disebut dengan Autowiring. Kita membiarkan Spring yang menangani pencarian dependencies dari Spring pada application context serta memasang depedencies tersebut.</p> <p>Selanjutnya kita akan memodifikasi kode dari <code>HomeController</code> menjadi sebagai berikut, membuat depedency injection;</p> <p>Code</p> HomeController.java <pre><code>@Controller\npublic class HomeController {\n    private VideoService videoService;\n\n    public HomeController(VideoService videoService){\n        this.videoService = videoService; // Inject VideoService.\n    };\n\n    ... // Cut\n}\n</code></pre> <p>Karena kita sudah meng-inject <code>VideoServive</code> kedalam <code>HomeController</code>, kita dapat mengupdate method <code>index()</code> sebagai berikut;</p> <p>Code</p> HomeController.java <pre><code>...\n@GetMapping(\"/\")\npublic String index(Model model){\n    model.addAttribute(\"videos\", videoService.getVideos());\n    return \"index\";\n}\n</code></pre> <p>Folder Contoh</p> <p>Kode dapat dilihat pada module <code>bagian_2_2</code></p>"},{"location":"Web%20Framework/Spring%20Boot/02.%20creating%20use%20spring%20boot/#changing-the-data-through-html-forms","title":"Changing the data through HTML forms","text":"<p>Pada bagian kali ini kita akan membuat sebuah web yang dapat menerima dan menampung data pada <code>List&lt;String&gt;</code>. Pertama kita harus membuat perubahan pada <code>index.mustache</code> agar bisa menerima input dari user.</p> <p>Code</p> index.mustache <pre><code>...\n&lt;form action=\"/new-video\" method=\"post\"&gt;\n    &lt;input type=\"text\" name=\"name\"&gt;\n    &lt;button type=\"submit\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>Jika kita melihat kode diatas, pada nilai di attribute action dan method artinya setelah user mengisi nilai masukan, user akan membuat request ke <code>HTTP POST /new-video</code>. Maka dari itu kita harus membuat mapping untuk memberikan respone atas request tersebut. Dibawah ini adalah update dari <code>HomeController.java</code>;</p> <p>Code</p> HomeController.java <pre><code>@Controller\npublic class HomeController {\n    private VideoService videoService;\n\n    public HomeController(VideoService videoService){\n        this.videoService = videoService;\n    };\n    @GetMapping(\"/\")\n    public String index(Model model){\n        model.addAttribute(\"videos\", videoService.getVideos());\n        return \"index\";\n    }\n\n    @PostMapping(\"/new-video\")\n    public String addVideo(@ModelAttribute Video newVideo){\n        this.videoService.create(newVideo);\n        return \"redirect:/\";\n    }\n}\n</code></pre> <p>Dibawah ini adalah penjelasan dari kode yang kita highlight</p> <ul> <li><code>@PostMapping(\"/new-video\")</code>: Anotasi untuk menerima POST /new-video dan mengarahakannya ke method ini.</li> <li><code>@ModelAttributes Video newVideo</code>: Anotasi untuk mem-parse, mengurai incoming HTML form kedalam Video Object</li> <li><code>videoService.create()</code>: Method yang akan kita buat setelah ini, fungsi ini untuk menambahkan nilai masukan ke <code>List&lt;String&gt;</code></li> <li><code>\"redirect:/\"</code>: Spring MVC directive yang mengirim ke browser HTTP 302 Found to URL /. 302 redirect adalah standar yang digunakan untuk merujuk kembali ke url tertentu.</li> </ul> <p>Sekarang kita harus membuat method dengan nama <code>videoService.create(Video newVideo)</code>. Namun ada yang perlu diperhatikan, kita menggunakan <code>List.of()</code> untuk membuat kumpulan video, yang mana menghasilkan immutable lists.Namun, karena Immutable list implement java List interface, yang mana memberikan kita akses method <code>add()</code>. Namun jita kita menggunakan method tersebut, akan memunculkan exception <code>UnsupportedOperationException</code>.</p> <p>Code</p> Example.java <pre><code>@Service\npublic class VideoService{\n\n    private List&lt;Video&gt; videos = List.of(\n            new Video(\"Film 1\"),\n            new Video(\"Film 2\"),\n            new Video(\"Film 3\")\n    );\n\n    public List&lt;Video&gt; getVideos(){\n        return this.videos;\n    }\n\n    public Video create(Video addedVideo){\n        ArrayList&lt;Video&gt; extend = new ArrayList&lt;Video&gt;(this.videos);\n        extend.add(addedVideo);\n        this.videos = List.copyOf(extend);\n    }\n};\n</code></pre> <p>Holla, sekarang kita bisa mengirim data pada form.</p> <p>Folder Contoh</p> <p>Kode dapat dilihat pada module <code>bagian_2_3</code></p>"},{"location":"Web%20Framework/Spring%20Boot/02.%20creating%20use%20spring%20boot/#creating-json-based-apis","title":"Creating JSON-based APIs","text":"<p>Salah satu yang membuat Spring Boot powerfull adalah, ketika kita menambahkan Spring web kesebuah project, module tersebut sekaligus menambahkan Jackson ke classpath. Jackson adalah pustaka untuk Serialization/Deserialization JSON ke Java Object atau sebaliknya.</p> <p>Kali ini, isnyaAllah kita akan membuat REST API. Maka dari itu, kita harus membuat sebuah class baru pada package yang sama. Kita akan membuat class dengan nama <code>ApiController</code> dan diberi anotasi @RestController.</p> <p>@RestController mirip dengan @Controller. Itu adalah anotasi yang memberikan sinyal ke Spring Boot bahwa class ini secara otomatis harus diambil saat component scanning dan dijadikan sebuah Spring bean. Bean ini akan didaftarkan pada application context dan juga dengan Spring MVC sebagai conroller class sehingga dapat merujuk ke web calls.</p> <p>Namun ada tambahan property, anotasi tersebut merubah semua method dari template-based ke JSON-based. Dalam kata lain, dari pada web method mengembalikkan nama dari template yang Spring MVC render melalaui template engine, anotasi tersebut akan mengembalikan serialize data menggunakan Jackson.</p> <p>Code</p> APIVideos.java <pre><code>@RestController\npublic class APIVideos {\n    private VideoService videosService;\n\n    public APIVideos(VideoService videos){\n        this.videosService = videos;\n    }\n\n    @GetMapping(\"/API/videos\")\n    public List&lt;Video&gt; getAll(){\n        return this.videosService.getVideos(); //#(1)!\n    }\n}\n</code></pre> <ol> <li>Akan dirender otomatis dari <code>List&lt;Video&gt;</code> kedalam JSON oleh Jackson</li> </ol> <p>Method diatas akan mengambil list dari vide dan mengembalikan list tersebut, yang menyebabkan list tersebut dirender kedalam bentuk JSON Array oleh Jackson.</p> <p>Sekarang coba kita gunakan postman untuk mengirim request, maka hasil yang didapatkan sebagai berikut;</p> <pre><code>[\n    {\n        \"name\": \"Film 1\"\n    },\n    {\n        \"name\": \"Film 2\"\n    },\n    {\n        \"name\": \"Film 3\"\n    }\n]\n</code></pre> <p>API yang hanya menghasilkan JSON tidak dikatan API yang sesungguhnya, API tersebut juga harus menerima nilai masukan dan melakukan sesuatu dibelakangnya dan memberikan respone balikan juga dalam bentuk JSON. Untuk itu kita harus membuat HTTP Post call pada class yang sama, <code>ApiController</code>.</p> <p>Sekarang kita tambahkan method <code>addVideo()</code> pada class <code>APIVideos</code></p> <p>Code</p> APIVideos.java <pre><code>@RestController\npublic class APIVideos {\n    private VideoService videosService;\n\n    public APIVideos(VideoService videos){\n        this.videosService = videos;\n    }\n\n    @GetMapping(\"/API/videos\")\n    public List&lt;Video&gt; getAll(){\n        return this.videosService.getVideos();\n    }\n\n    @PostMapping(value = \"/API/videos\", consumes = {\"*/*\"})\n    public Video addVideo (@RequestBody Video addVideo){\n        return this.videosService.create(addVideo);\n    }\n}\n</code></pre> <p>Kode diatas dijelaskan sebagai berikut;</p> <ul> <li> <p><code>@PostMapping</code>: Memetakan pemanggilan HTTP POST pada <code>/api/vidoes</code> ke method <code>addVideo()</code>.</p> </li> <li> <p><code>@RequestBody</code>: Anotasi Spring MVC yang berfungsi untuk menandakan bahwa request body yang masuk pada HTTP request harus di deserialisasi menggunakan Jacskon kedalam argumen <code>addVideo</code> sebagai objek Video.</p> </li> <li> <p>Selanjutnya kita mengembalikan nilai kembalian dari method <code>#!videosService.create()</code>, yang mana berisi judl video yang baru ditambahkan.</p> </li> </ul> <p>Selanjutnya kita buka aplikasi Postman lalu jalankan request ke HTTP Post <code>/API/videos</code>, dan memberikan body data JSON seperti dibawah ini</p> <pre><code>{\n    \"name\":\"Mulia dengan manhaj salaf\"\n}\n</code></pre> Request and Respone <p></p> <p>Folder Contoh</p> <p>Kode dapat dilihat pada module <code>bagian_2_4</code></p> <p>Warning</p> <p>Pada buku ini mengenai JPA sangat terbatas, insyaAllah akan ada catatan yang saya buat yang diambil dari sumber lain. Diantaranya mengenai</p> <ol> <li>Penggunaan <code>@Pathvariable</code></li> <li>Memanfaat ResponseStatusException dan membuat costume exception result JSON</li> <li>Menambahkan message error dan Exception pada respone error</li> </ol> <p>Dapat melihat ke sini JPA,RestFullAPI</p>"},{"location":"Web%20Framework/Spring%20Boot/02.%20creating%20use%20spring%20boot/#hooking-in-nodejs-to-a-spring-boot-web-app","title":"Hooking in Node.js to a Spring Boot web app","text":"<p>Sudah menjadi \"standard defacto\" bahwasanya JavaScript wajib digunakan pada aplikasi web modern. Banyak front-end menggunakan JavaScript, salah satu framework yang akan kita gunakan, React. Namun, untuk menggunakan framework tersebut kita harus masuk ke dunia Node.js. Alhamdulilah -nnya, ada plugin Maven yang menjembatani kita antara Spring Boot dengan Node.js, plugin tersebut disebut dengan Maven Frontend Plugin. Plugin ini menggabungkan Node.js dengan siklus hidup Maven, sehingga membuat kita dapat secara benar melibatkan Node.js seperti saat kita ingin mengunduh packages hingga menggabungkan kode JavaScript menjadi satu kesatuan dengan aplikasi java kita (Spring Boot).</p> <p>Tentu, compiling dan bundling JavaScript Payload akan sia-sia jika tidak ada cara bagi Spring Boot untuk membuatnya Online. Alhamdulillahnya, Spring Boot memiliki solusi. Apapun yang ada di path <code>src/main/resources/static</code> secara otomatis akan diambil dan akan dijadikan sebagai alamat basis dari aplikasi web ketika digabungkan. Artinya, kita hanya perlu mengarahkan tool bundling dari Node.js untuk menaruhnya hasil dari compile react ke alamat tersebut.</p> <p>Bismillah, pada catatan ini akan dipaparkan bagimana meng-install plugin, Node.js, npm, react.js dan integrasi dengan SpringBoot API yang telah dibuat pada bagian Creating JSON based API</p> <p>Pertama kita mulai dengan <code>front-end-maven-plugin</code>. Pada file <code>pom.xml</code> yang berada pada dasar direktori kita perlu menambahkan element plugin dan informasi terkait plugin tersebut. Masukan konfigurasi dibawah ini pada file tersebut. </p> <p>Info</p> <p>Element <code>plugins</code> sama seperti dengen <code>depdencies</code>, dimana kita dapat menginstall lebih dari satu depedency dan plugin.</p> <p>Install front-end-maven-plugin</p> pom.xml <pre><code>&lt;plugin&gt;\n        &lt;groupId&gt;com.github.eirslett&lt;/groupId&gt;\n        &lt;artifactId&gt;frontend-maven-plugin&lt;/artifactId&gt;\n        &lt;version&gt;1.12.1&lt;/version&gt;  \n        &lt;executions&gt;\n            &lt;execution&gt;\n                &lt;goals&gt;\n                    &lt;goal&gt;install-node-and-npm&lt;/goal&gt;\n                &lt;/goals&gt;\n            &lt;/execution&gt;\n        &lt;executions&gt;\n        &lt;configuration&gt;\n            &lt;nodeVersion&gt;v18.17.0&lt;/nodeVersion&gt;\n        &lt;/configuration&gt;\n&lt;/plugin&gt;\n</code></pre> <p>Penjelasan:</p> <ol> <li>Kita menambahkan kordinat versi 1.12.1 untuk <code>frontend-maven-plugins</code>.</li> <li>Untuk saat ini pada plugin kita hanya memiliki satu buah execution yaitu install-node-and-npm.</li> <li>Pada element <code>configuration</code> kita membuat spesifikasi untuk versi Node.js, V18.17.0</li> </ol> <p>Note</p> <p>Plugins akan melakukan tugasnya saat fase generate-resouces</p> <p>Warning</p> <p>Proses setup pada catatan ini dipecah-pecah agar kita dapat memahami setiap konfigurasi yang kita tuliskan pada <code>pom.xml</code>. Namun sebenarnya kita dapat menuliskan setup sekaligus dalam proses jalannya maven.</p> <p>Perlu diketahui, proses yang dijalankan maven adalah mengunduh Node.js, npm (Node Package Manager), dan npx (Node Package Execution) pada project root didalam folder node.</p> <p>Tips</p> <p>Node.js and all its tools and modules can be considered intermediate build artifacts. There\u2019s no need to commit them to version control. So, be sure to add the node folder as well as the intermediate node_modules folder to your list of items to not commit (for example, add node and node_modules to the project\u2019s .gitignore file).</p>"},{"location":"Web%20Framework/Spring%20Boot/02.%20creating%20use%20spring%20boot/#bundling-javascript-with-nodejs","title":"Bundling JavaScript with Node.js","text":"<p>Sekarang kita sudah memiliki tools, npm. Namun kita belum memiliki module. Sebelum kita menulis kode Node.js, pertama kita harus menginstall Node.js Package Bundler yaitu pickles. Kita akan menggunakan npm. Bukalah CMD atau terminal pada root folder dan jalankan command dibawah ini.</p> <pre><code>node/npm install --ignore-script --save-dev parcel\n</code></pre> <p>Perintah diatas akan menggunakan Node.js yang terinstall lokal hanya pada project tersebut dan memerintahkan npm untuk membuat file <code>package.json</code>. Opsi <code>--save-dev</code> memberi sinyal bahwa module tersebut sebagai module yang hanya digunakan untuk pengembangan dan bukan package yang digunakan oleh applikasi kita.</p> <p>Sekarang kita memliki <code>package.json</code> untuk project, selanjutnya kita harus mengaitkannya kedalam frontend-maven-plugin. Untuk itu kita harus menamhkan element <code>&lt;execution&gt;</code> dibawah ini pada file <code>pom.xml</code>.</p> <p>Install front-end-maven-plugin</p> pom.xml <pre><code>&lt;plugin&gt;\n        ... \n        &lt;executions&gt;\n            ...\n            &lt;execution&gt;\n                &lt;id&gt;npm install&lt;/id&gt;\n                &lt;goals&gt;\n                    &lt;goal&gt;npm&lt;/goal&gt;\n                &lt;/goals&gt;\n            &lt;/execution&gt;\n        &lt;executions&gt;\n        ...\n&lt;/plugin&gt;\n</code></pre> <p>Fragement tersebut akan mengkonfigurasi <code>frontend-maven-plugin</code> untuk menjalankan perintah <code>npm install</code>, yaitu sebuah perintah yang akan membangun JavaScript bundle.</p> <p>Sebelum kita menambahkan module JavaScript, kita harus menambahkan mengkonfigurasi pada <code>package.json</code> agar build berjalan dengan benar. Edit <code>package.json</code> dan pindahkan perintah dibawah ini pada element <code>executions</code>.</p> <p>Konfigurasi </p> package.json <pre><code>...,\n{\n    \"source\": \"src/main/javascript/index.js\",\n    \"targets\": {\n        \"default\": {\n        \"distDir\": \"target/classes/static\"\n        }\n    },\n...\n}\n</code></pre> <p>Penjelasan penambahan diatas sebagai berikut;</p> <ul> <li><code>source</code> menandakan entrypoint dari aplikasi JavaScript. Karena kita menggunakan module parcel maka tidak masalah dimana file ini berada. Namun, karena kita menggunakan Maven Based Project, kita dapat menempatkannya di <code>src/main/javascript/index.js</code>.</li> <li>Sebagai target definition, kita dapat mengkonfigurasi default target pada <code>distDir</code> dengan nilai <code>target/clasess/static</code>. Parcel mendukung building multiple target untuk browser yang berbeda, namun saat ini tidak perlukan. Dengan memasukan hasil pada target folder, setiap kita menjalankan Maven clean cycle, bundel yang telah di compile akan dibersihkan.</li> </ul> <p>Karena npm adalah tool dari Node.js untuk men-download dan meng-install packages, <code>npx</code> adalah tool dari Node.js untuk menajalankan perintah. Dengan menambahkan <code>&lt;execution&gt;</code> entry pada <code>frontend-maven-plugin</code> kita dapat menjalankan Parcel's build command.</p> <p>Konfigurasi </p> package.json <pre><code>...\n&lt;execution&gt;\n    &lt;id&gt;npx run&lt;/id&gt;\n    &lt;goals&gt;\n        &lt;goal&gt;npx&lt;/goal&gt;\n    &lt;/goals&gt;    \n    &lt;phase&gt;generate-resources&lt;/phase&gt;\n    &lt;configuration&gt;\n        &lt;arguments&gt;parcel build&lt;/arguments&gt;\n    &lt;/configuration&gt;\n&lt;/execution&gt;\n...\n</code></pre> <p>langkah tambahan diatas akan menjalankan npx parcel build.</p>"},{"location":"Web%20Framework/Spring%20Boot/02.%20creating%20use%20spring%20boot/#creating-a-reactjs-apps","title":"Creating a React.js Apps","text":"<p>Pertama kita harus meng-install module React.js menggunakan perintah <code>npm</code>.</p> <pre><code>node/npm install --save react react-dom\n</code></pre> <p>Perintah diatas akan memperbarui konten dari file <code>package.json</code> dengan tambahan module <code>react</code> dan <code>react-dom</code>. Sekarang buatlah file <code>index.js</code> dan letakan pada alamat <code>src/main/javascript</code></p> <p>Code</p> index.js <pre><code>import reactDom from \"react-dom\"\nimport { App } from \"./App\"\nconst app = document.getElementById(\"app\")\nreactDom.render(&lt;App/&gt;, app)\n</code></pre> <p>Berikut adalah penjelasan dari kode diatas;</p> <ol> <li>Baris pertama kita meng <code>import</code> module react-dom. Module penting dalam membangun aplikasi React.</li> <li>Selanjutnya kita mengimport UI (User Interface) class yang kita buat nantinya.</li> <li>Baris ke-3 kita mengambil Data Object Model element HTML menggunakan <code>getElementById()</code>.</li> <li>Baris terakhir kita me-render <code>&lt;App/&gt;</code> component.</li> </ol> <p>React beroperasi dari perspektif paling atas ke paling bawah (top-down persepctive). Kita me-render top-level component, lalu selanjutnya component tersebut, akan merender component didalamnya (nested) dan terus berlanjut hingga component yang paling bawah.</p> <p>React juga menggunakan Document Object Model (DOM) dimana kita tidak menetapkan node sesungguhnya untuk dirender, namun kita menggunakan virtual nodes. React akan memperhitungkan perubahan yang terjadi dari kondisi saat ini dan men-generate perubahan yang terjadi.</p> <p>Diatas kita memanggil module App, maka dari itu sekarang kita akan membuat file App.js pada alamat <code>src/main/javascript</code></p> <p>Code</p> App.js (Langsung meng-export function)App.js (Export class untuh, harus <code>extends</code> React.Component) <pre><code>import React from 'react'\nimport ListOfVideos from './ListOfVideos'\nimport NewVideo from './NewVideo'\nimport Footer from './Footer'\n\nexport function App(){\n    return (\n        &lt;div&gt;\n            &lt;ListOfVideos/&gt;\n            &lt;NewVideo/&gt;\n        &lt;/div&gt;\n    )\n}\n</code></pre> <pre><code>import React from 'react'\nimport ListOfVideos from './ListOfVideos'\nimport NewVideo from './NewVideo'\nimport Footer from './Footer'\n\n\nclass App extends React.Component {\n\n    render(){\n        return (\n            &lt;div&gt;\n                &lt;ListOfVideos/&gt;\n                &lt;NewVideo/&gt;\n                &lt;Footer/&gt;\n            &lt;/div&gt;\n        )\n    }\n\n}\n\nexport default render\n</code></pre> <p>Warning</p> <p>Jika anda menggunakan opsi ini, maka pada top-level saat mengimport menggunakan open and close bracket. Pada kasusu ini pada file <code>src/main/javascript/App.js.</code> <code>import { App } from ./App</code>.</p> <p>Penjelasan kode diatas <code>App.js (Langsung meng-export function)</code>;</p> <ol> <li>Kita mengimport module <code>react</code> untuk membangun komponen</li> <li>Kita meng-import class ListOfVideos, AddVideo dan Footer (insyaAllah akan kita buat nantinya)</li> </ol> <p>Pada titik ini, kita memiliki fungsi <code>App()</code> yang di export secara umum. Karena fungsi tersebut mengembalikan element HTML, ini menjadi sinya untuk Parcel bahwasanya kita menggunakan JavaScript XML (JSX), yang mana mengandung beberapa komponen React untuk dirender.</p> <p>Pertama yang kita replikasikan dari applikasi yang menggunakan murni mustache adalah template yang menampilkan semua data video yang bersumber dari backend. Untuk men-generate HTML yang berisikan daftar tak terurut di React kita akan membuat class ListOfVideos dengan membuat file <code>ListOfVideos</code> pada <code>src/main/javascript/App.js</code></p> <p>Code</p> ListOfVideos.js <pre><code>import React from \"react\"\n\nclass ListOfVideos extends React.Component {\n\n    // constructor creates a state field to maintain an internal state.\n    constructor (properties){\n        super(properties)\n        this.state = { data: [] }\n    }\n\n    /*\n    componentDidMount() is the function called by React right after this component is\n    inserted into the DOM and rendered.\n    */\n    async componentDidMount () {\n        /* It uses vanilla JavaScript\u2019s fetch() function to retrieve\n        data from the JSON API we created earlier in this chapter\n\n        Because that function returns a\n        promise, we can use the ES6 await function to wait for results and then update the internal\n        state using React\n        */        \n        let json = await fetch(\"/API/videos\").then(r =&gt; r.json())\n        this.setState({data: json})\n\n        /* \n        For this method to work with the rest\n        of things properly, we must mark it async. It\u2019s also important to understand that anytime\n        setState() is invoked, React will re-render the component.\n        */\n    }\n\n    render() {\n        /*\n        The sizzle is in the render() method where we actually lay out HTML elements (or more\n        React components). This code uses the internal state and maps over the array of data, converting\n        each piece of JSON into an HTML line item. No elements? No line items!\n        */\n        return (\n            &lt;div&gt;\n                {\n                    this.state.data.map (data =&gt;\n                        &lt;li&gt;{data.name}&lt;/li&gt;\n                    )\n                }\n            &lt;/div&gt;\n        )\n    }\n}\n\nexport default ListOfVideos\n</code></pre> <p>Pada kode diatas kita diperkenalkan dengan properties dan state. Properties biasanya berisikan informasi yang disisipkan dari luar komponen kedalam React Component. Sedangkan State di-maintain dari dalam komponen. Sangat memungkinkan untuk menginisialisasi State dari Properties atau yang kita gunakan pada kode datas, komponen itu sendiri dapat memberikan data kepada state sebagaimana funcion <code>componentDidMount</code> lakukan.</p> <p>Yang perlu dipahami adalah, properties adalah immutable didalam React Component (nilainya tidak dapat berubah) sedangkan state dapat berubah-ubah didalam React Component.</p> <p>Kita sudah membuat component untuk menampilkan daftar video. Sekarang kita akan membuat component untuk membuat form serta proses yang dilakukan ketika user mengisi video baru yang ingin ditambahkan pada field yang tersedia dan menekan tombol untuk menyimpan judeul video baru. Untuk itu pertama kita harus membuat class NewVideo dengan membuat file NewVideo.js pada alamat <code>src/main/javascript</code>.</p> <p>Code</p> NewVideo.js <pre><code>import React from \"react\"\n\nclass NewVideo extends React.Component {\n    constructor (props){\n        super(props)\n        this.state = {name: \"\"} // Inisiasi Properties\n        this.handleChangeState = this.handleChange.bind (this) // State berisikan fungsi yang di bind\n        this.handleSubmitState = this.handleSubmit.bind (this)\n    }\n\n\n    // Function untuk menangani onChange\n    handleChange(event){\n        // Merubah nilai state dari properties (event)\n        this.setState({name: event.target.value})\n    }\n\n    async handleSubmit(event){\n        // Menonaktifkan behavior dari input submit\n        event.preventDefault() \n\n        // Mengambil dari endpoint /API/videos \n        await fetch (\"/API/videos\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({name: this.state.name})\n        }).then(response  =&gt; window.location.href=\"/react\")\n    }\n\n\n    // Render HTML\n    render(){\n        return(\n            &lt;div&gt;\n                &lt;form onSubmit={this.handleSubmitState}&gt;\n                    &lt;input type = \"text\"\n                        value = {this.state.name}\n                        onChange={this.handleChangeState}\n                    &gt;&lt;/input&gt;\n\n\n                    &lt;input type=\"submit\"/&gt;\n                &lt;/form&gt;\n            &lt;/div&gt;\n        )\n    }\n}\n\nexport default NewVideo\n</code></pre> <p>Info</p> <p>Aspek lain dari kode diatas adalah <code>async/wait</code> modifiers yang digunakan untuk menangani fungsi <code>handleSubmit()</code>. Umumnya JavaScript function mengembalikan nilai standard promises, seperti fungsi bawaan <code>fetch</code>. Untuk mempermudah penggunakan APIs, ES6 memperkenalkan keyword <code>await</code> yang membuat kita dapat mengindikasi sebuah fungsi bahwa kita menginginkan fungsi tersebut menunggu hasilnya terpenui lalu di return. Namun untuk mendukung penggunaan <code>await</code>, kita harus memberikan flag <code>async</code> pada function</p> <p>Untuk memuat Applikasi React, kita harus memisahkan Mustache template. Buat <code>react.mustache</code> didalam <code>src/main/resources/templates</code> dan berikan nilai HTML seperti dibawah</p> <p>Code</p> react.mustache <pre><code>&lt;!-- &lt;div id=\"app\"/&gt; is the element that the React component &lt;App /&gt; will be rendered at\nper the document.getElementById(\"app\") from earlier in this section. --&gt;\n&lt;div id =\"app\"&gt;&lt;/div&gt;\n\n&lt;!-- The &lt;script&gt; tag will load our app through the index.js bundle Parcel will build. The\ntype=\"module\" argument indicates it\u2019s an ES6 module.--&gt;\n&lt;script type=\"module\" src=\"index.js\"&gt;&lt;/script&gt;\n</code></pre> <p>Langkah terakhir pada React App, kita harus memliki web controller method yang berbeda pada HomeController, buat method baru sebagai mapping dari Request URL ke Applikasi React.</p> <p>Code</p> HomeController.java <pre><code>    ...\n    @GetMapping(\"/react\")\n    public String reactPage(){\n        return \"react\";\n    }\n    ...\n</code></pre> <p>Alhamdulillah, dengan demikian jika User meminta request <code>GET /react</code> React App akan ditampilkan.</p> <p>Dengan semua effort yang kita lakukan, dari memasang plugin <code>frontend-maven-plugin</code>, menginstall npm, memasang <code>&lt;execution&gt;</code> untuk menajalankan npx agar mem-build React app. Apakah sepadan ? sedangkan hasilnya sama dengan kita hanya menggunakan Spring Boot saja ? Ya, effort nya sangat besar.</p> <p>Namun React sangat berguna jika kita membutuhkan design UI yang kompleks. Contohnya, jika kita membutuhkan berbagai macam komponen yang secara opsional yang ingin dirender atau membutuhkan komponen yang berbeda yang ingin ditampilkan, dititik inilah React sangat berguna.</p> <p>React memiliki shadow DOM. Kita tidak perlu dipusingkan dengan konsep mencari bagian dari DOM dan secara manual meng-update node-node tersebut. Akan tetapi, dengan React, kita hanya membuat kumpulan HTML component. Selanjutnya, jika ada internal state yang diperbarui, component akan dirender ulang. React akan memperhitungkan perubahan pada elemnt DOM aslinya dan secara otomatis meng-update sendiri.</p>"},{"location":"Web%20Framework/Spring%20Boot/02.%20creating%20use%20spring%20boot/#set-up-ide","title":"Set Up IDE","text":"<p>Kita perlu menambahkan beberapa konfigurasi pada IDE agar perubahan yang terjadi pada React tercompile sekaligus saat kita me- run applikasi kita. Yaitu dengan menambahkan Run Maven Goal dengan script <code>maven generate-resources</code>.</p> <p></p> <p>Folder Contoh</p> <p>Kode dapat dilihat pada module <code>bagian_2_5</code></p> <ol> <li> <p>Selain mustahce ada, Thymeleaf, Apache Freemaker dan Groovy Template.\u00a0\u21a9</p> </li> <li> <p><code>localhost</code> adalah alamat mesin anda, bisa juga berisi nilai <code>127.0.0.1</code>. Sedangkan untuk <code>8080</code> adalah port bawaan yang digunakan oleh Tomcat. (Spring boot menggunakan server tomcat)\u00a0\u21a9</p> </li> </ol>"},{"location":"Web%20Framework/Spring%20Boot/03.%20querying%20data%20with%20spring%20boot/","title":"Querying Data with Spring Boot","text":"<p>InsyaAllah pada bagian catatan ini akan membahas topik-topik, diantaranya;</p> <ul> <li>Adding Spring Data to an existing Spring Boot application</li> <li>DTOs, entities, and POJOs</li> <li>Creating a Spring Data repository</li> <li>Using custom finders</li> <li>Using Query By Example to find tricky answers</li> <li>Using the custom Java Persistence API (JPA)</li> </ul> <p>Folder Contoh</p> <p>Kode dapat dilihat pada module <code>bagian_3_1</code></p>"},{"location":"Web%20Framework/Spring%20Boot/03.%20querying%20data%20with%20spring%20boot/#adding-spring-data-to-an-existing-spring-boot-application","title":"Adding Spring Data to an Existing Spring Boot Application","text":"<p>Spring Data adalah tiket untuk management data yang multiguna.</p>"},{"location":"Web%20Framework/Spring%20Boot/03.%20querying%20data%20with%20spring%20boot/#using-spring-data-to-easily-manage-data","title":"Using Spring Data to Easily Manage Data","text":"<p>Spring data memiliki penedekatan yang untuk mempermudah akses data. Spring data tidak menggunakan lowest common denominator. Ini adalah taktiknya, dimana API tunggal yang terdefinisi pada sebuah interface dan implementasinya menawarkan untuk setiap data store.</p> <p>Setiap data store memimiliki berbaga cara untuk mengkases data. Pertama, hampir semua modul Spring Data memiliki sebauh template yang memberikan kita kemudahan untuk mengakses data fitur dari data penyimpanan. Beberapa templatenya diantaranya;</p> <ul> <li>Redis Template</li> <li>Cassandra Template</li> <li>Mongo Template</li> <li>Couchbase Template</li> </ul> <p>Setiap Modul Spring Data memiiki core templatenya masing-masing. Mereka semua memiliki siklus hidup yang mirip, seperti bagaimana mereka menangani manajemen sumberdaya. Setiap template memiliki berbagai macam fungsi, beberapanya berdasarkan pada common data access paradigm dan lainya berdasarkan pada data store's native features.</p> <p>Karena kita dapat melakukan hampir apapun dengan template data store, ada cara yang lebih mudah untuk mengakses data. Banyak modul Spring Data termasuk didalamya repository support, yang membuat Spring Data mempu membuat query, updates dan deletes, berdasarkan tipe domain aslinya.</p> <p>Ada kesamaan yang mendasari semua pendekatan tersebut. Membuat statement, apakah itu <code>select</code> untuk Redis, MongoDB atau Cassandar, tidak hanya merepotkan namun juga berta saat memaintai statement tersebut. Mengingat sebagian besar kueri hanya menyalin nilai struktural yang dipetakan ke jenis dan bidang domain nama, Spring Data memanfaatkan informasi domain untuk membantu pengembang menulis query.</p>"},{"location":"Web%20Framework/Spring%20Boot/03.%20querying%20data%20with%20spring%20boot/#dtos-entities-and-pojos-oh-my","title":"DTOs, entities, and POJOs, oh my!","text":"<p>Sebelum menulis kode, kita harus memahamin paradigma dasarnya terlebih dahulu. Data Transfer Object (DTOs), entities dan Plain Old Java Object (POJO).</p> <ul> <li>DTO: A class whose purpose is to transfer data, usually from server to client (or vice versa)</li> <li>Entity: A class whose purpose is to store/retrieve data to/from a data store</li> <li>POJO: A class that doesn\u2019t extend any framework code nor has any sort of restrictions baked into it</li> </ul>"},{"location":"Web%20Framework/Spring%20Boot/03.%20querying%20data%20with%20spring%20boot/#entities","title":"Entities","text":"<p>Ketika kita menulis kode untuk meng-query data dari sebuah database, data hasil query tersebut akan berkahir, tersimpan pada sebuah class yang disebut dengan entity. Setiap class yang dilibatkan untuk menyimpan dan mengambil data hasil query melalaui JPA harus diberi anotasi dengan <code>@Entity</code>.</p> <p>Code</p> Sample VideoEntity <pre><code>@Entity\nclass VideoEntity {\n    private @Id @GeneratedValue Long id;\n    private String name;\n    private String description;\n\n    protected VideoEntity() {\n        this(null, null);\n    }\n\n    VideoEntity(String name, String description) {\n        this.id = null;\n        this.description = description;\n        this.name = name;\n    }\n    // getters and setters\n}\n</code></pre> <p>Penjelasan kode diatas;</p> <ul> <li><code>@Entity</code> adalah anotasi dari JPA untuk menandakan bahwa ini adalah tipe JPA-managed.</li> <li><code>@Id</code> adalah anotasi dari JPA yang menandakan primary key</li> <li><code>@GeneratedValue</code> anotasi dari JPA untuk membuat key number untuk JPA provider.</li> <li>JPA membutuhkan construtor yang tidak menerima argumen.</li> <li>Kita juga memiliki sebuah constructor dimana filed <code>id</code> yang tidak kita sediakan <code>this.id=null</code>, artinya sebauh construtor yang dibuat untuk membuat entries baru pada database. Jadi, ketika <code>id</code> bernilai <code>null</code>, maka JPA akan tahu kita ingin membuat sebuah data baru. karena nantinya ID akan di generate.</li> </ul>"},{"location":"Web%20Framework/Spring%20Boot/03.%20querying%20data%20with%20spring%20boot/#data-transfer-objects","title":"Data Transfer Objects","text":"<p>DTOs digunakan pada lapisan web application. Class ini bertugas khusus pada data dan memastikan data tersebut dalam bentuk yang sesuai, apakah itu HTML atau JSON. *Jackson8, adalah JSON serialization/deserialization library bawaan Spring Boot yang memiliki berbagai macam anotasi untuk kostumisasi JSON rendering.</p> <p>Mengapa kita butuh DTO dan entities. Karena class lebih mudah digunakan dan diupdate jika class tersebut difokuskan untuk melalukan tugas tunggal. Konsep ini disebut dengan <code>single-responbility principle (SRP)</code>.</p> <p>Sebuah class yang bertugas untuk melakukan transfer data (DTO) dan menerima serta menyimpan data (entities) akan sulit dimaintain dan dikelola. Sulit membuat class untuk memaintai tugas pada web layer dan persistance layer.</p>"},{"location":"Web%20Framework/Spring%20Boot/03.%20querying%20data%20with%20spring%20boot/#creating-spring-data-repository","title":"Creating Spring Data Repository","text":"<p>Sebuah repository mengumpulkans semua opererasi data untuk tipe domain tertentu pada satu tempat. Aplikasi berkomunikasi dengan repository menggunakan bahasa domain (domain speak), dan repository selanjutnya berbicara dengan data store menggunakan bahasa query.</p> <p>Application repository data store</p> <p>Maka sekarang kita buat Data Repository dengan membuat interface dengan nama <code>VideoRepository.java</code></p> <p>Code</p> VideoRepository.java <pre><code>public interface VideoRepository extends JpaRepository&lt;VideoEntity, Long &gt; {\n    // Saat ini belum ada isinya\n}\n</code></pre> <p>Penjelkasan kode diatas sebagai berikut;</p> <ul> <li>Interface tersebut <code>extends</code> class <code>#java JpaRepository</code> dengan dua tipe generic parameter, <code>VideoEntyty</code> dan <code>Long</code>. Sebagai domain type dan primary key type.</li> <li><code>JpaRepostiroy</code> interface, mengandung kumpulan operasi CRUD (Create Repalce Update &amp; Delete).</li> </ul> <p>Spring data dikode untuk mencari semua instace dari <code>Repository</code> dan apply semua query derivation. Artinya, semua interface yang kita buat dan menurunkan class <code>Repository</code> atau superclass diatasnya akan diambil oleh Spring boot component scanning dan secara otomatis akan terdaftar untuk kita.</p> <p><code>JpaRepository</code> juga berisi kumpulan cara untuk mengambil data, seperti dibawah ini;</p> <ul> <li><code>findAll()</code>, <code>findAll(Example&lt;S&gt;)</code>, <code>findAll(Example&lt;S&gt;, Sort)</code>, <code>findAll(Sort)</code>, <code>findAllById(Iterable&lt;ID&gt;)</code>, <code>findById(ID)</code>, <code>findAll(Pageable)</code>, <code>findAll(Example&lt;S&gt;,Pageable)</code>, <code>findBy(Example&lt;S&gt;)</code>, <code>findBy(Example&lt;S&gt;, Pageable)</code>, <code>findBy(Example&lt;S&gt;, Sort)</code>, <code>findOne(Example&lt;S&gt;)</code>.</li> <li><code>deleteById(ID)</code>, <code>deleteAll(Iterable&lt;T&gt;)</code>, <code>deleteAllById(Iterable&lt;ID&gt;)</code>, <code>deleteAllByIdInBatch(Iterable&lt;ID&gt;)</code>, <code>deleteAllInBatch()</code>.</li> <li><code>save(S)</code>, <code>saveAll(Iterable&lt;S&gt;)</code>, <code>saveAllAndFlush(Iterable&lt;S&gt;)</code>, <code>saveAndFlush(S)</code></li> <li><code>count()</code>, <code>count(Example&lt;S&gt;)</code>, <code>existsById(ID)</code></li> </ul> <p>Semuanya tidak ditemukan langsung pada class <code>JpaRepository</code>. Beberapa berada pada hierarki Spring Data repository interface, termasuk <code>ListPaginAndSortingRepository</code>, <code>LisCrudRepository</code> dan <code>QueryByExampleExecutor</code>. Contohnya adalah dibawah ini, interface dari <code>CrudRepository</code></p> <p>Code</p> CrudRepository.java <pre><code>public interface CrudRepository&lt;T, ID&gt; extends Repository&lt;T, ID&gt; {\n    &lt;S extends T&gt; S save(S entity);\n\n    &lt;S extends T&gt; Iterable&lt;S&gt; saveAll(Iterable&lt;S&gt; entities);\n\n    Optional&lt;T&gt; findById(ID id);\n\n    boolean existsById(ID id);\n\n    Iterable&lt;T&gt; findAll();\n\n    Iterable&lt;T&gt; findAllById(Iterable&lt;ID&gt; ids);\n\n    long count();\n\n    void deleteById(ID id);\n\n    void delete(T entity);\n\n    void deleteAllById(Iterable&lt;? extends ID&gt; ids);\n\n    void deleteAll(Iterable&lt;? extends T&gt; entities);\n\n    void deleteAll();\n}\n</code></pre> <p>Generic type diatas penjelasannya sebagai berikut;</p> <ul> <li>ID: Tipe generik dari primary key-nya repository</li> <li>T: Tipe generik dari domain type</li> <li>S: Tipe generik subtype yang menurunkan (extends) T.</li> <li>Iterable: An iterable type that does not require all its elements to be fully realized in memory</li> <li>Example: An object used to serve Query By Example</li> </ul> <p>Operasi diatas sangatlah banyak yang dapat kita gunakan, namun kekurangnnya adalah, tidak bisa digunakan untuk query yang lebih spesifik. InsyaAllah pada catatan ini kita akan membuat query yang lebih detail secara manual menggunakan JPA.</p>"},{"location":"Web%20Framework/Spring%20Boot/03.%20querying%20data%20with%20spring%20boot/#using-costume-finder","title":"Using Costume Finder","text":"<p>Untuk memmbuat costume finder, kita akan menambahkan beberapa baris kode pada file <code>VideoRepository.java</code>. Katakan kita ingin mengambil data berdasarkan nama dari video yang kita cara.</p> <p>Code</p> VideoRepository.java <pre><code>public interface VideoRepository extends JpaRepository&lt;VideoEntity, Long &gt; {\n\n    List&lt;VideoEntity&gt; findByName (String name);\n}\n</code></pre> <ul> <li><code>findByName(String name);</code> method disebut dengan costume finder. Kita tidak perlu membuat implementasi dari fungsi ini, karena SpringBoot akan melakukannya untuk kita.</li> <li><code>List&lt;VideoEntitiy&gt;</code> adalah nilai kembalian dari method ini.</li> </ul> <p>Interface method ini adalah yang kita hanya kerjaan untuk menulis sebuah query. Dibelakang, Sprint adata akan mem-parse method name tersebut. Semua repository method yang diawali dengan findBy akan dianggap sebagai query. Selanjutnya akandianggap sebagai field, contoh diatas adala Name. Kita juga dapat menambahkan opsional kualifikasi seperti <code>Contains</code> atau <code>IgnoreCase</code>.</p> <p>Kode method interface diatas akan diterjemahkan menjadi</p> <p>Code</p> Terjemahan interface <pre><code>select * from video where name = ?\n</code></pre> <p>Nama kolom video didapatkan dari nama dari method Entitiy atau kita dapat menetapkannya dengan anotasi <code>@Table(name=\"table_name\")</code></p> <p>Selain auto translate dari method interface, penggunaan Repository ini membuat kita terhindar dari SQLInjection dan secara otomatis akan mengkonversi hasil query kedalam objek domainnya, kasusu ini kedalam <code>VideoEntitiy</code></p> <p>Diatas itu semua, karena kita menggunakan JPA, kita tidak perlu memikirkan dialek yang berbeda pada setiap database. Apakah kita berbicara dengan MySQL, PostgreSQL atau MSSQL dan lainnya, JPA akan menangani itu semua untuk kita.</p> <p>Selain Contains dan IgnoreCase ada beberapa opsional lainnya yang dapat kita gunakan untuk costume finder dalam mengambil data, diantaranya;</p> <ul> <li><code>And</code> dan <code>Or</code> dapat digunakan untuk menggabungkan multiple property expressions. Kita juga dapat menggunakan <code>Between</code>, <code>LessThan</code>, and <code>GreaterThan</code></li> <li>You can apply <code>IsStartingWith</code>, <code>StartingWith</code>, <code>StartsWith</code>, <code>IsEndingWith</code>, <code>EndingWith</code>, <code>EndsWith</code>, <code>IsContaining</code>, <code>Containing</code>, <code>Like</code>, <code>IsNotContaining</code>, <code>NotContaining</code>, and <code>NotContains</code></li> <li>You can apply <code>IgnoreCase</code> against a single field, or if you want to apply it to all properties, use <code>AllIgnoreCase</code> at the end</li> <li>You can apply <code>OrderBy</code> with <code>Asc</code> or <code>Desc</code> against a field when you know the ordering in advance</li> </ul> <p>Costume finder juga dapat digunakan untuk relationships. Contohnyam, jika repository domain typenya adalah <code>Person</code> dan memiliki <code>Address</code> filed dengan ZipCode. Kita dapat menulis costume finder <code>findByAddressZipCode(ZipCode zipCode)</code>. Itu akan membuat join find pada query.</p> <p>Sekarang mari kita tambahkan html form pada <code>index.mustache</code> yang sudah kita buat sebelumnya</p> <p>Code</p> index.mustache <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;form action=\"/multi-field-search\" method=\"post\"&gt;\n    &lt;table&gt;\n        &lt;tr&gt;\n            &lt;td&gt;&lt;label for=\"name\"&gt;Name:&lt;/label&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;input type=\"text\" name=\"name\"&gt;&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;\n                &lt;label for=\"description\"&gt;Description:&lt;/label&gt;\n            &lt;/td&gt;\n            &lt;td&gt;\n                &lt;input type=\"text\" name=\"description\"&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;button type=\"submit\"&gt;Search&lt;/button&gt;\n&lt;/form&gt;\n&lt;ul&gt;\n    {{#videos}}\n        &lt;li&gt;{{name}} {{description}}&lt;/li&gt;\n    {{/videos}}\n&lt;/ul&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Penjelasan kode diatas sebagai berikut;</p> <ul> <li>attribute action pada tag <code>&lt;form/&gt;</code> menandakan target URL dengan method HTTP adalah POST</li> <li>Kita membuat tag <code>&lt;input/&gt;</code> sebagai wadah input dari user yang dikirim nantinya</li> <li>Tag <code>&lt;button/&gt;</code> yang akan men-trigger pengiriman data tersebut.</li> </ul> <p>Untuk menanganin data yang diterima, kita harus membuat method pada controller class serta membuat datatype untuk memparsing nilai tersebut.</p> <p>Code</p> VideoSearch.java <pre><code>record VideoSearch(String name, String description) {}\n</code></pre> <p>Code</p> HomeController.java <pre><code>...// Cutted\n@PostMapping(\"/multi-field-search\")\npublic String search(@ModelAttribute VideoSearch search, Model model){\n    System.out.println(search.name());\n\n    List&lt;VideoEntity&gt; searchResult = videoService.search(search);\n    System.out.println(searchResult.size());\n    model.addAttribute(\"videos\", searchResult);\n    return \"index\";\n}\n...// Cutted\n</code></pre> <p>selanjutnya mari kita buat sebuah service sebagai pehubung antara repository class dengan controller class.</p> <p>Code</p> Example.java <pre><code>@Service\npublic class VideoService extends VideoEntity{\n    @Autowired\n    VideoRepository repository;\n\n//    public VideoService(VideoRepository repository){}\n\n    public List&lt;VideoEntity&gt; search(VideoSearch videoSearch){\n\n        if (StringUtils.hasText(videoSearch.name()) &amp;&amp; StringUtils.hasText(videoSearch.description())){\n            return repository.findByNameContainsOrDescriptionContainsAllIgnoreCase(videoSearch.name(), videoSearch.description());\n        }\n\n        if (StringUtils.hasText(videoSearch.name())){\n            return repository.findByNameContainsIgnoreCase(videoSearch.name());\n        }\n\n        if (StringUtils.hasText(videoSearch.description())){\n            return repository.findByDescriptionContainsIgnoreCase(videoSearch.description());\n        }\n//        return repository.findAll();\n        return Collections.emptyList();\n    }\n\n    public List&lt;VideoEntity&gt; addVideo (VideoSearch videoSearch){\n        repository.save(new VideoEntity(videoSearch.name(),videoSearch.description()));\n        return repository.findAll();\n    }\n}\n</code></pre> <p>Setelah mengupdate service, mari kita menambahkan repository class untuk membuat costume finder</p> <p>Code</p> VideoRepository.java <pre><code>public interface VideoRepository extends JpaRepository&lt;VideoEntity, Long&gt; {\n    List&lt;VideoEntity&gt; findByNameContainsOrDescriptionContainsAllIgnoreCase(String partialName, String partialDescription);\n\n    List&lt;VideoEntity&gt; findByNameContainsIgnoreCase(String partialName);\n\n    List&lt;VideoEntity&gt; findByDescriptionContainsIgnoreCase(String partialDescription);\n}\n</code></pre> <p>Jalankan SpringBoot lalu buka <code>localhost:8080/multi-field-search</code>. Masukan keyword yang ingin dicari, maka insyaAllah akan muncul seperti dibawah ini</p> Hasil <p></p>"},{"location":"Web%20Framework/Spring%20Boot/03.%20querying%20data%20with%20spring%20boot/#sorting","title":"Sorting","text":"<p>Ada beberapa cara untuk menyortir data, salah satunya adalah menggunakan klausa orderBy pada repository class seperti dibawah ini.</p> <p>Code</p> VideoRepository.java <pre><code>public interface VideoRepository extends JpaRepository&lt;VideoEntity, Long&gt; {\n    List&lt;VideoEntity&gt; findByNameContainsOrDescriptionContainsAllIgnoreCaseOrderByNameAsc(String partialName, String partialDescription);\n\n    List&lt;VideoEntity&gt; findByNameContainsIgnoreCaseOrderByNameAsc(String partialName);\n\n    List&lt;VideoEntity&gt; findByDescriptionContainsIgnoreCaseOrderByNameAsc(String partialDescription);\n\n}\n</code></pre> <p>Cara diatas menggunakan OrderBy method. Kita juga dapat menggunakan Sort parameter pada method tersebut. </p> <p>Pertama Membuat method para repository class menerima parameter <code>Sort</code></p> <p>Code</p> VideoRepository.java <pre><code>public interface VideoRepository extends JpaRepository&lt;VideoEntity, Long&gt; {\n\n    List&lt;VideoEntity&gt; findByNameContainsOrDescriptionContainsAllIgnoreCase(String partialName, String partialDescription, Sort sort);\n\n    List&lt;VideoEntity&gt; findByNameContainsIgnoreCase(String partialName);\n\n    List&lt;VideoEntity&gt; findByDescriptionContainsIgnoreCase(String partialDescription);\n}\n</code></pre> <p>Kedua Pada service class, buat instance sort dan berikan field tersebut pada parameter method <code>findByNameContainsOrDescriptionContainsAllIgnoreCase()</code>.</p> <p>Code</p> VideoService.java <pre><code>// ... cutted\npublic List&lt;VideoEntity&gt; search(VideoSearch videoSearch){\n\n    if (StringUtils.hasText(videoSearch.name()) &amp;&amp; StringUtils.hasText(videoSearch.description())){\n        Sort sorting = Sort.by(\"name\").ascending();\n        return repository.findByNameContainsOrDescriptionContainsAllIgnoreCase(videoSearch.name(), videoSearch.description(),sorting);\n    }\n\n    if (StringUtils.hasText(videoSearch.name())){\n        return repository.findByNameContainsIgnoreCase(videoSearch.name());\n    }\n\n    if (StringUtils.hasText(videoSearch.description())){\n        return repository.findByDescriptionContainsIgnoreCase(videoSearch.description());\n    }\n    return Collections.emptyList();\n}\n// ... cutted\n</code></pre> <p>Another resource</p> <p>Sumber daya luar yang berisikan informasi bagaimanya menyortir data pada Spring  spring data sorting</p>"},{"location":"Web%20Framework/Spring%20Boot/03.%20querying%20data%20with%20spring%20boot/#limiting-query-result","title":"Limiting Query Result","text":"<p>Selain sorting, kita juga dapat membatasi hasil dari query data, dibawah ini adalah beberapa opsi yang dapat kita berikan pada costume finder;</p> <ul> <li><code>First</code> atau <code>Top</code>: Mengambil data pertama dari result set. Contoh <code>findFirstByName(String name)</code> atau <code>findTopByDesc(String desc)</code>.</li> <li><code>FirstNNN</code> atau <code>TopNNN</code>: Mengambil data NNN pertama dari result set. Contoh <code>findFirst10ByName(String name)</code> atau <code>findTop3ByDesc(String desc)</code>.</li> <li><code>Distinct</code>: Mengambil data yang memiliki krekteria yang unik saja. Contoh <code>findDistinctByName(String name)</code>.</li> <li><code>Pageable</code>: Meminta banyak data pada satu halaman. Kita juga dapat menggunakan Sorting parameter pada Pageable.</li> </ul> <p>Mari kita gunakan paging and sorting. Pertama kita harus mengubah method pada repostory class agar dapat menerima parameter <code>Pageable</code>.</p> <p>Code</p> VideoRepository.java <pre><code>public interface VideoRepository extends JpaRepository&lt;VideoEntity, Long&gt; {\n\n    List&lt;VideoEntity&gt; findByNameContainsOrDescriptionContainsAllIgnoreCase(String partialName, String partialDescription, Sort sort);\n\n    List&lt;VideoEntity&gt; findByNameContainsIgnoreCase(String partialName, Pageable pageable);\n\n    List&lt;VideoEntity&gt; findByDescriptionContainsIgnoreCase(String partialDescription);\n\n}\n</code></pre> <p>Selanjutnya mari kita rubah class service yang memanggil interface method tersebut. Kita akan membuat function baru agar mengembalikan <code>Page&lt;VideoEntitiy&gt;</code>.</p> <p>Code</p> VideoService.java <pre><code>// ... cutted\npublic Page&lt;VideoEntity&gt; searchUsePage (VideoSearch videoSearch){\n    if (StringUtils.hasText(videoSearch.name()) &amp;&amp; StringUtils.hasText(videoSearch.page())){\n        // Create instance of sort method\n        Sort sorting = Sort.by(\"name\").ascending();\n\n        // Set paging and put sorting on ot\n        Pageable pageable = PageRequest.of(Integer.parseInt(videoSearch.page()), 4,sorting);\n        // pass it to repository method\n        return repository.findByNameContainsIgnoreCase(videoSearch.name(), pageable);\n    }\n    return Page.empty();\n}\n// ... cutted\n</code></pre> <p>Diatas kita menentapkan setiap halaman yang diminta oleh user hanya menampilkan 4 baris data</p> <p>Kita juga harus merubah class record <code>VideoSearch.java</code> agar bisa menerima request <code>page</code>.</p> <p>Code</p> VideoSearch.java <pre><code>record VideoSearch(String name, String description, String page) {}\n</code></pre> <p>Kita membuat controller baru, karena controller tersebut akan mengirim attribute current page dan total page kepada user serta merujuk ke template <code>index-page</code></p> <p>Code</p> HomeController.java <pre><code>@PostMapping(\"/search-paging\")\npublic String searchAndPaging(@ModelAttribute VideoSearch search, Model model){\n    Page&lt;VideoEntity&gt; searchResult = videoService.searchUsePage(search);\n\n    // Display maximum page can enter by user\n    model.addAttribute(\"maxPage\", searchResult.getTotalPages()-1);\n\n    // Display current page of user\n    model.addAttribute(\"currentPage\", search.page());\n\n    // Display result\n    model.addAttribute(\"videos\", searchResult);\n    return \"index-page\";\n}\n</code></pre> <p>MasyaAllah, the final touch, kita buat <code>index-page.mustache</code> agar user dapat memasukan page, halaman yang ingin ditampilkan serta menampilkan total halaman dan halaman saat ini. </p> <p>Code</p> index-paga.mustache <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;ol&gt;\n    &lt;ul&gt;&lt;a href=\"/\"&gt;multi-field-search&lt;/a&gt; &lt;/ul&gt;\n    &lt;ul&gt;&lt;a href=\"/paging\"&gt;search-paging&lt;/a&gt; &lt;/ul&gt;\n&lt;/ol&gt;\n&lt;form action=\"/search-paging\" method=\"post\"&gt;\n    &lt;table&gt;\n        &lt;tr&gt;\n            &lt;td&gt;&lt;label for=\"name\"&gt;Name:&lt;/label&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;input type=\"text\" name=\"name\"&gt;&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;\n                &lt;label for=\"description\"&gt;Description:&lt;/label&gt;\n            &lt;/td&gt;\n            &lt;td&gt;\n                &lt;input type=\"text\" name=\"description\"&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;\n                &lt;label for=\"description\"&gt;Page:&lt;/label&gt;\n            &lt;/td&gt;\n            &lt;td&gt;\n                &lt;input  type=\"number\" name=\"page\"&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;button type=\"submit\"&gt;Search&lt;/button&gt;\n&lt;/form&gt;\n&lt;div&gt;\n    &lt;p&gt;Pages &lt;b&gt;{{#currentPage}}{{currentPage}}{{/currentPage}}&lt;/b&gt;of &lt;b&gt;{{#maxPage}}{{maxPage}}{{/maxPage}}&lt;/b&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;ul&gt;\n    {{#videos}}\n        &lt;li&gt;{{name}} {{description}}&lt;/li&gt;\n    {{/videos}}\n&lt;/ul&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> and here the result <p></p> <p>Selain membuat costume finders, kita juga dapat membuat costume lainnya, seperti <code>existBy</code>, <code>deleteBy</code> dan <code>countBy</code> method. Dibawah ini adalah sebagian dari costume query selain costume finders.</p> <ul> <li><code>countByName (String name)</code>: Menjalankan query dengan operator COUNT. Method ini mengembalikan <code>int</code>, bukan domain typenya. <code>SELECT COUNT(*) FROM [table] WHERE name = ?</code></li> <li><code>existByDescription(String desc)</code>: Menjalankan query dan mengembalikan apakah result empty atau tidak</li> <li><code>deleteByTag(String tag)</code>: Delete data dengan tag yang sesuai dengan parameter. <code>DELETE FROM [table] WHERE flag ?</code></li> </ul> <p>Another resource</p> <p>Sumber daya luar yang berisikan informasi bagaimanya menyortir data pada Spring  pagination-sorting</p>"},{"location":"Web%20Framework/Spring%20Boot/03.%20querying%20data%20with%20spring%20boot/#using-query-by-example","title":"Using Query By Example","text":"<p>Query By Example membuat kita dapat membangung sebuah probe, sebuah instance dari domain object. Kita mengisi fields yang ada dengan kriteria yang kita ingin implementasi dan mengabaikan yang tidak kita inginkan dengan nilai empty (null).</p> <p>Sebelumnya kita membuat costume finder dengan opsi mengisi field nama atau description. Namun bagaimana jika kita ingin membuat sebauh costume finder dengan membuat user hanya mengisi satu field dan mencari di kedua data nama dan descrption. Mari kita gunakan Query By Example.</p> <p>Pertama kita buat dahulu class DTO (Data Transfer Object) untuk menerima nilai masukan dari user. Buat sebuah file dengan nama <code>UniversalSearch.java</code></p> <p>Code</p> UniversalSearch.java <pre><code>record UniversalSearch(String value){}\n</code></pre> <p>Selanjutnya kita buat template yang digunakan user untuk memasukan nilia yang ingin dicari. Kita buat template dengan nama <code>index-universal.mustache</code> pada folder resources/template</p> <p>Code</p> index-universal.mustache <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;ol&gt;\n    &lt;ul&gt;&lt;a href=\"/\"&gt;multi-field-search&lt;/a&gt; &lt;/ul&gt;\n    &lt;ul&gt;&lt;a href=\"/paging\"&gt;search-paging&lt;/a&gt; &lt;/ul&gt;\n    &lt;ul&gt;&lt;a href=\"/universal\"&gt;search-universal&lt;/a&gt; &lt;/ul&gt;\n&lt;/ol&gt;\n&lt;form action=\"/universal-search\" method=\"post\"&gt;\n    &lt;table&gt;\n        &lt;tr&gt;\n            &lt;td&gt;&lt;label for=\"name\"&gt;Search:&lt;/label&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;input type=\"text\" name=\"value\"&gt;&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;button type=\"submit\"&gt;Search&lt;/button&gt;\n&lt;/form&gt;\n&lt;table&gt;\n    &lt;tr&gt;\n        &lt;th&gt;Name&lt;/th&gt;\n        &lt;th&gt;Description&lt;/th&gt;\n    &lt;/tr&gt;\n    {{#videos}}\n        &lt;tr&gt;\n            &lt;td&gt;\n                {{name}}\n            &lt;/td&gt;\n            &lt;td&gt;\n                {{description}}\n            &lt;/td&gt;\n        &lt;/tr&gt;\n    {{/videos}}\n&lt;/table&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Oke, sekarang mari kita buat controller untuk mengurusi rooting HTTP ke template dan menaruh model attribute.</p> <p>Code</p> HomeController.java <pre><code>// ... cutted\n@PostMapping(\"/universal-search\")\n    public String searchUniversal(@ModelAttribute UniversalSearch search, Model model){\n        List&lt;VideoEntity&gt; searchResult = videoService.unversalSearch(search);\n\n        // Display result\n        model.addAttribute(\"videos\", searchResult);\n        return \"index-universal\";\n    }\n// ... cutted\n</code></pre> <p>Kita lihat pada <code>List&lt;VideoEntity&gt; searchResult = videoService.unversalSearch(search);</code>. Kita memanggil method pada class service. Mari kita membuat probe pada file service tersebut.</p> <p>Code</p> VideoService.java <pre><code>// Universal search\n    public List&lt;VideoEntity&gt; unversalSearch (UniversalSearch universalSearch){\n        // Creating probe\n        VideoEntity probe = new VideoEntity();\n\n        if (StringUtils.hasText(universalSearch.value())){\n            // Jadi string value akan mencari di kedua field name dan description\n\n            // Search partial name\n            probe.setName(universalSearch.value());\n\n            // Search partial desc\n            probe.setDescription(universalSearch.value());\n        }\n\n        // Create ExampleMatcher\n        /**\n         * Ignore Case\n         * Contains\n         */\n        ExampleMatcher exampleMatcher = ExampleMatcher.matchingAny()\n                .withIgnoreCase()\n                .withStringMatcher(ExampleMatcher.StringMatcher.CONTAINING);\n\n        // Doing query by Example and setup ExampleMatcher\n        Example&lt;VideoEntity&gt; videoEntityExample = Example.of(probe,exampleMatcher);\n\n        return repository.findAll(videoEntityExample);\n    }\n</code></pre> <p>Hmmm, penjelasanya baca pada komen diatas yah.  </p>"},{"location":"Web%20Framework/Spring%20Boot/03.%20querying%20data%20with%20spring%20boot/#using-costume-jpa","title":"Using Costume JPA","text":"<p>....... I will add its later insyaAllah</p>"},{"location":"Web%20Framework/Spring%20Boot/03.%20querying%20data%20with%20spring%20boot/#hal-penting-dalam-perubahan-entitiy-yang-mempengaruhi-schema-sql","title":"Hal penting dalam perubahan Entitiy yang mempengaruhi Schema SQL","text":"<p>Catatn ini dibuat ketika saya ingin menambahkan OnDelete pada sebua entity. Namun ternyata tidak ada perubahan yang terjadi setelah saya mengambahkan <code>OnDelete(action=Action.CASCADE)</code>. Padahal pada propetries saya juga sudah mengatur <code>spring.jpa.hibernate.ddl-auto= update</code> dengan nilai Update. Ternyata disini lah penjelasannya.</p> <p>Detail tipe auto dll</p> <p>Sebagai catatan, properti <code>spring.jpa.hibernate.dll-auto</code> adalah Spesifikasi dari Spring Data JPA dan sebagai penyesuaian sebuah nilai yang diberikan ke Hibernate.</p> <p>Nilai tersebut diantaranya dalam bentuk create, create-drop, validate dan update pada dasarnya mempengaruhi bagaimana alat schema management akan memanipulasi database schema saat aplikasi dimulai, dijalankan.</p> <p>Sebagai contoh, operasi update akan melakukan query JDBC driver's API untuk mendapatkan metadata database dan selanjutnya Hibernate membandingkan objek model yang dibuat berdasarkan hasil bacaan dari anotasi yang ada pada class-class atau pemetaan HBM XML dan akan melakukan percobaan penyesuaian schema on-the-fly.</p> <p>Contoh mendalamnya lagi, operasi update akan melakukan penambahan kolom baru, constraints, dan sebagainya namun tidak akan pernah menghapus column atau constraint yang sudah ada sebelumnya namun tidak lagi menjadi bagian dari object model dari session saat aplikasi berjalan.</p> <p>Secara khusus pada skenario test case, kita akan lebih baik dan disaranakan menggunakan operasi create-drop sehingga dibelakan layar schema akan dibuat, test case akan menambahkan data untuk pengujuan, dan menjalankan test tersebut dan setelah test case selesai data akan dhapus termasuk schema yang akan di drop sehingga membersihkan total database.  </p> <p>Pada  saat pengembangan khususnya, banyak dari develpoer menggunakan nilai update agar secara otomatis memodifikasi schema ketika aplikasi di restart (dijalankan ulang). Namun perlu dipahami bahwa, operasi ini tidak akan menghapus kolom atau cosntrain yuang sudah ada sebelumnya.</p> <p>Dan yang terakhir, pada server production, sangat2 disaranakn menggunakan operasi none atau ringkasnya jangan memberikan nilai apapun itu pada property. Mengapa ? karena umumnya untuk Database Administratir untuk meninjau kemablai script migrasi atas perubahan yang terjadi pada database, terutama jika database kita digunakan secara bersama kepada beberapa service dan aplikasi.</p> <p>Warning</p> <p>Pada buku ini mengenai JPA sangat terbatas, insyaAllah akan ada catatan yang saya buat yang diambil dari sumber lain. Diantaranya mengenai</p> <ol> <li>Menampilkan generate query</li> <li>Select JOIN table</li> </ol> <p>Dapat melihat ke sini JPA,RestFullAPI</p>"},{"location":"Web%20Framework/Spring%20Boot/04.%20Securing%20Application%20With%20SpringBoot/","title":"Securing Application With SpringBoot","text":""},{"location":"Web%20Framework/Spring%20Boot/04.%20Securing%20Application%20With%20SpringBoot/#creating-our-own-users-with-a-costume-security-policy","title":"Creating our own users with a costume security policy","text":"<p>Spring Security has a highly pluggable architecture;</p> <ul> <li>Defining the source of users</li> <li>Creating access rules for the users</li> <li>Associating various parts of the app with the access rules</li> <li>Applying the policy to all aspects of the application</li> </ul>"},{"location":"Web%20Framework/Spring%20Boot/04.%20Securing%20Application%20With%20SpringBoot/#creating-source-of-users","title":"Creating source of users","text":"<p>Mari sekarang kita mulai dengan membuat source of users</p> <p>Spring Security memiliki sebuah interface untuk melakukan tugas pembuatan user. <code>UserDetailsService</code>. Untuk memanfaat interface tersebut kita akan membuat <code>SercurityConfig.java</code> class dengan kode dibawah ini.</p> <p>Code</p> SecurityConfig.java <pre><code>@Configuration // What is this annotation (1)\npublic class SecurityConfig {\n\n    // What is @Bean and UserDetailsService (2)\n    @Bean\n    public  UserDetailsService userDetailsService(){\n        UserDetailsManager userDetailsManager = new InMemoryUserDetailsManager();\n\n        /**\n         * (3) \n         **/\n        userDetailsManager.createUser(\n                User.withDefaultPasswordEncoder().username(\"user\").password(\"password\").roles(\"UMUM\").build());\n\n        userDetailsManager.createUser(\n                User.withDefaultPasswordEncoder().username(\"admin\").password(\"password\").roles(\"ADMIN\").build());\n\n        return userDetailsManager;\n    }\n}\n</code></pre> <ol> <li> <p><code>@Configuration</code> adalah anotasi spring untuk memberi sinyal bahwa class ini adalah source of bean definition, bukan application code. Spring boot akan mendeteksinya saat component scanning dan secara otomatis menambahkan semua bean definition-nya ke application context.</p> English version <p>is Spring\u2019s annotation to signal that this class is a source of bean definitions rather than actual application code. Spring Boot will detect it through its component scanning and automatically add all its bean definitions to the application context.</p> </li> <li> <p><code>UserDetailsService</code> adalah Spring interface securoty untuk mendefinisikan source of users. Definisi bean ini, ditandai dengan <code>@Bean</code>, yang membuat <code>InMemoryUserDetailsManager</code>.</p> English version <p>xUserDetailsService is Spring Security\u2019s interface for defining a source of users. This bean definition, marked with <code>@Bean</code>, creates InMemoryUserDetailsManager.</p> </li> <li> <p>Memanfaat <code>InMemoryUserDetailsManger</code>, kita dapat membuat beberapa user. Setiap user memiliki username, password dan role. Kode fragment diats juga menggunakan <code>withDefaultPasswordEncoder()</code> funcion untuk menghindari encoding password.</p> English version <p>Using InMemoryUserDetailsManager, we can then create a couple of users. Each user has a username, a password, and a role. This code fragment also uses the withDefaultPasswordEncoder() method to avoid encoding the password.</p> </li> </ol> <p>What\u2019s important to understand is that when Spring Security gets added to the classpath, Spring Boot\u2019s autoconfiguration will activate Spring Security\u2019s annotation. This switches @EnableWebSecurity on a standard configuration of various filters and other components.</p> <p>One of the beans required is a UserDetailsService bean.</p> <p>Tip</p> <p>In the code so far, we used <code>withDefaultPasswordEncoder()</code> to store passwords in the clear. Do NOT do this in production! Passwords need to be encrypted before being stored. In fact, there is a long and detailed history of the proper storage of passwords that reduces the risk of not just sniffing out a password but guarding against dictionary attacks. See https://springbootlearning.com/password-storage for more details on properly securing passwords when using Spring Security.</p> <p>Sekarang mari kita coba jalankan aplikasi dengan mengclick kanan pada method <code>publi static void main()</code> method dan run atau menggunakan <code>`./mvnw spring-boot:run</code> pada terminal. Kungjungi <code>localhost:8080</code>, maka aplikasi akan melakukan redirect kealamant <code>localhost:8080/login</code> dan akan muncul login page dibawah ini.</p> <p></p>"},{"location":"Web%20Framework/Spring%20Boot/04.%20Securing%20Application%20With%20SpringBoot/#swapping-hardcoded-users-with-a-spring-data-backed-set-of-users","title":"Swapping hardcoded users with a Spring Data-backed set of users","text":"<p>Membuat user secara hardcoded sangat tidak disarankan. Lebih baik dalam mengelola user management menggunakan external database.</p> <p>Dengan memisahkan aplikasi dengan sumber daya luar dalam mengelola autentikasi user, memungkinkan oranglain (dalam tim kita) seperti security enginerring, untuk mengelola user menggunakan tools laiinnya untuk mengelola database.</p> <p>Pemisahan user management dari user authentication adalah cara yang tepat untuk meningkatkan keamanan sistem. InsyaAllah, kita akan mengkombinasikan teknik yang telah kita pelajari pada catatan ini sebelumnya dengan interface <code>UserDetailService</code> yang baru saja kita lihat pada sesi catatan tepat sebelum ini.</p> <p>Sekarang mari kita buat class entities untuk UserAccount.</p> <p>Code</p> UserAccount.java <pre><code>@Entity\npublic class UserAccount {\n    @Id\n    @GeneratedValue\n    private Long id;\n    private String username;\n    private String password;\n\n    @ElementCollection(fetch = FetchType.EAGER)\n    private List&lt;GrantedAuthority&gt; authorities = new ArrayList&lt;&gt;();\n</code></pre> <p>Kode diatas terdari dari;</p> <ul> <li>Sebagaimana yang telah kita ketahui, <code>@Entitiy</code> adalah anotasi Java Persistance Api untuk menujukan class yang akan dipetakan kedalam relational table.</li> <li>Primary key ditantadi dengan anotasi <code>@Id</code>, dan <code>@GeneratedValue</code> memberitahu JPA agar memberikan nilai acak dan unik untuk field tersebut.</li> <li>Class tersebut memiliki field <code>username</code>, <code>password</code> dan daftar <code>authorites</code></li> <li>Karena field <code>athorites</code> bertipe <code>Collection</code>, JPA 2 menawarkan cara yang mudah untuk menangani menggunakan anotasi <code>@ElementCollection</code>. Semua otoritas pada daftar ini akan ditempatkan pada table yang terpisah. n</li> </ul> <p>Sebelum kita meminta Sprint Security untuk mengambil user data. Kita harus membuat Spring Data JPA repository yang ditunjukan untuk user manager. Kita harus membuat interface UserManagerRepository.</p> <p>Code</p> UserManagementRepository.java <pre><code>public interface UserManagementRepository extends JpaRepository&lt;UserAccount, Long&gt; {}\n</code></pre> <p>Kode diatas, kita menurunkan Spring Data JPA, <code>JpaRepository</code> yang menyediakan semua operasi yang dibutuhkan oleh berbagai alat untuk memanage user.</p> <p>Selanjutnya kita membutuhkan Spring Boot agar menjalankan beberapa kode ketika aplikasi dijalankan. Tambahkan beberapa kode dibawah ini pada class <code>SecurityConfiguration</code></p> <p>Code</p> SecurityConfiguration.java <pre><code>@Bean\nCommandLineRunner initUsers(UserManagementRepository repository){\n    return n -&gt; {\n        repository.save(new UserAccount(\"user\",\"paswword\",\"ROLE_USERS\"));\n        repository.save(new UserAccount(\"admin\",\"paswword\",\"ROLE_ADMIN\"));\n    };\n}\n</code></pre> <p>Warning</p> <p>Jalankan method ini hanya sekali saat kita menjalankan applikasi. Dapat meng-comment method ini jika data user sudah masuk kedalam database. Dapat menyebabkan error jika ada dua user yang tidak unique.</p> <p>The preceding bean defines Spring Boot's CommandLineRunner (through a Java 8 lambda function).</p> <p>Tip</p> <p><code>CommandLineRunner</code> adalah single abstract method (SAM),artinya class tersebut hanya memiliki satu method yang harsu didefinisikan. Peraturan ini membuat kita instantiate CommandLineRunner menggunakan lambda expression dari pada harus membuat anonymous class.</p> <p>Diatas, kita memiliki bean definition yg bergantung pada <code>UserManagementRepository</code>. Didalam bean definition tersebut, kita memliki lambda expression yang mana menggunakan repository untuk menyimpang dua buah entries: satu user dan satu admin account. Denga entries ini, kita dapat membuat kode JPA-Oriented <code>UserDetailService</code>.</p> <p>Untuk mengambil <code>UserAccount</code>. Kita butuh spring data repository lainnya (memisahkan antara delete, save dengan select). Repository ini sangat sederhana, yaitu hanya untuk mengambil data user saja. Kita buat interface class <code>UserRepository</code>.</p> <p>Code</p> UserRepository.java <pre><code>public interface UserRepository extends Repository&lt;UserAccount, Long&gt; {\n    UserAccount findByUsername(String userName);\n}\n</code></pre> <p>Berbeda dengan <code>UserManagementRepository</code>, interface ini menurunkan <code>Repository</code> dari pada <code>JpaRepository</code>. Artinya Interface ini tidak ber isi apa2, keculi apa yang ada pada interface ini. (Tidak ada method turunan). kode diatas hanya berisi method <code>findByUsername</code> yang mengamblikan Entitiy <code>UserAccount</code> berdasarkan parameter username.</p> <p>Selanjutnya kita dapat membuat bean definition yang membuat kita dapat mengganti <code>UserDetailsService</code> yang telah kita buat sebelumnya di Creating Source of Users (1)</p> <ol> <li>Me-replace method dibawa ini     <pre><code>@Bean\npublic  UserDetailsService userDetailsService(){\n    UserDetailsManager userDetailsManager = new InMemoryUserDetailsManager();\n\n    /**\n        * (3) \n        **/\n    userDetailsManager.createUser(\n            User.withDefaultPasswordEncoder().username(\"user\").password(\"password\").roles(\"UMUM\").build());\n\n    userDetailsManager.createUser(\n            User.withDefaultPasswordEncoder().username(\"admin\").password(\"password\").roles(\"ADMIN\").build());\n\n    return userDetailsManager;\n}\n</code></pre></li> </ol> <p>Code</p> SecurityConfig.javaSecurityConfig.java, to avoid null pointer exception <pre><code>@Bean\nUserDetailsService userService (UserRepository userRepository){\n    return username -&gt; userRepository.findByUsername(username).asUser();\n}\n</code></pre> <pre><code>@Bean\nUserDetailsService userService (UserRepository userRepository){\n    System.out.println(\"Its get all User\");\n\n    return username -&gt; {\n        UserAccount account = userRepository.findByUsername(username);\n        try {\n\n            System.out.println(\"The user name :\"+account.getUserName());\n            System.out.println(\"The user name :\"+account.getPassword());\n            return account.asUser();\n        }\n        catch (Exception e){\n            throw new UsernameNotFoundException(\"User tidak ada coy\");\n\n        }\n\n    };\n}\n</code></pre> <p>Bean definition diatas memanggil <code>UserRepository</code>. Selanjutnya kita menulis lambda expression yang mengembalikan UserDetailsService. Jika kita melihat pada inerface UsersDetailsSerive, kita akan menemukan lagi Singgle Abstract Method, method tunggal dengan nama <code>loadUserByName</code>, mengubah string berdasarkan username filed kedalam objek <code>UserDetails</code>. Interface method tersebut menerima argumen username yang dapat kita lanjutkan ke UserRepository. </p> <p>Code</p> UserDetailsService.java <pre><code>public interface UserDetailsService {\n    UserDetails loadUserByUsername(String username) throws UsernameNotFoundException;\n}\n</code></pre> <p>Interface <code>UserDetails</code> adalah Representasi Spring Secuirty dari user's information. Termasuk username, password, authoriteis, dan beberapa nilai boolean yang merepresentasikan locked, expired dan enabled.</p> Code UserDetails.java <pre><code>public interface UserDetails extends Serializable {\n    Collection&lt;? extends GrantedAuthority&gt; getAuthorities();\n\n    String getPassword();\n\n    String getUsername();\n\n    boolean isAccountNonExpired();\n\n    boolean isAccountNonLocked();\n\n    boolean isCredentialsNonExpired();\n\n    boolean isEnabled();\n}\n</code></pre> <p>Mari baca ini dengan seksama. <code>userService</code> bean yang telah kita buat diatas pada <code>SecurityConfiguration.java</code> menghasilkan <code>UserDetailsService</code> bean, bukan objek Userdetails itu sendiri(1). Artinya method tersebut akan mengambalika data dari user.</p> <ol> <li>Dapat kita lihat dari return typenya <code>UserDetailsService</code> <pre><code>UserDetailsService userService (UserRepository userRepository){/** same like above */}\n</code></pre></li> </ol> <p>Lambda expression didalam bean definition mentransformasi kedalam <code>UserDetailsService</code>. Function <code>loadUserName()</code>, fungsi yang menerika username sebagai input dan mengasilkan <code>UserDetails</code> object sebagai nilai yang dikembalikan. Jika seseorang memasukan username saat login prompt. Nilai tersebutlah yang akan diberikan pada fungsi ini. </p> <p>Repository class mengambil peranan pentin dalam mengambil <code>UserAccount</code> dari database berdasarkan username yang diterima. Agar Sprint Security dapat berkerja dengan entity ini, hasil dari entitiy tersebut harus dikonversi ke SpringSecurity User object yang mana mengimplementasi UserDetails Interface.</p> <p>Maka dari itu, kembalie ke entitiy class <code>UserAccount</code> dan buat method baru dengan nama <code>asUser()</code> untuk mengkonversi-nya ke <code>UserDetails</code> object.</p> <p>Code</p> UserAccount.java <pre><code>public UserDetails asUser(){\n    return User.withDefaultPasswordEncoder()\n            .username(getUserName())\n            .password(getPassword())\n            .authorities(getAuthorities()).build();\n}\n</code></pre> <p>Method diatas secara sederhana membuat Spring Security Userdetails object. Sekarang, jalankan aplikasi, lalu menuju ke <code>lolcahost:8080</code>, masukan username dan password sesuai dengan username dan password yang ada pada database.</p> <p>Result</p> Login pageRecord database user Insert username and Password <p></p> If login failed <p></p> If login succsesfully <p></p> <pre><code>select * from user_account\nselect * from user_account_authorities\n</code></pre> Output<pre><code>id  password    username\n752 password    user\n753 password    admin\n</code></pre> <p>Alhamdulillah, kita telah mendefinisikan source of users. Selanjutnya kita akan mendefinisikasn access roles.</p>"},{"location":"Web%20Framework/Spring%20Boot/04.%20Securing%20Application%20With%20SpringBoot/#securing-web-routes-and-http-verbs","title":"Securing web routes and HTTP verbs","text":"<p>Membatasi aplikasi dan hanya memberikan akses ke user tertentu membutuhkah langkah yang besar. InsyaAllah kita akan membahas sedikit tentang security yang harus kita terapkan di aplikasi yang sesungguhnya, yaitu authorization. </p> <p>Spring security membuat langkah bersar tersebut menjadi lebih ringkas. Langkah pertama adalah dengan mengatur kebijakan keamanan dengan menambahkan bean definition ke class <code>SecurityConfig</code>.</p> <p>Spring Boot memiliki tempat khusus untuk mengkonfigurasi kebijakan keamanan. Tambahkan bean definition tipe <code>SecurityFilterChain</code> ini pada class <code>SecurityConfig</code>.</p> <p>Code</p> SecurityConfig.java <p><pre><code>    @Bean\n    SecurityFilterChain defaultSecurityFilterChain(HttpSecurity httpSecurity) throws Exception{\n        try {\n\n            System.out.println(\"This bean will start when server is started\");\n\n            // Emable form login to permitAll\n            httpSecurity.formLogin(AbstractAuthenticationFilterConfigurer::permitAll);\n            httpSecurity.httpBasic(Customizer.withDefaults());\n            return httpSecurity.build();\n\n        }\n        catch (Exception e){\n            e.printStackTrace();\n            throw new Exception(\"Error\");\n        }\n    }\n</code></pre> Penjelasan kode diatas sebagai berikut;</p> <ul> <li><code>SecurityFilterChain</code> adalah tipe bean yang dibutuhkan untuk mendifinisikan Spring Security Policy</li> <li>Untuk membuat kebijakan, kita meminta dari Spring Secuiryt <code>HttpSecurity</code> bean. Bean tersebut akan memberikan kita kebebasan dalam membuat aturan untuk mengatur aplikasi.</li> <li>In addition to that, the formLogin and httpBasic directives are switched on, enabling both HTTP Form and HTTP Basic, two standard authentication mechanisms</li> <li><code>HttpSecurity</code> Builder, dengan setting ini, akan digunakan untuk me-render <code>SecurityFilterChain</code> melalui semua servlet request.</li> </ul> <p>More about security look here</p> <p>Perhatikan baik-baik. Berikut ini akan diterangkan secara detail dari <code>formLogin</code> dan <code>httpBasic</code> yang telah kita gunakan pada snippet diatas.</p> <ol> <li> <p>Form Authentication membutuhkan form dalam bentuk HTML pada umumnya. Bahkan, Spring security menyediakan form bawaan (sebagaimana yang kita gunakan pada catatan ini). </p> </li> <li> <p>Basic Authenticaiton tidak berurusan dengan HTML dan form, akantetapi melibatkan popup (js) (1) yang tertanam secara bawaan pada setiap browser. </p> </li> <li> <p></p> </li> </ol> <p>Kebijakan keamanan yang kita buat diatas sangat longgar, yaitu dengan memberikan akses kepada semua user asalkan terdaftar. Namun esensialnya, hak akases diberikan bukan semata pada user yang terautentikasi namun juga pada hak aksesnya masing-masing (role and authority) </p> <p>Dibawah ini adalah contoh yang lebih spesifik dalam menentukan hak akses pengguna</p> <p>Code</p> SecurityConfig.java <code>using custome access</code> <p><pre><code>    @Bean\n    SecurityFilterChain defaultSecurityFilterChain(HttpSecurity httpSecurity) throws Exception{\n        try {\n\n            System.out.println(\"Build security filter chain\");\n\n\n            /**\n             * Request yang dikhususkan untuk role admin dan super\n             */\n            httpSecurity.authorizeHttpRequests(auth -&gt; {\n\n                auth.requestMatchers(HttpMethod.GET,\"/add**/**\").access((authentication, object) -&gt; {\n\n                    boolean hitGranted = Stream.of(\"ADMIN\",\"SUPER\").map(s -&gt; {\n                        System.out.println(\"Allowed role : \"+s);\n                        return hasRole(s).check(authentication,object).isGranted();\n                    }).filter(granted -&gt; {\n                        System.out.println(\"Hasil granted : \"+granted);\n                        return granted;\n                    }).findAny().orElse(false);\n\n\n                    return new AuthorizationDecision(hitGranted);\n                }).anyRequest().authenticated();\n            });\n\n\n            // HTTP Security, login dari HTML\n            // Mengizinkan semua orang bisa mengakses form login\n            httpSecurity.formLogin(AbstractAuthenticationFilterConfigurer::permitAll);\n\n            // HTTP Security, login melalui CURL\n            httpSecurity.httpBasic(Customizer.withDefaults());\n\n            return httpSecurity.build();\n        }\n        catch (Exception e){\n            e.printStackTrace();\n            throw new Exception(\"Error\");\n        }\n    }\n</code></pre> Pada bean configuration ini, kita membuat sebuah kode untuk memberikan terbatas pada method GET pada URL <code>/add**/**</code>. Pada kali ini kita menggunakan method <code>requestMatchers.access()</code>. Kita membuat daftar role yang dapat mengakses alamat ini dan menggunakan stream untuk melihat apakah hak ases dari user setidaknya terdiri dari salah satu role berikut, yaitu <code>ADMIN</code> dan <code>SUPER</code>. Kita menggunakan static method dari AuthorityAuthorizationManager <code>hasRole()</code> dan memberikan hasil stream boolean.</p> <p>Selanjutanya, kita menyaring <code>filter()</code> stream boolean tersebut yang memiliki nilai true atau dalam kata lain salah satu dari role yang dizikan cocok dengan role user yang bersangkutan. Selanjutanya kita menggunakan fungsi <code>findAny()</code> yang artinya setidaknya ada tidak yang bernilai true, dan diakhir kita menggunakan fungsi <code>orElse(false)</code> jika tidak ada role yang cocok.</p> <p>Keamanan pasti akan selalu menjadi pekerjaan yang kompleks. Oleh karena itu, dilain tersedianya rule atau aturan yang disediakan oleh Spring Boot kita tetap harus dapat membuat atau membentuk costume access checks (aturan yang dibentuk sendiri).</p> <p>Karena, dari pada kita menggunakan Spring Security untuk menangkap semua kemungkinan-kemungkinan dari aturan2, lebih mudah kita membuat sendiri pengujian dari setiap hak akses user yang telah kita buat tepat pada snippet diatas tulisan ini.</p> <p>Note</p> <p>Roles versus authorities: Spring Security has a fundamental concept known as authorities. Essentially, an authority is a defined permission to access something. However, the concept of having ROLE_ADMIN, ROLE_USER, ROLE_DBA, and others where the prefix of ROLE_ categorizes such authorities is so commonly used that Spring Security has a full suite of APIs to support role checking. In this situation, a user who has the authority of ROLE_ADMIN or simply the role of ADMIN would be able to GET any of the admin pages.</p>"},{"location":"Web%20Framework/Spring%20Boot/04.%20Securing%20Application%20With%20SpringBoot/#taking-ownership-of-data","title":"Taking ownership of data","text":"<p>Pada bagian ini kita akan membuat fitur delete. Fitur ini dapat menghapus data video namun dengan syarat hanya user yang membuat data tersebut yang dapat menghapusnya. Maka dari itu kita perlu menambahkan satu buah column yang menampung pembuat data video tersebut.</p> <p>Sebelumnya kita telah membuat <code>videoEntity</code> yang berisikan Id, nama dan deskripsi. Kita akan menambahkan satu property untuk menampung user pembuat data video. Bukan file <code>VideoEntity.java</code> dam tambahkan seperti kode dibawah ini</p> <p>Code</p> VideoEntity.java <pre><code>@Entity\n@Table(name=\"video\")\npublic class VideoEntity {\n    private @Id @GeneratedValue(strategy = GenerationType.IDENTITY) Long id;\n\n    private String userName;\n    private String name;\n    private String description;\n\n    public VideoEntity(String userName, String name, String description){\n        this.id = null;\n        this.userName = userName;\n        this.name = name;\n        this.description = description;\n    }\n\n    /**\n     * Selanjutnya berisikan getter and setter\n    */\n\n}\n</code></pre> <p>Perubahan entitiy class ini akan berdampak pada struktur pada database, yaitu dengan meng-ALTER tabel untuk menambah kolom baru dengan nama userName.</p> <p>Selanjutnya kita akan merubah <code>VideorService.java</code> yaitu dengan tujuan agar data video baru yang dimasukan mengambil username dari user ybs dan memasukannya pada database.</p> <p>Code</p> VideoService.java <pre><code>/**\n * Untuk menambahkan data video\n */\npublic List&lt;VideoEntity&gt; addVideo (VideoSearch videoSearch, Authentication authentication){ // (1)!  \n    repository.save(new VideoEntity(authentication.getName() ,videoSearch.name(),videoSearch.description()));\n    return repository.findAll();\n}\n</code></pre> <ol> <li>Kita menambahkan <code>Authentication authetication</code> untuk mengambil nama dari obejek user yang terauthentikasi <code>authentication.getName()</code>.</li> </ol> <p>Oke, kita sekarang menuju ke home controller. Disini kita menambahkan paramater <code>Authentication</code> dan memberikannya kepada method addVideo yang telah kita tambahakn sebelumnya agar dapat menerima objek Authentication tersebut.</p> <p>Code</p> HomeController.java <pre><code>@PostMapping(\"/add-video\")\npublic String add(@ModelAttribute VideoSearch search, Model model, Authentication authentication){\n    List&lt;VideoEntity&gt; update = videoService.addVideo(search,authentication);\n    model.addAttribute(\"videos\", update);\n    return \"index\";\n}\n</code></pre> <p>Alhamdulillah, sejauh ini untuk membuat fitur delete kita telah memodifikasi pencatatan data video dengan menambahkan data user. Dengan demikian kita dapat membuat aturan dalam menghapus data video hanya terbatas pada user pembuatnnya. </p> <p>Sekarang mari kita buat dahulu controller untuk mengambil url delete.</p> <p>Code</p> HomeController.java <p><pre><code>@PostMapping(\"/delete/video/{videoId}\")\npublic String deleteVideo (@PathVariable Long videoId){\n    System.out.println(\"Id yang didelete : \"+videoId);\n    videoService.deleteVideo(videoId);\n    return \"redirect:/\";\n}\n</code></pre> Kita menggunakan <code>@PostMapping(\"/delete/video/{videoId}\")</code> yang artinya controller ini akan menerima dari URL <code>/delete/video/{videoId}</code>. Yang baru pada catatan ini adalah penggunakan sebuah nilai yang ada didalam curly bracket. Nilai ini nantinya dinamin, artinya berubah-ubah, dan variabel tersebut dapat kita ambil nilainya menggunakan parameter yang adad di variable tersebut.</p> <p>Yaitu menggunakan <code>@PathVariable Long videoId</code>. Parameter ini akan mengikuti path dari request tersebut. Selanjutnya kita memanggil method dari class videoService dan memberikan parameter path variable ke method <code>deleteVideo</code></p> <p>Menindaklanjuti snippet diatas, artinya kita harus membuat satu buah method dengan nama deleteVideo pada VideoService.java</p> <p>Code</p> VideoService.java <p><pre><code>VideoRepository repository;\n\n// Depedency injection\npublic VideoService(VideoRepository repository){\n    this.repository = repository;\n}\n\npublic void deleteVideo(Long id){\n    repository.findById(id).map(data -&gt; {\n        repository.delete(data);\n        return true;\n    }).orElseThrow(() -&gt; new RuntimeException(\"No video at\"));\n}\n</code></pre> Fokus hanya ke method deleteVideo saja. Karena depedency inject diatas sebagai informasi saja bahwa kita akan menggunakan variable repository untuk mengambil data dengan id tertentu lalu menggunakan hasil tersebut dalam bentuk entitiy sebagai parameter pada function repository.delete yang membutuhkan parameter entitiy tersebut.</p> <p>Pada method tersebut kita mengambil entitiy melalui ID yang diberikan. Nilai kembalian dari method tersebut adalah objek Opsional. Untuk me-looping objek entitiy tersebut kita menggunakan fungsi map dari objek opsional tersebut lalau mengisinya dengan lambda function yang berisikan;</p> <ol> <li>Memanggil method repositry.delete</li> <li>Mengambilakan nilai true</li> </ol> <p>Selanjutnya kita memanggil method dari Opsional <code>orElseThrow</code> yang berisikan lambda function untuk menge- raise exception.</p> <p>The last step, sekarang kita ke bagian repository untuk membuat sebuah override method delete </p> <p>Code</p> VideoRepository.java <pre><code>@PreAuthorize(\"#entity.userName == authentication.name\")\n@Override\nvoid delete(VideoEntity entity);\n</code></pre> <ul> <li><code>@Override</code>: Anotasi ini memastikan bahwa kita tidang ingin merubah nama dari method atau aspek apapun dari method ini.</li> <li><code>@PreAuthorize</code>: Ini adlah anotasi Spring Security method yang membuat kita dapat menulsi sebuah kostum pengujian keamanan.</li> <li><code>#entity.username</code>: ini merujuk pada entity argumen pada parameter pertama (entitiy) dan mengambil parameter username menggunakan Java bean properties (Mengambil dari nama pada record video)</li> <li><code>authentication.name</code>:Argument security Spring untuk mengakses konteks authentication objek saat ini dan mengakses nama user yang terautentikasi tersebut. (Mengambil nama dari user authentication saat memanggil method ini)</li> </ul> <p>{{Dengan membandingkan username dari <code>videoEntitiy</code> dengan nama dari user, kita dapat memastikan bahwa method ini hanya akan berkerja jika user yang yang miliki data video tersebut yang dapat menghapusnya}}</p>"},{"location":"Web%20Framework/Spring%20Boot/04.%20Securing%20Application%20With%20SpringBoot/#mengaaktifkan-method-security","title":"Mengaaktifkan Method Security","text":"<p>Apa yang telah kita kerjakan diatas tidak akan berjalan jika kita tidak mengaktifkan method tersebut. Untuk mengaktifkannya kita dapat menuju ke class SecurityConfig.java dan menambahkan anotasi @EnableMethodSecurity.</p> <p>Code</p> Example.java <pre><code>@EnableMethodSecurity\npublic class SecurityConfig {\n    // ... dipotong\n}\n</code></pre>"},{"location":"Web%20Framework/Spring%20Boot/04.%20Securing%20Application%20With%20SpringBoot/#menampilkan-nama-pemilik-video","title":"Menampilkan nama pemilik video","text":"<p>Hmmm, catatan ini agak berbeda dengan buku induknya pada bagian interface. Saya menambahkan pada table menggunakan button form yang berisikan action ke alamat url <code>/delete/video/{videoId}</code>.</p> <p>Code</p> detailTable.mustache <pre><code>&lt;div class=\"mt-3 card shadow p-3 mb-5 bg-body rounded\"&gt;\n    &lt;div class=\"card-body\"&gt;\n        &lt;table  class=\"table table-striped table-hover\"&gt;\n            &lt;tr&gt;\n                &lt;th&gt;Name&lt;/th&gt;\n                &lt;th&gt;Description&lt;/th&gt;\n                &lt;th&gt;Action&lt;/th&gt;\n            &lt;/tr&gt;\n            {{#videos}}\n                &lt;tr&gt;\n                    &lt;td&gt;\n                        {{name}}\n                    &lt;/td&gt;\n                    &lt;td&gt;\n                        {{description}}\n                    &lt;/td&gt;\n                    &lt;td&gt;\n                        &lt;form action=\"/delete/video/{{id}}\" method=\"post\"&gt;\n                            &lt;input type=\"hidden\" name=\"{{_csrf.parameterName}}\" value=\"{{_csrf.token}}\"/&gt;\n                            &lt;button type=\"submit\" class=\"btn btn-danger mt-2\"&gt;Search&lt;/button&gt;\n                        &lt;/form&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n            {{/videos}}\n        &lt;/table&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre> <p>Ingat, pada controller kita memberikan attribute videos (1), dimana entitiy tersebut kita mendapatkan id dari data video yang kita berikan nilai tersebut pada attribute action do tag form. </p> <ol> <li><code>model.addAttribute(\"videos\", searchResult);</code></li> </ol>"},{"location":"Web%20Framework/Spring%20Boot/04.%20Securing%20Application%20With%20SpringBoot/#membuat-data-sample","title":"Membuat data sample","text":"<p>Anda dapat membuat data video langsung menggunakan form yang telah kita buat sebelumnya, namun kita juga dapat menggunakan fitur anotasi dari spring boot yaitu @PostConstruct</p> <p>Code</p> VideoService.java <pre><code>@PostConstruct\nvoid initDataBase(){\n    // Mambuat datasample video\n    repository.save(new VideoEntity(\"admin2\",\"AADC2\",\"Ada Apa Dengan Cinta\"));\n    repository.save(new VideoEntity(\"admin\",\"AADC3\",\"Ada Apa Dengan Cinta season 3\"));\n    repository.save(new VideoEntity(\"admin2\",\"AADC4\",\"Ada Apa Dengan Cinta season 4\"));\n    repository.save(new VideoEntity(\"admin2\",\"AADC5\",\"Ada Apa Dengan Cinta season 5\"));\n    repository.save(new VideoEntity(\"admin\",\"AADC6\",\"Ada Apa Dengan Cinta season 6\"));\n}\n</code></pre> <p><code>@PostConstruct</code> adalah JakartaEE anotasi yang memberikan sinyal bahwa method ini harus dijalankan setelah aplikasi dijalankan.</p>"},{"location":"Web%20Framework/Spring%20Boot/04.%20Securing%20Application%20With%20SpringBoot/#prove","title":"Prove","text":"<p>Code</p> InterfaceGagal hapus jika bukan data user saat itu <p></p> <p></p>"},{"location":"Web%20Framework/Spring%20Boot/04.%20Securing%20Application%20With%20SpringBoot/#memanfaatkan-google-untuk-autentikasi-pengguna","title":"Memanfaatkan Google untuk autentikasi pengguna","text":"<p>sample</p> <p>Code</p> Example.java Output <p>Code</p> Example.javaExample.java Output Output <p>Code</p> Example 1Example 2 Output Output"},{"location":"Web%20Framework/Spring%20Boot/04.1%20.%20Securing%20Application%20using%20JWT/","title":"Securing Application using JWT","text":""},{"location":"Web%20Framework/Spring%20Boot/04.1%20.%20Securing%20Application%20using%20JWT/#securing-backend-using-jwt","title":"Securing backend using JWT","text":"<p>Pada catatan sebelumnya, kita telah mebahas bagaomana cara menggunakan basic aithentication dengan RESTfil web service. Methid ini tidak dapat digunakan ketika kita menggunakan frontend sendiri, seperti React. Maka dari itu kita akan menggunakan JWT authentication.</p> <p>JWT adalah cara yang solid untuk mengimplementasi authentication pada web application yang modern. JWT sangant kecil dalam sisi ukuran dan dapat dikirim melalui Uniform Resource Locator (URL), pada parameter atau didalam POST header. JWT juga berisikan semua informasi yang dibutuhkan untuk user.</p> <p>JWT terdiri dari 3 bagian yang dipisahkan oleh titik (dots) : <code>xxxxx.yyyyy.zzzzz</code>. Setiap bagian memiliki fungsinya masing-masing;</p> <ol> <li>Bagian pertama (xxxxxx) adalah header yang mendefinisikan tipe dari token dan hashing algorithm</li> <li>Bagian kedua (yyyyy) adalah payload yang pada umumnya dalam kasusu authentication berisikan informasi dari user</li> <li>Bagian akhir (zzzzz) adalah signature (penanda) yang digunakan untuk memverifikasi bahwa toke tidak diganti selama proses berlangsung.</li> </ol> <p>Berikut adalah contoh jwt</p> <p></p> <p>Representasi sederhana dari penggunakan JWT pada proses authentication</p> <p></p> <p>Setelah user terautentikasi, setiap request yang user berikan harus selalu mengandung JWT yang diterima saat user terautentikasi</p> <p>Untuk menggunakan JWT, insyaAllah kita akan menggunakan library JJWT. Selanjutnya kita hanya perlu mendownload dengan cara menambahkan depedency pada pom.xml</p> <p>Code</p> pom.xml <pre><code>&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt;\n        &lt;artifactId&gt;jjwt-api&lt;/artifactId&gt;\n        &lt;version&gt;0.11.2&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt;\n        &lt;artifactId&gt;jjwt-impl&lt;/artifactId&gt;\n        &lt;version&gt;0.11.2&lt;/version&gt;\n        &lt;scope&gt;runtime&lt;/scope&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt;\n        &lt;artifactId&gt;jjwt-jackson&lt;/artifactId&gt;\n        &lt;version&gt;0.11.2&lt;/version&gt;\n        &lt;scope&gt;runtime&lt;/scope&gt;\n    &lt;/dependency&gt;\n&lt;dependencies&gt;\n</code></pre> <p>Karema penggunaan JWT pada buku bukan best practice. Maka dari itu saya menuliskan pada catatan ini dari seumber lain. Ada dua source pada catatan setelah ini, yaitu ada pada package bagian4.3_jwt dan bagian4.3_jwt2</p> <p>Source Github</p> <p>bagian4.3_jwt_true PPlease learn from this. and this for refresh and this for http only refresh</p>"},{"location":"Web%20Framework/Spring%20Boot/98.%20Deploy%20War%20to%20Tomcat/","title":"Deploy WAR to Tomcat","text":""},{"location":"Web%20Framework/Spring%20Boot/98.%20Deploy%20War%20to%20Tomcat/#deploy-war-ke-tomcat-server","title":"Deploy war ke tomcat server","text":"<p>Untuk mendeploy ke tomcat server kita harus membuat packge dalam bentuk WAR. Hal yg harus dilakukan adalah</p> <p>Ubah build package kedalam bentuk war dengan memberikan nilai <code>&lt;packaging&gt;war&lt;/packaging&gt;</code> pada pom.xml dan memasukan depedency spring-boot-starter-tomcat pada pom.xml</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n&lt;!--Another value here --&gt;\n    &lt;packaging&gt;war&lt;/packaging&gt;\n&lt;!--Another value here --&gt;\n\n    &lt;depedencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;\n            &lt;scope&gt;provided&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/depedencies&gt;\n&lt;/project&gt;\n</code></pre> <p>Setelah itu pada main application kita perlu menurunkan class <code>SpringBootServletInitializer</code> dan meng-override function confgure <pre><code>package com.farras.lsb.ch2;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.boot.builder.SpringApplicationBuilder;\nimport org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\n\n@SpringBootApplication\n    public class MainApplication extends SpringBootServletInitializer {\n\n    public static void main(String[] args) {\n        SpringApplication.run(MainApplication.class, args);\n    }\n\n    @Override\n    protected SpringApplicationBuilder configure(SpringApplicationBuilder builder) {\n        return builder.sources(MainApplication.class);\n    }\n\n}\n</code></pre></p> <p>Selanjutkan jalankan command <code>mvn clean package</code> dan taruh war tersebut kedalam webapps folder pada lokasi tomcat. </p>"},{"location":"Web%20Framework/Spring%20Boot/98.%20Deploy%20War%20to%20Tomcat/#error-404","title":"Error 404","text":"<p>Saya menghabiskan waktuhampir 4 jam untuk mengetahui kenapa file war hasil dari spring boot tidak dapat terbaca ketika kita mengakses alamat URL dari rest seperti;</p> <pre><code>@RestController\nclass MyRest{\n\n    @GetMapping(\"/thisone\")\n    public String sapa(){\n        return \"Hai\";\n    }\n}\n</code></pre> <p>Solusinya adalah kita perlu menambahkan anotasi <code>@RequestMapping</code> pada rest controller</p> <p><pre><code>@RestController\n@RequestMapping(\"api\")\nclass MyRest{\n    // ...\n}\n</code></pre> Dengan demikian kita dapat mengakses endpoint pada url <code>[host_name]/api/thisone</code>. Sebagai trace alamat URL yg tersedia kita dapat melihatnya saat kita mendeploy pada tomcat dengan cara menambahkan nilai berikut pada <code>application.properties</code></p> <pre><code>logging.level.org.springframework.web.servlet.mvc.method.annotation: TRACE\n</code></pre>"},{"location":"Web%20Framework/Spring%20Boot/99.%20Additional/","title":"99. Additional","text":""},{"location":"Web%20Framework/Spring%20Boot/99.%20Additional/#work-with-java-persistance-api-dan-restfull-spring-boot","title":"Work With Java Persistance API dan RESTFull Spring Boot","text":"<p>Folder Contoh</p> <p>Kode dapat dilihat pada module <code>bagian_bonus_jpa_restfull</code></p> <ol> <li>Penggunaan <code>@Pathvariable</code></li> <li>Memanfaat ResponseStatusException dan membuat costume exception result JSON</li> <li>Menambahkan message error dan Exception pada respone error</li> </ol> <p>Error yang terjadi pada RESTfull defualtnya mengembalikan nilai dari <code>timestamp</code>, <code>status</code>, <code>error</code> dan <code>path</code>. Namun kita bisa menambahkan <code>message</code> serta exception dengan menambahkan pengaturan pada <code>application.properties</code></p> <pre><code>```properties\nserver.error.include-message=always\nserver.error.include-exception=true\n```\n</code></pre> <p>Jika ingin melihat hasil generate query dari repository, gunakan setting berikut pada <code>application.properties</code> <pre><code>spring.jpa.show-sql=true\nspring.jpa.properties.hibernate.format_sql=true\n</code></pre></p>"},{"location":"Web%20Framework/Spring%20Boot/99.%20Task%20Scheduler%20Spring%20Boot/","title":"99. Task Scheduler Spring Boot","text":""},{"location":"Web%20Framework/Spring%20Boot/99.%20Task%20Scheduler%20Spring%20Boot/#spring-task-scheduler","title":"Spring Task Scheduler","text":"<p>Resource</p> <p>Spring 3.0 mengenalkan <code>TasjScheduler</code> dengan beberapa method yang di desauin untuk berjalan pada waktu tertentu. <code>TaskScheduler</code> mengembalikan objek yang merepresentasikan ScheduledFuture interface, yang mana dapat digunakan untuk membatalkan task yang telah terjadwalkan dan untuk meng-check apakah task-task tersebut telah selesai atau tidak.</p>"},{"location":"Web%20Framework/Spring%20Boot/JPA/","title":"Catatan-catatnan penting","text":"<p>Bismillah semoga bermanfaat</p>"},{"location":"Web%20Framework/Spring%20Boot/JPA/#jpa-cascaderemove-pada-database","title":"JPA Cascade.REMOVE pada database","text":"<p>Jika kita menggunakan cascade.remove, Spring hanya menggunakan konfigurasi tersebut hanya pada level aplikasi Spring, bukan pada database. maka dari itu jika kita mendelete record dari table parent maka tidak akan berpengaruh pada record anak. Cara untuk memaksa cascde pada DDL adalah menggunakan fitur tambahan dari hibernate</p> <pre><code>@OnDelete(action = OnDeleteAction.CASCADE)\n</code></pre> <p>Info</p> <p>In hibernate, you can use</p> <p><pre><code>    @OnDelete(action = OnDeleteAction.CASCADE)\n</code></pre> on your @OneToMany relationship. This tells hibernate to set ON DELETE CASCADE for the generated foreign key.</p> <p>Note that this is a hibernate extension and is not specified in the JPA standard.</p> <p>Use this with caution. When you let database cascade the deletes, these happen outside the control of hibernate so:</p> <p>Your second-level cache might become out of sync. You cant use on delete listeners on those entities. I think you should only use this if you have a large collection and performance consideration forces you to let database handles the delete instead of hibernate.</p> <p>Sumber : Stackover flow</p>"},{"location":"Web%20Framework/Spring%20Boot/JPA/#jpa-membuat-tipe-data-jsob-buat-psql","title":"JPA membuat tipe data JSOB buat PSQL","text":"<p>Sumber : Stackoverflow</p>"}]}